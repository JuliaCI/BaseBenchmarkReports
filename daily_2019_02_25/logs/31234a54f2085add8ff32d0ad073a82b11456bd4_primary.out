cset: moving following pidspec: 1970
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.343570276 seconds)
loading group "string"... done (took 0.592608213 seconds)
loading group "linalg"... done (took 7.515519506 seconds)
loading group "parallel"... done (took 0.175971076 seconds)
loading group "find"... done (took 1.213200681 seconds)
loading group "tuple"... done (took 1.888377458 seconds)
loading group "dates"... done (took 1.275908138 seconds)
loading group "micro"... done (took 0.237595493 seconds)
loading group "io"... done (took 0.978882907 seconds)
loading group "scalar"... done (took 39.524542302 seconds)
loading group "sparse"... done (took 12.70033294 seconds)
loading group "broadcast"... done (took 1.003400682 seconds)
loading group "union"... done (took 13.745707906 seconds)
loading group "simd"... done (took 4.643367689 seconds)
loading group "random"... done (took 9.374497155 seconds)
loading group "problem"... done (took 1.954212224 seconds)
loading group "array"... done (took 22.124594299 seconds)
loading group "misc"... done (took 1.983975716 seconds)
loading group "sort"... done (took 3.368330821 seconds)
loading group "collection"... done (took 18.990076645 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.551565213 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142732632 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.1345372 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.125467669 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.183449094 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.130650714 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.140965261 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08676156 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.870572079 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.160156824 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140768015 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.509499161 seconds)
done (took 4.87221993 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.191140167 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088297456 seconds)
    (2/2) benchmarking "String"...
    done (took 0.098348925 seconds)
  done (took 0.827056749 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065127696 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128370127 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081260864 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068392672 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06788162 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080922501 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067733918 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067512966 seconds)
  done (took 1.210535245 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075295372 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070761728 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084619343 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06858448 seconds)
  done (took 0.947953454 seconds)
done (took 3.894151812 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.926290785 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.251824382 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.193660055 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.481626353 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.132431555 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.188408623 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.664813853 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.327994341 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.21406699 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101340717 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107636702 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.388946673 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108446701 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.659592599 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075041681 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106510697 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.157053971 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.433278199 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080193338 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083676186 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104138577 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.139727268 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.100184541 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077882101 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.166996971 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070347107 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.154097714 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.093960472 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068117629 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.248937355 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.189638545 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.677261662 seconds)
  done (took 10.461291756 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099200099 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.121736723 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070577389 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141716685 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.119998848 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071188088 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072875088 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083606894 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094987224 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.162580836 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.117065861 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.123496235 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067788112 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071245147 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.101920605 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.230380817 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.092950371 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102296226 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072354487 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.091353927 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110318008 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.099297581 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.081567453 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095054942 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.149573797 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.191748965 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100904933 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.110483214 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070076886 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097049565 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130343458 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.133535837 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067184462 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083450947 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.159088849 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096612669 seconds)
  done (took 4.548352239 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.090075108 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.099063666 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.175154186 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094677072 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.154975082 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.109309494 seconds)
    (6/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06779619 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.128790864 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.078896322 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085721648 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.250403291 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.090163468 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.485190658 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130497995 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.087362322 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084171312 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069976447 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.084344965 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.604732272 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.144678988 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103282177 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103732657 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073896328 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085364349 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.357669247 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069123516 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066778371 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085966766 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060371177 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147681628 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070377514 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.369393845 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.071618559 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.105058753 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069717924 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.081339153 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103742155 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109062614 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124739698 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067677307 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067963798 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.18723487 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075180143 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068125105 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.106709479 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120029601 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.107442554 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084754319 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069028374 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.183785127 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06784246 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.098969027 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064829436 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.935573613 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.164571659 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.09344026 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067769301 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.301083212 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.103295625 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066760795 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.080828061 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.243621175 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.18315876 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084876315 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.06748598 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08327829 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069746869 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.368885419 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068155489 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.798599692 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071268797 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077670804 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086779472 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067550301 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089294123 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074063342 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102025098 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067190855 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.069737976 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084520432 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066899687 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.085039032 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086443923 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.207893073 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.084218397 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068385396 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.082106498 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086744633 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113696059 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.07100262 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067131573 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117352609 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070639939 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.08238112 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.104858202 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084731432 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.101606698 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070820124 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.127312542 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.06724551 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.133632998 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068330961 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.11364614 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.077740887 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113733567 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.095149903 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069790105 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.156344093 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06594774 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082980839 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067920635 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082820025 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069577519 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068929291 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.099248369 seconds)
  done (took 21.263591265 seconds)
done (took 38.009816058 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.307966998 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.092806629 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.091869152 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.091982714 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077569426 seconds)
  done (took 1.39550032 seconds)
done (took 2.100433973 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.149054362 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102601445 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080137135 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097356928 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080619594 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103675431 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11606951 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083409967 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118068535 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06501649 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113903478 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064565408 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079315612 seconds)
  done (took 1.985586868 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083418632 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086314253 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084314349 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082504742 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079278872 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083299706 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080435933 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103667299 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08149142 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08800441 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064114182 seconds)
  done (took 1.613393674 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081408357 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083748557 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085124384 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.0801179 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07820403 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081971718 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079607953 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100502134 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081444487 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088273552 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065588727 seconds)
  done (took 1.6075893 seconds)
done (took 5.900604873 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080221585 seconds)
  done (took 0.774622359 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.736407953 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.326877637 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085648461 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.136580719 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.222092153 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.158262481 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.451128803 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.11211601 seconds)
  done (took 10.131081045 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.101882324 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084661789 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07015708 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.097726394 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.07041633 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087888831 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071296265 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073191925 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.08479415 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072420102 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.08637573 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071702372 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.083053929 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068947877 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.085268687 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073775865 seconds)
  done (took 2.047216539 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.105349155 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.10489615 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.090166557 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076965839 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087813759 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075560286 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.089816463 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074961511 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.085568205 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073832703 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090068719 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075560421 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.087717746 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067494811 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.089674528 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077834444 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085841874 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077149542 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.089800664 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07751294 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090234224 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066296867 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086401414 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075861539 seconds)
  done (took 2.810659882 seconds)
done (took 16.463250291 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.131343495 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076844856 seconds)
  done (took 0.909665166 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083195747 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.097531147 seconds)
  done (took 0.892796621 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084434121 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.079925242 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09134061 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092477426 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081374 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067413872 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.102986846 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068377374 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080533105 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068007296 seconds)
  done (took 1.528245189 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070719946 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094279407 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072241132 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097570305 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075528009 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.078921702 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.0750699 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083222285 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079555903 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077236027 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073051933 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098069214 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073219328 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.100061066 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.088637538 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070628378 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086045858 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.0692403 seconds)
  done (took 2.175291958 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068151848 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068802513 seconds)
  done (took 0.84942667 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069232893 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064656208 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081496047 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067181814 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.077727969 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064374818 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079265173 seconds)
  done (took 1.216824587 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.407215058 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109801434 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.260822282 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07275552 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.105645407 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.292255457 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067196544 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073444406 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.087272295 seconds)
  done (took 2.228350091 seconds)
done (took 10.506401551 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081252178 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086566445 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.109978519 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.433594992 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105964257 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067159173 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.142303915 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.211665146 seconds)
done (took 1.956905892 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.128095892 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.622458405 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.411441521 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.227554252 seconds)
  done (took 1.983033514 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.380410017 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091196403 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.072928117 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067848312 seconds)
  done (took 1.334033501 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067349918 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070319872 seconds)
  done (took 0.862839585 seconds)
done (took 5.027775299 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067270466 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.114735768 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066638044 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065076761 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.083091692 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065404629 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065300736 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.080429518 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067094531 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.08212759 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.066990263 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.067854338 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081135146 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065138603 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064395159 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080721219 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065067985 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065415293 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079385094 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067666612 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077852223 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067723992 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064789089 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.07936233 seconds)
  done (took 2.511199679 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087967188 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.082198454 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072755197 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086916219 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071759855 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088136379 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075101864 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068323855 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086622524 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069256337 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085960721 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071745774 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.082646828 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073030976 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083490944 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072102786 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087077801 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068914682 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083176791 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072177492 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073244071 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083351992 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072824209 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086934312 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071101999 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084426293 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069308907 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082248479 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073792859 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085557268 seconds)
  done (took 3.074616963 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072800976 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064370145 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079251964 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07214229 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06439205 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081123091 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065163319 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.079511947 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065702895 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065141676 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079974806 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065491387 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065354042 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.080180268 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066629365 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.08247663 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083196322 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064524356 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.079869037 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066253633 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.082903536 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065488464 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064989457 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079295585 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065062638 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065079631 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.079117054 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064029646 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.079920605 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.0654023 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068935208 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082781562 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065752978 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071408102 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.08269422 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064473613 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.082195967 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.065072824 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066366858 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.079150724 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064612713 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064505455 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078175252 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.07215241 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065216506 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.081442438 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065868924 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.080376922 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066528099 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06872358 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079406062 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064959482 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080427234 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066721411 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068757043 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078984369 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065893825 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065679337 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.080161395 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065599375 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.078778487 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06411991 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067841155 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079880408 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080698725 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086126828 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064261665 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067704431 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.08005299 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068642678 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067754575 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.09323748 seconds)
  done (took 5.933551656 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.118321519 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094725816 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081333285 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066821338 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078196806 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066701733 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070681411 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079095912 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068319196 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085596651 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065217505 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081011212 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067795603 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.08082442 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079879533 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067390678 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086007241 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063444448 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065151395 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083400321 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066321032 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.08317406 seconds)
  done (took 2.432512424 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.188385183 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086955963 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.112416434 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089757802 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084508543 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075589592 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.085748237 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072419496 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071874727 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083749289 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07034774 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085681636 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069293029 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084349931 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070304693 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083858706 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07287708 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084111085 seconds)
  done (took 2.302714212 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079287406 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068103116 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105601949 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068560955 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.08348209 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070117472 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086666963 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078680284 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084598423 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068038486 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092037398 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.179201787 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.084919627 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067098888 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083662611 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067698842 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.07141281 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08254094 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077201969 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087311963 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073718547 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092005602 seconds)
  done (took 2.584117866 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083405106 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069623394 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100666133 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085215736 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064319806 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06667422 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088967249 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069120822 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.088892555 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070537396 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082082201 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06762999 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072236597 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082006523 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073578922 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082792528 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070371335 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08250683 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069956984 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06476139 seconds)
  done (took 2.26714846 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088764106 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083372265 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069790938 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093361958 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069346252 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084104649 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077792869 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.084768788 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06956243 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.108246093 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069133493 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084197456 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07836048 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089738925 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068788867 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093002157 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.091404241 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079157243 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084445326 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068305097 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108630013 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069314263 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091436041 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069548695 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084686421 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068865551 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084131657 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074995203 seconds)
  done (took 3.024770322 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067872463 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068134425 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080281599 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065737582 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066058591 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080051177 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065150236 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064864693 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082189441 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064984103 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082591114 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068482436 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068025039 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.08194947 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068811445 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067748781 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082148417 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065051786 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06545279 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079989683 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067802793 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08243102 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068462225 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065949215 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079453222 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068687817 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065532166 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079820736 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067453838 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065861204 seconds)
  done (took 2.885806828 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078270312 seconds)
    (2/2) benchmarking "in"...
    done (took 0.090989476 seconds)
  done (took 0.909002421 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066371461 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082549376 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.07973111 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071275897 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088538132 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068311053 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.091551594 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073762172 seconds)
  done (took 1.35894471 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083549132 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079722104 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083985785 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.09532918 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079863296 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085344788 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.157083918 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.084989003 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075708073 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081974325 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082774349 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083339929 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074884246 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06857681 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.089191812 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074452218 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.081046395 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07451918 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071286458 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.081372972 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070170888 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094929737 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072109895 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.080905806 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069482629 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.078931456 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094285633 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069275617 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085783124 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076937753 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08849544 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062160624 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08281629 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.069388228 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066148445 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.09463439 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084942929 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087025409 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078313818 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08438114 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079269282 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.079209488 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073656318 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.089449071 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079700247 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069385787 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083483508 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064079678 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.080343771 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.07142645 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064425144 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08281881 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06260169 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090105374 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072375537 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09423616 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.066930466 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070172373 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085768894 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071700374 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089616713 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070419633 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071263692 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082202769 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075629091 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.087157494 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077361788 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078232538 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062191847 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066918444 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092957767 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090215529 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088598575 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.069530093 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083328116 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065172756 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085791681 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068674459 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075024422 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089949765 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.069049867 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089512544 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07580475 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082600506 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070118291 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.09138771 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066681311 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.07025598 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.080464727 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085068769 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081953773 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.067671673 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080562038 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080343812 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070830543 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.082397461 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066454153 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091301065 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063136394 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069182196 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083311171 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068667355 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.09444489 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074815507 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088767159 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07733343 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.091015691 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068976138 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.08643273 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06562503 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070686101 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.082028141 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075500264 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077519071 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071519302 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069280412 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.084285514 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.078008615 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.08046595 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069819413 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091065476 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074799784 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066681239 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.080172308 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071560195 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083346102 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072573779 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092135268 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067835277 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064020462 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.078789694 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072442747 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082526704 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072387458 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088780238 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071073572 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063671787 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081552964 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074180885 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092546297 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068700362 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.08376861 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074886029 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.07030311 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081806136 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074779195 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086239047 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067629786 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07500425 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.084336006 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063020351 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086182014 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071539616 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.08196429 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07202991 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072230035 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085951264 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069793647 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082208046 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073220015 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085120264 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067218796 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068476515 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082395218 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079823343 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086366042 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06341787 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065817425 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091892292 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067068891 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.082937225 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068360014 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070374945 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084117654 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066390986 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.083516505 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070290944 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095237143 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073123081 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085034625 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074063007 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094270435 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067305616 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071888508 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.083332676 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069892009 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.084251543 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077179755 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073503685 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088991457 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070667918 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.079937718 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075162953 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091211605 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068042434 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065516132 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.082332129 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072319637 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.088336304 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071727834 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.084754801 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067141716 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068905723 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087656525 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071181789 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.082931207 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068026548 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.087495221 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067440753 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.090946244 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069312749 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077901064 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086397222 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064697446 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087570456 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068390392 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.08963369 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064623112 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066075843 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.082474576 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070472228 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067166316 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.086499482 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063218083 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09015997 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076755759 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.083221307 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067423215 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069082066 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09080684 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.07002286 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087398866 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072503368 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090684989 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080321472 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067414991 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.08671236 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078973764 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.083663489 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062923477 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088253629 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067307967 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06844976 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.083196626 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067519485 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086855387 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076558076 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090506819 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062475688 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070506229 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08224493 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067608312 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078593404 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073563946 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071962241 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084469179 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076686829 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084239593 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068425006 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071827598 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.083701984 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069045619 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08509474 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071319915 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084632389 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070291657 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067973266 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.0861324 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068259927 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081556774 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071272566 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068432284 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084619263 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075304228 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083053766 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068059381 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071699039 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.084903881 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069702134 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.083924852 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067219387 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086578602 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070243745 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069012258 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085597838 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06366403 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091537055 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068601561 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07619274 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084079518 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06596557 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.089611473 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071005869 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.08810243 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068846533 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070005489 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085098233 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06771623 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086703748 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075389195 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065965549 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094906454 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076708065 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084084898 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072189883 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.08481664 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069831029 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067247217 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084548766 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06900315 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.08395461 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.069077723 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087907107 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071827054 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068317424 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086010293 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069498827 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.083635888 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.070161736 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062828446 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.083602903 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068339632 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083945632 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079128006 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068159216 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.083008638 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067480189 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085674479 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06741946 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06607384 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091727423 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094259254 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.070288278 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076038391 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084024785 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070974161 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095277735 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.065932004 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081995614 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067079196 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066740051 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091690041 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068865618 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093358806 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068579934 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067493813 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.081092837 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069266987 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.082824294 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063355507 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067193753 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08851381 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067182089 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083561928 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068653371 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072300065 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08433449 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079100948 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.082705874 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069654087 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.08427726 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065104158 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067414917 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.083278485 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072318221 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.085478514 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066885749 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066433 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.085212642 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070052373 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069983266 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.084280254 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069534072 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09128529 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068705137 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086906388 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072750134 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063350499 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.087154105 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068522705 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.084762367 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068263992 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.0728578 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086932401 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070519038 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093134161 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069756878 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084311263 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06945119 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.067082397 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083830799 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069193125 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084105531 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068608067 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069587271 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093368273 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065765418 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.087818222 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069001084 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084288654 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075881511 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069393577 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.087912108 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075676383 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.084334924 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070382071 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.09165815 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072556167 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087711388 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070087366 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070111513 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091160324 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067387063 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090196335 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068975005 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069584395 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.085705725 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066121719 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084824114 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067567697 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067201315 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090653561 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069814596 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083558607 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06852968 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067136086 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085282279 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073632589 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092843075 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070700651 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087606862 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065046387 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066081117 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085359166 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066507682 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.08674743 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072403292 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073894609 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086016764 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068833317 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.083709626 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077655724 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090158823 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072284415 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066067791 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088424384 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070372618 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087471486 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070947038 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068830821 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086062443 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073064561 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086658204 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067733183 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092547123 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072701053 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069324704 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086313607 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069967954 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.084694675 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063826855 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069443776 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086541108 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073005172 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.08709196 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069912545 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095576987 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065988737 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068471758 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087525272 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069762167 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.089429073 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.065164294 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069343734 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086861714 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070152524 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.080357103 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067408583 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065561834 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.087045438 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067611224 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.080634689 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080523921 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093816966 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071292958 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067815929 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083991854 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063915374 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.080255047 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068260007 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069174442 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.086500122 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079173049 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.084057085 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06876298 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079466018 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069622327 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071377592 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.089225319 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06670245 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.080789994 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06742605 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071443198 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.09005489 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066743408 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.084865165 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072004233 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071760869 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.083382624 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072516582 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.081379606 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07235037 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098776999 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068672971 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068979308 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.091408708 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075741814 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.085309707 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063909144 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.086362495 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.07173417 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069357036 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.08651059 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069510932 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101337083 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072380853 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.084188274 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068519505 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071011087 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08464153 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077720492 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086639076 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069002993 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.089653848 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071714638 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094414254 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070837046 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093315759 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071787508 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071780366 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085035189 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070329661 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084196086 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067536677 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070120572 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.085896193 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073358206 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.094292002 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068121952 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097236994 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077326822 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.086760528 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065234807 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067812759 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085456711 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.06524641 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069667048 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.082971612 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.067762368 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083754554 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067017012 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06955 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091516982 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069890873 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086780653 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068679844 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062516319 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.087711301 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.07088465 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085875215 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06573005 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069461929 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.086161914 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072255504 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088675021 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066557515 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087103285 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070007608 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069402229 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.08067359 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075476195 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084420062 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071813659 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067600478 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085989392 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069958229 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088613668 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074884372 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086637211 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071355453 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.076507225 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088832913 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06702089 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.083349131 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074026011 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065982933 seconds)
  done (took 46.801111779 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109666928 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082804366 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063345285 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081736772 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078004597 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082596803 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063675005 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065068499 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082856823 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068103316 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081786855 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064032379 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091109051 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089950117 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093345168 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.086277628 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064585914 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064309537 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080990851 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065220917 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090599462 seconds)
  done (took 2.434071592 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.088922251 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.101859701 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080212698 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100867398 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091413236 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.080384087 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096986601 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080069284 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099539616 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09296439 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083353344 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097167389 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074793576 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.093242545 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075398284 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095295033 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.099881229 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075175581 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.098407083 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080074553 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094847734 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097716762 seconds)
  done (took 2.75782616 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06847272 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068041507 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086778029 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063814754 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067123941 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.079460831 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072749937 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083598287 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071863197 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066838832 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.091552688 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067310086 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086737227 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.066141973 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068212014 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082301538 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.133469709 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072046753 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.085857096 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.069530596 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063420959 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086784376 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063446667 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.081158994 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066962145 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071538576 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.08641577 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067242895 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.085724626 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067858296 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068770884 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083750199 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069054908 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069203027 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083305565 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067000721 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085204001 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06797563 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06397077 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.083124505 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069286166 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.080894425 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068529284 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069435284 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.083310796 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067241339 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.087080961 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.068006729 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063636186 seconds)
  done (took 4.473114048 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.086702772 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.141742543 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087875793 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.123092276 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083403927 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.094164142 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071708737 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.12262524 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.084899528 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067316695 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.103707322 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.085080907 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087385965 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074055713 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.090335362 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068930314 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087562372 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068430442 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.091367776 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068864796 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.089441824 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.075694176 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.10259918 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082681811 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.08957706 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067636886 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085197754 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073280593 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.100613333 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.089846971 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073706988 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090893648 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.085022212 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.091336522 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067225553 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.088600266 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.087057116 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.086801114 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071898866 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.084751272 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071507132 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089435722 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.074851934 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.104403997 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069286238 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.091477437 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068429136 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.083202476 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081351611 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088789962 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077709714 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.10094004 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.089799987 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069088975 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072440456 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.103187783 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.08591299 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067552681 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070990073 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099080792 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.08324136 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07255859 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.101015974 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.070400693 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.094390009 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.083460638 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.091638395 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071896921 seconds)
  done (took 6.716810854 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078180203 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092425987 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083648711 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102242312 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093415449 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074735584 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092021991 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075032334 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093205563 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08127756 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.091829165 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115826554 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070359878 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096073905 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075181193 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09395713 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075140003 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092758948 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092052973 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076122286 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.093052192 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084007681 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092209351 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.100403606 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106487959 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087620716 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075054049 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092849799 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102148987 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073917854 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104612017 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07495704 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.093701504 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102327851 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.087388063 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092396455 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068160534 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093329813 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07610856 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.09242325 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070019853 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101005368 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.092135782 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070061968 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093442378 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074137005 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.101596805 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.103315614 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07789739 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097957667 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075278014 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100533192 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092683812 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075249784 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101343499 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.128212294 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083853854 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101856979 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09363149 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.083753278 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101236271 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.108563293 seconds)
  done (took 6.36138922 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091861414 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096150915 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097968995 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064427314 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066648624 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090668687 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066225749 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084490048 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077276828 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096037771 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080946308 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08945774 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075762306 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097520677 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091044834 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076516346 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091165892 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072969103 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095325219 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073256572 seconds)
  done (took 2.46952892 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077548402 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104842638 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069520841 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094547963 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072128228 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074986518 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.088518704 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071766393 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087388606 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07250286 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098684834 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080467923 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087580314 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074050999 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097820923 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074564986 seconds)
  done (took 2.125132968 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.080311375 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.097637475 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.085312214 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087673248 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066177533 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083645521 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068552648 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065379715 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084362389 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.084553937 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087928275 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070592417 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.088010814 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066608594 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064699119 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.089679598 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065346976 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.084901905 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068551433 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.102753441 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079878861 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085365463 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070545684 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.089434641 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068417229 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.09334406 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069798234 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.085692632 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067656778 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069699548 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087243732 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076764861 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.08485818 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067512725 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.084485797 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066243828 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06803149 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087755163 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072664913 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.085875459 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.066156293 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.086349035 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06892089 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069271221 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082946429 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068753279 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.082836804 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.0749758 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.084757095 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070025555 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068137303 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.08945603 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070182576 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.096783101 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.071807903 seconds)
  done (took 5.105502652 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083262074 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072152871 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082564687 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066583448 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089519134 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070540989 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071774217 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089363354 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070332471 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084321988 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071311408 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088755762 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069611321 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071573727 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089125076 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072621628 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082901776 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070797154 seconds)
  done (took 2.200118572 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075170097 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068649148 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093812548 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068759253 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086605026 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071482417 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064308516 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086304804 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066971931 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086725399 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068915607 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071230611 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085379046 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070374422 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086494566 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068200575 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071423888 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085761726 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068994688 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082568442 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071293242 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067565144 seconds)
  done (took 2.470997674 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.0734383 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.095364764 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.165918684 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.108585845 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084051793 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.100360838 seconds)
  done (took 1.432219098 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093008727 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101021509 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069578826 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108262857 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076892438 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089065422 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071441743 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088610864 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080299229 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103037138 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070614052 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098403148 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097351001 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083232208 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093870172 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078080149 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088817715 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070659492 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08731331 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108902059 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071782187 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098750083 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070214298 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088390617 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070547342 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098311205 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097396937 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084709439 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089087167 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079832716 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095445937 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070406201 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097540142 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104122305 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073130886 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097703472 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070811075 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108449221 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094947646 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079009085 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089249893 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076597818 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098457401 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076207714 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09776208 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088911089 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076616738 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089306751 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071445234 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113687217 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095095968 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078967095 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094831622 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098747811 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080238392 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114750089 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103007136 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079746608 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095573307 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103590959 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079679809 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094867689 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097289685 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083768258 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094316132 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080393127 seconds)
  done (took 6.657233874 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086553031 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106152231 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069816101 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103203215 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098722137 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069783019 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088952186 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070974803 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088036198 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070314949 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132481913 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071960608 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098240755 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09873471 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072246284 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087949621 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071954454 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098580506 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06988805 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115257421 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088859732 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078950776 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097869616 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099049637 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085297457 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096034821 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071189946 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08918608 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088528207 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071146092 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093912316 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070668361 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098566696 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069378707 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098715906 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070892147 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089680933 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075925931 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089052844 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095727747 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079910117 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107525542 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071080461 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089300507 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103763494 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070798209 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089875358 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07104638 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089853448 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070805622 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103865479 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08527309 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104331384 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097278006 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071296611 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090217208 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071614016 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088953299 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071306082 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096639537 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097741172 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070059874 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114641351 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088727822 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07235638 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099074592 seconds)
  done (took 6.569260378 seconds)
done (took 128.581382115 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.201472633 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184091255 seconds)
  done (took 1.191405924 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070418842 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.117866235 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081126537 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130734928 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087629168 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101920787 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120476652 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081923301 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069211505 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087042736 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069167952 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.08927936 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133824232 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069101821 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087430025 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070691927 seconds)
  done (took 2.28091449 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106565169 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.20027769 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111186498 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066705236 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101158947 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.081182743 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.087014027 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079529765 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093112512 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067404907 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099495981 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.080294811 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067494022 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096736801 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.093186593 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.080752046 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066654901 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099996392 seconds)
  done (took 2.496047195 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.095790918 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.108856154 seconds)
  done (took 1.0201006 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.201379922 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.123069595 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.205711211 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.474205082 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.242246756 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.292185627 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.17399761 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.174483317 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.156689958 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.173024011 seconds)
  done (took 3.029497122 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102094813 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.174139367 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.319222873 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.141320109 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.092253302 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.118210139 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.14067124 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.112814734 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084933069 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.102796431 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.102457293 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080644696 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.11958304 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078267839 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.096633283 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080829839 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12403581 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077369399 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.096776024 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077624054 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118826617 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068975108 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.097685329 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076275284 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.100132313 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081338172 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.086973909 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067919546 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.09600432 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077539764 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.101140136 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.11619861 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.082529479 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.133202122 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.105048562 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.135093671 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098027014 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075683305 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077028789 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.093579097 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080046315 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.098678354 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105994839 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080858397 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068057964 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.098460783 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067352601 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.086516644 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.084210397 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.099201666 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.083517829 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.100505255 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.134439238 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.099787614 seconds)
  done (took 6.316336811 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.757263642 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.136124967 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073554769 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.82280228 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116788085 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087874536 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.739237072 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095456094 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.241089965 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.756090642 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113512166 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.079365719 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.207761774 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.223370215 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.975111654 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.296970624 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.648152734 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106949871 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112886646 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.136621449 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.164831114 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.159453959 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.153990455 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.44149984 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.098662558 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074247226 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.140981024 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100107838 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.141456452 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.106578136 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075808446 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.160370156 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.253068197 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.162077623 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097743901 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073218908 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07323978 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.17370438 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.233272497 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195604543 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.161542205 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070833411 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093197561 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.146994107 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134266765 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069634962 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.147271803 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.177982458 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.154570333 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07604001 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.099503426 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.145785414 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.143119055 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.147800526 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103984811 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.30049149 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.297663403 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072938029 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124903176 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.086688701 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.248909073 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106545574 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.185840675 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141764079 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191282777 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072819951 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.803948759 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.15406612 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092325369 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.079530461 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121446139 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097747221 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.146353261 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.151703484 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.371688915 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.14980314 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075120675 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093130498 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.215782807 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.10755905 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074173342 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.144588576 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099472183 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126780699 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.150068799 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.14994027 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.153407389 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.239783023 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.150745969 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.144272327 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097493871 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128177391 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.07833633 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.20010242 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.198804704 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.14595852 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.197563471 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.164662288 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.147888211 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.152534538 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.08052151 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.174578158 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.125089664 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.084033209 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14329089 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.196122299 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.126818978 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.105546772 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075557004 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.144136582 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.127734899 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.110097802 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.143577571 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.155055839 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.483205272 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.153835168 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070579516 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109278129 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14423361 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.14571133 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097878643 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.223857053 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128261431 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.151230687 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12638031 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089985337 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123957164 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.145871814 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.081841703 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126449165 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.163915444 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079138939 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.2197714 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.195909367 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.082398152 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.221517767 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.166077249 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.079269189 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.154514522 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124114716 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.151585167 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100346609 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141828982 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097482176 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.79367649 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.167922194 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.126236029 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07756561 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180477579 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072721633 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104941009 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085896016 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.089579879 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.785338201 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10863312 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.103290807 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086703132 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098685669 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12688451 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142283157 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076951325 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165166365 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.189943366 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10053734 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122546979 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.085461255 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.144950548 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.097646254 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.105918346 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.087243975 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.10630317 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.126008525 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076431626 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107177364 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.151458732 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.14566973 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.19958374 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.550809325 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092241078 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.087833639 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.207572107 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093569315 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.252168557 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140749551 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.202688085 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.147622652 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.103114283 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.290955682 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.150029727 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.1823626 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.089282864 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.155996217 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089299982 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.140756547 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.148259939 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093128783 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078359948 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.143960527 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.17114483 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.149721863 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.959450826 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073507245 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.211753063 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.090933577 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.156660463 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.077434199 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100095575 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.276347863 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073466521 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.152591871 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.147870976 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095984926 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.106429437 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.679165674 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.087091813 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.164764467 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.080006625 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.198776092 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.147857168 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.140121491 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.162307663 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.080897436 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.142424618 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.195741793 seconds)
  done (took 41.716786676 seconds)
done (took 58.859497347 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.278580045 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212947778 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.233250786 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.147729179 seconds)
  done (took 1.786771637 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.147876125 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.108659527 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.124287601 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.087050425 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.126956709 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.0670003 seconds)
  done (took 1.505442345 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.42210694 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.275921723 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.23738235 seconds)
  done (took 1.780144726 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.301759111 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.233532813 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.455305554 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.303588261 seconds)
  done (took 2.246771107 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.1954048 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.117212834 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.091185814 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.086323743 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.186746715 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.241628697 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.128778745 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.188985074 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.100852586 seconds)
  done (took 2.22661974 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.180709772 seconds)
done (took 10.564977409 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.108892981 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.21121859 seconds)
    (3/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.083284584 seconds)
    (4/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.102501707 seconds)
    (5/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.152608943 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.085830803 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089280117 seconds)
    (8/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.227276282 seconds)
    (9/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.238482591 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.102520933 seconds)
    (11/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.136104992 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.133495252 seconds)
    (13/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.099672744 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.079009764 seconds)
    (15/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.213793422 seconds)
    (16/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.148390125 seconds)
    (17/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.192909578 seconds)
    (18/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.073502002 seconds)
    (19/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.08338628 seconds)
    (20/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.196165953 seconds)
    (21/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.098426514 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.16016038 seconds)
    (23/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075781152 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.123343732 seconds)
    (25/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.098429164 seconds)
    (26/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.093942506 seconds)
    (27/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.145988279 seconds)
    (28/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.164039704 seconds)
    (29/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.079687598 seconds)
    (30/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.202587726 seconds)
    (31/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.167766953 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.096015384 seconds)
    (33/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.096504918 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.119391341 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.193692422 seconds)
    (36/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.182370518 seconds)
    (37/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073794637 seconds)
    (38/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.197293585 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.120872636 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.113130701 seconds)
    (41/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.159068098 seconds)
    (42/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.187538852 seconds)
    (43/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.100009924 seconds)
    (44/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.146975091 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.087057946 seconds)
    (46/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.161202358 seconds)
    (47/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.097481848 seconds)
    (48/309) benchmarking ("sort", Float64, false)...
    done (took 0.149368287 seconds)
    (49/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.152004892 seconds)
    (50/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.168041697 seconds)
    (51/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.084026965 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.096517725 seconds)
    (53/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.231741316 seconds)
    (54/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.125210523 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.076556574 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.112362371 seconds)
    (57/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.069103555 seconds)
    (58/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.099350991 seconds)
    (59/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069217272 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.134752233 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067859502 seconds)
    (62/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.077828163 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.092469761 seconds)
    (64/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075529644 seconds)
    (65/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.094162211 seconds)
    (66/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.113573174 seconds)
    (67/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.053490407 seconds)
    (68/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.112338205 seconds)
    (69/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.075520665 seconds)
    (70/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.160276034 seconds)
    (71/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.098467239 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.067306479 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.06790561 seconds)
    (74/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.180462067 seconds)
    (75/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.171660258 seconds)
    (76/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.070877461 seconds)
    (77/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.088019876 seconds)
    (78/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.235722336 seconds)
    (79/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.236956221 seconds)
    (80/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.087794045 seconds)
    (81/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.168098551 seconds)
    (82/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.078360233 seconds)
    (83/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.101099984 seconds)
    (84/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072288157 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 0.068677939 seconds)
    (86/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.102133939 seconds)
    (87/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074732521 seconds)
    (88/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.099590876 seconds)
    (89/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.078295525 seconds)
    (90/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.054776761 seconds)
    (91/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.096775587 seconds)
    (92/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.086506158 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.139097124 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08961701 seconds)
    (95/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.075781593 seconds)
    (96/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.112993667 seconds)
    (97/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.156178043 seconds)
    (98/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067567318 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.120047984 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.118038626 seconds)
    (101/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137784871 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.111331492 seconds)
    (103/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081166116 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.097194053 seconds)
    (105/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.065976273 seconds)
    (106/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.074586347 seconds)
    (107/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.167139182 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.171014944 seconds)
    (109/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.070552317 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.068598257 seconds)
    (111/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.096322235 seconds)
    (112/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.054532166 seconds)
    (113/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.078900317 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.117600256 seconds)
    (115/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.053826226 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.088913861 seconds)
    (117/309) benchmarking ("sort", Bool, false)...
    done (took 0.159530988 seconds)
    (118/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077727765 seconds)
    (119/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.078680103 seconds)
    (120/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.090824258 seconds)
    (121/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075314412 seconds)
    (122/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.172614868 seconds)
    (123/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075579535 seconds)
    (124/309) benchmarking ("sort", BigInt, false)...
    done (took 0.212880543 seconds)
    (125/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.115893194 seconds)
    (126/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.074778084 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.122193169 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091892022 seconds)
    (129/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.098089851 seconds)
    (130/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.069787383 seconds)
    (131/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.09360733 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.100891605 seconds)
    (133/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.143055415 seconds)
    (134/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076891033 seconds)
    (135/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.197439417 seconds)
    (136/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.108853956 seconds)
    (137/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.105561565 seconds)
    (138/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.064042411 seconds)
    (139/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.091865119 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.093813472 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067852515 seconds)
    (142/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.074571842 seconds)
    (143/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.054733235 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.14754492 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068366961 seconds)
    (146/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.07743649 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.096605735 seconds)
    (148/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.077040947 seconds)
    (149/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.189455031 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.097195971 seconds)
    (151/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.162514187 seconds)
    (152/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.097704926 seconds)
    (153/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075660265 seconds)
    (154/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.170222813 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.092427979 seconds)
    (156/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.132063295 seconds)
    (157/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.078595366 seconds)
    (158/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.189456999 seconds)
    (159/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054290322 seconds)
    (160/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.080731788 seconds)
    (161/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.164904996 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.292626505 seconds)
    (163/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.132604998 seconds)
    (164/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.101639823 seconds)
    (165/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.076015575 seconds)
    (166/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.096320479 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.115343937 seconds)
    (168/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.069459504 seconds)
    (169/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.162822745 seconds)
    (170/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075601487 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.119349408 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.117236903 seconds)
    (173/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.074045925 seconds)
    (174/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.077896624 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067816945 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.170474488 seconds)
    (177/309) benchmarking ("sort", Int8, false)...
    done (took 0.167941312 seconds)
    (178/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.203713688 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.096669294 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.112420337 seconds)
    (181/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.091532069 seconds)
    (182/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.074102304 seconds)
    (183/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.054003304 seconds)
    (184/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.162097815 seconds)
    (185/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.053897665 seconds)
    (186/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.191221269 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074672123 seconds)
    (188/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.063728634 seconds)
    (189/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.09737488 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077364024 seconds)
    (191/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.092182507 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.146187885 seconds)
    (193/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.084514768 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.098226326 seconds)
    (195/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.053278247 seconds)
    (196/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.09121613 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068431765 seconds)
    (198/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.05559235 seconds)
    (199/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.166236114 seconds)
    (200/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064196626 seconds)
    (201/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.074982545 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067735884 seconds)
    (203/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.196065499 seconds)
    (204/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081002997 seconds)
    (205/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.109189353 seconds)
    (206/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.053072851 seconds)
    (207/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.10226036 seconds)
    (208/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.171491275 seconds)
    (209/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.068618293 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.148343747 seconds)
    (211/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.132977939 seconds)
    (212/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064830199 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076777475 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.099927073 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136959979 seconds)
    (216/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.154609603 seconds)
    (217/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.068028457 seconds)
    (218/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.076341485 seconds)
    (219/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.203070468 seconds)
    (220/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.06981381 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073413358 seconds)
    (222/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.091152381 seconds)
    (223/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073178225 seconds)
    (224/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.055540274 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.089660952 seconds)
    (226/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.054214967 seconds)
    (227/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.161926403 seconds)
    (228/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075065496 seconds)
    (229/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.053750118 seconds)
    (230/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.08972397 seconds)
    (231/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066952691 seconds)
    (232/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.065201679 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.163269732 seconds)
    (234/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053850686 seconds)
    (235/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.07428554 seconds)
    (236/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.05422525 seconds)
    (237/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075693664 seconds)
    (238/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.075156886 seconds)
    (239/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.054547669 seconds)
    (240/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.068836969 seconds)
    (241/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.083275129 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068039847 seconds)
    (243/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.069051379 seconds)
    (244/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.114621938 seconds)
    (245/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.054807466 seconds)
    (246/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073792708 seconds)
    (247/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.076558839 seconds)
    (248/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.06258735 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.06926323 seconds)
    (250/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.137522249 seconds)
    (251/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072758 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.08809363 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093028016 seconds)
    (254/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.073584358 seconds)
    (255/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.173504652 seconds)
    (256/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.076204308 seconds)
    (257/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.068724194 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.068091622 seconds)
    (259/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.089935211 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07507641 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.137961438 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.099512163 seconds)
    (263/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.07486684 seconds)
    (264/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.068775686 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075907519 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.155211532 seconds)
    (267/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.064507939 seconds)
    (268/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.075350628 seconds)
    (269/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.166952755 seconds)
    (270/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.089152771 seconds)
    (271/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074037767 seconds)
    (272/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.068516688 seconds)
    (273/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.074748638 seconds)
    (274/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.05452363 seconds)
    (275/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071873324 seconds)
    (276/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.076511848 seconds)
    (277/309) benchmarking ("sort", Float32, false)...
    done (took 0.130571759 seconds)
    (278/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.097396506 seconds)
    (279/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.054932539 seconds)
    (280/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.05317849 seconds)
    (281/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.08970257 seconds)
    (282/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.054403803 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.076405002 seconds)
    (284/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.076149084 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066734633 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.171212352 seconds)
    (287/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068937244 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.089630386 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068809389 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.0766367 seconds)
    (291/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.084664758 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.134167414 seconds)
    (293/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.07486962 seconds)
    (294/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.053967186 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073950219 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.122591613 seconds)
    (297/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.055036756 seconds)
    (298/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.070612687 seconds)
    (299/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.103960331 seconds)
    (300/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069913114 seconds)
    (301/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.075787631 seconds)
    (302/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.053652351 seconds)
    (303/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075407572 seconds)
    (304/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.054858105 seconds)
    (305/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.07463412 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074524718 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.162055445 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.118795218 seconds)
    (309/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.075037948 seconds)
  done (took 33.694188637 seconds)
done (took 34.538912897 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084972473 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116728453 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077889108 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.118360379 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082732763 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.103400669 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075774467 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.103316519 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08324215 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.106419053 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.083381502 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05637914 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.099288691 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078977049 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.099190231 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094489539 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.101989343 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074573307 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.097517384 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067386133 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076119357 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.08909827 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069129958 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057394227 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.101182402 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075008276 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.097098422 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078600352 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068775378 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.088281861 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071254773 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.096372123 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068571354 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.08193075 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096660337 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077134909 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.09931825 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078533114 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070389175 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089208508 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076723761 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.08905098 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075697395 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07589486 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.094663072 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073140836 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.09764843 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.08364466 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116676413 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069792224 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076688829 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.100923565 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080850914 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.097263241 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071101959 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.097824571 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073798939 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117666012 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077122332 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070842541 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.097248028 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077105875 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.096170818 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077344564 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075895888 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.102596036 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07892737 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.097331223 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079133179 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07358725 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.088680238 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076483262 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.092605003 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069018198 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079945047 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.100857454 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067895125 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.095403106 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074894866 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07405249 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.089776122 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070227554 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070709003 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.095250201 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070639322 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056935939 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.094018456 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074663364 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.089450753 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077442463 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074340587 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.096331504 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070842853 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.101029612 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067325202 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073373446 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.090107959 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068385368 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070641138 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.094298128 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068080645 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091388525 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077005716 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069931477 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.096135164 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082631441 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089166836 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075366224 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067916022 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.089283683 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.085112499 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100363718 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068235836 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070303273 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.089594909 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076608069 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067879813 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.089345339 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067882349 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.090407132 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074750561 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068873284 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091656421 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075780746 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.08202262 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.092456976 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072351537 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091734847 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.069620144 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073723598 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.091299738 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068249682 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070202883 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.086584825 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071134061 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.069571916 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.097796173 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070171584 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.099313761 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069724491 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076612782 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.093740879 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074467335 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.094215441 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068991489 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060362831 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092705261 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070005277 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070906341 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.090149743 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069288264 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068193876 seconds)
done (took 13.451142188 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068452421 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.1748282 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.129758378 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100284739 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.11357223 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06884865 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.102709777 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.13231258 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070587955 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.131290832 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.09051415 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109940481 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.143907706 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068691028 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.0688632 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.094598795 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06973988 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.114879343 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.107854234 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.111655034 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.146424101 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068752339 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.126596849 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.115318628 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.093224019 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.120704855 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070006722 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.094213178 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072238502 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.129252094 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089511532 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071710683 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.090735788 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.128168728 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.099850772 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.112501412 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069561471 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11037143 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068899394 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.090076468 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.099073362 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.125227741 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107961225 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.087605268 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.0924728 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.072531477 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069323597 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.111713526 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.117312801 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.084552904 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.114120049 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.139494427 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072528695 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.108568858 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066953222 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.113760959 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.08639624 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.092622886 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068737962 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072384671 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.090021655 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071465053 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.114632556 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.120550775 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072381529 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.107462718 seconds)
  done (took 7.41655551 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087720287 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.118363623 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087673262 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.110386428 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069925083 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069211362 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.090783443 seconds)
  done (took 1.538277018 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.0692474 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091450149 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114859647 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093352697 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.111139046 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.09030185 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101395108 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069958099 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109295188 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070560449 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.11275181 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109501268 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.092781495 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078007905 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.118091944 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069608063 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09463042 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.092513806 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073175085 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.115805157 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072313935 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.113071254 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070883182 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069922666 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.107057487 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070128772 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.14264607 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07443713 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09363132 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072767871 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06798116 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.144769196 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106287828 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080999709 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091789708 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084613834 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.10671983 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068871133 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086704711 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097652994 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085103051 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.092695944 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071822563 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068784354 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.097000992 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081456723 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.093154093 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070730331 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072525897 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.112885538 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071365341 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.107501045 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069829502 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073893009 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.09409269 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076456408 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.101777174 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070472397 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091866228 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.094043829 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088201009 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.109053173 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084924394 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.109062062 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072506888 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.106145079 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084959043 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073666027 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094219812 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073222672 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.109205345 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068263128 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071576787 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.104053298 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071017148 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.116453666 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093928136 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094568492 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081374956 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070534089 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.092494167 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070901554 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.116293285 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073791202 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091863958 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075225849 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072686768 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.090231413 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069648446 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073515946 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.090525042 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071950445 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072451967 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.092766159 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073015392 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.110221813 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071247674 seconds)
  done (took 9.491657723 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070161794 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070524918 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09444282 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070494389 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.0719445 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093017248 seconds)
  done (took 1.389084863 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.101975777 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.095640374 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084460172 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.099130773 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.111187296 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.107860292 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085994743 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.109797275 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088938489 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.105894242 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085378101 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.108631212 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092961837 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.099147653 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086008693 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.098284471 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086153903 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102759724 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082588691 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099901558 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.093317398 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.099058439 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077632253 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.109052422 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074993806 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.098959019 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081520724 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.106233307 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082958693 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.109226423 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077103685 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.097122268 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07647525 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.108843107 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086311379 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.097952624 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076233857 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.075145922 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.103368499 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074950843 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.108409384 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077757744 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.105472967 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.075082279 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.109656643 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07524496 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.097539471 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080843614 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.107871197 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075919548 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.097728764 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.076523523 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.096753455 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074956104 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075871152 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.109553841 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.097092849 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08629424 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.098732101 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07628163 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072512249 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.096727968 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.087074331 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.096132018 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.085056742 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.095972937 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074825907 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.098890739 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076934202 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.098012595 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.0748695 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.095234459 seconds)
  done (took 7.513776136 seconds)
done (took 28.250304459 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.651437557 seconds)
  done (took 1.56298534 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.794334096 seconds)
  done (took 1.708812068 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.173428498 seconds)
  done (took 16.094502936 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.644075889 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.803743099 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.84285201 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.138200795 seconds)
  done (took 3.344081663 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.885955143 seconds)
  done (took 1.826881623 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.243196845 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.252068825 seconds)
  done (took 1.420109115 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.720595753 seconds)
  done (took 1.647142151 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.283551168 seconds)
  done (took 2.20553439 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.338013176 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.189183129 seconds)
  done (took 1.454166487 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.529187483 seconds)
  done (took 1.458620208 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.421255757 seconds)
  done (took 7.353392771 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.237175164 seconds)
  done (took 1.179518345 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.27435954 seconds)
  done (took 1.206881624 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.170843465 seconds)
  done (took 4.102371554 seconds)
done (took 47.481321429 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08127138 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084335188 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106903504 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081615212 seconds)
  done (took 1.281031805 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081429874 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.076463227 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102815733 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075265065 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.103656614 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07642809 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.101333756 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.081487412 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.097938624 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.076588034 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076943233 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.098168487 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077956663 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100479179 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074515198 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078295445 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.102096812 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076215581 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.100884027 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077210975 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.09616039 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.078166549 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.101847918 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.075421072 seconds)
  done (took 3.027010932 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080194745 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.076235334 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099308331 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074610428 seconds)
  done (took 1.271663605 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079363032 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.118900369 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093769315 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.103919701 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.097219179 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.114611994 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073110018 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072132728 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.09640468 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079950056 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.093052274 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.102705048 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.114655839 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079822277 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.104249167 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069440824 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.094733316 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.090854711 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07945986 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103010817 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072216655 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.101630205 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.070074343 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.116660764 seconds)
  done (took 3.165052398 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080376543 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127631498 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082901179 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.116255098 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095152138 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068296728 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.101747028 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094781729 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.151591887 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.090945405 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073690582 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06840363 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.098721354 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068685775 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079606478 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.135439479 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.140497613 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071292345 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.124271414 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069282044 seconds)
  done (took 2.880537091 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078151816 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072750637 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091425056 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071795506 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078827847 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.098598515 seconds)
  done (took 1.439457781 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070411866 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070047679 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092253221 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069804304 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.075111473 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.094088338 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069709749 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070607808 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.093170228 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070240139 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.092671043 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069206384 seconds)
  done (took 1.8827593 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.454666559 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071635984 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.0939521 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068866416 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073479287 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092136613 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083189599 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071364856 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.11768799 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068897198 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.093022063 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071227985 seconds)
  done (took 2.309504603 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269775736 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080943264 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.334200186 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17100593 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14168466 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16101489 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131131966 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121049468 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.203930419 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141602333 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23443682 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22965754 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114597443 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195848906 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09235099 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.13570014 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217919107 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202384721 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133855702 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232580243 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18853722 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15991468 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.207413188 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131863751 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139203541 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150163972 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073638724 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108321727 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239829768 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167134982 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206385373 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141632993 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100551633 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237141294 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22597338 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201151216 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165675873 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088257836 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.16037978 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.170547164 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264861167 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116584426 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227392241 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112993141 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109033889 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177808593 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150899972 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.150508411 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.139722435 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116524837 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201866448 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221536131 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193660914 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092009862 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141581799 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144301776 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.146697203 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130670181 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253933394 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224166119 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165412315 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.074442009 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124484472 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218627276 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165432054 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.1463134 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.160643237 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121767735 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175465763 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.222146149 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148440001 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181384616 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.189858186 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093815596 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152390996 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200467315 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160700339 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238561377 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161379905 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.076509531 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157471821 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131669201 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10906243 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.149122379 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103455723 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24287196 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105183091 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.143142879 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140980373 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141171615 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141376538 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225739145 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185704324 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134852028 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.06916652 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132203929 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154187456 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207654811 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093045518 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138851183 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1528458 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.107021092 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172400113 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.102655853 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157368792 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.081890796 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181656388 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16887667 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078844405 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158213362 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132149822 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.131775745 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171703213 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227113674 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09421035 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109492662 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233439414 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160685781 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.135673081 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183221361 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.219519434 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.130689609 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106985505 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210796956 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251812845 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11771109 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205428209 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134408304 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112753158 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.092658502 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18468362 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119679886 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.153055191 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110611578 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.159707166 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234839381 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07785446 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124671251 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168623866 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110023611 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109208046 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143215693 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105773397 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.124485889 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.129700161 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.137274587 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177039218 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157941045 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138359031 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161119073 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128684426 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227840226 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11945116 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.133979065 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109889958 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.098117199 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.169306216 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226050876 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083836797 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23164848 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.159713062 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133795868 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152919775 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08718672 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20057703 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083459936 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.098755508 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17946478 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14307511 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141448982 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.190379731 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13354411 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.15967806 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.158397991 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192784193 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165766528 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.167582786 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137038065 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.115502997 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144515788 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160526331 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077085625 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.124854835 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.111859182 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111211063 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12397811 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112038235 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178289353 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159854867 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127047525 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144685617 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128688396 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187189319 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.105937128 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166781732 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.153283496 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125795731 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.193213984 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22338053 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170833741 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131102537 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206458508 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.075667092 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076897913 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.120085577 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161704692 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111757093 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087809448 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173210672 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187704138 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161467314 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198526919 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117938968 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155733371 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.221515728 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.07362174 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.146578821 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212846696 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158738021 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.135330923 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115255458 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.128119921 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183601077 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136362271 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256711516 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147479802 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157893335 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217807886 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.134081833 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084765815 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133898115 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174511244 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136275183 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.214869524 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130594962 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09322331 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142098282 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.110352753 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135426798 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161716792 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152576923 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195786255 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.125168176 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192567034 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081726996 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148685934 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179586542 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15947196 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067967959 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153502802 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228905342 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124173983 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152567855 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195337798 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107749609 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.155361162 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248140668 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183611902 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115806483 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141120832 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153040588 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164048544 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152623256 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176483267 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141704484 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193720316 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118571119 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.115046952 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117028566 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104683968 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138211073 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.125526361 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.146201544 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.149698281 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.12406929 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16709037 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144274647 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143437012 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150722509 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.127475844 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.097080967 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128768105 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243164454 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157762997 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24336848 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.106719609 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.215581088 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23598101 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078468725 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109239066 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.08595576 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201395478 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089263621 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194900951 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.100685194 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134446278 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160958676 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179315692 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124784184 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.096419817 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117057748 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194127375 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141176209 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104129061 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.137262113 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230184828 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.132661783 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083038707 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159703076 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135443327 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132845185 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246708441 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064685613 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127183062 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08038691 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109397589 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165623444 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223293975 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08688105 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.15660432 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151645211 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156130628 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165531459 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130575059 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128115979 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143392407 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188086627 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163895688 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.12041715 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145865825 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166472406 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225282141 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13751798 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.124967863 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213826945 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219853834 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.232312082 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.093693293 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14750581 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147246291 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143156567 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205311235 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087856346 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23337086 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111611503 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171454994 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134459044 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124803377 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162295825 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.125381018 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118608765 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205887602 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153549287 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111785186 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084578347 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146578243 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155616591 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133062476 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.103017788 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172113374 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.100527856 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174718942 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235423453 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086543356 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136332584 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126045893 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087125441 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13928312 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135254137 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11696653 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.123912566 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234537425 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.121531808 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215551911 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178357493 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147887237 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199911286 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131637861 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.670776935 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.083170816 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220957579 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153179674 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246724806 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128809241 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152520767 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142285623 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157408818 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181153808 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138456548 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.208112886 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16662264 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.155102851 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108004782 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134294106 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145247761 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.095023978 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136730812 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147389102 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148721905 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.130779139 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.155427016 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189789907 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.088022157 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126812651 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198252401 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151919974 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20575754 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179100577 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114688822 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15324577 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180706427 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109434189 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.157842424 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220873044 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141332105 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130295142 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084407807 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.13788501 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239332208 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.077720017 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22815744 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158818274 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142774828 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146773117 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.181641242 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169517304 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138762735 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159671485 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12599318 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.146218212 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149469667 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089924136 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.10745348 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137484784 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14688912 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.130006189 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106955785 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.147117398 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218093047 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.076111612 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126146493 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108894871 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205514827 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247451168 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.095231342 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111352304 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150460467 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145863488 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.149017667 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16034375 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.110354181 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087318986 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.112155143 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.116804092 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138824978 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147287248 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133463726 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142853154 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236039018 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.089712139 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.254268825 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125163063 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141109266 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.073257239 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.109213095 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100680859 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125907627 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13640254 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1289737 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238211677 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.101986277 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.11970967 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12328676 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077207246 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112783539 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166642039 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143378459 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156788148 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127313988 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.067287959 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140663191 seconds)
  done (took 73.746315823 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.136041572 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.104836376 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.120727173 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.175227638 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.150640625 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253473467 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.182059123 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.228099062 seconds)
  done (took 2.366296653 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072416837 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.119888223 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105474224 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.116996708 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091798239 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072187755 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.305454878 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.112317924 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.091566722 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.095577507 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.122902946 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093674263 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.47863422 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068816695 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.095286421 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.087235773 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070728288 seconds)
  done (took 3.208697616 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.444234318 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.62973445 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.449132456 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.099549306 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.821192412 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.1097958 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.267257415 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.1625432 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.093041511 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.421112704 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.733010756 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.149085417 seconds)
  done (took 17.396996358 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076780111 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071595986 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.112797344 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086513772 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.100382187 seconds)
  done (took 1.464081714 seconds)
done (took 116.366061697 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081618881 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.377440201 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055875421 seconds)
  done (took 1.484755397 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087741425 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.113760385 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089301378 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087230646 seconds)
  done (took 1.403244588 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.078153051 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079162108 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.113800547 seconds)
  done (took 1.294288816 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.294705864 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.170668279 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.092276082 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086955011 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081149337 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.106537044 seconds)
  done (took 1.300065645 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07539596 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078541526 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.101567116 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079703961 seconds)
  done (took 1.353354771 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079553255 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055036023 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057145584 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.083438325 seconds)
  done (took 1.300114477 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.093034982 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.107960933 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084011763 seconds)
  done (took 1.306989918 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.113328981 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.114463475 seconds)
  done (took 1.253497732 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084461286 seconds)
  done (took 1.105414387 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09542873 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.14446197 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.16504248 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.141466019 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.175923908 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.141558177 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.116939486 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.092843335 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.105968879 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.119007804 seconds)
  done (took 2.32534127 seconds)
done (took 15.778004421 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080736374 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.391189757 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364424956 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119721185 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67239724 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.384026383 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.984003427 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122391371 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112423771 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097030543 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087254228 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67548359 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.973501679 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.345847268 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.960121699 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326494983 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.67725724 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07108642 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095829177 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070903147 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.96769138 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096060445 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071137632 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095751651 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652616659 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374468559 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096482916 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.326337778 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095163838 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072678406 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358004046 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096329325 seconds)
  done (took 15.932215071 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073435768 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.146940261 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077618339 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087927052 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.099648538 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073084603 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.100288404 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071389953 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.150990194 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071484045 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113545661 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070652202 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101161236 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07229622 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08950579 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097353938 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071415435 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096758301 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070857294 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072409278 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.115624249 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071269384 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097189095 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072316027 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07146427 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108859796 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071403674 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.096140213 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072098831 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074099784 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099774339 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073156394 seconds)
  done (took 3.861619639 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118443535 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.155810385 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077068778 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131606344 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.143130517 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074467748 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.174057101 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097196586 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154392033 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071514893 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113541337 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071954264 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.130960774 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072178848 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117770834 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071792726 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09714 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072274714 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071633977 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096452607 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090595885 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096004885 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071475918 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071109589 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097347883 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08500462 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097096391 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074702866 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096268497 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073599549 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074461696 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097870337 seconds)
  done (took 4.173902536 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075784992 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07773267 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.112483942 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.0872608 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.098626427 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074464764 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075459964 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.09847403 seconds)
  done (took 1.730484386 seconds)
done (took 26.717763238 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082034048 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.073901154 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.102067437 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084120778 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101769105 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082720514 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070025689 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.103865295 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078650094 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101940746 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.078963504 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071855242 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.099796158 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070293899 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.078055804 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097438983 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083026378 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.100216359 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082331685 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.108968335 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.074060567 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07815707 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103351563 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082073929 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.108918563 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082075006 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.109473336 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07754912 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072137854 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098772006 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079880317 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.115209173 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.07172017 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.108810873 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.07171317 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071764787 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.097180693 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071905445 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083083329 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.103912333 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073948486 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.104492189 seconds)
  done (took 4.718231247 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092294534 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09573459 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.11545256 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065656382 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098469138 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064449773 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.120396361 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.06336906 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.064907899 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.119996876 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058608245 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061033675 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.089538023 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057374979 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.06075825 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059126797 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.08971588 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058394254 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060305696 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.086468728 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.063829849 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057192989 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.089344265 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062059898 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058258662 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064871888 seconds)
  done (took 3.011114572 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078075266 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084896383 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.117758176 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132560321 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.135126228 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.07914431 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106900898 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089765789 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114915145 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070748717 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.100356139 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.100326557 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088890024 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.103316414 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070386798 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.120381784 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084899042 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.098021862 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.077885049 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091323302 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.113120226 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081755355 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.118106897 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083346361 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069837109 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099121121 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075129468 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.111802696 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076074908 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.106290068 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075621453 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074596353 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.098803025 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082068449 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.101438895 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.071995812 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.116010236 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081175727 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079962378 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.098197889 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074319936 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071551741 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.118788171 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.115122442 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.095641812 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077173163 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.10476116 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079935373 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.096306822 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089313402 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080251493 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.096774141 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074416745 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070728746 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096954989 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084383982 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.099175272 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073520715 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079312984 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099674078 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.083110492 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.100899631 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086272097 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070450339 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.105020323 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069940809 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.098314014 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069889933 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093517159 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.098470151 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111007511 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.097787267 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071622957 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.106566586 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078443612 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076589849 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.097774108 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085587259 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.106773131 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074163222 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.106069249 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074079792 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073205771 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.115239136 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073445898 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.073401531 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.098399983 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07771474 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.100723089 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.07139877 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085487122 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.096719357 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.075115278 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.114410841 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070219357 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071992669 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.104423498 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076198325 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.097048139 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083373508 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.103442871 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072045013 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081066912 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.09792264 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073429 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.107169632 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075074076 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070031938 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.102470747 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07676432 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.098578752 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071834997 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073480512 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.098934853 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.08037053 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07628745 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.102491022 seconds)
  done (took 11.56605972 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.203188098 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.190684961 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072701314 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.183312422 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.083277674 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.110577586 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.185390838 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.104633909 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.098032806 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071121783 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.098907148 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110113514 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.131396681 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.143165117 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.08255676 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070521677 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.116924795 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.141309707 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.188383559 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.153509529 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.117117443 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079424689 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.10022529 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072065083 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.100645551 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081755309 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.115978891 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.083123405 seconds)
  done (took 4.345177253 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084736603 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.130302286 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077090735 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.119255734 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.095548569 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.097370074 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07580653 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072370293 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.110321032 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083832432 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.097605879 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077620708 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.105414582 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.079364009 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071601709 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.107067319 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.081116741 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.099192526 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073752417 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074607438 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.104979541 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.085013426 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.101301505 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070218905 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.0783638 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.096474861 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.069127032 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.115272936 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071774533 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.119568583 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.070264002 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.10449876 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08127432 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071436213 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.098123731 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073242999 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.099893316 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.073049532 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072175328 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.096150121 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.07004218 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060473204 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.096043687 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084177485 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.102868941 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062477369 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076990091 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.102460739 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076705462 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.095055722 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074260925 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07377701 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.102146822 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078577986 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075322551 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.102394199 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073994494 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096679697 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077904564 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072475522 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.09421096 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069890759 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075910105 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.096725532 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078029762 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.101881064 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069321619 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073374318 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.101486576 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.076825368 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.099618685 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074230988 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069359922 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.100553562 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.076491917 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.076010686 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.10101098 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069741143 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.096834033 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071660771 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058370439 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.097449601 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056481863 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074643081 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.096013496 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06995801 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072859809 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.106763697 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.085390124 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.09850938 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078475734 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.097675312 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070517902 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07487688 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.092159032 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074381238 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.086521007 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.114451794 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.097466294 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069776863 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085707905 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.102738158 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.07039078 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.058923068 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.105402483 seconds)
  done (took 10.049856434 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.095727287 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.123084351 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.073962939 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084725703 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.125114059 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095522552 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.106633815 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077177491 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072902895 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.116268367 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.070646374 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.106987014 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.075701176 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08025433 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.123202045 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079912943 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.100376143 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07960194 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.106793429 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.107020477 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084598101 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.111642537 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.081626616 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.097875489 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075613014 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.10983154 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.099105711 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080625618 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.107827702 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.08491586 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107858479 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099980261 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.112770769 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.074839737 seconds)
  done (took 4.286495189 seconds)
done (took 39.003679746 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.122061239 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.318487729 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.107418318 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.915116583 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.132984677 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.11253123 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.139162694 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.10937285 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.500778265 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.111264265 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.358833099 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.662873676 seconds)
done (took 58.646126468 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.148237375 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.249509284 seconds)
    (2/2) benchmarking "String"...
    done (took 1.379807241 seconds)
  done (took 3.683331557 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.506699758 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.101866518 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.398529282 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.109781216 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.108676625 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.567006582 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.623504403 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.92408191 seconds)
  done (took 26.888685407 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.117050753 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.45070634 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.339581622 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.327334523 seconds)
  done (took 17.292001364 seconds)
done (took 57.573322929 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.095156867 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.183920393 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.121178331 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.094071155 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.210486248 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.139109522 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.386331296 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.340133421 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.111810524 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.120938703 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.111380595 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.121092725 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.124955451 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.403497789 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.11677585 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.109372129 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.167928293 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.587926476 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.475251389 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.125490225 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.127949847 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.13176326 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.111024191 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.113671218 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.112154553 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.109979582 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.1099922 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.12992205 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.217707254 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.111379041 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.19408732 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.584636559 seconds)
  done (took 188.254684259 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.111058162 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.260601765 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.340095422 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.131134848 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.72982176 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.309373194 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.245840044 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.785505404 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.125392015 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.123217338 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.44590425 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.111222666 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.513585633 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.090751594 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.120601789 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.218705355 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.397199239 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.514676848 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.1234926 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.385786982 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.139644028 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.304028204 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.238195911 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.412547909 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.149266504 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.134124112 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.129520043 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.127671962 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.301441871 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.342546061 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.136350305 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.138993243 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.665675844 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.968827473 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.113482739 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.120206627 seconds)
  done (took 147.560361617 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.365105799 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.110870412 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.112113647 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.11248582 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.112452702 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.110226464 seconds)
    (6/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.140798786 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.111545383 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.624739426 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.626474707 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.61550777 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.232804834 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.173220227 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.345324215 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.112992399 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.201903986 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.123226769 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.112858623 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.126819917 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.138263161 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.114952803 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.1134269 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.615440037 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.124227891 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.144485396 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.120884216 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.112957065 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.141262433 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.505121942 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.113105211 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.141758631 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.970084917 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.424514648 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.154486582 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.113691051 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.113454429 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.389153314 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.220549605 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.114301102 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.143489072 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.1142871 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.377140021 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.113356366 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.113750382 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.116025805 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.674843544 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.112685531 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.62745935 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.115835086 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.981210767 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.113725082 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.113973165 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.113113021 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.306324924 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.516164499 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.113380504 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.114167963 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.11655164 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.11563394 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.1138587 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.143621987 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.515218655 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.211506658 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.115610754 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.117524665 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.143039551 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.114530462 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.339665876 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.11635854 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.546982697 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.173369315 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.229461145 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.62172991 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.114740033 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.206216043 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.231721174 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.114209184 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.115020451 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.11491637 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.115939367 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.219423659 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.114912893 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.497322697 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.121040677 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.115910993 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.173674817 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.207579803 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.114850156 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.393658867 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.116312561 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.115604676 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.781982937 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.206501519 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.115646512 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.115323156 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.115545773 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.498117374 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.625414065 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.277713524 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.118637592 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.47852434 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.119063258 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.5123748 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.613504165 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.696327791 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.118033387 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.221335151 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.121463843 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.118179978 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.116757577 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.146416782 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.117027373 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.172675902 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.11591631 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.511602435 seconds)
  done (took 333.908769555 seconds)
done (took 672.146912076 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.784918346 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.742347473 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.869392581 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.75712016 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.741300588 seconds)
  done (took 9.954068396 seconds)
done (took 11.01524814 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.290969501 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.291868568 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.172629302 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.294231869 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.146897016 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.308546718 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.271812058 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.138066409 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.211050779 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.187697699 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.211070721 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.16514101 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.142142643 seconds)
  done (took 16.893632026 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.417718834 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.45200143 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.180082954 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.418594142 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.156980377 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.453930527 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.310102329 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.320658902 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.324841748 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.133341818 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.130970784 seconds)
  done (took 15.361859288 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.431020976 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.424627291 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.18578615 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.426334664 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.158972895 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.433506169 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.312596136 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.331610457 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.333567242 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.134624131 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.132910924 seconds)
  done (took 15.367568809 seconds)
done (took 48.685942302 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.128839269 seconds)
  done (took 2.191548917 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.161109949 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.318158783 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.140507369 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.133117505 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.129595509 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.129108427 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.133578356 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.127985644 seconds)
  done (took 10.337261029 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.124911318 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.124348288 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.12578656 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.127880416 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.12531331 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.127665925 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.124786603 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.127446489 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.127287892 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.126718673 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.128407388 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.125460828 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.125397718 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.126856508 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.127690483 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.129100193 seconds)
  done (took 19.088729245 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.127864743 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.125682092 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.125283535 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.126823265 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.125473549 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.127814958 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.126736842 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.126576228 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.126156948 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.125677756 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.126822179 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.1266964 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.126998015 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.125302645 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.124970761 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.12707916 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.126594269 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.125983296 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.129914694 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.126100779 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.127697334 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.126634436 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.126913758 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.126547326 seconds)
  done (took 28.104903556 seconds)
done (took 60.78600955 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.127626905 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.630280975 seconds)
  done (took 8.822626401 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.129429424 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.130092136 seconds)
  done (took 3.324854879 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.128878633 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.128868746 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.129473986 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.129102379 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.128920794 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.129626748 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.129450837 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.128988441 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.129783732 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.129013388 seconds)
  done (took 12.356698814 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.129479109 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.129027642 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.126588472 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.130470678 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.12977382 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.126883896 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.12999869 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.129132046 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.130746035 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.127037177 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.130343846 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.128268287 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.130268486 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.12854083 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.129677653 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.128871776 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.127739088 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.128057813 seconds)
  done (took 21.386371313 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.130165495 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.131096218 seconds)
  done (took 3.328026465 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.127095388 seconds)
    (2/7) benchmarking "second"...
    done (took 1.127853292 seconds)
    (3/7) benchmarking "month"...
    done (took 1.128777425 seconds)
    (4/7) benchmarking "year"...
    done (took 1.128462608 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.12878459 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.128134612 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.129067878 seconds)
  done (took 8.964252837 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.132883081 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.309999426 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.387223237 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.728873096 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.132672481 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.135207639 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.978168214 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.135056432 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.136888473 seconds)
  done (took 13.143684096 seconds)
done (took 72.392043259 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.107051604 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.124812611 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.00573097 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.141926632 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.13934326 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.422865896 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.157743377 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.242717985 seconds)
done (took 36.41081994 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.12706637 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.790937454 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.826761031 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.126502202 seconds)
  done (took 10.812534184 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.118091261 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.005619701 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.127377798 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.125492788 seconds)
  done (took 17.445519241 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.723505447 seconds)
    (2/2) benchmarking "read"...
    done (took 1.458916807 seconds)
  done (took 4.254820306 seconds)
done (took 39.708463831 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.133425174 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.133301546 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.13277802 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.130007374 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.131554109 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.130599644 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.130155229 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.131193234 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.134138078 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.133008254 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.132495592 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.132960607 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.132724261 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.131567883 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.132353412 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.13349816 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.130775161 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.130124146 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.130022801 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.133632223 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.130447323 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.133302556 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.130554372 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.130755327 seconds)
  done (took 28.234237507 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.132757526 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.131395832 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.133217191 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.134196784 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.131245032 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.133818985 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.134307246 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.131614848 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.134099852 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.133530589 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.131428122 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.131176567 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.133246345 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.131925091 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.133824081 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.132341989 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.134540114 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.132622607 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.134619336 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.131778638 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.13404644 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.132659234 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.132749623 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.134173725 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.132157009 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.132691146 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.133930934 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.132517302 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.13467124 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.131757398 seconds)
  done (took 35.059233768 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.139266344 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.141411365 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.135409641 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.135056267 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.134910213 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.134870368 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.135021675 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.134711278 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.134602291 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.135800758 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.135353818 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.135834385 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.135624093 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.135705551 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.13607268 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.136091122 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.13641431 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.134941744 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.135972801 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.135130746 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.135958494 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.135939718 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.135560023 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.136183388 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.135424623 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.135572325 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.135715357 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.135282878 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.135702232 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.135421924 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.13647374 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.135781698 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.136274529 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.136449095 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.137421137 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.135667896 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.140797291 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.143383913 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.137434472 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.137707545 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.13700201 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.137035894 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.137512596 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.137349884 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.137342386 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.136826463 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.136659688 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.136617125 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.138331794 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.137595725 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.13740499 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.137264411 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.137564652 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.136774366 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.137251057 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.13790139 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.138186126 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.137753842 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.138517666 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.136808193 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.137287287 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.137950659 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.136927648 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.137733075 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.137310615 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.137699813 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.137196605 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.138774835 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.13733354 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.137545776 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.137644724 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.138518293 seconds)
  done (took 82.924929315 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.138039565 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.135878013 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.13551452 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.135997603 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.135515096 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.137890183 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.136101981 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.13762935 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.136376346 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.138393135 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.13812454 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.136787727 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.136392064 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.138758621 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.138889633 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.134851886 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.137921957 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.135289403 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.137960344 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.138152203 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.139317588 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.136968327 seconds)
  done (took 26.09039162 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.138975797 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.138711921 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.136899908 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.139303371 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.137627863 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.138919747 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.139448192 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.139086048 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.139728102 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.137040564 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.1370595 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.139020223 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.13727787 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.136518523 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.137440281 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.137616376 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.140369569 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.137064504 seconds)
  done (took 21.563652716 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.137924284 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.137336686 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.1403333 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.13700618 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.137349249 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.139791854 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.13821761 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.14041905 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.140047602 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.137566295 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.140875809 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.139904087 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.141100859 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.137514343 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.141706241 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.138294825 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.141812496 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.138508887 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.140691296 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.13885806 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.138619928 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.141074901 seconds)
  done (took 26.140886515 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.141908561 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.141941816 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.139176193 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.139292159 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.13801293 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.14067733 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.141778853 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.138769196 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.141120745 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.141599779 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.13971152 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.143271458 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.139277954 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.13844765 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.139344053 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.139019762 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.141448376 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.140016709 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.140813272 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.139769983 seconds)
  done (took 23.882821621 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.142503248 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.142603874 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.142378438 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.141964982 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.142137393 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.144208078 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.142346332 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.142292952 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.143464177 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.143589577 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.143221481 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.142823463 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.143364695 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.143685801 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.143844228 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.143397973 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.143606417 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.14350344 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.142772814 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.143687173 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.142508359 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.144004131 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.14359274 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.143601483 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.143848728 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.143664538 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.144077493 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.14418371 seconds)
  done (took 33.088451289 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.143056705 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.143115798 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.141382371 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.142490713 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.14202387 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.140839392 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.140574361 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.141495813 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.144128527 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.141190531 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.144871308 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.143627823 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.144271036 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.143488632 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.143987494 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.143885682 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.144136906 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.141750941 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.142284098 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.141447853 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.143759064 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.145040584 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.144319162 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.140984327 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.14221201 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.145054955 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.141279555 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.141590974 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.144288078 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.142770042 seconds)
  done (took 35.364903533 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.163438917 seconds)
    (2/2) benchmarking "in"...
    done (took 1.162749729 seconds)
  done (took 3.405476951 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.142291249 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.145239979 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.146018188 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.143643708 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.141795275 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.144843634 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.144695758 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.142573124 seconds)
  done (took 10.231153177 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.144774678 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.144013774 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.145564308 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.145559219 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.145842281 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.145759278 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.151482403 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.162497599 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.14614735 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.145941136 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.15123098 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.151909457 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.148245958 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.145334915 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.145732388 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.147077849 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.146054678 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.145559577 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.146343015 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.146650956 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.146679376 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.14934865 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.147398512 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.144564427 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.146022716 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.155107305 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.150253557 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.147302609 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.145547902 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.150626952 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.145666887 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.144491341 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.147187926 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.146247925 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.146154872 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.146768967 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.154780445 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.163019007 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.153736886 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.147634533 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.147742203 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.145254287 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.147989378 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.149219057 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.147363482 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.148510055 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.149260975 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.144927627 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.146807919 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.150169089 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.15342153 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.146625019 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.14592921 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.15031351 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.148285082 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.15518737 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.164031574 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.150536239 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.155656501 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.159626038 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.160695414 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.156007628 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.149296417 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.14841667 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.157304986 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.169912793 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.155013072 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.161557854 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.145739048 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.149717351 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.15468291 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.160262297 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.156771474 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.149591999 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.149910382 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.149479641 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.149339805 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.148826053 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.155976107 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.167163351 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.149067509 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.149062809 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.158941702 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.170319491 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.148652119 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.150811447 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.149062877 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.150112746 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.149455144 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.160218714 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.165877778 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.151251784 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.149170336 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.149919691 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.150596452 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.149990367 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.149157578 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.150205299 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.148181603 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.151195039 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.149562901 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.151771284 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.159262306 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.149726636 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.150838996 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.157218738 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.150561165 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.149273836 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.156475191 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.151031514 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.150476975 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.151968606 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.155352151 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.148113592 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.153863499 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.15776353 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.151233766 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.152852374 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.151038313 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.152031592 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.158703477 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.175570689 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.150271647 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.151413761 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.156525878 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.161576374 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.15223088 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.154578293 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.152885974 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.149027469 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.14944305 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.153202289 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.151499486 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.152093832 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.152100727 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.152866461 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.151478816 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.152086732 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.152299772 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.152726779 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.153948119 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.152069002 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.152083174 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.154382046 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.151963655 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.154021045 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.158772461 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.152021937 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.151953155 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.153442774 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.150836716 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.153635537 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.153597228 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.153135051 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.153558706 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.153214939 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.152474911 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.152828339 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.153177674 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.153908454 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.153254319 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.154069618 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.156954768 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.153751208 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.157685759 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.152112457 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.151715876 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.153809839 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.154261089 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.151580529 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.155134425 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.152220421 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.156897808 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.16024968 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.153379539 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.153598656 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.156033733 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.154153578 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.154010618 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.154378449 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.156430483 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.161005718 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.154358959 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.160242576 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.154191067 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.155049277 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.154292955 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.153745191 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.15436735 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.155058196 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.156617752 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.16180714 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.165984233 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.16314274 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.155394508 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.159010545 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.156730491 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.158472278 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.157953839 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.155555234 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.155869026 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.154540828 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.153843856 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.155581396 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.155999011 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.154956309 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.153595395 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.156308462 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.1554752 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.154187511 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.156001258 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.156440914 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.156065709 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.15314957 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.156771732 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.155606397 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.154555066 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.153182851 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.155241286 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.155548897 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.155311336 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.156776363 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.162149459 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.154280302 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.156628446 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.156496321 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.155215416 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.156211445 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.156676949 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.15907502 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.155387846 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.163086735 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.172063037 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.156352006 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.163397145 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.171859084 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.156092499 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.159049488 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.157174705 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.154384189 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.159392989 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.164388398 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.156524051 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.156398292 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.158339014 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.156368675 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.157409202 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.164526234 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.156694741 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.157088005 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.157786492 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.1583285 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.155328983 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.158391277 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.158028652 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.159161837 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.159667214 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.158269608 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.15857704 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.15982174 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.158205277 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.158148904 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.158364056 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.160716335 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.164860807 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.163024367 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.158790682 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.159920488 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.159434339 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.162773755 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.158425525 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.158863924 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.157798834 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.170997433 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.166968672 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.165543985 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.159996774 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.158736037 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.164163036 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.159789669 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.162589426 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.158413171 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.15919295 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.158836763 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.158899615 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.156172127 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.158998709 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.160699596 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.160113455 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.162635675 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.165373395 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.162007325 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.159434401 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.159370196 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.160042916 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.159871305 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.159687008 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.160020589 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.161741898 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.160986833 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.159777317 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.158763701 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.164967611 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.17487019 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.159895677 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.159919761 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.159838889 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.15871586 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.161514552 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.160305146 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.163282031 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.168361259 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.16401456 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.169097155 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.161604954 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.170066549 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.160017335 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.164163515 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.168411885 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.157996225 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.159274168 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.160758275 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.160014522 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.167056786 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.177389925 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.161766138 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.165490532 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.160809925 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.161710421 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.162860786 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.161288892 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.162168996 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.16234386 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.1680221 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.178316414 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.165314342 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.163580338 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.160744436 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.161576345 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.163004578 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.160959283 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.165776285 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.16326274 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.161917816 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.161739037 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.162433398 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.163010502 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.162010358 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.162876586 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.160193213 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.163403112 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.169545015 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.179979857 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.165736048 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.162791878 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.170367471 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.162728264 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.170229283 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.178947974 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.16364457 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.163197308 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.162822656 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.163136909 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.161719352 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.163295848 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.162423084 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.163675438 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.167797655 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.163861127 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.164329181 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.16362363 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.162784155 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.162460611 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.173483199 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.184801358 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.165263455 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.167897988 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.161196428 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.163080631 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.166558177 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.163388577 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.16262795 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.166364866 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.173722866 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.171708052 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.164522327 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.164141172 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.164850219 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.164392456 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.164530902 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.165278236 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.162986886 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.16413253 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.164793562 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.164922945 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.167839876 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.165105812 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.164778425 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.164123612 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.166214501 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.174879532 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.165293717 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.166898324 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.164178148 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.165491413 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.166190583 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.164447624 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.165838273 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.164525983 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.164703976 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.167004059 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.171850653 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.170652138 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.16783852 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.164531505 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.165534055 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.166814841 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.166683186 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.166716539 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.165172922 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.166472156 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.165881724 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.165357936 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.167934955 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.164792516 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.166645545 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.166190427 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.166595113 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.169407804 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.172036467 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.165707747 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.164529087 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.166515495 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.167213396 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.164934608 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.167500615 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.173764747 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.16835917 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.176229238 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.174153728 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.170544591 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.166693626 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.170445442 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.173702778 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.166013179 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.167827389 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.167319456 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.168584178 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.167844842 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.16946525 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.166459161 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.173633329 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.167593399 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.167428443 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.175074249 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.184056892 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.167607502 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.169046979 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.171608961 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.16765622 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.16500232 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.167858016 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.166051372 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.174382302 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.184847979 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.168093344 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.169580506 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.166701053 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.168912463 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.171937499 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.168455915 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.169180383 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.166784621 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.167542462 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.167871736 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.16978155 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.167126003 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.168237767 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.167989421 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.171654902 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.17636817 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.16747816 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.170748371 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.168583407 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.169882404 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.168789876 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.169249298 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.166943436 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.167540092 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.168487978 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.169093073 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.16929947 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.171896207 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.167792182 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.170267508 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.171258022 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.170319175 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.171413322 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.178895587 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.176534059 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.167674824 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.168871966 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.169666911 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.172623986 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.169713622 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.17015313 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.171182254 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.170705118 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.171253088 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.170133024 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.171148011 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.173935712 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.186068647 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.187317151 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.170252108 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.170121675 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.174132083 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.171922924 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.169582697 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.172103702 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.172050615 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.173733324 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.179030213 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.171264252 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.177740536 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.187119974 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.17234338 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.174769221 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.173093089 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.177618816 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.173036138 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.171240206 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.172351235 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.17643476 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.186119002 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.171890311 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.179839126 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.199001871 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.187274546 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.171894401 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.172227921 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.170447218 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.172274447 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.173662567 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.171376859 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.172635379 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.172532839 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.172170968 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.172208104 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.176396193 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.172884774 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.17239654 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.171835828 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.172068639 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.173111558 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.169777687 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.172171549 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.173524415 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.172391246 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.172438158 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.172489928 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.172802 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.184208351 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.181827649 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.173619618 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.173307656 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.170936177 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.176048475 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.175655466 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.181741499 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.179840392 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.17330153 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.173074756 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.174872967 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.173374793 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.171601653 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.172912469 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.172803295 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.172890244 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.171744426 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.185032845 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.18180113 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.178268619 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.17427943 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.174071481 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.175301934 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.17503146 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.174187295 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.174319717 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.175440052 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.174283639 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.177436391 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.174589508 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.175696318 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.176700028 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.182221659 seconds)
  done (took 693.649848205 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.17266734 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.1720554 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.171600684 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.172952935 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.172759706 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.172948825 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.172871506 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.173542553 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.173468943 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.17264532 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.172676096 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.173297768 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.173015731 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.173828918 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.172954679 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.172169494 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.173285856 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.17330095 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.173694693 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.173031242 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.173308226 seconds)
  done (took 25.741350285 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.175675547 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.174314337 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.173907857 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.175836095 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.172647033 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.17659986 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.173770637 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.175044337 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.176536615 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.174825645 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.175290481 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.176600197 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.174297865 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.173439762 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.173615108 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.176137406 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.177796493 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.174831428 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.177711686 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.174104265 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.177064086 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.174739092 seconds)
  done (took 26.965844355 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.176613849 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.177355674 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.175917469 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.175098717 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.177052497 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.174192116 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.176775537 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.177630563 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.17748074 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.17700122 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.175544148 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.177759242 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.18382307 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.182684417 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.17997864 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.177239553 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.320676083 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.176955484 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.1785928 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.17848158 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.175698143 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.18241711 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.175430659 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.17540938 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.175416453 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.178347462 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.178271968 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.178230865 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.178248961 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.17905122 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.182099068 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.178466637 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.177762921 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.180554038 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.17740405 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.179142185 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.182267388 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.17941315 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.176251231 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.178987986 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.188145588 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.198408158 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.178762741 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.184952204 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.17966032 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.179617939 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.182527121 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.185934184 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.177780178 seconds)
  done (took 59.035056127 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.179378391 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.179218212 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.177228756 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.180104355 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.17954763 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.179648076 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.179411269 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.179425076 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.176575291 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.177380284 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.180810761 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.178014478 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.177516979 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.179962535 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.17970323 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.177026165 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.177000231 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.176777389 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.177539557 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.176144992 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.17704057 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.179233798 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.18046341 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.178152988 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.179150045 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.176953316 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.177465847 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.18062292 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.17875371 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.178418677 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.180440068 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.180061969 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.18038993 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.178656326 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.176610926 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.181650461 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.181084781 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.177341097 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.180892945 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.178186627 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.179847809 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.181835528 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.180670507 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.180399755 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.17834058 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.178179027 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.179198683 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.178011673 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.178817077 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.182268792 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.180986135 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.178866752 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.18132528 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.178555501 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.181450321 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.181969716 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.179553191 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.178981446 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.182295708 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.179547626 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.178834034 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.181865084 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.179887851 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.181257692 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.181733253 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.179129188 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.180052911 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.181724462 seconds)
  done (took 81.311651084 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.181317125 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.182182379 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.182419919 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.181016988 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.181088378 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.182743076 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.182122938 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.181720412 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.182577245 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.183017394 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.182934019 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.183573432 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.182508989 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.183308042 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.18298017 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.183195838 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.18338645 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.184039264 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.184619584 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.182235919 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.184144696 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.182539631 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.183670825 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.183156065 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.184251745 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.18356412 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.184419213 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.183388701 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.183468951 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.184516597 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.183237847 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.183870149 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.183908317 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.184156999 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.184618805 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.183871205 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.184227781 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.184654542 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.184295939 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.184018428 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.184071047 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.183329994 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.182656551 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.183212666 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.18383628 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.184152519 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.184603022 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.184975577 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.185435885 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.184707595 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.184550451 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.185036628 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.183965587 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.184775044 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.185001878 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.185348923 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.184725552 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.184733443 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.184948771 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.184510482 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.184988281 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.186161347 seconds)
  done (took 74.509357251 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.185107736 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.186094638 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.183851544 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.183107038 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.185709425 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.18296284 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.186097563 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.18623478 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.186010468 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.186467947 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.18660856 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.184281991 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.183284835 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.186844779 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.184361713 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.184808327 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.184697627 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.184546676 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.18672278 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.184298929 seconds)
  done (took 24.822956383 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.184466452 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.186811674 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.185645949 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.185988274 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.186816589 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.184252855 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.18765324 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.187992989 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.184885114 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.18702752 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.187711576 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.187488291 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.183957557 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.185177739 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.187297193 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.1853422 seconds)
  done (took 20.099405334 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.184847972 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.18839831 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.187086901 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.18830885 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.185782243 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.185110063 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.187645851 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.185029518 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.185587041 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.188790236 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.188655632 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.188503868 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.187793658 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.187569484 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.185953233 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.1889471 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.186103599 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.185681905 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.188950851 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.18737701 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.186721914 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.186602449 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.188617684 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.188773402 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.186379646 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.187666798 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.186575704 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.186200003 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.186438835 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.187956074 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.186306265 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.186989382 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.186124501 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.18689496 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.188600091 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.187527302 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.189161085 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.188397455 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.189783081 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.189494876 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.189236738 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.186692911 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.190017099 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.188790696 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.187801389 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.190414356 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.18783448 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.188128686 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.187262646 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.188260667 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.190494246 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.188728918 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.190373277 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.190863785 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.190517277 seconds)
  done (took 66.451992124 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.189418719 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.19012982 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.187994932 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.19009991 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.190454248 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.187871712 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.1906712 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.187591492 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.188302917 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.190979964 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.188755017 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.191096881 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.187575495 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.190203801 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.188873293 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.190226342 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.188182092 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.189073172 seconds)
  done (took 22.53174796 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.189601629 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.189414299 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.191593813 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.189539804 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.188592566 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.191575948 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.188097838 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.191810048 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.191859296 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.18972499 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.189472581 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.193157519 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.1914078 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.192339617 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.189732507 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.189397278 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.192017381 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.192686612 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.189426228 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.189005408 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.192843187 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.192381924 seconds)
  done (took 27.321030137 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.191230247 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.190916433 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.206836978 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.230279683 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.220566103 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.19075522 seconds)
  done (took 8.356539283 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.190705232 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.192261377 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.190951611 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.194098884 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.191719388 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.189861053 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.190180012 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.189623167 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.192304889 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.190748761 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.190197137 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.192817873 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.19349873 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.191013597 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.192445922 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.194139907 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.190439318 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.189914545 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.191386229 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.194177633 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.191179066 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.192421985 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.190896738 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.19085761 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.190794849 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.190896592 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.193401237 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.190730652 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.191100322 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.193015375 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.19314423 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.191027173 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.193278377 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.191698566 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.194357522 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.194268994 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.191648766 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.19449255 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.194316195 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.192683073 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.194250924 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.193901263 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.194359237 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.191960617 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.193690317 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.192258508 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.192341964 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.193257503 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.191923558 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.19564972 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.19460702 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.191768561 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.194840228 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.195941355 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.195479706 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.195098052 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.19280067 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.193553236 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.194441593 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.192825506 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.192924475 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.195587949 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.193656146 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.193473926 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.195826471 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.194034344 seconds)
  done (took 79.847706057 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.192542957 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.193645446 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.193150516 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.193057015 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.193227856 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.192518282 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.193927657 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.192454426 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.193318628 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.19291615 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.196593844 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.193373593 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.193169855 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.193159877 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.193073405 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.193961446 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.194241507 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.194170358 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.193116532 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.196577865 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.19353377 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.193447662 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.193786768 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.194179455 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.19502856 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.196721686 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.194367195 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.193508811 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.194556875 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.194524605 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.194100544 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.195111146 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.195345085 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.195915313 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.194744626 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.19482481 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.195387613 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.195509876 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.19489428 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.198030718 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.194133284 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.196787526 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.194773647 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.195712818 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.195652282 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.19551699 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.196188121 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.195813199 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.1954065 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.195619729 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.196891348 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.19641432 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.195978731 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.196548158 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.195790308 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.195378389 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.195649062 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.196126427 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.196067856 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.198908049 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.195159109 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.195848504 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.199668036 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.196006695 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.197408243 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.196073289 seconds)
  done (took 80.000086408 seconds)
done (took 1617.70006069 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.255058549 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.224068208 seconds)
  done (took 13.611269334 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.35920381 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.313702682 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.197317669 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.216168761 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.197330629 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.202120731 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.214795947 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.19775449 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.197071019 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.195918433 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.197163722 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.386397453 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.198652972 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.196642327 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.196219801 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.290691987 seconds)
  done (took 40.891782816 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.223692543 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.203915636 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.310357479 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.217641492 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.222270672 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.376440121 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.25245315 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.201161302 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.366628438 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.240897656 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.706469181 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.223809656 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.200545493 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.271706103 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.21706149 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.378266494 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.439105743 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.713728062 seconds)
  done (took 27.899967403 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.637599855 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.210324593 seconds)
  done (took 8.981486055 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.210869146 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.245814878 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.238882708 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.199886732 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.202435353 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.192376675 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.20458666 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.194318582 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.229079937 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.256047603 seconds)
  done (took 63.310442049 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.220627288 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.202039558 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.203700251 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.200769765 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.202827428 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.193727159 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.201330938 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.195969311 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.73987965 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.323529749 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.217051462 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.210739726 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.202806804 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.202406261 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.200067632 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.236576816 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.37859497 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.199634041 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.200233104 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.207953772 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.202672884 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.308909239 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.240950809 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.202528893 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.323231039 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.743361966 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.20712501 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.210417177 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.319452811 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.200945766 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.202013685 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.202963152 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.204117308 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.770410795 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.736941483 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.222422439 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.22669621 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.212438416 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.201328008 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.345667543 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.20392412 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.210398244 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.19575732 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.722101558 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.357553912 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.31015135 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.417023693 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.206381769 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.204526677 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.262713759 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.205378549 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.204144286 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.231162299 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.955689656 seconds)
  done (took 104.048928442 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.218616531 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.691928956 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.367090433 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.213318761 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.06683676 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.985429542 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.198441523 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.47465804 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.197041105 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.197090303 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.470652168 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.697915008 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.199138114 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.198602179 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.770975419 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.264362971 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.198028621 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.099618361 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.199119297 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.201632518 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.619417976 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.213544579 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.198126368 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.256628186 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.2357128 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.650610926 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.649995394 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.692413844 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.19829562 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.199248247 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.662580393 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.200547571 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.245928992 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.201416088 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.467196056 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.542374906 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.520261003 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.199415722 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.229426345 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.201211546 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.23228566 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.648456623 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.531559604 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.198328198 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.199083257 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.652286887 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.199599695 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.199664211 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.203655572 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.405507236 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.926672104 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.20063731 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.614702611 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.199050609 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.458919901 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.228355516 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.285982803 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.679280775 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.199286972 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.346685401 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.233381399 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.200391129 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.207576098 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.200034396 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.200293562 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.541796255 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.302555944 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.199145892 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.540727282 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.661066391 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.2015316 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.736209772 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.119897849 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.215899229 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.232131224 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.199293934 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.902214019 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.679071837 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.205022651 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.200363275 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.522071917 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.201238672 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.472865708 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.212374905 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.199127663 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.62716445 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.220734534 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.221849577 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.19914078 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.224845653 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.985509767 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.201204719 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.463354486 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.217880805 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.199972576 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.201324342 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.240813573 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.200663844 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.200741661 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.207742262 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.717615764 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.209994495 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.328938125 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.220421724 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.201197006 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.202763636 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.202133674 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.203541166 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.423572895 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.802960833 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.203006182 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.200119651 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.201796339 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.203165205 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.207448679 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.207484694 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.496162684 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.203718879 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.201794169 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.203765103 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.032378864 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.240745055 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.201706716 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.206424266 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.030917646 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.408360201 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.218669106 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.202389971 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.201973426 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.215917824 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.530929366 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.203331365 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.254411834 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.207443495 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.899234428 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.234896689 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.214134542 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.592593438 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.20694077 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.14758967 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.224263857 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.202990506 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.509758748 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.471299336 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.235309345 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.207099785 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.216887096 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.88684566 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.239259914 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.334719634 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.222510493 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.240884521 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.400322241 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.298786396 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.203417438 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.760391914 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.203749064 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.418823482 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.212328544 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.522911626 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.69126519 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.20508832 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.208840891 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.905394178 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.854384147 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.988235004 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.203810164 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.476268581 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.207037589 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.649422909 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.203593082 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.218031246 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.791627988 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.203728431 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.207712862 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.20543252 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.203636274 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.275890859 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.378432119 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.823431525 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.21157467 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.652749595 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.240193594 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.205716166 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.207844633 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.204989287 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.559129907 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.206224631 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.209826425 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.223681315 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.204914464 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.204385022 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.663080858 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.084582839 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.20497747 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.358109922 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.831508124 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.207964164 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.204420538 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.982152742 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.587778206 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.741386918 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.215042531 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.502823106 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.20893156 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.244918291 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.003387551 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.237316672 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.673283983 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.207338 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.206245143 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.803867728 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.207786819 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.255736516 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.205140348 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.208662159 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.741367921 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.209369689 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.206999355 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.547970605 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.206085387 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.457520898 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.207217907 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.241333222 seconds)
  done (took 1081.652428538 seconds)
done (took 1341.528472621 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.206455875 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.20914036 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.195800094 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.206701135 seconds)
  done (took 25.965327686 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.215228027 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.210966557 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.217429914 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.211008235 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.213470477 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.211402761 seconds)
  done (took 8.427775683 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.301370028 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.206655742 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.207426736 seconds)
  done (took 18.860991166 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.421646751 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.435619795 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.566440891 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.319823463 seconds)
  done (took 9.893057321 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.2138698 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.213473082 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.213315049 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.215182632 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.216072679 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.217822758 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.214690916 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.215868122 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.217744272 seconds)
  done (took 12.085462329 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.075782173 seconds)
done (took 81.455903954 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.331237619 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.09767726 seconds)
    (3/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.317134224 seconds)
    (4/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.297071642 seconds)
    (5/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.087401687 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.447814494 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.12278351 seconds)
    (8/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.389633949 seconds)
    (9/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.74220437 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.247615638 seconds)
    (11/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.422948118 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.788218063 seconds)
    (13/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.317486822 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.23340993 seconds)
    (15/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.606065925 seconds)
    (16/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.77284111 seconds)
    (17/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.76851054 seconds)
    (18/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.943787827 seconds)
    (19/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.211368364 seconds)
    (20/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.452033428 seconds)
    (21/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.335057646 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.741518935 seconds)
    (23/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.233917143 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.767886765 seconds)
    (25/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.390928933 seconds)
    (26/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.558460008 seconds)
    (27/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.224802053 seconds)
    (28/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.037588271 seconds)
    (29/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.44780915 seconds)
    (30/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.206799874 seconds)
    (31/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.55113182 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.311302176 seconds)
    (33/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.23777936 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.049400578 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.232510537 seconds)
    (36/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.942578946 seconds)
    (37/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.228243839 seconds)
    (38/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.194172655 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.557542656 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.624246864 seconds)
    (41/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.511104663 seconds)
    (42/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.392501744 seconds)
    (43/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.213933908 seconds)
    (44/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.342012144 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.85367933 seconds)
    (46/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.771217527 seconds)
    (47/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.234537977 seconds)
    (48/309) benchmarking ("sort", Float64, false)...
    done (took 5.483175175 seconds)
    (49/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.477392316 seconds)
    (50/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.046252828 seconds)
    (51/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.908101528 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.335506127 seconds)
    (53/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.207946682 seconds)
    (54/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.215284235 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.466179135 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.600590382 seconds)
    (57/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.224503794 seconds)
    (58/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.29803326 seconds)
    (59/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.209254856 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.226552979 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.05428264 seconds)
    (62/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.214698927 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.270737699 seconds)
    (64/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.292745886 seconds)
    (65/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.659484924 seconds)
    (66/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.457380133 seconds)
    (67/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.562844525 seconds)
    (68/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.219751334 seconds)
    (69/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.03859557 seconds)
    (70/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.534840498 seconds)
    (71/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.209601877 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.965254764 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.840394313 seconds)
    (74/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.273918971 seconds)
    (75/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.205694156 seconds)
    (76/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.298046135 seconds)
    (77/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.94740557 seconds)
    (78/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.497570336 seconds)
    (79/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.957751908 seconds)
    (80/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.560955525 seconds)
    (81/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.221855182 seconds)
    (82/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.314877566 seconds)
    (83/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.220580354 seconds)
    (84/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.275130197 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 5.382827695 seconds)
    (86/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.337164866 seconds)
    (87/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.332971671 seconds)
    (88/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.236106661 seconds)
    (89/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.29579328 seconds)
    (90/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.107125137 seconds)
    (91/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.218317738 seconds)
    (92/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.01939378 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.195849949 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.655592269 seconds)
    (95/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.581854159 seconds)
    (96/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.506736902 seconds)
    (97/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.196714517 seconds)
    (98/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.333084324 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.109475278 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.55520123 seconds)
    (101/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.215226069 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.656744938 seconds)
    (103/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.39809882 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.43362905 seconds)
    (105/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.65565176 seconds)
    (106/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.598356959 seconds)
    (107/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.256952962 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.23212267 seconds)
    (109/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.212232743 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.184033107 seconds)
    (111/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.301619154 seconds)
    (112/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.253022295 seconds)
    (113/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.271717389 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.518562247 seconds)
    (115/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.69187538 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.634506526 seconds)
    (117/309) benchmarking ("sort", Bool, false)...
    done (took 1.738343334 seconds)
    (118/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.235763904 seconds)
    (119/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.238759851 seconds)
    (120/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.365852796 seconds)
    (121/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.473552531 seconds)
    (122/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.532413458 seconds)
    (123/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.229320407 seconds)
    (124/309) benchmarking ("sort", BigInt, false)...
    done (took 6.212441301 seconds)
    (125/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.295771185 seconds)
    (126/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.954001925 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.241001631 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.694605844 seconds)
    (129/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.471759504 seconds)
    (130/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.576388304 seconds)
    (131/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.277123179 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.256815693 seconds)
    (133/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.212839426 seconds)
    (134/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.343102216 seconds)
    (135/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.212465957 seconds)
    (136/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.436996961 seconds)
    (137/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.552510076 seconds)
    (138/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.78629102 seconds)
    (139/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.279582653 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.145642748 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.066971483 seconds)
    (142/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.410307279 seconds)
    (143/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.2019443 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.291918444 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.979803911 seconds)
    (146/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.297879986 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.240381804 seconds)
    (148/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.214782109 seconds)
    (149/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.627375816 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.696012653 seconds)
    (151/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.216689973 seconds)
    (152/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.227759895 seconds)
    (153/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.241798385 seconds)
    (154/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.960368393 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.609612438 seconds)
    (156/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.602146615 seconds)
    (157/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.21372673 seconds)
    (158/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.982444459 seconds)
    (159/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.876890333 seconds)
    (160/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.201232133 seconds)
    (161/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.841915077 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.238660347 seconds)
    (163/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.493849979 seconds)
    (164/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.025984137 seconds)
    (165/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.200939992 seconds)
    (166/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.244661443 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.314127561 seconds)
    (168/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.281825482 seconds)
    (169/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.74433084 seconds)
    (170/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.252705471 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.263853577 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.288430145 seconds)
    (173/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.513005091 seconds)
    (174/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.324890343 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.565954296 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.229192151 seconds)
    (177/309) benchmarking ("sort", Int8, false)...
    done (took 4.283077502 seconds)
    (178/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.216174212 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.685942974 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.218123119 seconds)
    (181/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.233129989 seconds)
    (182/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.053380512 seconds)
    (183/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.824467849 seconds)
    (184/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.508107502 seconds)
    (185/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.635093743 seconds)
    (186/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.216093775 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.255005251 seconds)
    (188/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.569976552 seconds)
    (189/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.225799043 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.257714536 seconds)
    (191/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.292712727 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.244804862 seconds)
    (193/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.201290761 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.286904978 seconds)
    (195/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.497854312 seconds)
    (196/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.32154475 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.613662855 seconds)
    (198/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.213824817 seconds)
    (199/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.217115103 seconds)
    (200/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.992037605 seconds)
    (201/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.638259614 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.274907203 seconds)
    (203/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.2173472 seconds)
    (204/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.411096329 seconds)
    (205/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.558952696 seconds)
    (206/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.348161447 seconds)
    (207/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.046928866 seconds)
    (208/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.53772849 seconds)
    (209/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.811657885 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.202684537 seconds)
    (211/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.003108331 seconds)
    (212/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.252562701 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.43943709 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.848371843 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.217966216 seconds)
    (216/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.204681506 seconds)
    (217/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.982512772 seconds)
    (218/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.779810584 seconds)
    (219/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.217607479 seconds)
    (220/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.284488836 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.240061899 seconds)
    (222/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.315226936 seconds)
    (223/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.302137664 seconds)
    (224/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.214235207 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.259534789 seconds)
    (226/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.658947471 seconds)
    (227/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.3937391 seconds)
    (228/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.246059145 seconds)
    (229/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.429361478 seconds)
    (230/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.216219399 seconds)
    (231/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.345018082 seconds)
    (232/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.202829456 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.21914562 seconds)
    (234/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.005789573 seconds)
    (235/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.429031519 seconds)
    (236/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.847507703 seconds)
    (237/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.246517384 seconds)
    (238/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.500309043 seconds)
    (239/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.100193802 seconds)
    (240/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.304826009 seconds)
    (241/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.576783622 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.632157735 seconds)
    (243/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.231401817 seconds)
    (244/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.259960868 seconds)
    (245/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.213007501 seconds)
    (246/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.263946527 seconds)
    (247/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.82297453 seconds)
    (248/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.720612664 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.236528592 seconds)
    (250/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.643768864 seconds)
    (251/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.438049121 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.439815328 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.071594762 seconds)
    (254/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.589066913 seconds)
    (255/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.318016029 seconds)
    (256/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.605618568 seconds)
    (257/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.220628817 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.883676667 seconds)
    (259/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.471700669 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.259194669 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.292036078 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.358541393 seconds)
    (263/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.613232213 seconds)
    (264/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.622731234 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.60170533 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.32578736 seconds)
    (267/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.103383106 seconds)
    (268/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.3723906 seconds)
    (269/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.714355408 seconds)
    (270/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.682013085 seconds)
    (271/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.246072155 seconds)
    (272/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.227472717 seconds)
    (273/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.878815315 seconds)
    (274/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.206852718 seconds)
    (275/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.296238624 seconds)
    (276/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.210472248 seconds)
    (277/309) benchmarking ("sort", Float32, false)...
    done (took 5.229117968 seconds)
    (278/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.249418748 seconds)
    (279/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.757438527 seconds)
    (280/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.97759199 seconds)
    (281/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.220527039 seconds)
    (282/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.799020272 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.304810517 seconds)
    (284/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.205360095 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.318884471 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.220766883 seconds)
    (287/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.219624505 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.368459069 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.862198075 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.005762392 seconds)
    (291/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.683260118 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.347961466 seconds)
    (293/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.705856584 seconds)
    (294/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.578021222 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.264039731 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.204720926 seconds)
    (297/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.022835746 seconds)
    (298/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.839128078 seconds)
    (299/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.938246773 seconds)
    (300/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.318494719 seconds)
    (301/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.822497063 seconds)
    (302/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.04914702 seconds)
    (303/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.24858964 seconds)
    (304/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.802747338 seconds)
    (305/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.460213824 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.243506655 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.323370383 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.344699744 seconds)
    (309/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.831376517 seconds)
  done (took 884.318437793 seconds)
done (took 885.467357301 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.253611586 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.248595187 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.232113938 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.25390341 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.345337122 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.264487628 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.243347328 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.235184779 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.279883258 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.280898361 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.230574419 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.263762437 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.232871173 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.23248129 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.232424224 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.246274475 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.252154564 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.233865594 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.250482987 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.244064888 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.250454925 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.232017018 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.282716813 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.266181253 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.237291392 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.236800881 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.237394079 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.253618157 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.346194719 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.23778386 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.237421311 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.244857905 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.252079994 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.231398614 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.2280736 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.253301397 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.245387075 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.243394165 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.237128108 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.265695833 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.647918538 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.236111699 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.237951993 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.236651307 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.235451055 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.238423797 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.23502923 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.243686536 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.246334958 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.248363255 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.63642093 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.248621985 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.237798105 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.235785808 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.246392632 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.234731448 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.23909868 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.250789482 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.254955045 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.251417903 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.241473852 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.241743782 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.237614926 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.251764625 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.243204001 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.674462261 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.231147791 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.241171529 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.650015862 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.241385787 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.673232447 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.243739532 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.237903 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.250375991 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.268711156 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.257466611 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.232524749 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.235161823 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.244259501 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.235508395 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.248002941 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.249169071 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.241910574 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.23760747 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.250583749 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.268259495 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.247178609 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.237927621 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.246914547 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.257674634 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.245717469 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.248379792 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.241225408 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.233422797 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.246737312 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.241275283 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.239976584 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.240749391 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.242495217 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.248387569 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.650566368 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.25368307 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.234416453 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.235398544 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.236798615 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.25015996 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.652419609 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.239125739 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.260389452 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.286113157 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.239949805 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.247589319 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.241788692 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.254744919 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.247463336 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.24146892 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.232966317 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.246792238 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.645235095 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.252691141 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.240096353 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.235753651 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.254746804 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.241128748 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.235823233 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.264557069 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.240419665 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.253419603 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.358852326 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.250826607 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.271239579 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.237396708 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.243163656 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.267447209 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.254997188 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.271063416 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.242453144 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.25484407 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.255006029 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.236770907 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.250091631 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.25056141 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.240454421 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.246175049 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.234569536 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.268221034 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.252181391 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.25343015 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.261067979 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.360613594 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.2378342 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.251019725 seconds)
done (took 210.301917588 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.298091004 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.2292899 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.319895327 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.236908954 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.336551128 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.335723652 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.235880215 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.234587084 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.235159275 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.61398104 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.234797743 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.234520905 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.23426124 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.235613247 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.320620324 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.23830138 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.235320166 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.57863747 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.239838164 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.307374648 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.232354095 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.235831313 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.23764599 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.619124023 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.234523608 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.234299733 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.307147945 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.237980948 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.584309021 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.238521094 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.235134701 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.583882386 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.326715328 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.255060881 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.248522539 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.245305898 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.336282156 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.255174186 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.319535795 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.320329798 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.324225284 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.279266902 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.23123723 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.230426259 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.239132717 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.239698418 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.236286725 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.265213083 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.231396232 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.237221134 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.579425345 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.249057817 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.237871413 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.237228473 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.237316766 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.269917974 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.23897584 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.239779457 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.328342547 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.240264626 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.300201046 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.620328154 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.617989538 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.239737683 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.238133984 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.237729612 seconds)
  done (took 142.020827322 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.30383865 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.311946408 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.350245742 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.239629525 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.288878088 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.35580067 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.240666908 seconds)
  done (took 10.263257989 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.246634707 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.241470379 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.289440796 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.289543898 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.239916619 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.387000785 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.240880468 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.252088091 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.237647669 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.292987867 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.242332326 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.241465657 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.247526889 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.239095556 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.288763987 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.251921232 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.354892209 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.242221543 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.241649789 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.393313213 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.239650572 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.247114824 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.298231191 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.252040436 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.242323407 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.247954362 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.809889786 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.241916819 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.240885691 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.241321624 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.238896919 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.280082296 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.241768232 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.238313573 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.239638773 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.357728185 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.241619378 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.240155213 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.24274979 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.236607973 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.241966134 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.243904012 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.243770211 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.240494157 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.244107505 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.264687865 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.243189422 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.244051011 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.243870687 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.24285305 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.29231559 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.243064713 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.240144618 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.241088127 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.297082101 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.251066109 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.242814036 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.24116155 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.244267392 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.241463547 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.393961987 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.29017247 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.243201506 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.290791351 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.243463587 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.245389944 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.243182349 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.244037913 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.296906534 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.24403283 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.293177632 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.241073827 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.39787225 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.266490051 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.245915493 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.245748768 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.246764525 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.243930174 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.239562619 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.25098549 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.241749783 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.244553824 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.250258737 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.241527944 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.241691694 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.347218717 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.35244078 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.242555123 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.256296815 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.251207372 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.242940318 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.296875151 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.244654538 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.241695695 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.296371988 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.359461372 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.301905277 seconds)
  done (took 144.303257208 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.248458367 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.252571362 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.246237249 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.260796512 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.245743462 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.246374781 seconds)
  done (took 8.677137514 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.247751753 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.246314399 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.245442648 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.245941277 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.245801118 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.246008567 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.245658176 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.246667226 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.24921527 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.246871032 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.24585471 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.248069735 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.247077202 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.246425873 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.246460351 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.246566593 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.246464968 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.243897823 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.246287476 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.245895774 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.351223231 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.247170747 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.24605718 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.247506184 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.251058994 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.246861712 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.253440127 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.247455932 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.248349196 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.255374146 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.249198409 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.248234181 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.24805615 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.252635019 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.251496974 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.249856211 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.251231258 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.2490084 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.245286805 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.248182215 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.250948114 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.247935036 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.248004264 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.249756656 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.250311578 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.25149126 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.254825253 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.254968174 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.248648295 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.250908444 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.251113246 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.248941415 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.248470923 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.251161021 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.249697226 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.251683385 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.255212089 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.247931096 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.247994332 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.24898325 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.250178671 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.249282243 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.250130656 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.2529991 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.246656863 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.251126274 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.250000478 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.251883889 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.24781748 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.249060241 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.250885083 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.247039554 seconds)
  done (took 92.202339311 seconds)
done (took 398.635972411 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.661604448 seconds)
  done (took 7.841532287 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.250570897 seconds)
  done (took 7.431865396 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.717980292 seconds)
  done (took 21.903591459 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.295449442 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.275246785 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.248212367 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.244877573 seconds)
  done (took 26.246003442 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.737200409 seconds)
  done (took 7.91922094 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.241071268 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.242724518 seconds)
  done (took 13.666217934 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.66475516 seconds)
  done (took 7.84676055 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.729899161 seconds)
  done (took 7.916326248 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.268294473 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.273640526 seconds)
  done (took 13.970727217 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.227114869 seconds)
  done (took 7.4081254 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.124510664 seconds)
  done (took 8.306326131 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.241293855 seconds)
  done (took 7.423199279 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.294050853 seconds)
  done (took 7.476056829 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.291589122 seconds)
  done (took 9.473039188 seconds)
done (took 156.010650055 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.242002402 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.242594396 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.242187591 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.243648209 seconds)
  done (took 26.152119626 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.283854105 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.284011007 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.286144408 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.294259944 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.285980432 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.285146032 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.276777842 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.276747986 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.295496973 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.286645741 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.286086797 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.287244926 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.284966035 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.277145703 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.286815476 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.286723141 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.295418212 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.286457835 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.277468499 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.287386529 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.252962603 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.295029947 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.28786621 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.252696021 seconds)
  done (took 31.981950477 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.446554839 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.321710883 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.405709384 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.304955113 seconds)
  done (took 6.661766759 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.30412111 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.304565808 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.318133908 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.357483848 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.382974742 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.315932856 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.277061302 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.274348089 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.261100164 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.306692954 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.381897348 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.323640459 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.39095528 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.252124267 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.439117974 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.252017901 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.252713865 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.303511062 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.356704684 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.395458131 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.251820913 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.303216313 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.308073077 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.321609252 seconds)
  done (took 32.819419195 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.251190756 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.260205724 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.258494306 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.252309991 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.253155074 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.251957409 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.257489423 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.253453414 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.274640023 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.254381647 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.25209313 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.251391915 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.251877383 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.253404311 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.251519266 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.26551169 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.265192093 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.252087255 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.25632752 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.258082721 seconds)
  done (took 26.310217547 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.245354415 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.100431998 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.597748004 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.50260885 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.246111157 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.245657284 seconds)
  done (took 27.123325006 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.323161429 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.454553614 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.253291037 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.610002314 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.686155524 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.254374661 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.254272827 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.493219374 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.796346167 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.797648306 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.310160303 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.319189862 seconds)
  done (took 18.738873067 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.248520919 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.247587894 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.256615048 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.26460827 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.308644057 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.257229388 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.261002056 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.248122415 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.309918451 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.312594159 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.25935343 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.309654196 seconds)
  done (took 36.47047407 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.335529414 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.298556523 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.240777485 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.106299772 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.976820815 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.46168701 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.137439386 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.676069643 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.256984649 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.522091516 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.261815704 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.339036261 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.506884542 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.26039443 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.251059135 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.203447756 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.479209592 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.750312787 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.25214799 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.213282467 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27775632 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.256589008 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.389336634 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.278907199 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.461680505 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.232791063 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.511042891 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.027017926 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538630172 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.263364664 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.261579968 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.250620206 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.524911039 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919325238 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.34771207 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.261955406 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.089905115 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.800886945 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.250502712 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.307432053 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.259081434 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.253482807 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.261572954 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.25188366 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.187070114 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.252884058 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.685273381 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.260250301 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.964095654 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.253992452 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.263945027 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.346287653 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.255749239 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.825794348 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325999093 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.258740088 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.25016304 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.258989791 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.826923197 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.220719302 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.259545359 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.18882513 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.712625619 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.242034936 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864754708 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.354283229 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.25659965 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.256795854 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.187687207 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.320504638 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.272178905 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390969515 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.278250391 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.914467736 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.972681117 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.268053138 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.183833262 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.81828284 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.254279407 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.206313066 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.483105648 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.032979641 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.192613071 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.199223196 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.186192009 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953190516 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.262440325 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.707707303 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.26290058 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.675904534 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.267138926 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.272508433 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.277014276 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.479007098 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.138791589 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.254973317 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.20680704 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385762013 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.275441828 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.680752449 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.192227795 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.259278236 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.512287605 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.466865234 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.254257525 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.22743949 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.453926872 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.264024889 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.270935624 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.25528707 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.281998032 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.829294945 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.266995778 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.697318459 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.271492819 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.031984861 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995081098 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.265562694 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.356860507 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.261120952 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.500567196 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.010864654 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.142807933 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.323365973 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.258544873 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.25633145 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.335099419 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.107230904 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.138792423 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.257346861 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.255203638 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.268389926 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.255557208 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.218013287 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.267006555 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.266986271 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.037170236 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.480705276 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.257304118 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.547769699 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.191565913 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394442245 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.273264376 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.480381484 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.514157606 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.257887346 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.518508869 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.263254404 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.272548299 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.27006148 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.276277236 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.354378326 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.280470681 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.267332775 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.517127884 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.261597922 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.261592252 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.35679845 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.036901109 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.260376948 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.263170326 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.145130084 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.838973999 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.229815856 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.266971662 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.152130139 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.272161088 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.324871468 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.264062044 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.266975921 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.103247648 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.189275147 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.265750996 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.255844462 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.482199676 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.269707617 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.258662413 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.338271114 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.452491903 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.847190496 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.271213686 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.191914198 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.968135828 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.950363419 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.259003108 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.453596983 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.258291747 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.266966408 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.269424298 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.90246571 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.841753213 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.261682438 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.275357893 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.266895275 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.270001404 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.265088603 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.258450214 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.075858164 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.792859907 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.263399956 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.272127895 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402436762 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.272679039 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.193644097 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.776315702 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.265349916 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.259990458 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.039343329 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294280543 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.277204257 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.745612821 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.522674497 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.083372414 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.272499804 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.443575589 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.29392797 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.264278591 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.254228444 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289334955 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.272302543 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.270701936 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.270567528 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.330525809 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.71196053 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.830233999 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989411342 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823611256 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.160382135 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.273602184 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.144786347 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.695743603 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.199137454 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.920866832 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.451028982 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.691606268 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.220659403 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.459127727 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.53016238 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.034614622 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.271064797 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.490878827 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.154575937 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.264334918 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.274943314 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.473864603 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296975182 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.269944438 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.193826858 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.546579429 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.488777411 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.264322244 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.341427005 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.692648327 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.262946424 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.040875645 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.260762934 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.652390482 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435012297 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.813391446 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.65706882 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.275357185 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.275359141 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.74043052 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.273369675 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.79248683 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881550451 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.26548043 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.46201888 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.20712512 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.275264773 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.274781903 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.263603303 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.581076551 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.261964684 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.519596391 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.275577983 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.198430897 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.265679308 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793099883 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.118884413 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.270395858 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.262859752 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008292687 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.265459907 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569171795 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.279424944 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.06353441 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.268596667 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.197247766 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.197808837 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.956217547 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.265293113 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.235184808 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774135392 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.677590567 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.329623273 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.284763908 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129216784 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.522017279 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.278749814 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.852653604 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.491156838 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.188144719 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289537553 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.365133936 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.267659477 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.250222068 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.145693611 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.499924139 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.154586926 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.490674252 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.282250764 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.170062417 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.264329859 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.481050763 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.149229052 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.270067426 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512520714 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.976297562 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.271561909 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002559164 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.291444874 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.27827254 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.283998476 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.72751127 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.27582028 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.336424099 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.27753415 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.277193263 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.278902911 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438927083 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.28330919 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.269333925 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.280272419 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.360549439 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.750148037 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.070320146 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.038579216 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.865769617 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008981834 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.856618102 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.279400366 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.267075007 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.267395161 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.201753162 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415241575 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.79554645 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.541364707 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387428627 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.813863799 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.292185825 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.267601641 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.277748741 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.481907605 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.542309676 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.141973429 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281598322 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.932869036 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.149421004 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.278530234 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.480672094 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782034303 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.84375191 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393751999 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.282992208 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.70093932 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.545141167 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.360523633 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.267122978 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.862702654 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.287806791 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.685711978 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.275306899 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281923514 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415508116 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.278832663 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94087867 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.279082021 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.424533472 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.040639831 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.307538735 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.528063531 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.758047328 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.280850253 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.862920272 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.98155858 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.536267642 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.339490239 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.280356515 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.391501996 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414512112 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.273352059 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.15293742 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.269710111 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116221417 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.979731898 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.279949484 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.863118398 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.534399604 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.268565168 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.273199242 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.291876898 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.280958819 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.494520491 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983119116 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.495258787 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.28005106 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.272870416 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.844297085 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.862043705 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.283165893 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.205005458 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.274798297 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51620376 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.507313273 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.294781442 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.723020217 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.982616505 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.843025063 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.245994971 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293064105 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.270401366 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.979366943 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862031699 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.082911284 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783699085 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.932821204 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.272358807 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.562059467 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.276748685 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.271642258 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.550194882 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.276102174 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.28401533 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.285581421 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.861937124 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.051143204 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.292934244 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.330609445 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.207577272 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.499999301 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.95401601 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211366947 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.279577495 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.455258089 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.276465861 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391979299 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.284318384 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.276582517 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.27862387 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.034353402 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.561925261 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.278866532 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.268473408 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.270452374 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.284405827 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.281600592 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.502877828 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282856081 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.946942788 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.623650744 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.531359175 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.281927397 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.25879496 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.27846681 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.273410704 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.997717349 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.251640905 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.901836559 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849551389 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.285474605 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.285813165 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.277977523 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.491371959 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.4855969 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.274191171 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.286044449 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.273814558 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.290983208 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.17842325 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.046949113 seconds)
  done (took 1552.910898105 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.32244282 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.319831015 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.280575164 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.322752369 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.296206883 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.329528988 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.377334575 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.358246845 seconds)
  done (took 51.818097382 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.27763447 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.427292595 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.304612293 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.28493853 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.283646689 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.275027248 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.729121924 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.289247159 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.284042576 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.28426939 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.282736598 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.274239181 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.926270406 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.283113775 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.277513261 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.273744124 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.28372081 seconds)
  done (took 64.260973733 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.283612061 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.336571968 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.384725808 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.278599861 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.297486695 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.274274166 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.244204558 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.288395333 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.298943955 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.627153579 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.931124196 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.305249156 seconds)
  done (took 83.763358026 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.282785718 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.283327482 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.284354874 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.283654638 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.283817425 seconds)
  done (took 7.630814039 seconds)
done (took 1967.826214528 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.521665782 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.970093196 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.898821976 seconds)
  done (took 5.082165997 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.42409411 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.472960142 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.637095018 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.61224822 seconds)
  done (took 7.359985668 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.561534514 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.65485952 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.469018749 seconds)
  done (took 5.899545265 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.723965982 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.275629179 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.39874495 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.27778674 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.280131947 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.277563594 seconds)
  done (took 20.049976122 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.280467074 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.284472846 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.280708359 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.284857299 seconds)
  done (took 6.347656806 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.260617105 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.984127442 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.263209459 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.280274366 seconds)
  done (took 18.001039051 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.026891612 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.041377162 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.025758472 seconds)
  done (took 7.308304728 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.290979569 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.120574814 seconds)
  done (took 9.625841531 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.583616123 seconds)
  done (took 2.798905505 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.414112542 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.608498794 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.356563397 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.286852768 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.352316465 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.189391202 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.950978837 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.517994477 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.281377639 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.493960385 seconds)
  done (took 27.66849661 seconds)
done (took 123.276867188 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.14416174 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.300611443 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.481940482 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.115176435 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.510354168 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.483325645 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.568938768 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.087965887 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.629261668 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.616380747 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.119177136 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.509315751 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.512015963 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.30006351 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.512410578 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.305822495 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.509702761 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.173110283 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.799367643 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.005412089 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.570066969 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.754566667 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.948571185 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.773205036 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.508351197 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.434915567 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.333369397 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.303932293 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.979494541 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.350753649 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.435193896 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.180278528 seconds)
  done (took 188.473179767 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.279826018 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.286994412 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.279950633 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.279568038 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.290808622 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.279015803 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.280877447 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.279307414 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.300332746 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.284939494 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.282512383 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.283820426 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.290409414 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.279398859 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.281638795 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.297733464 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.284761491 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.278942935 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.284538153 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.279568826 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.281038539 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.298497594 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.281747507 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.279198332 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.290733114 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.280551659 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.280254215 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.280225951 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.279593077 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.294963388 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.279988313 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.279929677 seconds)
  done (took 202.309238345 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.279418737 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.288526742 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.279688774 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.281302943 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.300532512 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.281171175 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.293825445 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.283285323 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.280262096 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.279843917 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.2950971 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.284169606 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.286532266 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.282430638 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.281127237 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.294830225 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.292037204 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.292938987 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.280209983 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.281036211 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.282908052 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.300619685 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.281192549 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.29419626 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.291181475 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.281777386 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.285498144 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.280277841 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.282204447 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.29693871 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.281631356 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.291813335 seconds)
  done (took 202.387454285 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.478959662 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.290153014 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.290467153 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.225053987 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.291218314 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.290007018 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.286247514 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.488560886 seconds)
  done (took 13.860782799 seconds)
done (took 608.246665626 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.597861366 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.314421702 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.484810658 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.315021767 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.076151071 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.310752113 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.311158307 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.480746734 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.20480623 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.483363658 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.530857824 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.309771902 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.678924042 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.310795755 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.561975339 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.409558671 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.18456104 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.300748395 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.629602458 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.822030022 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.569154226 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.77948055 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.479719825 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.213363437 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.678203665 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.77996261 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.986463142 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.18359594 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.311789546 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.631342791 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.942786413 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.233065099 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.369356599 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.351287232 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.405707248 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.387477098 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.213811634 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.348846276 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.490256846 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.546265628 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.841291232 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.029615286 seconds)
  done (took 89.312257839 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.279548346 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.279008719 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.279285912 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.279874405 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.280732898 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.280167503 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.278111364 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.279999808 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.279987209 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.279515926 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.279789459 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.281490464 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.27874157 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.281976141 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.280506298 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.28017629 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.279807668 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.282198994 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.279962358 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.281037966 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.280857503 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.280697402 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.280385899 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.28017011 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.280580127 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.280581996 seconds)
  done (took 34.509991919 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.294294132 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.550785262 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.707561743 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.299489676 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.293407239 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.29746027 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.371865821 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.29622401 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.296342067 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.297395789 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.449865223 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.298185295 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.330655878 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.732790325 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.29762088 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.305015668 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.296126343 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.295848025 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.558594865 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.305486505 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.393817578 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.297845717 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.374449347 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.305738551 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.317057558 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.29801099 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.30092498 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.812942865 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.297659862 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.453281094 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.084159226 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.372241461 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.765382445 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.720180085 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.086656102 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.300670162 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.296859529 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.456445694 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.298205813 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.296956396 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.373686744 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.298505694 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.719523679 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.918520383 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.314143764 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.297689613 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.834617903 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.456565145 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.545398024 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.305634009 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.74227166 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.30049367 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.30101347 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.299296934 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.545334821 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.304682637 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.297280711 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.831464784 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.317638462 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.374698308 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.299369013 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.298496654 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.564498606 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.299444587 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.553081895 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.299021471 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.30680138 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.299059484 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.720228637 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.300979152 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.939188119 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.314457653 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.299363958 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.454369803 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.553971843 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.86581578 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.302821072 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.569652409 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.780442492 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.37386588 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.302687954 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.804213775 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.377654866 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.302450758 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.302649189 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.301932473 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.299187988 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.349420504 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.374408429 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.86792779 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.932156924 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.846454158 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.393039277 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.312723912 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.301751016 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.831735872 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.3164044 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.300509676 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.715267203 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.941560238 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.315678429 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.307980334 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.925761974 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.317316167 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.378045092 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.305874078 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.729545169 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.302448864 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.350576805 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.302328777 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.30821008 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.30406844 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.377334916 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.304946161 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.301876809 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.914308633 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.476054913 seconds)
  done (took 171.503675175 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.293098463 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.294723982 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.295563553 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.312013554 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.293582401 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.29905842 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.294761595 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.294484491 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.300936453 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.294605583 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.296225629 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.29519447 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.296448317 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.296467963 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.304753763 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.302747809 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.90937139 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.29502687 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.295425747 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.294986746 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.094949989 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.298131462 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.296093583 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.294973442 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.296187503 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.294895001 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.296251648 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.298214599 seconds)
  done (took 150.960658434 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.301603388 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.867951579 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.303169153 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.43423899 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.322648061 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.301534254 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.43246541 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.358827584 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.303771064 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.300150491 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.300397144 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.605768293 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.304101312 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.819029871 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.494381014 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.432641489 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.819779716 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.304916276 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.301058835 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.302320622 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.437192272 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.310504114 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.608374041 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.872361533 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.305810277 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.872408927 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.292324754 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.304239399 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.302826494 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.876266825 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.302724462 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.608968531 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.379747212 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.362326195 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.876118583 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.822705119 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.823349389 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.449418834 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.303241137 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.303266189 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.302181411 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.29296202 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.876703739 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.305819139 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.304789772 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.86982162 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.321584365 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.305106583 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.313541787 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.302862968 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.361843118 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.364826607 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.613706063 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.882820685 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.380172043 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.325688622 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.434963977 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.695945425 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.306969048 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.823328791 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.292283814 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.881221739 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.30838567 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.29252327 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.306171161 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.311148194 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.454320511 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.436219841 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.824087826 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.306832816 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.825644749 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.455267867 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.304506748 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.303256453 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.308109994 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.879830347 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.825584951 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.455595218 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.440011699 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.500452461 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.293792834 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.303985348 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.295812044 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.384552812 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.307302353 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.881956743 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.827027543 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.309118391 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.308027909 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.308272941 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.307847075 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.484344371 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.881629336 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.382858375 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.817250913 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.627440896 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.614366089 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.309668128 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.365598179 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.307608338 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.615296939 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.309214985 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.363302296 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.761469041 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.615600485 seconds)
  done (took 156.341686318 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.556450137 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.478485658 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.396793218 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.420543462 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.887285893 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.866407513 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.611017535 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.427120106 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.413574875 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.550534348 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.463414448 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.401953013 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.474553528 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.388706942 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.049225441 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.373137841 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.401205503 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.435274907 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.401626213 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.324439349 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.938893124 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.603275588 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.47658819 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.239775432 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.400203379 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.054719506 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.851721902 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.831489627 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.477762225 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.585728399 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.832524516 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.417684794 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.276812781 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.964849663 seconds)
  done (took 63.512431641 seconds)
done (took 667.361123127 seconds)
SAVING RESULT...
DONE!
