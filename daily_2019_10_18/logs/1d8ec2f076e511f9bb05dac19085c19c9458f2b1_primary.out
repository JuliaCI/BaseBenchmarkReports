cset: moving following pidspec: 31162
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.356042754 seconds)
loading group "string"... done (took 0.556773422 seconds)
loading group "linalg"... done (took 7.116540006 seconds)
loading group "parallel"... done (took 0.16610208 seconds)
loading group "find"... done (took 1.104878513 seconds)
loading group "tuple"... done (took 1.859118336 seconds)
loading group "dates"... done (took 1.207149854 seconds)
loading group "micro"... done (took 0.215882181 seconds)
loading group "io"... done (took 0.917232051 seconds)
loading group "scalar"... done (took 36.710247939 seconds)
loading group "sparse"... done (took 11.417911535 seconds)
loading group "broadcast"... done (took 0.970793501 seconds)
loading group "union"... done (took 12.600258307 seconds)
loading group "simd"... done (took 4.519355789 seconds)
loading group "random"... done (took 9.082547344 seconds)
loading group "problem"... done (took 1.899758774 seconds)
loading group "array"... done (took 21.336661918 seconds)
loading group "misc"... done (took 1.76350528 seconds)
loading group "sort"... done (took 3.48357777 seconds)
loading group "collection"... done (took 18.043816044 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.499728431 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127421937 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.117258598 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.12174821 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.149134172 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117562944 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125388271 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083927958 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.808319856 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.156120819 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.121726182 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.424419252 seconds)
done (took 5.144823674 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174287689 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085907713 seconds)
    (2/2) benchmarking "String"...
    done (took 0.0839045 seconds)
  done (took 1.299229336 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066754979 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.123949776 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068325981 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067948601 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068842876 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06771942 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067968083 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068065386 seconds)
  done (took 1.66306655 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07557636 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.0706948 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.070721921 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069479015 seconds)
  done (took 1.408837982 seconds)
done (took 5.753836527 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.778679763 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.205848403 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183804618 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.397643231 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.132501643 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.157929334 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.643518326 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.317947743 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183848157 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.084121705 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107781703 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.321430209 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.109933615 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.626923414 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073722019 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.09084827 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139914764 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.42836157 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067395217 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081995641 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092390697 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128191903 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085377034 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074457559 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.14350721 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067916397 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.134154318 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.08090058 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067089797 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.208163341 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.174480892 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.64590155 seconds)
  done (took 10.206346128 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099746791 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100242531 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070520066 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139437095 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100010021 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072338898 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073456435 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069398692 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089799245 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.131884435 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091769505 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.104577999 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068172872 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071333691 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.087137953 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.207388356 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082351038 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083216922 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072257914 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077422565 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122332488 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080809707 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080762726 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080088716 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130673099 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.178952088 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095972472 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098796365 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069553365 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082925385 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116849271 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126357752 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067933202 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067955891 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.127709207 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096464448 seconds)
  done (took 4.672223696 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.299549166 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.14496842 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093540343 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.137052794 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06694952 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110850656 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067565897 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083076294 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.205941099 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.297161288 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.583276014 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11250822 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104209958 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067838499 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068835087 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067298571 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.35853364 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.10992008 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104363427 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080560083 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07141197 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071331073 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.35122113 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070015415 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065699947 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06985539 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059782663 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12746598 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069867583 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.932709343 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.129930673 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069150673 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103084285 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.166189917 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088347524 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.273335315 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068423276 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066531482 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.155220744 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070802015 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068037879 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086383282 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106863177 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.116927022 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067065869 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.112606258 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.165234895 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069569375 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066819703 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082009863 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.991338501 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154640003 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077544173 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067128546 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.248965718 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.089125155 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072254596 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066896567 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.185983791 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13534443 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068026043 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068460908 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070257948 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071838242 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.35485723 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068016079 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.726043366 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070626919 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077920548 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071343898 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069463867 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065262176 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066484455 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078093535 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074783387 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087783442 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068559341 seconds)
    (77/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065947517 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077983063 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068053987 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067954441 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06842154 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087750066 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.362213067 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.069004685 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07028314 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06641609 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.088421779 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09864631 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068433589 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067100598 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.205435802 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070008988 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067838334 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106754882 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067846431 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084796667 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069603655 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113233011 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067278323 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.093519612 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.072891969 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098915605 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07016869 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099152594 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081898637 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068598937 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.402446352 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065372252 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065273735 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068603036 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065268968 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067675592 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066837332 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079684117 seconds)
  done (took 21.097166812 seconds)
done (took 38.403775925 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.242711218 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079051546 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079557642 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07994825 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079663988 seconds)
  done (took 1.785378136 seconds)
done (took 2.987641308 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.123618362 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10194771 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066700345 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098122675 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066235059 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103242514 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102392237 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082919182 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099210175 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064146098 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09849275 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066032909 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066579031 seconds)
  done (took 2.360253404 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085259146 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085670981 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071646015 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085583879 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065602338 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084185977 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082810402 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090962708 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082825446 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073471907 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06506987 seconds)
  done (took 2.069185416 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084515933 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086105123 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071983981 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083315931 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068955354 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08345056 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083004417 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087941433 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083110052 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075562313 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065816422 seconds)
  done (took 2.065087396 seconds)
done (took 7.682408132 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079181396 seconds)
  done (took 1.264036474 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.597500799 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.044867275 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081096011 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112413014 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183105771 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.120315394 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.277838901 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.088871852 seconds)
  done (took 8.879780005 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.104650855 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073956314 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071971782 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071080908 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070588227 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072993195 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071243695 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070007833 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071691007 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072341996 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07294793 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073507125 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071386541 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073942817 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070644242 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073522231 seconds)
  done (took 2.447335757 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094234229 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092892519 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07551416 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076768639 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073779055 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074158738 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076472212 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075631437 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07279206 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073880766 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076690728 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074866534 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071541248 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064956176 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074000468 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075661293 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070612449 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07432524 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075293701 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075266512 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074416029 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064266789 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071277089 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073863161 seconds)
  done (took 3.103518361 seconds)
done (took 16.890563928 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.117489687 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072389438 seconds)
  done (took 1.378156677 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084244949 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084382064 seconds)
  done (took 1.362774715 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086808982 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066066559 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092494457 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079045419 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066151823 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066115013 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089630014 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066211005 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066061591 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066043361 seconds)
  done (took 1.939231899 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069998035 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078907283 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071409877 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081041133 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073897415 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064512647 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073007648 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.0679498 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078656666 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063058287 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072290358 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082794734 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071631603 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084458082 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073105834 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069610384 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.073189302 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069811114 seconds)
  done (took 2.518694618 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068520586 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067872177 seconds)
  done (took 1.340556832 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070947677 seconds)
    (2/7) benchmarking "second"...
    done (took 0.066100688 seconds)
    (3/7) benchmarking "month"...
    done (took 0.069484758 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069137247 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065624893 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064625905 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065896089 seconds)
  done (took 1.670487233 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.393461198 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110304136 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.307287027 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072183979 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.084321853 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.254680923 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066778065 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07193075 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071759564 seconds)
  done (took 2.679261926 seconds)
done (took 14.093662393 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079942055 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085393864 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096666678 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.363194031 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091551264 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065678892 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113232102 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.191464144 seconds)
done (took 2.29677823 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.220952971 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.616843284 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.390855566 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.20308489 seconds)
  done (took 2.41983964 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.330398248 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088410291 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060484747 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06863265 seconds)
  done (took 1.763628955 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06771374 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070612325 seconds)
  done (took 1.350870954 seconds)
done (took 6.973693119 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067658457 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06675917 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.064291707 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067149578 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.064973239 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065408105 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067911805 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067855162 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.068251408 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08711464 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.069994159 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067895316 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067513974 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064904621 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064936045 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067359662 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065358087 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06510265 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06497448 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065534951 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067549899 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064798205 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065128369 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066682521 seconds)
  done (took 2.865297008 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086833403 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068244727 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073779873 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073391829 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072533614 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073301207 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073592397 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.070995586 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.073229088 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069979983 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072270737 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071866 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069403811 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071961225 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070645811 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071678344 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072953671 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068991293 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069477877 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071713359 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073305586 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068352072 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071947177 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072502827 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071911774 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072819759 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069651335 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06782895 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073131714 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071294173 seconds)
  done (took 3.383349275 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072149203 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06531886 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065948796 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072398006 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065730234 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066405511 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065093277 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065712812 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065857873 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065036685 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066991522 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065070593 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065262396 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066216211 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066247938 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068762068 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080797231 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065493903 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065182904 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065605811 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068217686 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065263197 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065522633 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064812266 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065484741 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065097961 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065660203 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06513374 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065971639 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064915265 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.18183634 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068941816 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065055176 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07210753 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06850918 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064513643 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069469233 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064580436 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065609703 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064617993 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064357295 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064767175 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065252472 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071433147 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064783563 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066705502 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065013979 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066516913 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065579608 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067942353 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.06443141 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06527482 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067080129 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065934921 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068552019 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06465208 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065313027 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064353398 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065615243 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064603815 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064054143 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064305124 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067488006 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065562538 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079296143 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071348637 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064541822 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067368842 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065892301 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067357628 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066688637 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078328229 seconds)
  done (took 6.150316094 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093726078 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08927903 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067066044 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066867533 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064305786 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065772618 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06941623 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065830855 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067626659 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071696582 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066068345 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066814764 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066883635 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079420465 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065960434 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067068604 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071721946 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063903844 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065640797 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069035338 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065984009 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068940497 seconds)
  done (took 2.783866161 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.158308472 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071597457 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107457281 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074144388 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069315117 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074640435 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071177441 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07042741 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070468988 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068131023 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068146396 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070842767 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069513709 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069778737 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069867497 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.0697902 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071317498 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069892182 seconds)
  done (took 2.630965466 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07993325 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068294711 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.089353982 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067858777 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067784393 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069825179 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072512264 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076221753 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069996292 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067678306 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.076285941 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070861091 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069940721 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067298594 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069751946 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067941946 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069694089 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067774718 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076219762 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072506299 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07272295 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076115112 seconds)
  done (took 2.824078764 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0823482 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069142331 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084812011 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070980042 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063715357 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066116298 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.072466392 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06785371 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.072648982 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069407251 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067520134 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066017734 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071338574 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067500664 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070931125 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067386932 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069450674 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067675717 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069383906 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063444024 seconds)
  done (took 2.639920681 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089613136 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069545538 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069839007 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077957195 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069076842 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068992871 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077721756 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069138141 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069278851 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089147926 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069057319 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068528365 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0767944 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073998511 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069156335 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076785596 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076603151 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076632926 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068673246 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068729235 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088710115 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069022471 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077081773 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069117721 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068701795 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068698596 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068305683 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07413793 seconds)
  done (took 3.299037418 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068071966 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068269963 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064627949 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065635123 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065178441 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06530254 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065255646 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065437428 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067651112 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064657467 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067237181 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067075095 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067529844 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067666259 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067780478 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067675148 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067674419 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064813109 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065121101 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065101399 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06721336 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067219903 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067289864 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065368369 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065183964 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06762823 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06497454 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064680291 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066823514 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064728967 seconds)
  done (took 3.23389631 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077038063 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075165442 seconds)
  done (took 1.397932924 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06552745 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08229244 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.065590718 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071158493 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071615369 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067969047 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075536829 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071525304 seconds)
  done (took 1.811170386 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083773819 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080071089 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069836755 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.083856923 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078497045 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084206133 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135339704 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.06915492 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074704494 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064928214 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079827127 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066003259 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07203203 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0662805 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071639443 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072064276 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063878423 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072142762 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068467885 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064722861 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067078832 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07452518 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068281035 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061646207 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067575379 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087979894 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077214445 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065670295 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069244082 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073934778 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071525417 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061076565 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067781297 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068373298 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065457679 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077381427 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083256906 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071312546 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076355991 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068376715 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079893588 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062941692 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07227095 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073752452 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077910248 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067903127 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068635309 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062766709 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065635271 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070096412 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063380932 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067969521 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062506083 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077122851 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071046813 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078419708 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.066159747 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069163777 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070500514 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070941974 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074676086 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.06966036 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070143537 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067868761 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077252222 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072126379 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077700599 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062557173 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061723772 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065746447 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078087921 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091094163 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073887173 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068685577 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068994729 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065321544 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07101573 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068814058 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073763009 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074083177 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067991582 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073870508 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075496541 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067990587 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070074321 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076913055 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066509533 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.07155554 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06576243 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08515298 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067285635 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066444504 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06601626 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078285848 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070092708 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067714949 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065486365 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07306866 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059960018 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067033182 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0658251 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065883278 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074982296 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069295961 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069635051 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073207672 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072283551 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066726634 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070236095 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06370264 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067462422 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065922445 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074245276 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061071662 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070755971 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068735418 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067873871 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.202536391 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065292418 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067102914 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074907473 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072920292 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065627877 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.0635724 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069764686 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066982482 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070213908 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075038933 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065393258 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061215857 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061612316 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.07020466 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066552468 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070141564 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071634037 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070625187 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061927228 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066878245 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074398867 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077857425 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068598703 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070045851 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07431364 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06966448 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06810353 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075616866 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070877004 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06770259 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074766277 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069779928 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064108495 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072852586 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07142031 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067329001 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073456739 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07249185 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070579797 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069543528 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067242892 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076845648 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069784029 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067307012 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068544446 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067209568 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079519695 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070594772 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062863407 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063605318 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075558938 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064116119 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066635708 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066502637 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.0687252 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067387408 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065518834 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067746294 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070426657 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078427076 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070766097 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067058852 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073054274 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080271248 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067055532 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070770552 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067873985 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069176683 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068867573 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077346109 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073168848 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072020737 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070696516 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064699035 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073398255 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07515136 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067157725 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065466149 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066511071 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072044507 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073838431 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072144404 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069351433 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066047995 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068601365 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070906362 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070789204 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067420169 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066807452 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074900544 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06618113 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.076193209 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06908967 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.07812628 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071320595 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063139075 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071027799 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065877837 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074511265 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063099054 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065786371 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067327439 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068815162 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065981483 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069254392 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061076007 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073383591 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073999069 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067076661 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066533871 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.067015757 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073791442 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068611691 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0708184 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070431866 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071813242 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075294686 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066038489 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070141625 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.206238735 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066830468 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061093374 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072129862 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065430015 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066294617 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066044144 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064788066 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069905767 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075873648 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07388763 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060824618 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069714601 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065533095 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066448025 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06264827 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071682768 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070298445 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068530455 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073858899 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069434489 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069517153 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072655162 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068421028 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070089968 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.070161538 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071692444 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069970144 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070583602 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068219007 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.072078789 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067860961 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06670458 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070909939 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068545421 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070069335 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074838564 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068548034 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069089207 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.07115272 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069168052 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069688329 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069086939 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068037038 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071537808 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068784292 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067815102 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069070352 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062136556 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073384206 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066157177 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074347958 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067676153 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063318855 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074512776 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069172585 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.0725184 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067421329 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067052299 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067962523 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065827886 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.06935671 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073804431 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064433675 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077348148 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074624826 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067160286 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069426295 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066699497 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068602999 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066417127 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068100452 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067623124 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067318466 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06667349 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070972704 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068327645 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066331167 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06762274 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067151643 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066135078 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068463811 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062586253 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066539439 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066101051 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067325482 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077801401 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068503606 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067307779 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066829936 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069145178 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067449492 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064862887 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076566684 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078676002 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068791159 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075792494 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067619407 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069329536 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07876539 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062503254 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066019083 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065514842 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066325514 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075147545 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068540459 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077483034 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067302501 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066813787 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064787819 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067728444 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06596647 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061498341 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065050973 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070456683 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066096239 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065893288 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.067358228 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069417201 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067754698 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077088745 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066479263 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067901292 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066992587 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.19749 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066948316 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066898487 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070534412 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068496774 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06589932 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06601716 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068325987 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069261332 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068714927 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06818497 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.07100995 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078911077 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068772621 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071154077 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072585122 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063943838 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071884576 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068879064 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068673458 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067820472 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07281158 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072496556 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069806322 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078519597 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069164015 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069658034 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069101392 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066773215 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068550721 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068974035 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068780001 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068416775 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.07007808 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076651072 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067150777 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.073946072 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068918189 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069636502 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075293983 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06956614 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071696368 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07605337 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067066514 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068880672 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074291667 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071382051 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070195082 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067655083 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068799615 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072406598 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06592841 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072643676 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067100679 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067554478 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068820382 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064249261 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065988252 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066950563 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066057777 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072578259 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068750572 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06752046 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068020234 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066289871 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069038071 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071362313 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076336748 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.07061685 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071466082 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063945593 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065573401 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069747607 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066015598 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070259139 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070067812 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073644184 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070173044 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068416639 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067614793 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077142869 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074131716 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071352581 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065931196 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071629581 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069024291 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070434337 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069481665 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068705458 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069476559 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072436992 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069722548 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06746412 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075250647 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070763945 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067337027 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068474285 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068458909 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068363184 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063108148 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068643788 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069977948 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073459754 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.07078733 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067958597 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079725753 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065674525 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06806316 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070848887 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066847172 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072189279 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062844191 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068733818 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067865811 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067720621 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061876526 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06658358 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064825446 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069081429 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065901553 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062044011 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077385918 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076028658 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070678169 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066296235 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.199894771 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06287826 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06217447 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066025117 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068286096 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069111381 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077037371 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065725721 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065760836 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062448032 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067021241 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069510428 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070075239 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064284289 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062879852 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067573322 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072253923 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074892063 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06782436 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069112802 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071550323 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070764238 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066473097 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07274596 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06530502 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072450715 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082154402 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069753391 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070039062 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075765771 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077094598 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069761457 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064297049 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070175086 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072107403 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069192556 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.07038199 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.070056522 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084145823 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072003887 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068216861 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067868672 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071092685 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068024299 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076337029 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07052864 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069755152 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073501508 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070621376 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078496219 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072004007 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077645143 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073730758 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071822309 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.068005447 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070787171 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066841313 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067112816 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069761683 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069421751 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074632679 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.077040247 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068490746 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080404564 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077908675 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069858301 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065419787 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067883642 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067642689 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063131588 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069011852 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06645763 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066130006 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.067100451 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066911468 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069682531 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073097407 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069349127 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068438464 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067661173 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061940072 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070211856 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070386967 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069241555 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064992369 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067853603 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068412881 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072189865 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071176252 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066654916 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069526088 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069767342 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068992419 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063588717 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075107362 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067398436 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070530668 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067565223 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068694417 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069137838 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071604583 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073461084 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068255574 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068840189 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071241232 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070687561 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064550547 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064480068 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07266881 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065775249 seconds)
  done (took 43.40104063 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102995722 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063646302 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062625183 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061988752 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073477161 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062632717 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061841591 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063204925 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06295153 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065865858 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063548167 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0643234 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073206654 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080266323 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075997751 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068418947 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063697456 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065400339 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063753375 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065234695 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073589981 seconds)
  done (took 2.770472153 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075924169 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.072631877 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075213144 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.078058704 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069342275 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072902172 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075225984 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072949247 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079065737 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068869435 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078745272 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073417563 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.068912315 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069232926 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068961052 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072804512 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078582297 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069465419 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.072797886 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075115043 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073302678 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074525776 seconds)
  done (took 2.922380719 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069807904 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.0676323 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069564869 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063398218 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068492983 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.071649139 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071479229 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.066109093 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071460602 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066726792 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066643752 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067211558 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.06958115 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062906262 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067828418 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.065480344 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.112119877 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071379948 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067332168 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068618617 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063127546 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069866322 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063082203 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063590262 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067228161 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071362507 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.069080841 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066151556 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067435725 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066833536 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067492347 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065409274 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068967543 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068296231 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066985868 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067302024 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.0673817 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067547897 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063551501 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065810404 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068242897 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063528372 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067551639 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068611287 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065532767 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065025673 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068975144 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067448068 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061793761 seconds)
  done (took 4.652117039 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081872102 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111342217 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069705605 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088987218 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080720493 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075122881 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069903981 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.08915147 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064546498 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066059209 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083386564 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079942744 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065869529 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070350054 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070551273 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06699744 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068453771 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065562242 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069791797 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06517045 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070439558 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073126424 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081926017 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080765541 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071594504 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066467382 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066850633 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072067418 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.080111689 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072500346 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.072042776 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072907403 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082447345 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072424838 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066787468 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069255175 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083625946 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067977015 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069984293 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065064836 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069127155 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072065531 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073464943 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083920376 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067323879 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072357378 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066932956 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064135505 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.07963225 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069240685 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.075650848 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081712877 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070814097 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067407102 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071738769 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.082617739 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066841771 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065568292 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06986767 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079710328 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065222305 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071073096 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081360592 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.069767704 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074881885 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080921262 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07126153 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069736566 seconds)
  done (took 6.453203208 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078062611 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.074487691 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082482331 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079798813 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072118668 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07251667 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071724332 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072020204 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072291691 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077038623 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071972725 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093288909 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067605112 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074664623 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072397162 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073157952 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072019477 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073294873 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072278764 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072052134 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072185769 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080291814 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07404573 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082625566 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.099905931 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069749435 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073822346 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07425168 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080852568 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072245177 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079011664 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071953021 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072008917 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.08035841 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079271528 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071903205 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064918431 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071724681 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072006691 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071979789 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067244364 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079740236 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071895544 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067859093 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073949952 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073434726 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081898643 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080735347 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076597123 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078671869 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074182362 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081961059 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074006941 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073926251 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082015901 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.106650992 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082207114 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081020266 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072434074 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079977354 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079558047 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086478507 seconds)
  done (took 6.072318272 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085881123 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077198402 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.079077922 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063263894 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06635726 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071754355 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066081823 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.066118806 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076569086 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.076512053 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079103297 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071874619 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074750555 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079031245 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071558538 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0745365 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071557357 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071652815 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076681177 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071648441 seconds)
  done (took 2.80689625 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076699119 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.085291168 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068928663 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074055649 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070941095 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074148436 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.070185772 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071302962 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068404275 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070901958 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.078073623 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078168375 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068700986 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073615231 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07805741 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073878963 seconds)
  done (took 2.511775632 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.077971735 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.075654608 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081783265 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067987133 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065671427 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064160273 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067184372 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063129704 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064686139 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.080118638 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.067507179 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069801087 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067459699 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066486302 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064650317 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070378281 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063975376 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065436778 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067643258 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.080560992 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07863074 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066473508 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068369979 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06751732 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.06819452 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072620176 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067332283 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066041232 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064577333 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067577448 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067796031 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070962686 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064818905 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065210272 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065869213 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065264444 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066988106 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067526349 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070193887 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067525347 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065644832 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066887612 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06722163 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06834544 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063579145 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068017868 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063837075 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070196537 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065511581 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067934916 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067532856 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069874429 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067482749 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074542593 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.07079197 seconds)
  done (took 5.096443783 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081578992 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071600235 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063736537 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065492998 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.070963169 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068938129 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071082955 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069476502 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069533292 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065640546 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069948521 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071122631 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069490851 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071165152 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070004234 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071477126 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063583236 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069356995 seconds)
  done (took 2.595389856 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07315804 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067931344 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.074662836 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068058706 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067944983 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069490802 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063922728 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.066281302 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066152001 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067490479 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067880752 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069948125 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066459322 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070099002 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067478038 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067776277 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069435938 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066571671 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067314128 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063999297 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069740101 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066179208 seconds)
  done (took 2.831061702 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094987801 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083596141 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.141667108 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081222461 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08540602 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073191552 seconds)
  done (took 1.895370363 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09312231 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082114312 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068846253 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089823234 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07405558 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067363152 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067236335 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067533445 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076574572 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076022045 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067543718 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076036214 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075862378 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075359378 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073179848 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073088054 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067512674 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068017065 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066755596 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084711949 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068907378 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077738808 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069741682 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069057782 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069020966 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077067929 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077640034 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077961215 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069003663 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076178088 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07310415 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067772109 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077695144 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077931259 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071290104 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078339541 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069352616 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086401797 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075593281 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077575469 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070194911 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075126689 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077893462 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073991727 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077953775 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069239821 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074071994 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069644827 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069180946 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088365198 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075264826 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07731174 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074851356 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078029775 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078285266 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08811395 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077121827 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075730424 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074113619 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079359535 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075350411 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073046032 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075070025 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075752103 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07359318 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075552073 seconds)
  done (took 6.289756851 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084357766 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.088665131 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070521161 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078321661 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077321571 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069643042 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069341604 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069550874 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069204403 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069525551 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110386957 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069743828 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07641411 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076352945 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069223598 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069659078 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069687116 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078463632 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069757874 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089620511 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069536396 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077826743 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077791523 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077473686 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078586202 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075166105 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069698061 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069754524 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069607721 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069640236 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074478285 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069716883 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077493012 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068699794 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077811164 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069556247 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069221444 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074408247 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069474958 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074944263 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077359615 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086968264 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069567786 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069498806 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077774663 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069202045 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069149788 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069573671 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06914968 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068800612 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078211673 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077730861 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077879788 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077421507 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067992659 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068345768 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068012382 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067437024 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067874449 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072715566 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07539329 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067537083 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086056277 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067695514 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067484312 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075478317 seconds)
  done (took 6.231413427 seconds)
done (took 130.759836903 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.1871634 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.171562907 seconds)
  done (took 1.6901215 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070870407 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.100522456 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.079269483 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130601147 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066594739 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100156381 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099161565 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078061921 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066127266 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066219224 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066443228 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068602681 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13120669 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066239123 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066134605 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068744105 seconds)
  done (took 2.670919021 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100310267 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.161983748 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102566668 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065879827 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097179166 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073014601 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064588753 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074685251 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070944945 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065291886 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072956462 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070827948 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065123742 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07088593 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.0709239 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072738217 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.0645932 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072827044 seconds)
  done (took 2.784586123 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103763927 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091892917 seconds)
  done (took 1.54702541 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158207658 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105116983 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.151074899 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.345634974 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167634247 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.228751103 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.130253463 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127592403 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11780374 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123234756 seconds)
  done (took 3.002328483 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099969213 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152770601 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255700447 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115254982 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072297997 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094935454 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116511102 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.07766213 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08088767 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080615201 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080454873 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076560506 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098675152 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073529442 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073857054 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076713993 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102665324 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072008769 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074187457 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076679783 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099235548 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065830981 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074094338 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072144135 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077542092 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077300181 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065200575 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065300445 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.0765381 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074173327 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07687883 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093960835 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07755074 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107363772 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069991277 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108009552 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076619627 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074086012 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074007463 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073812977 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079177316 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079060121 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072066728 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07615564 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065130571 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076161641 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065360637 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065549806 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078396302 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066866241 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078107848 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077150461 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107517781 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066774406 seconds)
  done (took 5.952409001 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104842183 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105381306 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071539958 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111534837 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100033254 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072298672 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101041146 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092807074 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102916507 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069976396 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068661232 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070282353 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082901155 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083898939 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.11351006 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104769523 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074211518 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071134786 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104054893 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102546066 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068657182 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094430351 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089900337 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102040379 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067136631 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070392389 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068404117 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070687037 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077186555 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078671578 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069581045 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081595955 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085099649 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078732466 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066953349 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067732123 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067881201 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080732009 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07998633 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078936051 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077977993 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067333498 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069176572 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069514888 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069579647 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067404026 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078699735 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080673472 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078768638 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06906164 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069807081 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068178881 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069451616 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080640911 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078039514 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081274776 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080265449 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068087195 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068219588 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072361286 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081458856 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079115196 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079721889 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069224825 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079238175 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068252954 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080609159 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084603865 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068512657 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069633204 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068669537 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069258233 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069403962 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078111844 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078249741 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069508212 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06945085 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068689261 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080290566 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078878009 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067960038 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077316137 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066934264 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06834605 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069670842 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069991862 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07839506 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080555106 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069850433 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068491759 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069647868 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068082105 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066700787 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076451864 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079034902 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078115566 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077746792 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068777325 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078121256 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078488064 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069523445 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078751185 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067510416 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.198422796 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071474199 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080346077 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078990324 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081732808 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070222973 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068994176 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079355009 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082362816 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069431651 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080165573 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081979708 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.08070489 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069025094 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082523843 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069758864 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08151547 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069855563 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08114653 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069540062 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081216552 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06928595 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068247635 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069235682 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080784651 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071080555 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069297973 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070413757 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070423286 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080445175 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083630332 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071183398 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082226478 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079709757 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071501723 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07966656 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06952576 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079600533 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069932697 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070493015 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06802776 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082286941 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068972364 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068488584 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070318791 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08150559 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068617976 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08118978 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079123667 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068178423 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082603602 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081814317 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077939236 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08138 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070968759 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068416788 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06852841 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069515053 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078377247 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08158491 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07046956 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069107794 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079470616 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080036223 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067283292 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078696291 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07870621 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079204486 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068284999 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069407766 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080356485 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081178492 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078713924 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078463113 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078555224 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067956441 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077992141 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078557741 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067844031 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085194238 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068132035 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.08352352 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079833751 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077270965 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079214299 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.08072236 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080467802 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080587621 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083809755 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068011955 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068092314 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080164454 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068015035 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068363203 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077165183 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068517111 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068380063 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08228515 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067700361 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078362501 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066868941 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077850935 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066457143 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069206822 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082868867 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067476507 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.20104761 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.08137512 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071062369 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078718172 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081872469 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079622144 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068968135 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070683931 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.08148809 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079886561 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068727662 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069119703 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071635775 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078946864 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07828374 seconds)
  done (took 18.697084058 seconds)
done (took 37.701612322 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.213211217 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152026801 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.199986456 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119119512 seconds)
  done (took 2.12559897 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.123993589 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102343373 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095760872 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066168526 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102375801 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065561721 seconds)
  done (took 1.931709767 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.314782889 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213338671 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.183691985 seconds)
  done (took 2.08091887 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.202103553 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188722536 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.398495667 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.25636837 seconds)
  done (took 2.524718554 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145409766 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090110272 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067296563 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083757524 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.13618016 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.162643508 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102047822 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126984194 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078424326 seconds)
  done (took 2.418274059 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148860133 seconds)
done (took 12.615222291 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.221245803 seconds)
    (2/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.102688912 seconds)
    (3/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.079530739 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.119117804 seconds)
    (5/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.184701523 seconds)
    (6/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074865575 seconds)
    (7/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070195012 seconds)
    (8/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073707444 seconds)
    (9/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.217777277 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.084920775 seconds)
    (11/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.109602948 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.092451706 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.106857923 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078157609 seconds)
    (15/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051771948 seconds)
    (16/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077397535 seconds)
    (17/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.081945308 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073446566 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.090518404 seconds)
    (20/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076656748 seconds)
    (21/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.191945882 seconds)
    (22/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.161333335 seconds)
    (23/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.177970447 seconds)
    (24/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.207461918 seconds)
    (25/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.139078045 seconds)
    (26/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.152590817 seconds)
    (27/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.098606764 seconds)
    (28/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.158099708 seconds)
    (29/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065551803 seconds)
    (30/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.16738346 seconds)
    (31/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.05100371 seconds)
    (32/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.202690067 seconds)
    (33/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.14863284 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.111773648 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065179341 seconds)
    (36/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.154712819 seconds)
    (37/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073711222 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.089751861 seconds)
    (39/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.175945212 seconds)
    (40/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.062231654 seconds)
    (41/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.140822216 seconds)
    (42/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.102376496 seconds)
    (43/309) benchmarking ("sort", Float32, false)...
    done (took 0.127683038 seconds)
    (44/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087983322 seconds)
    (45/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.217595538 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.110612388 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.154508432 seconds)
    (48/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.148987547 seconds)
    (49/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.151616999 seconds)
    (50/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07205955 seconds)
    (51/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.133112745 seconds)
    (52/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.109830063 seconds)
    (53/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.187210384 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.103656604 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089452079 seconds)
    (56/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.177302728 seconds)
    (57/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077027499 seconds)
    (58/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.194335725 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065479122 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073145744 seconds)
    (61/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.219462624 seconds)
    (62/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071882877 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072734596 seconds)
    (64/309) benchmarking ("sort", Float64, false)...
    done (took 0.125425753 seconds)
    (65/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071500914 seconds)
    (66/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.157889965 seconds)
    (67/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.14492754 seconds)
    (68/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064706191 seconds)
    (69/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.085691323 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066706322 seconds)
    (71/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072921354 seconds)
    (72/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.113310146 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.106638368 seconds)
    (74/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.091438049 seconds)
    (75/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.098440264 seconds)
    (76/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.149578551 seconds)
    (77/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.069626276 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06500385 seconds)
    (79/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076096062 seconds)
    (80/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.173397343 seconds)
    (81/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.074824186 seconds)
    (82/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.050715146 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.231182151 seconds)
    (84/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.077263215 seconds)
    (85/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053673419 seconds)
    (86/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.067882004 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.146237785 seconds)
    (88/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.282434448 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.167426906 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 0.066884885 seconds)
    (91/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.074253425 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.091279159 seconds)
    (93/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077441898 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066243822 seconds)
    (95/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074896707 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.10451824 seconds)
    (97/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.063556035 seconds)
    (98/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052670579 seconds)
    (99/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.166485315 seconds)
    (100/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075711996 seconds)
    (101/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051656136 seconds)
    (102/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081669865 seconds)
    (103/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.108803692 seconds)
    (104/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.159361262 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.11440472 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.120778616 seconds)
    (107/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.176671948 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092382823 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094461004 seconds)
    (110/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062477907 seconds)
    (111/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078196042 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068281147 seconds)
    (113/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.176738108 seconds)
    (114/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051892879 seconds)
    (115/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075500253 seconds)
    (116/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.176458805 seconds)
    (117/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066691695 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.112309119 seconds)
    (119/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.138617172 seconds)
    (120/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072795865 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072634746 seconds)
    (122/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.15135672 seconds)
    (123/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.10894196 seconds)
    (124/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051058241 seconds)
    (125/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051333567 seconds)
    (126/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068815616 seconds)
    (127/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.158945846 seconds)
    (128/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135313737 seconds)
    (129/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074766346 seconds)
    (130/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.184573171 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.06516329 seconds)
    (132/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073244603 seconds)
    (133/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052199171 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065747228 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 0.13261451 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073444241 seconds)
    (137/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.148699229 seconds)
    (138/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087293323 seconds)
    (139/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.194837895 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07158245 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070170586 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.08456942 seconds)
    (143/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.150347196 seconds)
    (144/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052161475 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.125981461 seconds)
    (146/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052515157 seconds)
    (147/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066074642 seconds)
    (148/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051047811 seconds)
    (149/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.164352588 seconds)
    (150/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.096499572 seconds)
    (151/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071823487 seconds)
    (152/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.053000871 seconds)
    (153/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074451348 seconds)
    (154/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.109282874 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08703006 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088959864 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064980622 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072083833 seconds)
    (159/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068670945 seconds)
    (160/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076712846 seconds)
    (161/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.196471755 seconds)
    (162/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060729427 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07307662 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090371768 seconds)
    (165/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.095163786 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.075293674 seconds)
    (167/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068757376 seconds)
    (168/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072235107 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.137660122 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089377918 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065027787 seconds)
    (172/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.071867692 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091282114 seconds)
    (174/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.053132382 seconds)
    (175/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.07841131 seconds)
    (176/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050815695 seconds)
    (177/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053127269 seconds)
    (178/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.0779317 seconds)
    (179/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.107500164 seconds)
    (180/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.0894991 seconds)
    (181/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050921677 seconds)
    (182/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.051796411 seconds)
    (183/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.106431481 seconds)
    (184/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052084414 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065219417 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071518512 seconds)
    (187/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117614484 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07312268 seconds)
    (189/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053167673 seconds)
    (190/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072557746 seconds)
    (191/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066118962 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.274805404 seconds)
    (193/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07356502 seconds)
    (194/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069220419 seconds)
    (195/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053835177 seconds)
    (196/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053833806 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064821188 seconds)
    (198/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.188171267 seconds)
    (199/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052747514 seconds)
    (200/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174704314 seconds)
    (201/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071961003 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128852354 seconds)
    (203/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07497499 seconds)
    (204/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076277929 seconds)
    (205/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061417829 seconds)
    (206/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077124646 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067613832 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088439357 seconds)
    (209/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078211354 seconds)
    (210/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052723588 seconds)
    (211/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067695037 seconds)
    (212/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051606953 seconds)
    (213/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071643346 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07527052 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073124352 seconds)
    (216/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052651277 seconds)
    (217/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081051243 seconds)
    (218/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066937598 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.09302044 seconds)
    (220/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065547415 seconds)
    (221/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.109545859 seconds)
    (222/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079740515 seconds)
    (223/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053516919 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088803859 seconds)
    (225/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051826584 seconds)
    (226/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071609988 seconds)
    (227/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073037336 seconds)
    (228/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.052031237 seconds)
    (229/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072146369 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071369089 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065714219 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.167540743 seconds)
    (233/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.052321507 seconds)
    (234/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072448493 seconds)
    (235/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066182031 seconds)
    (236/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071558269 seconds)
    (237/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065904114 seconds)
    (238/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071842881 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064535688 seconds)
    (240/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051933917 seconds)
    (241/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051700026 seconds)
    (242/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.089570977 seconds)
    (243/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082834057 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065891189 seconds)
    (245/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051777003 seconds)
    (246/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.06797338 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.131899434 seconds)
    (248/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062355729 seconds)
    (249/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.05156326 seconds)
    (250/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053718142 seconds)
    (251/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072932187 seconds)
    (252/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065698869 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135305486 seconds)
    (254/309) benchmarking ("sort", Int8, false)...
    done (took 0.139736881 seconds)
    (255/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051918237 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.108550521 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.107013754 seconds)
    (258/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052290717 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064825754 seconds)
    (260/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072565459 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065240788 seconds)
    (262/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051684944 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066071719 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065485399 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071470215 seconds)
    (266/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051144312 seconds)
    (267/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052635628 seconds)
    (268/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064502196 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07220993 seconds)
    (270/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051936186 seconds)
    (271/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050973642 seconds)
    (272/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060304837 seconds)
    (273/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.0635262 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.091363378 seconds)
    (275/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051296099 seconds)
    (276/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065464416 seconds)
    (277/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066726479 seconds)
    (278/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051531066 seconds)
    (279/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.08791798 seconds)
    (280/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051836952 seconds)
    (281/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064719301 seconds)
    (282/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067772829 seconds)
    (283/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071428398 seconds)
    (284/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067882846 seconds)
    (285/309) benchmarking ("sort", BigInt, false)...
    done (took 0.182719132 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088884173 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072679549 seconds)
    (288/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066344848 seconds)
    (289/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.173634042 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063782571 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063733235 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.09391851 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072399702 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065209136 seconds)
    (295/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051360837 seconds)
    (296/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.0648985 seconds)
    (297/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067409571 seconds)
    (298/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052643984 seconds)
    (299/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079520041 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070437678 seconds)
    (301/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062902919 seconds)
    (302/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068626425 seconds)
    (303/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.06079596 seconds)
    (304/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052485113 seconds)
    (305/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051646228 seconds)
    (306/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051301226 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07060677 seconds)
    (308/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051954573 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.085609102 seconds)
  done (took 30.486435556 seconds)
done (took 31.87612815 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085430332 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091710633 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074784029 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09258604 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080601949 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075724941 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071526207 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07745527 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079639401 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080697061 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078055266 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055033121 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073362141 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07441931 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074420643 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091338598 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077501208 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072414013 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072668819 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06481744 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072512447 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065776529 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06689226 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054557147 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077631445 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071333899 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071690099 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073858467 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06574586 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065609659 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069033056 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072992521 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065868845 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077446374 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072180423 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072886939 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074676784 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076188747 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067668404 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06599944 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074114283 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065250015 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072187949 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07301963 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071586709 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070886201 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072690723 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077633136 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090800968 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067891162 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073640165 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075286877 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076133687 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071859699 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068991254 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07263523 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070512362 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090896513 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072996641 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067658627 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073827447 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073377955 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07098895 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072449958 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072411168 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074426295 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075086336 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070392433 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074231093 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070513018 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065155283 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072414731 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06821573 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065437639 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074846905 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076585403 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064470422 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071005022 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071992484 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07082555 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064560292 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067249825 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066882451 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070849789 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066992988 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054624162 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068724486 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07107569 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.0640343 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072417194 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070800075 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071504749 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066404139 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075145542 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064395651 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069979179 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06541388 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06529359 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066621961 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068997983 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064792212 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06746139 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073210553 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066445159 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070523582 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078281383 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065155527 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070889994 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064397573 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06457646 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078403172 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074113515 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065102916 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067155888 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063598616 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072024566 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063788878 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064782436 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064406374 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064915028 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069768783 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064105185 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066322519 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070713518 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075661923 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063747762 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067273173 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066313132 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06431988 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069871304 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064879853 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.19864185 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067456711 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061597356 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068352793 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065671392 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072762578 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067740272 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073001373 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066693058 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073754572 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069771523 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071226895 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071120274 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06430287 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059064814 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068114643 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06808733 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067186605 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066588112 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067398975 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065776171 seconds)
done (took 12.381844768 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069076762 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143788343 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100741089 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094780754 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085819674 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066797826 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076036522 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101969478 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067471081 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102671942 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087052561 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084523997 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112222169 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064806012 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065755666 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069548388 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067115746 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081615686 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100877048 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086221811 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115948101 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065069927 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094640945 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089759045 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087187759 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.102179826 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066668353 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070113418 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069552602 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090808181 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086290649 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069655275 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066732814 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100438696 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092197546 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083245071 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065988748 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082201925 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066487241 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065685548 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067052293 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097597265 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.07947378 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080310111 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069525161 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068626269 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066839488 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08353302 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089009709 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079123834 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086773528 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103077083 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068461242 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065343692 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064348541 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08509864 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065419016 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068498813 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065984371 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067655733 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.0658425 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069187617 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080858096 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081773541 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069813799 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079918409 seconds)
  done (took 6.784099574 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085130041 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089747531 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083727581 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084178365 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065365836 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066167214 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066376458 seconds)
  done (took 2.029478675 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069679256 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088241893 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088584119 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08976077 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084065029 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087026479 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075557574 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066170685 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079864267 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067257705 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087113361 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101649796 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067047125 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07302855 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090217998 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06622934 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089903691 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066344948 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069400255 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08999437 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068240509 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081813291 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069867035 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066421884 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08054468 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067249623 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112877652 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070295444 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067925758 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069178546 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064541152 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107155974 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080189289 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075438241 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066110433 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080302207 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080112477 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064705476 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082374289 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071649897 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080075174 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066836608 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067560818 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064569581 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071172884 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076608496 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067527786 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067609871 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068662011 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08566597 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066769454 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079805051 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069449599 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068947211 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068094651 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069908207 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07563219 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066934577 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085716299 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067680697 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082729773 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082185537 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079896005 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081920837 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068702284 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080213864 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080109999 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068736324 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06771703 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069757728 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082689436 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064674482 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067516723 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077003385 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067811253 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.08940015 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088861678 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067563339 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075976162 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067322711 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066350507 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066376288 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088692546 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068849412 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06602178 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070401539 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069300129 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068035141 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065171476 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.07000509 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064373195 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067437991 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069438699 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.06920025 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06860791 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082601006 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068738891 seconds)
  done (took 8.73643362 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071467584 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069479186 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069514775 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068378401 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068067181 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069167961 seconds)
  done (took 1.92774663 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096737715 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069324648 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081113121 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072970611 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103746201 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.08643303 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087342938 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07892924 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08400756 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079143179 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086801765 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088191274 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.09329869 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07280627 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086408354 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071624664 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087200419 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075750986 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078218345 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073306844 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087350988 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072528642 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073036401 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081442726 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075290436 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071997916 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067416919 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078535909 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078068432 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079066077 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072661826 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075613828 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070715756 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078407346 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087449477 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070956959 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071929882 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07675436 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072242913 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075132823 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087730949 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07261402 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074299731 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077203906 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078543283 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07066643 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07695768 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076283282 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08634064 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076727639 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076830921 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071446995 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.07600124 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077040381 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070680842 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078697982 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077078366 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086859362 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072376921 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070588202 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069297184 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075760279 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077872579 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075267854 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078827854 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076884063 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070708802 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072080899 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072848127 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07158044 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076561503 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068718025 seconds)
  done (took 7.080746228 seconds)
done (took 28.03724325 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.545779772 seconds)
  done (took 2.020838115 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.605884582 seconds)
  done (took 2.109434784 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.512777468 seconds)
  done (took 8.011928519 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.393044164 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.473920042 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.687538206 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130255752 seconds)
  done (took 3.224374412 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.679326909 seconds)
  done (took 2.190058338 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.211378195 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.19580593 seconds)
  done (took 1.929282419 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.379841257 seconds)
  done (took 1.874383819 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.104143634 seconds)
  done (took 2.597558067 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.265470334 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.16307563 seconds)
  done (took 1.932600511 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.470712783 seconds)
  done (took 1.971193119 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.855280286 seconds)
  done (took 6.362359906 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.215291836 seconds)
  done (took 1.760659677 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241723184 seconds)
  done (took 1.741726286 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.701317979 seconds)
  done (took 3.200918661 seconds)
done (took 42.436806981 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082694559 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081845669 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081958156 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078457176 seconds)
  done (took 1.809457153 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078323968 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073315073 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076537891 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072942483 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.07693884 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073134744 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074198674 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076931004 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072516748 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07317664 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072468621 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07249214 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074905976 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.07456441 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071228713 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074842205 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075694585 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072186835 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.07578573 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072698719 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071112628 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.07505633 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075069243 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072232128 seconds)
  done (took 3.278729331 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079413182 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07295824 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074518875 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07302157 seconds)
  done (took 1.810080366 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080255332 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092770916 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089715463 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077902408 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09229968 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086824027 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069000424 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068765225 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073089923 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077283626 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067958315 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096290117 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087949386 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077049183 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079224147 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066276498 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068824493 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086636713 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077279889 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077574541 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069764995 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077248295 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067844232 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088072501 seconds)
  done (took 3.401046896 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079819285 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104481418 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.07804798 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.08769942 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089965248 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065331913 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074470476 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.08958992 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123150698 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065421677 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069998129 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065762312 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.07234263 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065388483 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076784577 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104896345 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108072724 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068437946 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095874567 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065490143 seconds)
  done (took 3.163562101 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075483642 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070558294 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06660259 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068742035 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077720362 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072428553 seconds)
  done (took 1.942101171 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070187179 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067680359 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06832545 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067089363 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072211363 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06750528 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066575633 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067721895 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067902909 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067074388 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066686837 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065959748 seconds)
  done (took 2.322794305 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.177582578 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069077138 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069529647 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.0663402 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070863386 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066455985 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080000522 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068079827 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090881368 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066455092 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066690063 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.06863482 seconds)
  done (took 2.468038638 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208910544 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076562429 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237210082 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137845577 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111987968 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115739536 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104391811 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113446118 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.144730331 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102219376 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168560058 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165688212 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107278098 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137753153 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089464237 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098064558 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155780217 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162903056 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103816887 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165841557 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144462789 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124546741 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147942496 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101805216 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106755851 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1229745 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071123853 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080493498 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17134199 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13275262 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147866651 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111667112 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094407921 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177490722 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172129515 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146689822 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134779981 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084136013 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.103352301 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132545169 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197985271 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088221841 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162567463 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246991083 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08149694 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134752389 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122139195 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121720182 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.10792958 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091183842 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147754246 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184086432 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139961981 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088245887 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112693403 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116298573 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.117875014 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104809992 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183980943 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162478609 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130510465 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.0712725 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099671257 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154054602 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133959406 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110428795 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127808282 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09540634 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134382046 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155305036 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11947155 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145400298 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.129086598 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089334272 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119481722 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139988696 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129318594 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170808373 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125941964 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07327351 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126334807 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10395621 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08190126 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142775748 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07565827 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174855545 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098712609 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106289671 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113454045 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10890122 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108903185 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163027866 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.286260789 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104733044 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066644773 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104249429 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121361438 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149440721 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088266715 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109673855 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118315678 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078763043 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140498814 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075261389 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12359114 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076011629 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127049384 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132794556 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075844631 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12371815 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101222423 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101454514 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134410862 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162610513 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089613146 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083612899 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169750836 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123922763 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104501986 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144235085 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156199037 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099857476 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103316254 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150974887 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181154478 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089907973 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163617671 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108178432 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084450411 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087785161 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124379897 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113437712 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122734995 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08241968 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119263623 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169201267 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075641714 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095578735 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134110866 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079171033 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080758885 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103343227 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10059378 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095466885 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100335394 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104570122 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137309773 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122871009 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.246094723 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129233231 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099647851 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171132103 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089604134 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102046648 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103825502 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070746225 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138511654 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159394894 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079970496 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166098774 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124106623 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106470873 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120205551 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083850521 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141060421 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079303513 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071341889 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145529519 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111159994 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111897195 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151872475 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105410948 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128443382 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.1207032 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13628919 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132776519 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129189723 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106020285 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088485365 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112431127 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126698902 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073400644 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092156838 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080265279 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104348663 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095807496 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083796985 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143081981 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125442036 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101144598 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111767982 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097875263 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148050375 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077007286 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128936369 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118494671 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093632686 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151602673 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151958682 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13150183 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099075241 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145296757 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069622279 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073046213 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.234173249 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125894481 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085115449 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084387944 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119669097 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147859782 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130760836 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139846879 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112836654 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122111486 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156450408 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.06985553 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116566057 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149614387 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122647685 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105764062 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090291786 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099993208 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142088928 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10900887 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184113775 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114617655 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126549831 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153519601 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.09985304 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080559727 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103900797 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136490558 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106112344 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145324473 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100454331 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088482119 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110559926 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07496581 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100709965 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127617782 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120718656 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13675443 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.118760165 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133456957 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077588551 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117743772 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121123555 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122372488 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064314117 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119601093 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161339786 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093921921 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118929895 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152243389 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079227143 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.123961629 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.32087795 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147921611 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085014332 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111496375 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120777861 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128538563 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122049795 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141443435 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109762408 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136929568 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110141355 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085758521 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088311056 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097539793 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106005969 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095361635 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109019928 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115597225 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095520411 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13350954 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104195737 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109892191 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118623984 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097464976 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089987156 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098108845 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17676834 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120609482 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17291538 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099942846 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146990466 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164928059 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075299203 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079175788 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07826676 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139982975 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084333739 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13176338 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098411869 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105990825 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124997456 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142740118 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095222818 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069028247 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109066012 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135198326 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112229339 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098206555 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104238014 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162699322 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100575745 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079543806 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113377062 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104502287 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101360789 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315467369 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062724425 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09930946 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076001641 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081853304 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131466396 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155220257 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081316893 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10421043 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119456508 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111366733 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129415878 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102041468 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099832192 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115842543 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151899705 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130588691 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09106043 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113334276 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130318052 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157434164 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105935633 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096019745 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172795023 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153299275 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160988064 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089435414 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115155586 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115346144 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108440084 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140010438 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084154522 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16493501 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082927508 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136996077 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1046588 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090650056 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13056377 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.116633314 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089073939 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149275587 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118667263 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083027527 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078422777 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118510634 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120876173 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107040222 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075306809 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138625741 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072716261 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13219881 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168156563 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225377224 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10662956 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097771521 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08198902 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11066677 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10411034 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090359533 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099780136 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174787746 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088965468 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151260637 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142990918 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114375489 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138662391 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100890044 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.637001417 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079316138 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154581351 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11785531 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176355071 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097907973 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118679721 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10975271 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124418282 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145123306 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105164879 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178827899 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134198937 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116438654 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080287981 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103143978 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103478872 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089179328 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106063832 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114237563 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116797761 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094142649 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116443785 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124206911 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082299184 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096101505 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157135911 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117328987 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144931901 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140927464 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084736037 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117679435 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138720366 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079923026 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122029441 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151503343 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104659575 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243145967 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083706715 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.104303146 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173447887 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074736148 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163614631 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120954662 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110824188 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113969301 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116084029 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133277526 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109259266 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123264983 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09478214 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111806282 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114145325 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083141724 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078659124 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105371091 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113432808 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098496592 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100110884 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099393987 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152887712 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072358581 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095974348 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104330655 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146476154 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176300346 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088592194 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083687706 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11976187 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113646544 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113599184 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121215341 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079882747 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082843683 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082535785 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.078177858 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109027808 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112553061 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105383777 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111957603 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165155299 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083397501 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225537641 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095522799 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105179282 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069891447 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07883683 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096424652 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097909428 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107475893 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100083783 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16830525 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094066604 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089320122 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091115741 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.216239013 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084528406 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130569093 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112468358 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120889757 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099200478 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06347019 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11058971 seconds)
  done (took 59.221574724 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.112121243 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082762661 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097107569 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150365633 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123509528 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212902165 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157935092 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200186699 seconds)
  done (took 2.749575204 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071733885 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094770459 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100966207 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083477173 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067220861 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069280037 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.226270879 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081399299 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066945276 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088949055 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080392572 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069410283 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.421122308 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066422332 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068053381 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063926835 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06796938 seconds)
  done (took 3.39210316 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.370376542 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.602847598 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.374033896 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073729114 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.849696774 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092713983 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.029515395 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.130164696 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074314975 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.539415233 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.702441464 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.125711778 seconds)
  done (took 18.582833126 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079765724 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070924151 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.085447708 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084637995 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073442394 seconds)
  done (took 2.006681795 seconds)
done (took 107.706506149 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083761261 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.402795858 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054050259 seconds)
  done (took 2.10070996 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08660089 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085043356 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085184022 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083826097 seconds)
  done (took 1.962552145 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.07817184 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076928657 seconds)
  done (took 1.768368078 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.226052765 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.159497591 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087428335 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086439979 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078960681 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078628765 seconds)
  done (took 1.861025393 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075905572 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075785355 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073440141 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077157596 seconds)
  done (took 1.917951716 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079907842 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055552433 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056611748 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056823075 seconds)
  done (took 1.861158544 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089920655 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080249768 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078585705 seconds)
  done (took 1.86140879 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105183 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085039624 seconds)
  done (took 1.802257421 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086416131 seconds)
  done (took 1.700742683 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.103385709 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.115564403 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132889011 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110837462 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138586498 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109267064 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086177761 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087589843 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077821549 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08788677 seconds)
  done (took 2.665428495 seconds)
done (took 21.669519223 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082432827 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.355475969 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362749268 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090718553 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66958174 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356817764 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.967847647 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092761025 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114121525 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067821517 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085043794 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649176213 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.993794735 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.31754263 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.980322496 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.317332465 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650720913 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068443379 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068041538 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068271334 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.953084526 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067938225 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068202423 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068646222 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650523813 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371598443 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069014821 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.315184852 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.0684571 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069850785 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355114403 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068659569 seconds)
  done (took 16.082649631 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073568072 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118806072 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074520151 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085290071 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071695986 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070077137 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072033667 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069221714 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119699593 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068811586 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084843964 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068326829 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072154153 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068762391 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08724992 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068207913 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069232055 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069192272 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068637132 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069139178 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08670266 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068261337 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068646435 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069475998 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068852739 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079949684 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06890843 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068953294 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069226927 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071134596 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071805887 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070243018 seconds)
  done (took 4.041390029 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119469156 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126588587 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074994529 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103555298 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113653081 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070651499 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143778364 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093043704 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128188884 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068551483 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085378542 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068477643 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101502864 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069643364 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088101872 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068993485 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069608874 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069314425 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06867966 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068957966 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087969071 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.0686497 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.0692192 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069116637 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068882058 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082208093 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069007591 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069215563 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069094139 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070875117 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072828978 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069649829 seconds)
  done (took 4.29560829 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075857922 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075949655 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084151364 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084148649 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070705354 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072081116 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073594398 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070223073 seconds)
  done (took 2.237028141 seconds)
done (took 28.274697394 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082774772 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070714691 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073289058 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082235291 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07365471 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079993143 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068194172 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075319978 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072782898 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073295579 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075374581 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068062673 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071572432 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067906711 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073899761 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067871607 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079404049 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072339622 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079877769 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079861588 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070579596 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073415498 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074977846 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.08011699 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079498422 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079651611 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077547007 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07344269 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069759572 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070959327 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077367831 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084509556 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069261153 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079700822 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068414101 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068212005 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071547929 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068694186 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079688654 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077757101 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070244945 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076641055 seconds)
  done (took 4.735688884 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092015379 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093499634 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085980938 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06215757 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067755432 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065525194 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088770548 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059765562 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060243661 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087958365 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056052738 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059640858 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062813427 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054540565 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059343333 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057093823 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062301961 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056530393 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059940733 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059976104 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058817209 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054728496 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060433029 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063227753 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059178646 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062817335 seconds)
  done (took 3.350548631 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078672254 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086252485 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089173644 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127085853 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.10537909 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077343998 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.07785477 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092531965 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.086372401 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06707265 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071978969 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093790257 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088253705 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074006987 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068228329 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084917382 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082098583 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.06941672 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073712858 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090709558 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084793813 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083747914 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093120897 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080860566 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066957315 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069453496 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.07119576 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081331478 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072012891 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076350837 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07143579 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071070132 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069773895 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07892161 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071765145 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06989426 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091141028 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07762252 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078473554 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068547157 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071269642 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069198055 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089660496 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.13495823 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068581605 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074453662 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076269011 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077065861 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06794153 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08625746 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078409033 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067318972 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070866684 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067627333 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068087942 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080824165 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069842309 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070081416 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076603552 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070985629 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085932097 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071883086 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082895971 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067699268 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075473917 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067559424 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068740828 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067202571 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093548703 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069725005 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108894815 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070742792 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068820524 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076765356 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07554449 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07387547 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068208347 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082652588 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078060364 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071318457 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076516539 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071845526 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070599145 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088087255 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070281149 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06976513 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068992748 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074362584 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070741264 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069372865 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081094122 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068457 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070800997 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085163785 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067520777 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069244873 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073644103 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072654462 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067846247 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078664007 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07293518 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068575946 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077439789 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068171558 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071100034 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078296952 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074450861 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067419001 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072363086 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073650491 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068176756 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069297941 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070200495 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069909845 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075990282 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074043081 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074069812 seconds)
  done (took 10.60837302 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165556346 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155447587 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071091774 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.146184465 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076781681 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079483405 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.148443437 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094758328 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068330592 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069229033 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06991105 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110763358 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106416367 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116049835 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079363381 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068433766 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084242363 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114364847 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.150214148 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14395768 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084341285 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077727294 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070564239 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070077285 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071592052 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078758054 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086103783 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077539894 seconds)
  done (took 4.401997048 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08563317 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.09849972 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075413377 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090387904 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092295392 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068380193 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070540331 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.06998421 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080948241 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079515748 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067693279 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074237135 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07480645 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071704432 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069544385 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07494081 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075674516 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069850595 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071509508 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073306519 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077934558 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.08113653 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071788531 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067527034 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074713584 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067713433 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06456805 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085447704 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068753951 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090830863 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066632857 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075242034 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081449358 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068877109 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068146611 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068128187 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067631155 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06824365 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069920321 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066639415 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066994499 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058007088 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067728646 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079966382 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074495014 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057131901 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073118581 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073237202 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073332739 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065874265 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070775008 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070801933 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072953063 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075416388 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073180138 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073437015 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069243735 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074596165 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076189365 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068051117 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065224439 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066554359 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07262606 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066585967 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076220353 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072141302 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066810991 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067564789 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069723058 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.07420826 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067817914 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070561855 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065518042 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069571699 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072406511 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070037482 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068481328 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066275937 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067634211 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068048468 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055684546 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067861988 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054032712 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07100171 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066150289 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066383559 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067958211 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072614947 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080173321 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068888171 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073401821 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068574604 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067114974 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071308346 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06113541 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070741637 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083072801 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08320386 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067604402 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066043551 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082057701 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07282927 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067138204 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056410338 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075693746 seconds)
  done (took 9.18114368 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.09330253 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071555148 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084209353 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091485158 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086594796 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07522624 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076787929 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070055592 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082664752 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073868355 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077212231 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068317987 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077873713 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077470797 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070236438 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077120854 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072501915 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083418258 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082663071 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068768099 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076770164 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080444599 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089335205 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080640609 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078854267 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080913621 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.08963151 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072458105 seconds)
  done (took 3.884323506 seconds)
done (took 37.789565558 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.716689768 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.883910685 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.701056151 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.096476653 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.985196016 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.805357513 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.809265768 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.696169588 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.022346671 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.747844946 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.969875373 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.736033399 seconds)
done (took 64.814855976 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.727579388 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.837549163 seconds)
    (2/2) benchmarking "String"...
    done (took 1.966978198 seconds)
  done (took 5.437331401 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.99530105 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.228632245 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.940330955 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.696186028 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.69489079 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.990803492 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.495041548 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.226427084 seconds)
  done (took 29.903879753 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.799157544 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.924724186 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.367488221 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.398690155 seconds)
  done (took 15.173913434 seconds)
done (took 61.959878132 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.726294156 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.736023241 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.718965815 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.675658452 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.747397829 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.704425297 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.14711162 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.709736574 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.689606317 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.680646518 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.690447583 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.112808892 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.70190795 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.268055652 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.688677535 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.697000149 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.741165473 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.178977874 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.845467168 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.705116902 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.687341879 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.723260314 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.68872066 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.694381726 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.699757811 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.687295834 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.119239862 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.705388889 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.296225773 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.692593846 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.714592648 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.141330482 seconds)
  done (took 201.645634524 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.688013635 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.531622172 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.640697302 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.69254283 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.026243085 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.867511708 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.811321911 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.13212459 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.689028238 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.715702422 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.871433359 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.684777996 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.881342344 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.630437666 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.715942359 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.762302739 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.861143663 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.889828114 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.717947534 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.858006116 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.688473944 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.672385362 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.631127605 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.855504887 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.709239571 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.769176022 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.872601464 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.713804705 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.880849967 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.841991677 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.699078867 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.711398587 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.911597501 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.566319929 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.700306155 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.7042016 seconds)
  done (took 166.228276665 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.85324863 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.696269169 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.691615263 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.692443245 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.705585297 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.693121057 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.812681268 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.818119859 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.153026196 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.937668938 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.743921742 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.508967845 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.691082624 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.762306726 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.703080742 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.690243547 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.709843944 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.720258938 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.693287316 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.694175685 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.813853754 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.708148291 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.856883518 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.697489853 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.695124831 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.698792995 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.06464243 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.691280953 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.701076319 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.953787326 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.691145641 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.692700038 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.578588527 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.34126966 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.782441827 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.692433963 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.699846091 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.693518852 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.919267913 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.691437587 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.694795817 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.696914417 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.862762646 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.69166795 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.815103495 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.691355852 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.191657329 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.691386104 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.694724123 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.695375268 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.521047576 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.362945681 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.697904703 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.693524514 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.695548348 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.69432547 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.694568543 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.700059665 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.448420521 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.768239982 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.693319089 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.698880185 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.700470148 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.695629174 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.839993735 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.690694144 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.694474498 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.752258041 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.802444256 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.818586099 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.695752027 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.695206364 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.69567459 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.763646122 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.788141839 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.696879776 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.696498299 seconds)
    (77/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.69544438 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.69593582 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.696006808 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.778774989 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.693841001 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.87038363 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.701217285 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.695617476 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.747246753 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.76571916 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.692969652 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.59012027 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.702973119 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.694567167 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.000260598 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.759495582 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.695015038 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.694822013 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.695844626 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.847861526 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.816147904 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.462867146 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.696657048 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.554839985 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.698208268 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.851234156 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.693128445 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.881688515 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.694189437 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.779119734 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.698359492 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.698380493 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.69730634 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.728201384 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.696381473 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.75604138 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.69295837 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.068369102 seconds)
  done (took 392.727108956 seconds)
done (took 764.144516962 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.346007236 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.300122331 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.408723519 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.324295318 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.295667692 seconds)
  done (took 13.307771944 seconds)
done (took 14.942295542 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.784423587 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.78499822 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.718027149 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.785423353 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.714367757 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.785598194 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.76653432 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.719924191 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.753914801 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.719803372 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.755222354 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.718897719 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.711960249 seconds)
  done (took 24.352482794 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.933365178 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.931252757 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.768599728 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.929275369 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.745028171 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.931651035 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.861989238 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.847613531 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.849167897 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.716576986 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.711223028 seconds)
  done (took 21.861625092 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.931870814 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.939386481 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.774596744 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.93027486 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.747476418 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.940516283 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.861369051 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.855517905 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.850133141 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.715073458 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.710917113 seconds)
  done (took 21.892843925 seconds)
done (took 69.741102229 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.707612089 seconds)
  done (took 3.342678153 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.731780367 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.866407643 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.712152159 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.71050684 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.709687419 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.707804693 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.710564513 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.706148032 seconds)
  done (took 15.497259618 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.706566408 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.707695197 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.704182147 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.702839788 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.70313546 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.705624251 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.703484447 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.706218025 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.703370421 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.707031642 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.706525045 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.70606078 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.703887378 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.709209651 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.705093904 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.705729184 seconds)
  done (took 28.923894863 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.706944219 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.705141191 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.705667884 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.703301354 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.704043095 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.704594286 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.704383013 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.704348084 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.706814227 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.704678858 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.705507516 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.704710003 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.706096773 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.705287674 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.710814574 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.706048299 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.70579633 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.704625344 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.709830564 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.705465099 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.708026593 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.705073731 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.706488821 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.7042646 seconds)
  done (took 42.577790566 seconds)
done (took 91.977593309 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.611788049 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.114667191 seconds)
  done (took 8.364828644 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.71394714 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.708054549 seconds)
  done (took 5.100587725 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.707752422 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.708327648 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.709393664 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.712537541 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.708875202 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.706798307 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.708397802 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.70861115 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.708396365 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.712724961 seconds)
  done (took 18.73078597 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.709493728 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.709624589 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.705194423 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.70890997 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.710234191 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.706031665 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.709013327 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.709773404 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.7075688 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.706968287 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.711470889 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.707002704 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.708906778 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.707008654 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.709702839 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.706511352 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.707073369 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.706491136 seconds)
  done (took 32.386511315 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.70849518 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.710744922 seconds)
  done (took 5.057282924 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.708591646 seconds)
    (2/7) benchmarking "second"...
    done (took 1.707162151 seconds)
    (3/7) benchmarking "month"...
    done (took 1.707345263 seconds)
    (4/7) benchmarking "year"...
    done (took 1.707046767 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.70672842 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.708089071 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.708750817 seconds)
  done (took 13.593398777 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.711199708 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.878365898 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.959180525 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.39002851 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.71223754 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.713638639 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.650292774 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.713159565 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.718987642 seconds)
  done (took 19.087001282 seconds)
done (took 103.959427821 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.507911847 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.701783639 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.071231177 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.791772353 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.72141667 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.047099118 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.732513138 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.928368465 seconds)
done (took 42.141684669 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.721297378 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.259423038 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.291248032 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.062256751 seconds)
  done (took 12.253696346 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.690355302 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.235715181 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.740226087 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.302911499 seconds)
  done (took 19.632270113 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.072995319 seconds)
    (2/2) benchmarking "read"...
    done (took 2.069160537 seconds)
  done (took 5.78863 seconds)
done (took 46.038226822 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.712514916 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.711109974 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.709470445 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.711956913 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.711730062 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.708479963 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.712079012 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.711002117 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.713092489 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.712647438 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.714623246 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.712329729 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.713150722 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.70906327 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.709071464 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.711822905 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.711932312 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.708461775 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.709261257 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.709281783 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.711909948 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.70990088 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.713696859 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.709789887 seconds)
  done (took 42.710941569 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.711100033 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.709835567 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.713212703 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.71414144 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.710029295 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.7124845 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.712935464 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.709255528 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.716644825 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.711376537 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.708147729 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.70911867 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.712000455 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.711368077 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.716566766 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.711329889 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.714654954 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.710483076 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.715454125 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.711661359 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.717093106 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.710398194 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.709877051 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.711562448 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.710454274 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.711185988 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.716867976 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.711279934 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.712758115 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.711600296 seconds)
  done (took 53.00775557 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.717580593 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.723668832 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.714059482 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.713562874 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.713219666 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.713806392 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.714355231 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.715727891 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.714437965 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.714261292 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.715309116 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.715095646 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.719350117 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.715528427 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.714537379 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.714319009 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.714231832 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.714155197 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.716619856 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.714455389 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.714857511 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.713990897 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.714213941 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.714896611 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.71879262 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.71494804 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.714595557 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.715744641 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.715012114 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.715325871 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.72075597 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.715285662 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.714061016 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.716059687 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.715286249 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.715039755 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.72258391 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.723423774 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.715141901 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.715630791 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.715481982 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.715696068 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.717950846 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.716528892 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.716125198 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.716661676 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.716217385 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.72061856 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.716944404 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.716544602 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.716085531 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.715627991 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.717603736 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.717329554 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.716786828 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.717287348 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.716885433 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.717405214 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.717258797 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.720707767 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.717041406 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.716987641 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.7182282 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.717775529 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.717463467 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.721039233 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.717193257 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.717332757 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.716982405 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.717733805 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.717788974 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.72288374 seconds)
  done (took 125.240624041 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.717145531 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.716875716 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.715097774 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.714837956 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.715899242 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.718261123 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.716391318 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.718574406 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.715025767 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.723017592 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.717123775 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.716388228 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.716043313 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.718749873 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.718047434 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.71663074 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.718652444 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.715654176 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.718530626 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.720386404 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.718790169 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.718562956 seconds)
  done (took 39.433836553 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.719277094 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.719259787 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.716092115 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.71792981 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.720304595 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.718188602 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.72029236 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.71942984 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.718999116 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.715536458 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.719227616 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.71996142 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.717651544 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.716615004 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.717434238 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.717492491 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.722611261 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.717418278 seconds)
  done (took 32.582887083 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.717526788 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.716114676 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.72354589 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.718034245 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.717563743 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.719332169 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.718676219 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.720601894 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.721357502 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.717114405 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.721727701 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.720428004 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.720598828 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.717691029 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.721662422 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.717228914 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.719918458 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.717099784 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.719925543 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.718536768 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.721278505 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.720103943 seconds)
  done (took 39.476791989 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.720480294 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.720019626 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.719294377 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.72111061 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.717697423 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.720633638 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.721137919 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.718166416 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.720780771 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.72048081 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.718119718 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.721339275 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.71909276 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.720226741 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.719543555 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.718875424 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.721198265 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.719647447 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.722225644 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.71909202 seconds)
  done (took 36.050636821 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.722004118 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.722380491 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.722649998 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.722118921 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.722933426 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.723449548 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.72274036 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.722545188 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.721982667 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.724166918 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.721622333 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.723835442 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.722401114 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.723320217 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.723012581 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.722445133 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.724099808 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.725258765 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.723169596 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.72379314 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.722958918 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.723301396 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.724040203 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.722241495 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.723196621 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.722558259 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.722864187 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.722883233 seconds)
  done (took 49.90071353 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.722700737 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.721742295 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.718791113 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.719690649 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.720632727 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.722695739 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.720607532 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.7217935 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.722941309 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.719720359 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.72369412 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.726933306 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.724421457 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.723859934 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.72303818 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.723596807 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.723646794 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.724199309 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.721694733 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.722345817 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.723114083 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.722888213 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.724103933 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.721864657 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.722104892 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.725066328 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.721161572 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.722206146 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.724370014 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.721561537 seconds)
  done (took 53.332219829 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.744058326 seconds)
    (2/2) benchmarking "in"...
    done (took 1.742801709 seconds)
  done (took 5.142119141 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.722415371 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.724944335 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.725035499 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.722717148 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.723067349 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.725389367 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.726477792 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.722598164 seconds)
  done (took 15.447806056 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.724739839 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.725292955 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.725210778 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.726603816 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.727094538 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.727067244 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.731489995 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.727052244 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.727018768 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.727164235 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.732124351 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.734278304 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.729693098 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.727612482 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.727921541 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.727489266 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.725872049 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.727373703 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.72695078 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.725166747 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.730529465 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.727344986 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.727262746 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.72284883 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.72745399 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.736348982 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.731294826 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.725795425 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.725820501 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.730582851 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.726206889 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.723630495 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.727327933 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.727731669 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.72649269 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.726657765 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.734750388 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.727084533 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.732415209 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.727444389 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.726175294 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.723849316 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.727922742 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.729529211 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.727629952 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.728363536 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.726611379 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.724158242 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.728141853 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.730412332 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.73231691 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.727367204 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.725372523 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.730685607 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.728679684 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.73620676 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.728431127 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.730522062 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.737968895 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.738377307 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.74071755 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.736531719 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.729028237 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.729166382 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.737667186 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.754095572 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.736335037 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.726069528 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.725648312 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.728142438 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.73457389 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.742845334 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.740958616 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.728406935 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.729304441 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.728625088 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.729781805 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.728475415 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.737689188 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.731306704 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.728808651 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.728683744 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.73946561 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.752569846 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.732090872 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.72964143 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.729637086 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.728793787 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.72939075 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.741560923 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.73020855 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.730566489 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.729170935 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.728341602 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.730947666 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.729571844 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.72898587 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.729508187 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.725739095 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.730225997 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.731171957 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.734341207 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.738885271 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.731050988 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.731488048 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.736344382 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.72988942 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.731376934 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.736760313 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.72924099 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.72955697 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.730252141 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.736435814 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.727122071 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.73308013 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.739802479 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.731482841 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.731827615 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.733449084 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.732226567 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.74023935 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.758439072 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.729194049 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.731968518 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.736983014 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.743638421 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.731093017 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.73444219 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.73142885 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.728004446 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.728434876 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.732645084 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.732536167 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.731982666 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.732261803 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.732880656 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.731339004 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.730997416 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.73120937 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.733568658 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.732774253 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.735267392 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.732594209 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.734339073 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.731893188 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.73371487 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.738640243 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.734937416 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.734167836 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.734766006 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.729907403 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.7320221 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.734540006 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.736897265 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.733040267 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.733092211 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.732349224 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.733764543 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.733171674 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.737414779 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.733643969 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.733567476 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.736920025 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.734269133 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.73727168 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.73328192 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.731215302 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.73188803 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.733097479 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.733658853 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.735320502 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.733271298 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.737447617 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.743842534 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.734207285 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.735858861 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.737950332 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.733761627 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.734266211 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.734877966 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.73794501 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.743224445 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.735278947 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.743286104 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.738177872 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.736374447 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.732265304 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.73557096 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.734459135 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.734790863 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.736960314 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.740692188 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.74582767 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.743926172 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.734396424 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.737034389 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.7346283 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.737351151 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.737909359 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.735312105 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.733861035 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.733270899 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.733444016 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.732559969 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.736405416 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.734015489 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.734306394 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.734325697 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.735974175 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.738307185 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.738660338 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.734394971 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.733817126 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.732381703 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.735663462 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.736453066 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.734335194 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.732883139 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.734407075 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.736337454 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.736097957 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.734982381 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.741812188 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.733141532 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.735694425 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.735955753 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.736137637 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.732811377 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.73836132 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.73713388 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.735354046 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.739792864 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.736854466 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.735536333 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.741453727 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.735708126 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.734513789 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.738318616 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.735913291 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.734811439 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.739119799 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.745626507 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.735589584 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.737258709 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.736125643 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.738805254 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.736574337 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.743975441 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.734700623 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.734608357 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.736850526 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.736437974 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.735010483 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.736701804 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.73674028 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.736442612 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.739545496 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.737331786 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.736221978 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.738396214 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.737094126 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.737795658 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.736527821 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.740498387 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.74433918 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.739804856 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.737751141 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.73925529 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.740871134 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.740988141 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.736533309 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.737457097 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.736448478 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.751049299 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.747701674 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.744545978 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.738366424 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.739440565 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.74317325 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.739739014 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.74345737 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.737495836 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.737260157 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.739273144 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.737376916 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.736754412 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.73894529 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.737984458 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.739898149 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.740388621 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.742672767 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.740914531 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.738849857 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.739165087 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.739093476 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.740377715 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.737187022 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.740743934 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.742831161 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.740665635 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.737296115 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.739216915 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.747200737 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.74192926 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.741389802 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.743484502 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.73990845 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.74031403 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.743175719 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.74094706 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.744241266 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.748539436 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.743570438 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.749920891 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.743382665 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.749353955 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.739596064 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.743925077 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.750428547 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.738425184 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.740068221 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.740955572 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.739740076 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.74841797 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.74223324 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.742267924 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.746048222 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.742282019 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.743343446 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.741567601 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.741840339 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.742248784 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.741448629 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.750385687 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.743460254 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.744095112 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.744633244 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.739594315 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.742243585 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.742991508 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.740578911 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.746142102 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.742710555 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.74566092 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.740395116 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.742556858 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.742152482 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.742117337 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.743156854 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.74022336 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.743640312 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.747547155 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.744191917 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.747809764 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.743642349 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.750657533 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.743258828 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.748379661 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.745149849 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.74323353 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.744178658 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.742916249 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.74497865 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.742582704 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.743428552 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.744238284 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.74478717 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.747765316 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.744014733 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.746049834 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.744923074 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.745491562 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.744331643 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.753359866 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.767806376 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.744762729 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.748711869 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.742962058 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.745133733 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.747268789 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.744241507 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.743358527 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.747341065 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.755083605 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.75172282 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.745222244 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.744009882 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.743978533 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.74574052 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.745255925 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.74568919 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.745506078 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.745342403 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.746961901 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.746218485 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.747596774 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.743439205 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.746653092 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.746972809 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.746055143 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.75809573 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.7462894 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.747455108 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.745675873 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.746643302 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.747190467 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.745962746 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.745548345 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.747153592 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.74595829 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.74719143 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.75235207 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.752009141 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.749071568 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.745159284 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.746246576 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.74542278 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.747639288 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.745694024 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.746474808 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.747460348 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.74662894 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.746993472 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.7481511 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.745164219 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.746683773 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.747504039 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.74612119 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.748907621 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.754105973 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.746638716 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.743553108 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.747680987 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.746671414 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.747131887 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.748802366 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.754384274 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.750532768 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.757970038 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.75625549 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.753247265 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.74665662 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.749404755 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.754393698 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.746696083 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.748385794 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.748906844 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.750966187 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.748000389 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.750567803 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.748709415 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.755105 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.748095081 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.74724907 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.755503619 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.749566197 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.749107228 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.751786939 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.752652185 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.747898795 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.744818667 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.747066476 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.747730908 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.756455351 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.75063483 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.750835452 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.750382921 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.746123561 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.74989153 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.755313195 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.748783682 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.748709957 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.746418686 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.749406608 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.749555362 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.751319256 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.747403228 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.74959088 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.75027207 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.752706888 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.758927331 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.747359372 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.75205108 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.749195912 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.75074254 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.750549913 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.750505162 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.748030058 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.745355807 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.749520642 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.749569021 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.750461623 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.752271777 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.748757453 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.750204191 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.751550663 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.748014562 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.753019489 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.760042262 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.757503349 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.748304813 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.749594749 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.750912042 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.754351389 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.749179797 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.750568106 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.749463802 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.751359145 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.74877099 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.750593218 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.751164802 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.754420371 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.765276972 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.751879188 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.750157725 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.752426952 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.753977466 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.751324032 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.747677254 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.751326883 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.753981509 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.75410328 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.758779192 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.751640666 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.757860339 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.753286909 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.752766448 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.755743501 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.755152711 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.761040368 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.753081848 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.75125978 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.753510392 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.757371828 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.767443659 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.751207314 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.760853493 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.782380264 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.753301235 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.754139856 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.752338765 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.75180964 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.753393486 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.754615517 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.751838788 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.751922837 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.751574189 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.752770479 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.753769988 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.759112207 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.753773649 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.752422354 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.753668903 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.75363608 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.754235519 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.749900602 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.753290419 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.7540694 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.753858561 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.753961069 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.75371231 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.754160386 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.766657396 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.76372621 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.753794668 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.7541192 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.751570097 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.757933017 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.757766175 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.76581683 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.761931413 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.754639383 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.754653959 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.754536019 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.754791425 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.750010116 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.754654494 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.755531316 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.754674368 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.751278897 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.767050361 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.762980351 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.759734645 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.754918012 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.754475107 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.755813412 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.754998525 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.755402388 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.756034374 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.758130072 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.756388407 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.760730346 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.756214828 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.75492361 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.758258782 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.760938892 seconds)
  done (took 1039.854512976 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.7552306 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.75162226 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.753360716 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.753816527 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.753114328 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.753464468 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.752940678 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.753585378 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.753998333 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.752472453 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.753347655 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.752775573 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.753990347 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.754392094 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.752431271 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.752408509 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.753586147 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.753685918 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.752996335 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.752821893 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.753813448 seconds)
  done (took 38.505545602 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.755868984 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.75538731 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.753593907 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.757567108 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.753943139 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.75674155 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.754886778 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.755862008 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.756864246 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.754703797 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.757518397 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.757863259 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.754044559 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.752645038 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.754368045 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.758833814 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.758322068 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.756441282 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.757979985 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.754372836 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.758773497 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.755694534 seconds)
  done (took 40.31920869 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.758727758 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.759549946 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.757469036 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.755903148 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.75865583 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.753944797 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.758581715 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.759187243 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.758206212 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.760350253 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.758968732 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.760572104 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.765805322 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.763937955 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.760300644 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.760312328 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.90258232 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.759703162 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.75885979 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.758501529 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.756530909 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.764049158 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.756680262 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.756707208 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.757713828 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.759293061 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.75966729 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.76000457 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.757700427 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.760777215 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.764055958 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.759283065 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.75975706 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.762353376 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.758274208 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.76195667 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.763029452 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.759200837 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.756425551 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.759920331 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.768305551 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.780142536 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.76104002 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.766328718 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.759723899 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.760572874 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.76239266 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.767410241 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.758782196 seconds)
  done (took 88.09758629 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.760296853 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.761102345 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.75835732 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.75852644 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.76212419 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.761272642 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.760937805 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.760516504 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.756553873 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.758172304 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.761124286 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.759757605 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.758442211 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.761186352 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.760131341 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.758151792 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.758819565 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.756709953 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.757837254 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.759328889 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.758753635 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.760534383 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.762030659 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.759030082 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.761587102 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.758056802 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.759347507 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.761144989 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.761061338 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.758984436 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.761797554 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.760960513 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.761894865 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.759891715 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.759876602 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.761395344 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.761463899 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.758799197 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.761199323 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.760108279 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.762281454 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.762828459 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.763604113 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.760124989 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.758615059 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.759482901 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.757969891 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.759188363 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.758056251 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.761777643 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.763014912 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.759506223 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.76176119 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.760637736 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.762012734 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.762507553 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.76039649 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.759627605 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.76449736 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.761224782 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.760220806 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.764209761 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.761699141 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.763720097 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.763906209 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.760372381 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.761871239 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.762152222 seconds)
  done (took 121.406240794 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.764161093 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.762690015 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.763347355 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.763338099 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.763417291 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.763439471 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.762856023 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.764219618 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.764453545 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.763485233 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.765945491 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.765032116 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.764421615 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.765123607 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.765643105 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.765842278 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.765652521 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.764355195 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.766210218 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.76392 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.764612906 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.764747476 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.764807964 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.766200685 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.765796385 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.76533754 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.765363279 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.766457952 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.765938517 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.765105875 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.766008478 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.765501296 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.765428826 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.764729106 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.767007757 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.766583986 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.766142512 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.765405318 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.765901368 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.765731655 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.766119934 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.765490407 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.766646615 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.766048301 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.766549933 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.767982282 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.766246315 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.767315409 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.767108229 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.76664859 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.767340393 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.766950459 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.766867108 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.76791686 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.767999971 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.766537448 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.767001741 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.766520064 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.768065555 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.768035344 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.767442586 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.768292759 seconds)
  done (took 111.16967975 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.767857852 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.767709206 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.763227043 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.765352299 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.767500703 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.763753142 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.766785009 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.766500851 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.767685827 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.767166358 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.766284299 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.765214984 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.764986835 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.767137153 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.76635492 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.763889712 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.76585263 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.764959783 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.767220282 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.764648057 seconds)
  done (took 37.015743423 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.765311919 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.767343401 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.764751692 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.764909164 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.766827131 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.764991524 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.768360855 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.767324992 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.765336308 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.768134753 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.76700617 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.768265785 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.766332969 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.764970914 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.767880069 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.765004965 seconds)
  done (took 29.958500934 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.765625401 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.766936861 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.767947367 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.768296774 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.764499156 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.76612749 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.768939683 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.765594956 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.76535361 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.768407054 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.768630395 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.767906131 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.767571449 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.768442193 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.767148708 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.768506391 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.765962071 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.76504147 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.76992749 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.769545364 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.7659354 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.76657696 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.769169381 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.768120538 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.767590091 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.768003283 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.766876864 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.766677406 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.765512136 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.767935922 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.766413676 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.766127343 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.766234348 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.765736629 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.769675758 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.76598762 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.768543103 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.769573741 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.768854026 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.768831024 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.77038294 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.767186553 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.768896713 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.769898802 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.767075977 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.771284805 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.767843548 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.76843135 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.768514479 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.766879977 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.771346844 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.771193573 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.770608244 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.770950409 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.770697438 seconds)
  done (took 98.935448778 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.771526143 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.771691513 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.770958089 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.77405086 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.771789272 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.768859087 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.772948863 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.770885774 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.768777392 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.771558634 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.768506942 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.77200826 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.768365333 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.770964233 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.769836013 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.771125577 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.76933637 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.770314261 seconds)
  done (took 33.575429488 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.769901353 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.769563745 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.773002567 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.769585521 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.769135896 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.773320869 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.768537787 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.772038548 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.772685578 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.769327462 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769637259 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.77157184 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.770765123 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.771331959 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.767418994 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.770376951 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.772559806 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.772877046 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.768865003 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.770196048 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.773189673 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.771250522 seconds)
  done (took 40.658431941 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.77158456 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.772466721 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.7894212 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.793496622 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.793755409 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.807510888 seconds)
  done (took 12.430214048 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.771947398 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.774730554 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.771286695 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.774567033 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.772323323 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.771445882 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.772555572 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.770893105 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.773405873 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.772401925 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.772026777 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.774209436 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.775028709 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.773317113 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.77575697 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.774506874 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.772151182 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.772017445 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.77347105 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.775784198 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.771928029 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.775632282 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.770974231 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.772863639 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.772330163 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.771747387 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.774433964 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772945423 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.770690855 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.773001021 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.77548365 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.771732648 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.775064166 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.773715391 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.777320638 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.776107707 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.773323034 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.774324382 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.774926074 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.772397026 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.775709175 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.773974802 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.774924357 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.772908102 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.7755142 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.772323042 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.772499943 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.772778481 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.773099543 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.77663486 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77493791 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.773809466 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.776222632 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.774599447 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.775916926 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.77623354 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.775597585 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.775447258 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.777678185 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.775423182 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.774221192 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.777078321 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.774373814 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.774606596 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.776329257 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.774298275 seconds)
  done (took 118.786966057 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.775550502 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.774956897 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.775577178 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.776565731 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.775625942 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.775061989 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.773588994 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.775433264 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.775565876 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.774751026 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77767885 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.774220281 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.773284219 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.776257795 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.775223633 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.774958716 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.776028173 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.774615363 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.776276994 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.776178283 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.775874457 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.775779043 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.774072602 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.774280405 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.776744521 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.777824003 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.7759189 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.776085726 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.775452334 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.774638063 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.776755537 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.775474295 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.776537593 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.77538204 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.775352333 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.775228434 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.776340872 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.774966383 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.775977061 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.778515969 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.775867083 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.780746481 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.776540518 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.77608043 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.777869447 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.77618186 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.776691299 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.777035209 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.775832846 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.777265905 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.776978626 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.775717754 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.776644511 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.776182764 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77626082 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.775973452 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.776539836 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.777422034 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.777341007 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.780563942 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.777420419 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.776407496 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.780317389 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.777309719 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.775429839 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.776567315 seconds)
  done (took 118.933990754 seconds)
done (took 2423.618579725 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.7880732 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.943881115 seconds)
  done (took 15.439155139 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.938928506 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.894382599 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.777559346 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.782580158 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.776521295 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.79489435 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.790921936 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.775317745 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.777087602 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.777446044 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.777788541 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.966293202 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.780722365 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.776326039 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.778103656 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.871189226 seconds)
  done (took 50.748077813 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.7826879 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.781948038 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.793535683 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.78333529 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.781684504 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.800366105 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.813695733 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.784900621 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.842378278 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.793928053 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.904906487 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.790502676 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.782920286 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.842984371 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.793408682 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.79764198 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.869075295 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.857243347 seconds)
  done (took 34.306323859 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.862995092 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.783340375 seconds)
  done (took 10.364155566 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.793897446 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.798763261 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.776086768 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.798338715 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.772505555 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.78038057 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.798237428 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.793062754 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.782611482 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.809170071 seconds)
  done (took 69.616678837 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.789274417 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.784118761 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.784434333 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.781887315 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.774311547 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.778931975 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.783181458 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.780965511 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.477090632 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.817720422 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.791168631 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.78733012 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.78184239 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.78386414 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.781144328 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.804985925 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.911900804 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.780935386 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.780452065 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.789754856 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.783225923 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.836307406 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.796636011 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.782722583 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.81383295 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.474571245 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.791046126 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.790394779 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.903357865 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.782594709 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.782801937 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.784040945 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.785311176 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.158167382 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.059835308 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.781532795 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.790354242 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.790667459 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.779688552 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.909833983 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.784566033 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.790520468 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.776420978 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.036174635 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.883898441 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.826700835 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.197954631 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.788557813 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.786285126 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.814204301 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.789454118 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.784854587 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.798844094 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.300060591 seconds)
  done (took 127.995298154 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.779171078 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.078494052 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.932692561 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.781886378 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.0539331 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.986476778 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.778025298 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.829258852 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.781773854 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.98387066 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.943109807 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.887659353 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.780091245 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.777970855 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.774676919 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.777317703 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.944739743 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.848565095 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.783771512 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.777165902 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.808878961 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.993774827 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.908187179 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.782314986 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.801716369 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.993959159 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.907359705 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.890225509 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.079471769 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.778712805 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.845284213 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.782380043 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.780336469 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.780031869 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.937690061 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.878393545 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.871940141 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.781457549 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.779317843 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.778259159 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.443844335 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.978886665 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.880958652 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.926248205 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.977514276 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.984993818 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.427806952 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.77849951 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.41729777 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.943937657 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.995916711 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.999637834 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.906596327 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.784240742 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.019896418 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.779646686 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.781348606 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.020288306 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.927415782 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.890897608 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.782555278 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.780767504 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.780383698 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.028337153 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.782162799 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.880470915 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.781664903 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.779308333 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.882224747 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.892973822 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.924741574 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.997021278 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.818027321 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.725097438 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.296439432 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.998713411 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.85122379 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.021050068 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.781757573 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.778247098 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.869341994 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.536513379 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.942884888 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.034244467 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.006857223 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.819162448 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.390628334 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.780190458 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.980673994 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.970874754 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.979301778 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.993562363 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.938743864 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.983053916 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.780946881 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.782961698 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.984845045 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.920943065 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.784647757 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.141948886 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.018677084 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.405438234 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.80529622 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.080993221 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.921680557 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.148518848 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.411894544 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.783404971 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.952518958 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.824372286 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.785188235 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.785304638 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.977695518 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.593850068 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.785059763 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.293476289 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.8496943 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.787949034 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.992073302 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.785346049 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.996571366 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.785514404 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.025532408 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.872029675 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.819822822 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.957624125 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.993606178 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.580936274 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.03657832 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.032030153 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.90443785 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.00901737 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.381042611 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.786050373 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.062425515 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.785486225 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.785361383 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.955403976 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.786680295 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.935627361 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.786972895 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.016513414 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.810579468 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.946572545 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.788574514 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.022528374 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.821559655 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.838624567 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.787683185 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.91760108 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.787176542 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.672186268 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.941226703 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.787309815 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.784195872 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.210347758 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.786144616 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.934239923 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.02111242 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.810767306 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.857965449 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.316908174 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.786937984 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.874642059 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.813609284 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.199020817 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.787298762 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.947485425 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.756241849 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.218350687 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.785759166 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.02951306 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.971636739 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.789486718 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.784021367 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.533271071 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.498272887 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.786406459 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.947155942 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.46785547 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.437238651 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.991837845 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.789622531 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.918551556 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.789927486 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.869525882 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.138759485 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.787219862 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.7876717 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.787959078 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.789375231 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.78784074 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.997061064 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.820160776 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.287665062 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.926616394 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.006115985 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.098019722 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.010252698 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.833347313 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.792855121 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.048946768 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.789438988 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.856154517 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.787606356 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.810934169 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.024048842 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.790196532 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.023001813 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.042503474 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.692920315 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.839490585 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.788961089 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.789931312 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.788395802 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.940743924 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.883673247 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.788288738 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.78889983 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.904435175 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.917453396 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.978868434 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.380061472 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.96318286 seconds)
  done (took 878.587836959 seconds)
done (took 1188.766778165 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.79044783 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.787542936 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.7745129 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.793460534 seconds)
  done (took 28.868170014 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.801150729 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.798866482 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.800436402 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.799664471 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.800969284 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.799626257 seconds)
  done (took 12.526276103 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.854795271 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.790562702 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.792368821 seconds)
  done (took 21.163320405 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.867688777 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.212719773 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.902685179 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.245949136 seconds)
  done (took 9.956616633 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.80191149 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.801264724 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.800582147 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.800764945 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.801198955 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.803484409 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.801529435 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.803161914 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.802170275 seconds)
  done (took 17.944044302 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.142712513 seconds)
done (took 96.323950988 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.998871445 seconds)
    (2/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.936101201 seconds)
    (3/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.794464866 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.905792686 seconds)
    (5/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.779371148 seconds)
    (6/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.985834349 seconds)
    (7/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.879279077 seconds)
    (8/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.819648228 seconds)
    (9/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.095542501 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.931762253 seconds)
    (11/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.8129963 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.838929489 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.175507833 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.839428123 seconds)
    (15/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.08660419 seconds)
    (16/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.545361596 seconds)
    (17/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.013775408 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.826344524 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.092454489 seconds)
    (20/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.799165771 seconds)
    (21/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.237704059 seconds)
    (22/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.796821989 seconds)
    (23/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.053725844 seconds)
    (24/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.27566402 seconds)
    (25/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.931001214 seconds)
    (26/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.128586074 seconds)
    (27/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.471602068 seconds)
    (28/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.908904501 seconds)
    (29/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.797798542 seconds)
    (30/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.91899058 seconds)
    (31/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.89875022 seconds)
    (32/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.300889271 seconds)
    (33/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.991238313 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.87432056 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.954460959 seconds)
    (36/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.101601226 seconds)
    (37/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.819704939 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.122238233 seconds)
    (39/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.799740431 seconds)
    (40/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.885443866 seconds)
    (41/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.940698245 seconds)
    (42/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.783938315 seconds)
    (43/309) benchmarking ("sort", Float32, false)...
    done (took 7.243742147 seconds)
    (44/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.816177121 seconds)
    (45/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.399038427 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.716070988 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.829804673 seconds)
    (48/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.000150572 seconds)
    (49/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.788160789 seconds)
    (50/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.936633478 seconds)
    (51/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.797161673 seconds)
    (52/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.013096877 seconds)
    (53/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.103407764 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.467490388 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.59115713 seconds)
    (56/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.004573694 seconds)
    (57/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.796789168 seconds)
    (58/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.864471358 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 3.756130645 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.91028967 seconds)
    (61/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.010299878 seconds)
    (62/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.199232449 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.074720669 seconds)
    (64/309) benchmarking ("sort", Float64, false)...
    done (took 5.609014757 seconds)
    (65/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.814816339 seconds)
    (66/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.990705351 seconds)
    (67/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.79939211 seconds)
    (68/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.202236198 seconds)
    (69/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.893870986 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.855688648 seconds)
    (71/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.814261252 seconds)
    (72/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.409077559 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.002232817 seconds)
    (74/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.887262337 seconds)
    (75/309) benchmarking ("map", identity, Float64, false)...
    done (took 3.713982428 seconds)
    (76/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.030907533 seconds)
    (77/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.398618647 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.173034019 seconds)
    (79/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.807873243 seconds)
    (80/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.174460403 seconds)
    (81/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.881385778 seconds)
    (82/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.995667574 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.678120383 seconds)
    (84/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.91779884 seconds)
    (85/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.147067923 seconds)
    (86/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.944639057 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.902143126 seconds)
    (88/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.399459482 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.892328522 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 5.511309697 seconds)
    (91/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.15114882 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.239119794 seconds)
    (93/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.827029554 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.187889878 seconds)
    (95/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.826764517 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.440786367 seconds)
    (97/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.942706164 seconds)
    (98/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.022026388 seconds)
    (99/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.690513498 seconds)
    (100/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.798206653 seconds)
    (101/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.047813759 seconds)
    (102/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.645225125 seconds)
    (103/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.729645076 seconds)
    (104/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.381515452 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.900647114 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.824344104 seconds)
    (107/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.799651925 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.447640139 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.835479009 seconds)
    (110/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.082221516 seconds)
    (111/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.483824381 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.806958832 seconds)
    (113/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 3.422479076 seconds)
    (114/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.086972326 seconds)
    (115/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.850027143 seconds)
    (116/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.19001937 seconds)
    (117/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.799419233 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.917841391 seconds)
    (119/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.785783966 seconds)
    (120/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 3.193966956 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.01304185 seconds)
    (122/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.0772749 seconds)
    (123/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.929343045 seconds)
    (124/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.902202302 seconds)
    (125/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.864128037 seconds)
    (126/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.868848523 seconds)
    (127/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.31338259 seconds)
    (128/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.808167862 seconds)
    (129/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.872638968 seconds)
    (130/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.238949292 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.400328617 seconds)
    (132/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.824836675 seconds)
    (133/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.285768347 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.146401281 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 2.246461654 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.826438447 seconds)
    (137/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.897349139 seconds)
    (138/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.985754875 seconds)
    (139/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.867932675 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 3.741016232 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.017775701 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.07869263 seconds)
    (143/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.026124786 seconds)
    (144/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.240520602 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.913007689 seconds)
    (146/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.171350923 seconds)
    (147/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.805382325 seconds)
    (148/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.026398273 seconds)
    (149/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.755898784 seconds)
    (150/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.935435965 seconds)
    (151/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.934718983 seconds)
    (152/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.144517526 seconds)
    (153/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.911969276 seconds)
    (154/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.082006686 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.769060095 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.783663404 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.037605451 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.831667814 seconds)
    (159/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.866712921 seconds)
    (160/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.888215527 seconds)
    (161/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.789427869 seconds)
    (162/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.979040792 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.833207353 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.510888749 seconds)
    (165/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.873178086 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.103543712 seconds)
    (167/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.791386261 seconds)
    (168/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 3.459799064 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.802544442 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.977442233 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.188523864 seconds)
    (172/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.885610743 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.605090033 seconds)
    (174/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.410394112 seconds)
    (175/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.930196518 seconds)
    (176/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.16212117 seconds)
    (177/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.788938673 seconds)
    (178/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.390401163 seconds)
    (179/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.333124563 seconds)
    (180/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.806415627 seconds)
    (181/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.231271603 seconds)
    (182/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.315240092 seconds)
    (183/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.009958767 seconds)
    (184/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.412274609 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.079868162 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.836278464 seconds)
    (187/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.803957167 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.849400374 seconds)
    (189/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.872717275 seconds)
    (190/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.016587337 seconds)
    (191/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.943474575 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.794860775 seconds)
    (193/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.880738559 seconds)
    (194/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.869432966 seconds)
    (195/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.438534336 seconds)
    (196/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.396228294 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.863206447 seconds)
    (198/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.791658003 seconds)
    (199/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.778863574 seconds)
    (200/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.81161934 seconds)
    (201/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.160913599 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.905163101 seconds)
    (203/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.903757287 seconds)
    (204/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.936195002 seconds)
    (205/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.987617326 seconds)
    (206/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.823307834 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.806130144 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.10899806 seconds)
    (209/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.902869364 seconds)
    (210/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.902271991 seconds)
    (211/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.92809026 seconds)
    (212/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.114195709 seconds)
    (213/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.02405525 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.611953019 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.015304103 seconds)
    (216/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.941392372 seconds)
    (217/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.329507959 seconds)
    (218/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.902411916 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.221097449 seconds)
    (220/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.92051304 seconds)
    (221/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.121546149 seconds)
    (222/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.376985781 seconds)
    (223/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.804326007 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.081928435 seconds)
    (225/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.108670004 seconds)
    (226/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.840742534 seconds)
    (227/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.817395058 seconds)
    (228/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.97344968 seconds)
    (229/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.900266374 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.831307274 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.055161184 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.807973277 seconds)
    (233/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.965591593 seconds)
    (234/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.838092688 seconds)
    (235/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.542135104 seconds)
    (236/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.023998387 seconds)
    (237/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.545899661 seconds)
    (238/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.941197544 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.850174472 seconds)
    (240/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.690301428 seconds)
    (241/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.429840711 seconds)
    (242/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.889447388 seconds)
    (243/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.63757163 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.061439387 seconds)
    (245/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.796195998 seconds)
    (246/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.972254909 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.82920657 seconds)
    (248/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.14615654 seconds)
    (249/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.110864812 seconds)
    (250/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.797915645 seconds)
    (251/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 3.491174628 seconds)
    (252/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.033168038 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.811774571 seconds)
    (254/309) benchmarking ("sort", Int8, false)...
    done (took 4.845487507 seconds)
    (255/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.108676262 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.892174904 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.703719548 seconds)
    (258/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.405107148 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.915765209 seconds)
    (260/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.824836362 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.500517536 seconds)
    (262/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.98026646 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.813702971 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.189527717 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.840005611 seconds)
    (266/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.890076569 seconds)
    (267/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.839297602 seconds)
    (268/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.076976346 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.201965348 seconds)
    (270/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.956877216 seconds)
    (271/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.997427339 seconds)
    (272/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.985813858 seconds)
    (273/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.899245203 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.85998409 seconds)
    (275/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.003545842 seconds)
    (276/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.813907946 seconds)
    (277/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.978390143 seconds)
    (278/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.245859858 seconds)
    (279/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.83695159 seconds)
    (280/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.157735271 seconds)
    (281/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.072514393 seconds)
    (282/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.878068061 seconds)
    (283/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.838272208 seconds)
    (284/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.403065795 seconds)
    (285/309) benchmarking ("sort", BigInt, false)...
    done (took 6.944703799 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.07745032 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.909117426 seconds)
    (288/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.898715034 seconds)
    (289/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.810938717 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.894131913 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.95113287 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.797114674 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.635398496 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.150840559 seconds)
    (295/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.882788114 seconds)
    (296/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.092020977 seconds)
    (297/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.923036002 seconds)
    (298/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.006056925 seconds)
    (299/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.738964119 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.857979531 seconds)
    (301/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.797562463 seconds)
    (302/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.888067757 seconds)
    (303/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.310778166 seconds)
    (304/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.815940527 seconds)
    (305/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.203771313 seconds)
    (306/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.819218762 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.839563342 seconds)
    (308/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.405798691 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.861224026 seconds)
  done (took 1000.41968861 seconds)
done (took 1002.215744628 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.852880015 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.841433728 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.825367343 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.845975651 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.93643106 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.859023947 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.834403462 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.826972651 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.87490968 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.874773003 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.821732933 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.858506235 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.825720379 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.825410253 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.825819156 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.839247666 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.141350366 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.85506477 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.842444755 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.83456303 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.842704624 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.826424717 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.875063445 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.857535326 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.829749469 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.829769098 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.828889024 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.847419271 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.938529463 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.831076972 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.830162384 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.83882223 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.140962818 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.851655228 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.820555629 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.847934509 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.838707304 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.835409233 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.831459755 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.858413792 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.28058357 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.833439113 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.829391369 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.827005149 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.827562751 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.832275793 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.829141405 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.834598959 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.840978816 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.842862477 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.280500896 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.849878327 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.832182369 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.82816034 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.838886025 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.828105276 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.830988255 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.843219299 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.847039733 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.84495796 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.129869343 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.859858372 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.829635967 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.84512537 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.836880313 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.315664289 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.829478572 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.833412266 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.280555463 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.839620051 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.316945035 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.843647175 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.82912049 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.843264357 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.858058676 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.139456914 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.849898795 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.826831602 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.837415311 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.827599415 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.838521019 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.842137313 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.834861656 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.830104159 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.845435801 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.861900388 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.839686755 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.830494329 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.838040022 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.84969424 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.836575225 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.840916674 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.833115623 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.824527572 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.837834718 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.832867215 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.832110204 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.833854862 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.835698346 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.840211894 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.280143957 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.854023577 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.825970255 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.826175014 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.829549027 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.844400626 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.280734758 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.836181836 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.852285653 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.877024673 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.832527873 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.132936416 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.861785244 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.84644624 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.839855997 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.833594941 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.826822051 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.132436624 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.313811705 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.851262131 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.832569926 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.83128758 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.847292904 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.834299538 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.826659336 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.145170328 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.859456333 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.846356143 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.95405994 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.841743805 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.862302323 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.831510231 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.836528011 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.865908829 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.847873937 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.864091858 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.833600249 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.847180808 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.848383627 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.828816779 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.842738924 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.841724478 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.833742159 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.837383079 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.824547722 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.864322706 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.845666671 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.846008939 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.85371552 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.95287021 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.828558127 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.13490266 seconds)
done (took 287.905637409 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.899651426 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.819457111 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.929443591 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.828415221 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.911554178 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.91182668 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.824341447 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.826498569 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.825316726 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.239844128 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.827020322 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.826161578 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.825130115 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.825698952 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.911488805 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.828290495 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.825014716 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.169223294 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.828475386 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.899353763 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.825877114 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.826532559 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.828999603 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.210347211 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.823730502 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.829320032 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.900101617 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.828304672 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.206400481 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.821125296 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.82396712 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.175834133 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.917965839 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.848711423 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.841210615 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.837242902 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.91466048 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.835453125 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.911456341 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.911826352 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.932137252 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.87059861 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.823119539 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.823353985 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.833313965 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.832995044 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.827845769 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.857857106 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.823131338 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.828760382 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.200870477 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.840237156 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.838650306 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.830967502 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.827887624 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.851655416 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.828928229 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.832798448 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.920094855 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.834274892 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.893167034 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.24731144 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.208796276 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.831027907 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.825187138 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.830223338 seconds)
  done (took 181.751015753 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.896903871 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.91493786 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.900189604 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.833695693 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.883987213 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.906556494 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.835139651 seconds)
  done (took 14.928980847 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.836600616 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.83247127 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.880743721 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.880888071 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.831609427 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.981409627 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.831892101 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 2.28726614 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.829661609 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.884228595 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.831919293 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.830062975 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.838833866 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.828150267 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.881282801 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.84452234 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.947218427 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.834103042 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.83305068 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.981521321 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.829499409 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.839137473 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.886384204 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.845183585 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.834201821 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.841295617 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.41434613 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.834232983 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.829364036 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.832076072 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.832040057 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.877757112 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.83387615 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.826320848 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.831824419 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.949933547 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.834455085 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.831449041 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.839051883 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.83336221 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.834403566 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.838362205 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.832910994 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.831498288 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.833014182 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.856504243 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.835500367 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.834574056 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.833775942 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.833244841 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.883186582 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.834000844 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.83225082 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.832021226 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.8902106 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.8414407 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.835651989 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.829929673 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.835424518 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.832207561 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.986907616 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.882110864 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.835388962 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.884011562 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.834515003 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.835691027 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.833113181 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.835178294 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.897196973 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.8354823 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.88350875 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.833211735 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.994944243 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.858682806 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.837822879 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.836977994 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.839257381 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.835823576 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.830569288 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.842980129 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.8338612 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.836351116 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.841131767 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.832913293 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.832482171 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.947034774 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.944916014 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.833308037 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.849361374 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.84309908 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.833716168 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.890715376 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.838084554 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.833755609 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.887212418 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.951683789 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.892988201 seconds)
  done (took 202.748613999 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.840390631 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.843995798 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.837273481 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.851361597 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.835939102 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.836835101 seconds)
  done (took 12.806567709 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.839580164 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.837705328 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.835850123 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.837088503 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.83664723 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.837161166 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.837912973 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.839046324 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.843234672 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.839348689 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.837865391 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.83819027 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.839532734 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.838692784 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.839176471 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.838082884 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.837908082 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.835785857 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.839998316 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.84173063 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.995659619 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.841863925 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.840556053 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.839963142 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.843322679 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.837471598 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.846394122 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.83947184 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.840049312 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.845164005 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.843468874 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.83787084 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.839706243 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.844684727 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.843056705 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.840868471 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.842945906 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.839306777 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.836600165 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.839659855 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.840190188 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.84036257 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.839300699 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.83815262 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.839692759 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.845719692 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.844392325 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.846351189 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.841277801 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.8407735 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.84117346 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.841241101 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.841290074 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.839396097 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.84036957 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.843267237 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.845823935 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.840991865 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.84066223 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.843383716 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.843096062 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.841243025 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.842257826 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.845629618 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.838748822 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.843194597 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.841362477 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.844237569 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.842680597 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.840819035 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.842418716 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.837340627 seconds)
  done (took 135.44774784 seconds)
done (took 549.453580283 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.089567614 seconds)
  done (took 8.852848412 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.977947391 seconds)
  done (took 8.833070328 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.499530753 seconds)
  done (took 10.265410273 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.849798696 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.849523334 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.842352153 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.838741313 seconds)
  done (took 29.158038189 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.900410048 seconds)
  done (took 8.665715858 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.851624753 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.831716457 seconds)
  done (took 15.484282812 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.016942215 seconds)
  done (took 8.784583192 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.030894543 seconds)
  done (took 8.805973463 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.854552667 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.849800474 seconds)
  done (took 15.486009381 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.821256412 seconds)
  done (took 8.587676933 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.571182736 seconds)
  done (took 11.346277587 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.835834111 seconds)
  done (took 8.617550362 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.914388689 seconds)
  done (took 8.681104215 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.135592331 seconds)
  done (took 9.901115534 seconds)
done (took 163.234984366 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.838810852 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.835447288 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.835293849 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.836449518 seconds)
  done (took 29.110232966 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.877170959 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.876984781 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.876916038 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.886609969 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.877988334 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.87720213 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.867558094 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.868719515 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.887768913 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.880298212 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.877040643 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.878451487 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.876226498 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.869825764 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.879911859 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.877463243 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.888717231 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.878171018 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.870117925 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.880784903 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.843606877 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.887556552 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.880441266 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.844293683 seconds)
  done (took 46.777535668 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.04017357 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.913027803 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.997033505 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.896703976 seconds)
  done (took 9.614467654 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.893541436 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.896273383 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.909956958 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.955998133 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.975425056 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.907337123 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.874789771 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.865070507 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.852699128 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.897169422 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.973208843 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.913987671 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.981587112 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.843625846 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.033798011 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.845011846 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.84646326 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.898181721 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.949021093 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.964692643 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.846557511 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.897220001 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.899771615 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.914622524 seconds)
  done (took 47.604796678 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.844000761 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.853081414 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.848905457 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.84478697 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.843693863 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.845653929 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.851486325 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.84539354 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.865383937 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.845880239 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.844731647 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.845212822 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.84350134 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.845069782 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.844515111 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.857821443 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.858450149 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.845253688 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.848366237 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.852044523 seconds)
  done (took 38.742858077 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.838996051 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.693644596 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.191879267 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.095375423 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.837765833 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.838821206 seconds)
  done (took 31.267567258 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.859540582 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.852640885 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.846161234 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.902463153 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.983827626 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.854961584 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.844936576 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.857349195 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.893769548 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.910451788 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.866887548 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.875204055 seconds)
  done (took 24.319520453 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.841878646 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.839753253 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.840829482 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.856344723 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.859105474 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.855237255 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.85447044 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.839716039 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.859307681 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.866908596 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.856406082 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.857684707 seconds)
  done (took 44.002284932 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931600624 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.886631437 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.882210003 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.532954816 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.219017958 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.050977719 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.493655876 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.174238907 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.843350311 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.116629662 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.906489487 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944870995 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.099778108 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.398930968 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.879188116 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.302829711 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.142102866 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.065789436 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872216748 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.536311725 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909456289 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.097069579 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.611315655 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.904146174 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.054877363 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.976350454 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.103340136 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.842625446 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980267425 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.881747083 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853543102 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.843562278 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.117143249 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.226768353 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946618444 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853494393 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.463302422 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.556681412 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.828681288 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.609953127 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.58956797 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.968119953 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854870793 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84466371 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.77981421 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.063417075 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.225401923 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.847777966 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.555469232 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.845201247 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.855964369 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939128275 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.846633246 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.66091069 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.764140036 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.843316708 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.842209369 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85111368 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.418357701 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.96996701 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.094099429 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.82622968 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.936086403 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.630098989 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.240098361 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.997919949 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.847599682 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.849961199 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779698219 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.607259916 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.905221699 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.176026551 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.861417434 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.49706413 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15006117 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.984569243 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.787662242 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127244704 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.450712177 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.825464366 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.074635752 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847293187 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.782344669 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.790113639 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.781527723 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.117437475 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886581705 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.646321708 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889124301 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.175836341 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.854753928 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863763423 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87127823 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.071344098 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.733760367 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848802708 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.671984191 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.989225006 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866354954 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.178362907 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.780539717 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.849335462 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.105962119 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.059774929 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.976126476 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.347574275 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005200346 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.476955974 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.905389589 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.059550285 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.899894186 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.124101291 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.910368731 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.97367271 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902576164 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.84932705 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154078097 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.503762077 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.989606938 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.89759805 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.976613961 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.181939913 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87461768 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931027639 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.857285135 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.848485636 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.621423793 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.404061449 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.849313927 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.851379611 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.975573541 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.899660558 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.849027139 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79686614 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.4716132 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.921217973 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.866733579 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.074726778 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.489793564 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16476338 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.783694001 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.180271858 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.939636713 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.069102618 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.492359131 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.919947746 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.110147692 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.981838582 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.017096996 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.899899394 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868961962 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947258896 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871084657 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.058059844 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.148896868 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.854732229 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.856097496 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.651495088 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.885328619 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851303286 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.855670588 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.601862999 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123421471 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.877492468 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.85388688 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.741655543 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.864378499 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916127252 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.856044993 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.860585422 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.395363486 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.561983462 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.8553846 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.437502038 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075240126 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861798082 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.639371522 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.970015826 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.934618553 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.122542255 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916023835 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.784966203 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.56305978 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.545333102 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85055316 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.787092539 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.851359735 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860127446 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.863640333 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.048967606 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.130789673 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898952698 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.547187058 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.89646212 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864244203 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.85809726 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854327433 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.368677846 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.981155422 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.104787094 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.900463558 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995644477 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.867500302 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.787545413 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.854968619 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.859190805 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.854328388 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.852645395 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885739589 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.551330727 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.23850558 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.111281677 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.50256172 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864206213 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.648729963 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.914816784 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.856199876 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.706494397 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.094188952 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.885931595 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868769878 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.865516111 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.620675833 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.566618916 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.421687802 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.174473101 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.163645706 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.298639464 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.133672529 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.88401643 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.19030181 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.786134566 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.411858631 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.91582827 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.196867974 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79681658 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93799485 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.499360063 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.195297809 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.868916121 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.081874367 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.250058184 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.609772377 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.996816004 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.067807256 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892082682 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.08237106 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.819489924 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.377207379 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000264721 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.57100178 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.060976273 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189089745 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.547534957 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.980029213 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.854284891 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.543311593 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942935192 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.568015142 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.028972278 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.096613444 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.812328212 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332318173 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.858557249 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.082143368 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217400908 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.089882437 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.981568218 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.789123251 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.867670616 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.867619752 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.857338256 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.861190589 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.723687475 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.112139638 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.870176481 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.793495785 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.033792403 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.160341428 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.762762953 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.864811213 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859161687 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.16136545 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.464733967 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030300911 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.022325118 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.383780542 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866761114 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.793187099 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.792105838 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.552260283 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.864903139 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.835221558 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.06745262 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.966003692 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.773938131 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.992088761 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.110304358 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.117352108 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.873613593 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.132178113 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.136780595 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.557656196 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881465416 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.961317601 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.559229762 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.96494802 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.860220903 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.095557014 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.616416327 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.083906096 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.906754209 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.817273067 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.860068876 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.072970164 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.860441053 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.82301378 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089766518 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.582009246 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.868155264 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.17477761 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934255893 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.748451269 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.906267479 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.950287791 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870104574 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939603889 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871242809 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.872504925 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.873289863 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908371498 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.750375436 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.981433738 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.87471479 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955255766 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.987805337 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.389651656 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.865244823 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.137485024 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.22202193 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.193112395 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.921942507 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.862927349 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862039907 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.797158865 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00870893 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.087150968 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.133857722 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.991004099 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.974990139 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885455536 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.544383344 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.126038312 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107615334 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.137039508 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.757928347 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.433244837 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.904924432 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.86264929 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.874133324 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.074328947 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079416305 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173171363 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.011792257 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.004434845 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.22680144 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.13324364 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.862548644 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.863530907 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.453340317 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.87306378 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.556730887 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.906932603 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.781465023 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.138118883 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875236462 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.244941885 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.88393779 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.023179003 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.63533491 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.549434675 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.15500421 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.851431009 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.921975567 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.139572282 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.258092768 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179869783 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931009361 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874421168 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.976927583 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010770931 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.739562126 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.863429448 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.864780747 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.912975322 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.574323002 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.874955634 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.14264878 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.175729227 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.860194162 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.74942807 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885850394 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.875136663 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.089967153 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.134715227 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.118584486 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.874072893 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.871115176 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.680744808 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.139743546 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.92509732 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.800258412 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.865187509 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962606762 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.113791335 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.885154777 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.31961939 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.576529715 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145641311 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.871423666 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887596621 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.095298512 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.239179999 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.189591412 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.404888418 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.080628225 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.457272129 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.509613474 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.172209428 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.871140133 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.081554181 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17466436 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.868546523 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.003747642 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909329576 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.134023001 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180621239 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.874016704 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.550611698 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.836121935 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.208156992 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.429644402 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803314622 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.873367254 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.925248657 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.864113612 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.998154867 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.875972031 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.752151594 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.083368802 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.631600735 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.148153854 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.868785123 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.858381044 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.548559409 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.213506063 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905338029 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011019667 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866750853 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.539804961 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.216376045 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.124618188 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.006387889 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.87774494 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.872483023 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868365311 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.855480628 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.062325086 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.063439814 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.143510757 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.034511537 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.910172415 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.872618564 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.085076607 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081279618 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.723207427 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00128266 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.008004971 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.914291115 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.775804655 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.372040124 seconds)
  done (took 1670.6658819 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.90057973 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.891922102 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.90009859 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.885502141 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.906286006 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.891705872 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.925272465 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.936783644 seconds)
  done (took 57.036702264 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.867619647 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.05919459 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.876765353 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.868968578 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.875952601 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.868959476 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.038621882 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.87921835 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.876392402 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.879255179 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.879930437 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.866253434 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.198152574 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.897196857 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.870625869 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.865912813 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.875350337 seconds)
  done (took 74.360355398 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.871236211 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.967869353 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.90291688 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.883974575 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.818920914 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.878145871 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.731422217 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.904781675 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.867963417 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.101728023 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.503832597 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.888222083 seconds)
  done (took 90.120855291 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.881523787 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.876544576 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.877887323 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.876650046 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.878844257 seconds)
  done (took 11.196599609 seconds)
done (took 2176.61442653 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.123906584 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.094712089 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.108070439 seconds)
  done (took 6.004780819 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.022292904 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.069204957 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.188791678 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.220669766 seconds)
  done (took 10.306434192 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.157559555 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.250849904 seconds)
  done (took 6.209672245 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.27968343 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.881316733 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.254542117 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.869492189 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.875865114 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.874174263 seconds)
  done (took 22.427444358 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.877146427 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.880313902 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.878759896 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.882867416 seconds)
  done (took 9.320415677 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.861612764 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.569104062 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.856734121 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.877298408 seconds)
  done (took 20.969800155 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.62788731 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.636465659 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.618844244 seconds)
  done (took 9.689880292 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.319013619 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.762213549 seconds)
  done (took 8.883633998 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.140190885 seconds)
  done (took 3.942602589 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.00781932 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.183529311 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.384135521 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.386355478 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.519762319 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.575430482 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.201021002 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.126806544 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.278058621 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.32284174 seconds)
  done (took 24.789068666 seconds)
done (took 137.883507863 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.253726113 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.114265008 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.082232309 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.213586661 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.098302508 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.081886461 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.073945702 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.201251492 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.716950592 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.714750213 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.207946552 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.098396404 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.251968846 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.111997472 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.250393515 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.893017372 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.101953672 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.268452889 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.906238938 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.141524844 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.084576043 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.852445613 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.053936083 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.85992492 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.099542515 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.032056852 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.426277934 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.113419882 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.06298468 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.429943326 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.031219381 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.303900094 seconds)
  done (took 171.935988682 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.648898488 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.872164126 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.877358769 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.873424459 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.477695579 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.881092579 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.874164608 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.873055373 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.177852957 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.157048777 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.889104749 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.519402168 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.89138926 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.873324866 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.882123704 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.872706477 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.264192216 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.733837454 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.888617294 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.891277239 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.893696941 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.429849562 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.891016565 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.451688036 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.271137896 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.890204271 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.874502054 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.891600849 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.878758636 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.878556731 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.88434825 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.87474664 seconds)
  done (took 209.340601147 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.878320009 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.876092326 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.873193151 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.876597342 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.885028376 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.879199043 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.876099819 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.874318871 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.442345493 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.444547488 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.886035978 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.904097854 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.876770854 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.875914049 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.885833346 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.875612035 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.880472233 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.882555347 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.880520251 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.883515365 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.887364323 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.718122081 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.897026714 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.709717269 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.894310889 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.886378569 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.875398948 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.906866776 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.89575931 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.896015055 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.890029007 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.876875177 seconds)
  done (took 220.89212396 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.081112931 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.88634234 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.885673303 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.837202505 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.88629352 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.887054236 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.882061956 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.08407401 seconds)
  done (took 19.264152131 seconds)
done (took 623.250204973 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.3384108 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.191917807 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.071050942 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.908944748 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.179954367 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.948372775 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.906369995 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.969873055 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.653158858 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.977348479 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.59462153 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.92306295 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.693199843 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.929964297 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.032571647 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.958064623 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.471581203 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.56084981 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.087994042 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.98749866 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.086092033 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.838417155 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.978852824 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.66503349 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.706791133 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.887178553 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.088788314 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.475160186 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.915059895 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.07016817 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.660879095 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.305558261 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.916186201 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.90334747 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.958596151 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.939460621 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.258193243 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.915480219 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.034716327 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.646663519 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.98317822 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.537746851 seconds)
  done (took 103.965189793 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.878059318 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.876577464 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.875742765 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.8768099 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.878761298 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.8755996 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.877867044 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.876060012 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.87696157 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.876053069 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.875756646 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.877234228 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.876281876 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.87677648 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.875107017 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.875787985 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.877620232 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.878184624 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.877016698 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.876251787 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.877356773 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.876470219 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.87747237 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.875652955 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.877653601 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.876237682 seconds)
  done (took 50.620734099 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.88913631 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.037019032 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.118850695 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.90975482 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.889558262 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.893254096 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.910402312 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.895127392 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.892812125 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.89273776 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.985641602 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.894772634 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.907913355 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.114465612 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.904134405 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.888328827 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.887661869 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.88885797 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.040837536 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.905129286 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.908119028 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.894199899 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.909348638 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.901864806 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.889250506 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.888431408 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.89121548 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.327852479 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.896219374 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.981219152 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.932047109 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.907373471 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.294982105 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.12588367 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.942263792 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.890807289 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.888410241 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.987908649 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.893451088 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.888436221 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.908614603 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.894473109 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.116636439 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.396123551 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.904361604 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.89020529 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.342456746 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.995677548 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.932173598 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.901432695 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.120773922 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.905617116 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.891613415 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.889343332 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.92566324 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.89959046 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.890472459 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.210405663 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.901287131 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.908590612 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.896518749 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.890791718 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.049164449 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.897837883 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.039394747 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.899296123 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.899254366 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.890845413 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.116148556 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.907257612 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.387460467 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.90740367 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.895027701 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.986031313 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.044053142 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.374528656 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.905605289 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.057578601 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.313358293 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.918680166 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.90200743 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.322234409 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.921728598 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.900957008 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.897886009 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.895965059 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.896714181 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.939468841 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.911947793 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.336253571 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.398653497 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.231864235 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.923188059 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.913174802 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.89652294 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.218152156 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.902539802 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.896194958 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.116619585 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.409590871 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.904908161 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.901387422 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.372917935 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.910840863 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.915340906 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.903978755 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.125223487 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.909974567 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.940547745 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.896155259 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.903356104 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.898700111 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.915295777 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.902595184 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.897784218 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.370257713 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.008373701 seconds)
  done (took 234.413271424 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.892181628 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.888752428 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.889378095 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.906196632 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.890233875 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.895588778 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.890979045 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.888656044 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.897481346 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.891086781 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.889656544 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.889673619 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.892038525 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.891769975 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.371887221 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.898129488 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.502277692 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.8914156 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.891690827 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.907305212 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.572782296 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.896493216 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.892219228 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.890660296 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.891479595 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.892308481 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.899661644 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.925048788 seconds)
  done (took 168.640508507 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.90043118 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.082327297 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.91511423 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.936081214 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.90834581 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.898185404 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.923429251 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.914891696 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.900532584 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.897537192 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.897167392 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.959580642 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.911190982 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.037567026 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.92699355 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.929144638 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.004211173 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.904617683 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.89726461 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.897560642 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.927724553 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.89352173 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.960697707 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.029334118 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.913939068 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.018076449 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.902248187 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.90190148 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.900333727 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.017353149 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.914054357 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.9612048 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.928169488 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.918812399 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.020079997 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.01370019 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.003596937 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.927176451 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.902907805 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.900385311 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.900282532 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.890677989 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.019884512 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.91516997 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.903071935 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.010914764 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.915702742 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.901913736 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.909894517 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.899965908 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.91416956 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.916078093 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.965051089 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.034823359 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.933385514 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.926573119 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.924777427 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.174855582 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.910286613 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.002040644 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.891735662 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.021547402 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.918362984 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.889740681 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.900673805 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.905482244 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.929462795 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.93316997 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.005588446 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.907128886 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.002592713 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.934065461 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.908453111 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.901206719 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.90429005 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.022043404 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.020977386 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.9331518 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.939069468 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.934206271 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.896024462 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.902816992 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.892554047 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.919515365 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.905915219 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.021708101 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.019625379 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.907548407 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.904212402 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.904109303 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.904851692 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.927867476 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.026985091 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.93456426 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.999820662 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.968414501 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.975318346 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.91428824 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.91569054 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.904694101 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.966962468 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.916798158 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.914168601 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.223823775 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.975602798 seconds)
  done (took 205.940089894 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.363928068 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.952775687 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.955491216 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.195096877 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.331941823 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.784955589 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.947836456 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.949920382 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.97440305 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.148413239 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.007566115 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.964912201 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.939576315 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.922641494 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.950816136 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.969678874 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.952417053 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.248268783 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.079163001 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.086912473 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.929856306 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.226315532 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.266002664 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.339130288 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.985238905 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.279745672 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.632453524 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.196877001 seconds)
  done (took 62.416678759 seconds)
done (took 827.806082641 seconds)
SAVING RESULT...
DONE!
