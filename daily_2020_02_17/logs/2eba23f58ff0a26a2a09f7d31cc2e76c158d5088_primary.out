cset: moving following pidspec: 26640
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.41519202 seconds)
loading group "string"... done (took 0.601340838 seconds)
loading group "linalg"... done (took 7.981626004 seconds)
loading group "parallel"... done (took 0.185883743 seconds)
loading group "find"... done (took 1.22158413 seconds)
loading group "tuple"... done (took 1.999552661 seconds)
loading group "dates"... done (took 1.325177587 seconds)
loading group "micro"... done (took 0.252292209 seconds)
loading group "io"... done (took 0.987372978 seconds)
loading group "scalar"... done (took 39.504944122 seconds)
loading group "sparse"... done (took 12.327550085 seconds)
loading group "broadcast"... done (took 0.994604773 seconds)
loading group "union"... done (took 12.719784469 seconds)
loading group "simd"... done (took 4.673842613 seconds)
loading group "random"... done (took 9.406880287 seconds)
loading group "problem"... done (took 1.856754322 seconds)
loading group "array"... done (took 21.652803438 seconds)
loading group "misc"... done (took 1.713124471 seconds)
loading group "sort"... done (took 3.466472024 seconds)
loading group "collection"... done (took 17.993554631 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.527413108 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.131532255 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.133208902 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.125543846 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.15204152 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119073875 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.131311672 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.091009488 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.824812709 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.155078553 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.122683249 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.443443972 seconds)
done (took 5.274711556 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.179615048 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086776288 seconds)
    (2/2) benchmarking "String"...
    done (took 0.088121254 seconds)
  done (took 1.308424319 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.069328559 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130376426 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.070197708 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070727859 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.071342011 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.070833051 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.070944434 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.070627992 seconds)
  done (took 1.689333005 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.077354755 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.073010679 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.070082304 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.072019468 seconds)
  done (took 1.423933776 seconds)
done (took 5.81516073 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.818919563 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.216671458 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.192957079 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.431163652 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133555308 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.164659343 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.652223542 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.322022296 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.194972914 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.084472437 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113712018 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.35215403 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113455997 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.641638831 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078772052 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.094695118 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141095961 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.423265683 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.07124131 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085700095 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092911628 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132853389 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.092174197 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078025172 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.150533407 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071910959 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.141125669 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083921161 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069993154 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.226496493 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17636513 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.672814002 seconds)
  done (took 10.490632175 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104258914 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.105863524 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.072555622 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130543322 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.105649839 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073682348 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.079353464 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07110683 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094844533 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.135534884 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.096294687 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108011353 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.069512701 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072801218 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.089243478 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.21058407 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.087909325 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086484937 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074615437 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083717755 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.113216543 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.08294718 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.085805832 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.08561882 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.13337242 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.184425143 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.103124531 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.106356978 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071264643 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.087000169 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.118155443 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132043269 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.070773857 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070671675 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.131327253 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098100775 seconds)
  done (took 4.793177279 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.05367746 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.150563072 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.095142296 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.140416253 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.069478005 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.114001429 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068958628 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085899766 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.217663782 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.339444118 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.117401923 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.069378098 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.637694605 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115177674 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111047929 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071774704 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.0727833 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.071323531 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.582704836 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.101444517 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112099164 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.0860409 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074311611 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072573543 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363087953 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071940923 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068268043 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072724806 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060401159 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129780559 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071746782 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.98904715 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.168517161 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070977159 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104234121 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.294602652 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098117152 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.148658082 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073455772 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068993046 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068807211 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162107745 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074455085 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.070325951 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088945463 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107146031 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.122460643 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.070163053 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070583032 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.171273161 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068461531 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084902484 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.147288135 seconds)
    (53/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.071609252 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.157374914 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.083860677 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.070805164 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.270484132 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.093293458 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074033093 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068370351 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.224214505 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135032835 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.071668639 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070192638 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07221803 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073080792 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.374451661 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.070107068 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.19209201 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071698363 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079934447 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073419061 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073384486 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077700501 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079053643 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.092862111 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.070027672 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079710392 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069650454 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069812972 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070686898 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087251562 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.404365635 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070642843 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072017953 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06852976 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.092898516 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.200619699 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.0743053 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.07019656 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102925422 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071792532 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.07036104 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.112609995 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070825982 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087103504 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.074132297 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116579081 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.072416634 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.106458256 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.071612934 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100285923 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073486555 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103002535 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.084446543 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07229767 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.450089119 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.069590513 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.069185041 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072251561 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.069253214 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.071876662 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070876685 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.084036857 seconds)
  done (took 22.622640288 seconds)
done (took 40.093224379 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.268619678 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077599726 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077400645 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077302314 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077242678 seconds)
  done (took 1.806838884 seconds)
done (took 3.015268232 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.128490604 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105372482 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068092115 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.102992289 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068645034 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107075514 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105573846 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083141545 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10537586 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067885458 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102986605 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.068021688 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067931197 seconds)
  done (took 2.411969361 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087989912 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088184553 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073870647 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087297703 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067639855 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087831068 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086886174 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09471542 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086431884 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076678283 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068318849 seconds)
  done (took 2.108800155 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087482637 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.090173473 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073204482 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087196811 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070883277 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086931342 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085992713 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090561003 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086644357 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078264221 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067331647 seconds)
  done (took 2.104354355 seconds)
done (took 7.823023728 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.082300519 seconds)
  done (took 1.274284158 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.604138868 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.118335796 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.086100235 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.116170251 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.19760901 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.123686681 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.276156129 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.091088947 seconds)
  done (took 8.992177182 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.1078632 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.075843846 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.073381641 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07649456 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.075844377 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072078871 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.073250546 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.075914773 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072227062 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.072095952 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073409996 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.073553272 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.075120541 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.073116996 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.075575529 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.075173001 seconds)
  done (took 2.485545735 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096709332 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096337576 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07857861 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078721203 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.076161931 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075446612 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.078148906 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07714868 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074589272 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.076946626 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078141383 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077253232 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075800341 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068876252 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.078498136 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079476407 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.075456945 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077823733 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.079376768 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079243939 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078833476 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067891999 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075625726 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077925494 seconds)
  done (took 3.180921575 seconds)
done (took 17.133856714 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109492 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071057898 seconds)
  done (took 1.378090763 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085487463 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086771399 seconds)
  done (took 1.378461839 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08616907 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069055682 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.094964899 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.081510563 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.069354328 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069475052 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.091692118 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.07044593 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.069599006 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069804306 seconds)
  done (took 1.980271192 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071157015 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080268509 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.074027186 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.08499551 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076810146 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.067705166 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075292275 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071316081 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081826119 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.067613789 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.075341308 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086673405 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074583351 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088405502 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.07597615 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072525376 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.074915529 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071221162 seconds)
  done (took 2.580303251 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069298949 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.071052623 seconds)
  done (took 1.351906407 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070267409 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067696434 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070791747 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070588329 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.066646301 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066594825 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.067928845 seconds)
  done (took 1.68919544 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.392475642 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120613854 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.326391415 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.075429852 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.085998382 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.270469397 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.069721481 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07449636 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.074647745 seconds)
  done (took 2.744735629 seconds)
done (took 14.315938446 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.085164516 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.091003707 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.101840763 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.394190499 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09549835 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070050337 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.117057181 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.196373933 seconds)
done (took 2.373889117 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.217066418 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.723894032 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.448470152 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.220126857 seconds)
  done (took 2.609012049 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.35985979 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093521369 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.062502391 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070391866 seconds)
  done (took 1.810101761 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.070321277 seconds)
    (2/2) benchmarking "read"...
    done (took 0.074008793 seconds)
  done (took 1.365866261 seconds)
done (took 7.227333119 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071190387 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.089337706 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.070881189 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.068024126 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.070177063 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.067272436 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.067930893 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.07042153 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.070879838 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.070239017 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.07016712 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069807081 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067017285 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067315206 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070748195 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.067635806 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067047345 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.070133341 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067362459 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067205622 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.070086805 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070267429 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067222526 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067398296 seconds)
  done (took 2.934174903 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088592764 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.070382096 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075881463 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075039122 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073025598 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.075015465 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074817076 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069254942 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.075103494 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.072129455 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07255847 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072947435 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.071680566 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072761006 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071981063 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073034424 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.074821015 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069934933 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072206377 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.18696344 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07456637 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069995447 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073315222 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074157992 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.0726971 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07252038 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.072160456 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069552427 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074436765 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072230544 seconds)
  done (took 3.543220942 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074571361 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.067697353 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.067810319 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.074934498 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066841329 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06784485 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066923849 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.067375799 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.068380683 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066794753 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.068745522 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.0668864 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066820256 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06812879 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068013172 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.071334817 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083464651 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067484132 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.066823756 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067675584 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.070798343 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06709578 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066969713 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.067001281 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066947333 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066555161 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.067186048 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.067191527 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067637894 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.067013719 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.070138063 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070824176 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066557166 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.074342572 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.070897607 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066798639 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.071524049 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.067101863 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068408546 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06662403 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06637287 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066961005 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066921429 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.074359929 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.067242678 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068345217 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.067146497 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.068334352 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067385375 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069544721 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.066798134 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067982796 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.069068711 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.068517454 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.072082809 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066444519 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.068060593 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066977455 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.068233976 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.067094061 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.067036712 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06722562 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069667597 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.068276756 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.083307238 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.074815499 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.067633087 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.070255397 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067930494 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.070027869 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068801889 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.082253365 seconds)
  done (took 6.204073065 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.094793087 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092443974 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068742218 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069320226 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066023022 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067437941 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074050813 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068430724 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069034309 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085821967 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068782239 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068796367 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068755941 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071648973 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067754743 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068797571 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075817534 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065328785 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067593471 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071268475 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068223849 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073256273 seconds)
  done (took 2.834719079 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.160526761 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074339222 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110649869 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07906723 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073614727 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079878964 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07370717 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073374318 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073532555 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071074067 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071208741 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073449403 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073206332 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071763606 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071564243 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07163718 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073273535 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.0712493 seconds)
  done (took 2.68427104 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080148502 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069860681 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.091302187 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068994776 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069379366 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072075743 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074159369 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077747398 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.071858375 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069362087 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.078058675 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071869773 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.071903988 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069300559 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071580892 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069907482 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071821202 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069694926 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077619032 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073876947 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073774003 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077283883 seconds)
  done (took 2.859528744 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083360194 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072258135 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086119409 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071791383 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066240077 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068199933 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.074001061 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069050017 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.073869506 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071755817 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070554634 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06798856 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072711973 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069321676 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072176126 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069454171 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071540768 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069441795 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072073908 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065153714 seconds)
  done (took 2.677032277 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090889325 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071820892 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071993762 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079819006 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071315404 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071970043 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079376853 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071442843 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071816269 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092641349 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071607765 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071701732 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078816992 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076231688 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071958918 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078741263 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079058291 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078874419 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071633242 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072485897 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092591351 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071918031 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078379026 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071919616 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071463134 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071434572 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072555525 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076338978 seconds)
  done (took 3.37190097 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070474772 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070008783 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.067214364 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066918216 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06671538 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.067900309 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067122928 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067059439 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070402531 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067127003 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.069580159 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.070027282 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070273788 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.069794195 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070189352 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.070135046 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069337915 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067250107 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066730359 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067028181 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069583192 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069423685 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069843063 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066983719 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066780354 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069679792 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067029449 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067537414 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069882018 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067148676 seconds)
  done (took 3.299292285 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078193077 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07677189 seconds)
  done (took 1.400928903 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066710442 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083557197 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.067242944 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074440006 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073476816 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071316101 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077818402 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072987416 seconds)
  done (took 1.829650803 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086343702 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.081368568 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.070600696 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.083166139 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080744356 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08826877 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.14070239 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070536038 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075821429 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06777637 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08664149 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069502912 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.077264812 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070923275 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076231054 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076601358 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067350233 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.076417359 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.07201796 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068501238 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071471038 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079620687 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0735868 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065421618 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071773849 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.0931359 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081720786 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.071485731 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07303514 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07793197 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076190801 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063903752 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.069892459 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070747985 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06881776 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.080605574 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085153844 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073477558 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079190664 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071023031 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07949862 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.065870933 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074569559 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076934528 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081134892 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070813819 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.07070074 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065102583 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.068463343 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072594666 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065482093 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071188257 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064624093 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077458066 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073999704 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082374994 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069352371 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071907836 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072901174 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073673225 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077303996 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072520894 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072891869 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.070623483 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080521876 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07520403 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078910971 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064960657 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064614411 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.069059 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080260325 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094286857 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076555758 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070985599 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071246631 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.068264852 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073976674 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070958141 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075593009 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076822029 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070469439 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075601525 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078152166 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070727427 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072890206 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.07831016 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068847984 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.0729431 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.068307284 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087164066 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069334641 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068224284 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067883319 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080210913 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073764233 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069756736 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.067984417 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077759403 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063983921 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069340515 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07050697 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069999166 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079482108 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073549889 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.0744157 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077890189 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076935208 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069622253 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071885317 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065829519 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069689195 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06799419 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076479125 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063154324 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072099325 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.19516809 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.072046616 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.080004254 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069286698 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.071318382 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078809568 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.077318249 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.069271968 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.067389952 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073886519 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.071071877 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073152351 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079421144 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069526759 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064727082 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.065045726 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.075406476 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.069963785 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.075105978 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075199106 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073583055 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064368066 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.068302562 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075600782 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07945306 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.071355444 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.07213638 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07711313 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071771056 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.070156472 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077433327 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073734253 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.070323695 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076414503 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.071609558 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065693987 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073852633 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073182027 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069581642 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.074822195 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074048844 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072512505 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071914768 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068827807 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.0773456 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07120216 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.069240304 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071712549 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069184377 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.08085089 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072749932 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065424775 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.067213191 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.078363355 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06824292 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069701506 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.070654349 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.07348927 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.071369775 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068207327 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.070041098 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072928043 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08056197 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074406556 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071402141 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075941987 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082308557 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.071192518 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072205564 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.069514827 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071046443 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070969281 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078911555 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076323662 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074894252 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072585078 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066578834 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075595182 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078783427 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.069408355 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068029958 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.069029532 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074007369 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076475913 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.075287401 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070475166 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068494666 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071018274 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073548986 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073229252 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070176871 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.069646281 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.075870404 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06793224 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.076973671 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070578133 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080563564 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073262841 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064400885 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07237579 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068975443 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076164307 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064729056 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06719813 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068913619 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069998078 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068348597 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071471072 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.0631583 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075973644 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076504706 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069751715 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068208322 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06901658 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075996091 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070768578 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073123147 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072643418 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.202019992 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082687311 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.070935866 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.074809355 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081578418 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.07059361 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065384799 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076139077 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06887095 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069462232 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.070319671 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.068757558 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073410572 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078177447 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076865046 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06389724 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072723504 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069326118 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.070325959 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.065871899 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.075222734 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073723086 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.071874964 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078046643 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070931662 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070657999 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073884337 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070231552 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071924097 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.071870415 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073314887 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.071304316 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072461733 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.070696335 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.073822991 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.069561094 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.067914765 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072555253 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070746617 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.072335137 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076016702 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.07165127 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070416465 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073101597 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.070806161 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071598268 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.070761819 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069955931 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073660908 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07134353 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070609229 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073201542 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064817191 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077627375 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06994275 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077682568 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.07004225 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.067507499 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.077502449 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072765563 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07556284 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071307907 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070874463 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.072249144 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069799105 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.07278874 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07726504 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067975612 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080948807 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078278639 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071504899 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072701842 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070612958 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071646557 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069932402 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.071589343 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070733056 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070809029 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.07034672 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075588283 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072917305 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.07053537 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072435665 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071131118 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070941982 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071515641 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064575941 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069486979 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.070218141 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.072938736 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080075253 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.071227323 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.070336598 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069676091 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071156583 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069421084 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066963707 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.078003043 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07886616 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.07112045 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077174971 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069032736 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071416669 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080445677 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064364925 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068284415 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067190881 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067751908 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077048361 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.070169638 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078713044 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070150248 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068429449 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066096528 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069517148 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067378584 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063334155 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067080287 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072747721 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06872606 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069276292 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069160861 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.203394756 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072219467 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080270635 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.07065173 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.072102154 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.071791476 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.067358815 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.070382029 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.070216815 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073514909 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071508251 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.068569474 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.067829856 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070819258 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.072056282 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072190253 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070515483 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.073046823 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077115402 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069764516 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073394932 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073548319 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06504615 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073546079 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070937482 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070545944 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.069309345 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074400337 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074326197 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071101454 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080081018 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070849553 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071470207 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070862285 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068082624 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.070395518 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070064682 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070529325 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.070609498 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071549279 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078077641 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.068342177 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072835542 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070194913 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.070625695 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076751239 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070516574 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.074641494 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.077127644 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.070796909 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072620115 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077715482 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074876756 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074576704 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071524787 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.071743565 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076436625 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.069578321 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076463287 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070790228 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071631443 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.071697751 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068212102 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070952338 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.07018495 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069406755 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07650305 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071100085 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.069540983 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069633032 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.0679224 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071074712 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073030399 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078218251 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072684 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074433237 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064780262 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066765444 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070920861 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068865437 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071926805 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072581478 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076838539 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072514217 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070648301 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.070026223 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079633874 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076602217 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074875504 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06820445 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074499832 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.071807699 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072758379 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.072115775 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071419782 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072138432 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074404376 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072231401 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.0706482 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077557365 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074018232 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071369648 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071640526 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071539084 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070870744 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064946801 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069905769 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072566438 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074630395 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072248263 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070303363 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080470517 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067603933 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070187307 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072148778 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068254261 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073520953 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063930115 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071170413 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07060736 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070695363 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063757711 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.20119065 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.069400903 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073277022 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.070333456 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.066291717 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082049267 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.08033675 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074015047 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069701946 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06920962 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065322662 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065599169 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.070001052 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071029074 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072577369 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081072786 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069272648 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.069814406 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064879723 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071169077 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073926301 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073165006 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.067267663 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065647701 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.069957923 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073380637 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075756496 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069175169 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069860245 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07465232 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072373551 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067417276 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073426754 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06690182 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073562188 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08262296 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070289525 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071400069 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.077488973 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078440929 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071594824 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.065744546 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.071146975 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073464422 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071309758 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071167673 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.07207359 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086820516 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074093488 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.069201936 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.070185499 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073695625 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.070851046 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078643267 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071397625 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071010116 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.075766286 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.07269017 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077984742 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074116897 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078328282 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073431386 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.073592058 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069217215 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071126047 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.069136869 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069777315 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071349457 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.071110233 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074901843 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.078396897 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069524407 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081246777 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079156308 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071965318 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.067172667 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069573978 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.069908237 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065180836 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.071262048 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068438756 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068791598 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068773281 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069706319 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071635134 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075214262 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071674202 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.071014765 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.070623806 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064352892 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073079107 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.073037648 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071466447 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066928951 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.070542749 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.071823653 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074420477 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073543656 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068665877 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072012743 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.07169979 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070995292 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06468724 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076398476 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069147736 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071778315 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069571494 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070263784 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070589688 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073176262 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074774364 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.07041742 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071644841 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072791386 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071962985 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066437287 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066470582 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074722206 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066730632 seconds)
  done (took 44.917386712 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106834812 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067261753 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066025349 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065093679 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076476519 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066794777 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065082196 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066551611 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066269185 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068628623 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065434208 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065192125 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074010636 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080530604 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076377867 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069614285 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065073693 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066202987 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065133474 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065975883 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073438355 seconds)
  done (took 2.835450284 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.078384492 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.081664961 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079855841 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085458426 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074554101 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074334441 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.079196185 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074127663 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081518016 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075648418 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081751958 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07413685 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076041683 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075814526 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075438153 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073859303 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083869258 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074300179 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.073482908 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078555885 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073756235 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078393662 seconds)
  done (took 3.027013087 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070604872 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070016 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.072148325 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064599124 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069212402 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.064360411 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072814254 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.067987689 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.07356796 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.069185099 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.068341002 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068461159 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071525497 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064536018 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.070048123 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.067063947 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111609713 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073754586 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.069652517 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070451252 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064778931 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072032045 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064786293 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065340036 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06822033 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072632855 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.070054031 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067875332 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069393537 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068916807 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.069681263 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.067473627 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071577092 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069731133 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.069127069 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068906217 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.069256633 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069874641 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065204657 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.067946219 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070409213 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065277775 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070103011 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071612103 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.068389607 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067376042 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072337449 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.069392314 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064616848 seconds)
  done (took 4.747886229 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.082179807 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.114298936 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070764915 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093193748 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083403674 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076102517 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.07337182 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094692291 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066401871 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067185665 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084865955 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.081956228 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069130421 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074166043 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.075884886 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068797677 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069703317 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068516676 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072447167 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068204243 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073331949 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.075850364 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083066177 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081562836 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073372063 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067677513 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068859348 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073422829 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081342463 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073481451 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073437667 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074041773 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.085013367 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070751386 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068210644 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071763505 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084562217 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.068877114 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072471815 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066720889 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071646426 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073051528 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075777517 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084812779 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068770086 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073991268 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069706466 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066405392 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081094744 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071483806 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07705982 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082323219 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072815854 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069385253 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073393774 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.084739975 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068990031 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.0670485 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072382907 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.080454441 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066771043 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072699055 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.08193587 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071026064 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075945369 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082236684 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074076718 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07315571 seconds)
  done (took 6.592668514 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079490757 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.100508903 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087114793 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086719913 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079494685 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.079519434 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.079012261 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.079182073 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078810577 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.083500789 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079002088 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.120674277 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.074526495 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081445754 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079545682 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.078943882 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.079794806 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0802063 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079342876 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080190235 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079602373 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086722805 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.079747432 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.086508069 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.091655053 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.074804059 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.079000322 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079268289 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086552804 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079542266 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082917646 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.079037012 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080017419 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.087090819 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083357219 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.078970696 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069439305 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079397126 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.079752781 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07948305 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.074550386 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086439518 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.079539101 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.07522236 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079548072 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079061487 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.086903256 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083075445 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081871316 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.084454532 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.079226986 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08697358 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0795316 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079741524 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.086664593 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.089363009 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087384055 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086538608 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079599304 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086484874 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086538657 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089965898 seconds)
  done (took 6.462863914 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087283945 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077949207 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.086388169 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064830183 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067510623 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075825566 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067756265 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.067982026 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077360334 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077162308 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07998746 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07532998 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077569146 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080006312 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075231469 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078057609 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075203911 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075179018 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077594894 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076225582 seconds)
  done (took 2.864837789 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078119553 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086850899 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071272632 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075315911 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072704662 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075482831 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.072856101 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074187151 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070391677 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073335778 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07968617 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079402692 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070412494 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074984463 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.080088293 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075142494 seconds)
  done (took 2.547319518 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.088071052 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.076701672 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084265384 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070812717 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.070783925 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.065896079 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069982826 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064947397 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.066300089 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.08206913 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.069535045 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.080653719 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.069729676 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.069189713 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06624378 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.074824245 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065904115 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.067294654 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069534435 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.082885927 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073246537 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.067919188 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.073246875 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.0694394 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.072046594 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073856377 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069123499 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069700349 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.066953653 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069941939 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.073030644 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072981889 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066918507 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06744938 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.068743118 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06622908 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069309949 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.069911063 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.074900924 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069566778 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067364124 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.071503762 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069722708 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070518116 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.065747254 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069914716 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065897606 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071518009 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066920002 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.072601643 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069473714 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072057896 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070302351 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076537924 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072178032 seconds)
  done (took 5.250826108 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08361481 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073437757 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06550127 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067542421 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.072544074 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070415759 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073587989 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070633626 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070811322 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06815438 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071004601 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072849184 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070919268 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073065907 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07076741 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073794245 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064935972 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070610715 seconds)
  done (took 2.632999769 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075419655 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069975742 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.076767462 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069594377 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.069827188 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072619707 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065280235 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.068089397 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068601206 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069429066 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070394196 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071866201 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070393715 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071715993 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069229236 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069777527 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071957212 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068830759 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069657201 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066045712 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07213128 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06897719 seconds)
  done (took 2.89010399 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.097972496 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.087163884 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.143456698 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.082764077 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08963508 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.075456209 seconds)
  done (took 1.921467862 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096634196 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105288909 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070504136 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073313967 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079819752 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074258411 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073415976 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074080049 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082042398 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079344517 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073796724 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082261874 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082218701 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081223839 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078912738 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079675792 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07355881 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07337747 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069694226 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086679319 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07357861 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081801886 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073923483 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073260277 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073492399 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081069163 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081895299 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079810242 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073435716 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081979872 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079395978 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074029633 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082201869 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079079878 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07330594 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082487238 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073652911 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087080269 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080253494 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080838174 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073234471 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079533188 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082094673 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07836647 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082789707 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074504336 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078387757 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073888218 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074227554 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089601044 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079641604 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082084392 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080063303 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082782101 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081993011 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089472226 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079750852 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081010872 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079612312 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079449623 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081129621 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079492549 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08080967 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079187503 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07954368 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081097853 seconds)
  done (took 6.588272117 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108142377 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070973777 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074351717 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079805655 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081561428 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073519735 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074083701 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073892334 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073834785 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071121202 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11238838 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074228497 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081352253 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081257454 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073921893 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073607997 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073416604 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081352456 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070456422 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088553556 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073997326 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081612453 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080947963 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081440316 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078894975 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079539839 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073716705 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073731567 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073925097 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074321856 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078180503 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073962083 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080985667 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070383042 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081092981 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074264587 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073808899 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078596868 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074221401 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079651435 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081586181 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087248567 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074047653 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073768891 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079276936 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073974197 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073587632 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070319257 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073733968 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070884409 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079544448 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079359728 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079240716 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080829028 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073988368 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073758671 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074001043 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073981105 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074316719 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079644814 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081904121 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074031319 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08918383 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07449841 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073831441 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081361229 seconds)
  done (took 6.492116472 seconds)
done (took 134.629756799 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.19229338 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.173743539 seconds)
  done (took 1.706942835 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072320506 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.102892752 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081415987 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133127756 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070806945 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104113499 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103039816 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082214814 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070744711 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.069954168 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070002491 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073415825 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135195656 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069887471 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069411362 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072578306 seconds)
  done (took 2.735764632 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103688341 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.169092022 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108087292 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068290582 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103916577 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076127359 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068902027 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079526463 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074736548 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068911786 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076349673 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074112857 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069725373 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074213684 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074911191 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076764616 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068595617 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076139523 seconds)
  done (took 2.867506242 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102750798 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094478175 seconds)
  done (took 1.555289206 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.159716994 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.136362039 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.206945308 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.359097742 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.164522422 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.151845714 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.147638189 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.14664335 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117994396 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.142214556 seconds)
  done (took 3.087208819 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.106233964 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.159858716 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.278704892 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.123023403 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07674712 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.098238628 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.124948813 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.083414275 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084305163 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083993383 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083778451 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080296447 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.104585341 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076697191 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078440647 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080388387 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.107932993 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076899842 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.079242824 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079411096 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105774635 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.07061268 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077247341 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077965879 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081079873 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081902997 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06965251 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069873291 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.080070054 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078774036 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080119743 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.096301575 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.08174671 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.110549465 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075389754 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.111344379 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080665693 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076843635 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078969168 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077142917 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082243971 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081747073 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077010645 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080534297 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069861953 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080612876 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069858587 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.0697341 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081039653 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071125035 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081288207 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080164788 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.110424364 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070995317 seconds)
  done (took 6.215179716 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108938434 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.112904058 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07513036 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.118763698 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108663549 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075937043 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.10911348 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102451086 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.110308585 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074085729 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072057777 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074223466 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086440699 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.087419085 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.121645558 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.11339702 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077472156 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07494453 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112354684 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111786944 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072577436 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103540059 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097226949 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10933569 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071299963 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07378049 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071834685 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074046923 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080503775 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.082617629 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073081852 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.084074226 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.088211576 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082048843 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071108571 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071830482 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072828565 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.082871958 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082896282 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082991573 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081102273 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071614524 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072101542 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073826788 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073860649 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071713903 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.082133672 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.084344329 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.082863856 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073452191 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074260472 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.074823332 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073116449 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083401349 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.081170697 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.084360807 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.084079881 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072033953 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071996278 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076720147 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08499407 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083417161 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084142787 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073455447 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083515248 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072445191 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084750959 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087885167 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072675653 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074186895 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072566342 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073287395 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073461858 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081552583 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.082029263 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074058486 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073551006 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07331862 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083153488 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082113225 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071951716 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080787356 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071193674 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072160228 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073959596 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073819979 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.080524922 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082838417 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073909578 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071630489 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073225645 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072195168 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.07029088 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079304112 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082092763 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.081863808 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.08077906 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072484851 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.08132356 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080689498 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073268605 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.081110086 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071579041 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.203026241 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074914063 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082664293 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.083113292 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084301988 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073210061 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072996959 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.08326601 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086017874 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072087816 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.082690957 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084742386 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.084205715 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.072705177 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08589138 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073080247 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083584781 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073458743 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084293941 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.0731172 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083239267 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073753041 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072080648 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072477893 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.083954575 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074806693 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072175203 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074008357 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07529792 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.084146075 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.087190569 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074181195 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082448413 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.082471812 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074372737 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082306999 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072749357 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082304658 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073755076 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073381381 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07141012 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085643741 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072152524 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072377547 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072961737 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.084134573 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07262507 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083438678 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081992837 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072028078 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084798883 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084525687 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.08218575 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083883473 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07453518 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.0717982 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071858031 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072894324 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.082017155 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082592561 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074659475 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072662177 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.082410112 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.083643364 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071052831 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.082341079 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082844201 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.082380311 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072603535 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073152344 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083782686 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.084164422 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.081805836 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.082143921 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082212443 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072707971 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081426853 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.083116662 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071807593 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088110455 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072451376 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.087214192 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.083341389 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080758227 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08305322 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.084398605 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.083641153 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.08460029 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.086165197 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071500652 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.07142229 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.082443148 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072048825 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072596914 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.080293464 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072487902 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072368016 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.086199118 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071669885 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.082764439 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070966107 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.081717627 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069935285 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072514871 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.217206083 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073001438 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073993283 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083991311 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073722416 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.082836054 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085276139 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.081884448 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072509681 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074741356 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.084812038 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.082733809 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072224706 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073281192 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074287132 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.083033813 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.081931803 seconds)
  done (took 19.566427525 seconds)
done (took 39.098446196 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.217243206 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.159875783 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.180405994 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.124798954 seconds)
  done (took 2.14631083 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121028573 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105807024 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.097379621 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.069190144 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103401855 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.069165339 seconds)
  done (took 1.96514877 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.320085843 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.218493786 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.195021597 seconds)
  done (took 2.127157734 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.21558011 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.200230707 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.461959684 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.284770399 seconds)
  done (took 2.672519367 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.156688452 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.093717698 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071848383 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.088980724 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.1385681 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.168599484 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.105183072 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.13037773 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083799336 seconds)
  done (took 2.487759114 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.154622085 seconds)
done (took 12.957507972 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.103038615 seconds)
    (2/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.279059338 seconds)
    (3/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.069510053 seconds)
    (4/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.221481671 seconds)
    (5/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.189344428 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.119178225 seconds)
    (7/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.080137526 seconds)
    (8/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.118108926 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.110410402 seconds)
    (10/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.078989853 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.107801484 seconds)
    (12/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.079176966 seconds)
    (13/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.082420561 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.108018265 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.093987922 seconds)
    (16/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.076806003 seconds)
    (17/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.206831562 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.095873493 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.129672885 seconds)
    (20/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.164293073 seconds)
    (21/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.083095622 seconds)
    (22/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.253527755 seconds)
    (23/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07800337 seconds)
    (24/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.225831355 seconds)
    (25/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.23133348 seconds)
    (26/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.181052451 seconds)
    (27/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.102818012 seconds)
    (28/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.234040828 seconds)
    (29/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07928683 seconds)
    (30/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.21030289 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.095883815 seconds)
    (32/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.171382553 seconds)
    (33/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.231667666 seconds)
    (34/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.167748022 seconds)
    (35/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.126597622 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.107606597 seconds)
    (37/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.214378673 seconds)
    (38/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.14780981 seconds)
    (39/309) benchmarking ("sort", Float64, false)...
    done (took 0.137664608 seconds)
    (40/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.076906463 seconds)
    (41/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.08282881 seconds)
    (42/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.077623247 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076661288 seconds)
    (44/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.224142454 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.13236181 seconds)
    (46/309) benchmarking ("sort", BigInt, false)...
    done (took 0.203167842 seconds)
    (47/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.187972106 seconds)
    (48/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.078857222 seconds)
    (49/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.074914019 seconds)
    (50/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.076359978 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.095040525 seconds)
    (52/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.078185041 seconds)
    (53/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054952171 seconds)
    (54/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.118939512 seconds)
    (55/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.076841168 seconds)
    (56/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.080069741 seconds)
    (57/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.213680405 seconds)
    (58/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.345601187 seconds)
    (59/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.15476484 seconds)
    (60/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.05721681 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.077696697 seconds)
    (62/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.163386797 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.090189221 seconds)
    (64/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.213342363 seconds)
    (65/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.068570346 seconds)
    (66/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.161105653 seconds)
    (67/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067917063 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071120018 seconds)
    (69/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.191252771 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.093819825 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.096913295 seconds)
    (72/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.081009113 seconds)
    (73/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.054146322 seconds)
    (74/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.16153518 seconds)
    (75/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.075235904 seconds)
    (76/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.118792714 seconds)
    (77/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.076513806 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.152803686 seconds)
    (79/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.189217734 seconds)
    (80/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.228431081 seconds)
    (81/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.198256546 seconds)
    (82/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.055490603 seconds)
    (83/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.149387515 seconds)
    (84/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.096653105 seconds)
    (85/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.099893258 seconds)
    (86/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.080413314 seconds)
    (87/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.08093703 seconds)
    (88/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.158272312 seconds)
    (89/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.109515256 seconds)
    (90/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.204190938 seconds)
    (91/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.10882138 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.150111526 seconds)
    (93/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.125327625 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.116916015 seconds)
    (95/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.056740031 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.100147144 seconds)
    (97/309) benchmarking ("sort", Int64, false)...
    done (took 0.071977383 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.099988477 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.097596568 seconds)
    (100/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.054777434 seconds)
    (101/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.117933893 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.097517156 seconds)
    (103/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.076826831 seconds)
    (104/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.172448163 seconds)
    (105/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076792573 seconds)
    (106/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.076314342 seconds)
    (107/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.162738955 seconds)
    (108/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.177030531 seconds)
    (109/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.058964596 seconds)
    (110/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06950609 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.069884418 seconds)
    (112/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.056274264 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.131573154 seconds)
    (114/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.055244589 seconds)
    (115/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.05486098 seconds)
    (116/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.080992863 seconds)
    (117/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.107261371 seconds)
    (118/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078449416 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.110830324 seconds)
    (120/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.126188851 seconds)
    (121/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.056329422 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.078004742 seconds)
    (123/309) benchmarking ("sort", Int8, false)...
    done (took 0.150749186 seconds)
    (124/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.094423538 seconds)
    (125/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.054609816 seconds)
    (126/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.067310861 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.15208315 seconds)
    (128/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.159880097 seconds)
    (129/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.076099096 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.081088604 seconds)
    (131/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.074549738 seconds)
    (132/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.172918987 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.070034204 seconds)
    (134/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077419879 seconds)
    (135/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.072649243 seconds)
    (136/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.081165451 seconds)
    (137/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054944245 seconds)
    (138/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.057526872 seconds)
    (139/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094948158 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.071118284 seconds)
    (141/309) benchmarking ("sort", Bool, false)...
    done (took 0.144391295 seconds)
    (142/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077773752 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.089472342 seconds)
    (144/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.078574497 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.075625805 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076679324 seconds)
    (147/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.054687537 seconds)
    (148/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.070849796 seconds)
    (149/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.148720386 seconds)
    (150/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.078308646 seconds)
    (151/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076154617 seconds)
    (152/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.082535238 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.093467335 seconds)
    (154/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.082570246 seconds)
    (155/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075693462 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.069283775 seconds)
    (157/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.055399448 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.07002992 seconds)
    (159/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077558844 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.103587024 seconds)
    (161/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.092381836 seconds)
    (162/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.070605216 seconds)
    (163/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.058392686 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.15490191 seconds)
    (165/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.080417604 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.08159558 seconds)
    (167/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.203585992 seconds)
    (168/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078136841 seconds)
    (169/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.107985571 seconds)
    (170/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.070578518 seconds)
    (171/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.05536215 seconds)
    (172/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072175769 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.098584116 seconds)
    (174/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.078218031 seconds)
    (175/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.054064399 seconds)
    (176/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.104461886 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098863775 seconds)
    (178/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.082463949 seconds)
    (179/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.116441223 seconds)
    (180/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.080264114 seconds)
    (181/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.054316839 seconds)
    (182/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.068646172 seconds)
    (183/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.071158278 seconds)
    (184/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.054662707 seconds)
    (185/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.06719694 seconds)
    (186/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.066179443 seconds)
    (187/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.05474561 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.118981428 seconds)
    (189/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.055659595 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.068987086 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076271969 seconds)
    (192/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.055328914 seconds)
    (193/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.323376348 seconds)
    (194/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.07338726 seconds)
    (195/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.07564078 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.081209634 seconds)
    (197/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.068889169 seconds)
    (198/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.087699734 seconds)
    (199/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.055180624 seconds)
    (200/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.057382291 seconds)
    (201/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.057399861 seconds)
    (202/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.090565974 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.099836879 seconds)
    (204/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.05597012 seconds)
    (205/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.078751202 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.069135008 seconds)
    (207/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.121878103 seconds)
    (208/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.163833025 seconds)
    (209/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.069086598 seconds)
    (210/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.055445597 seconds)
    (211/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.055498212 seconds)
    (212/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.085255839 seconds)
    (213/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.07013996 seconds)
    (214/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.071469798 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.120113181 seconds)
    (216/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.078658435 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079548387 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07781442 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.136449923 seconds)
    (220/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.055640188 seconds)
    (221/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.055750765 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.070406735 seconds)
    (223/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.081160426 seconds)
    (224/309) benchmarking ("sort", Float32, false)...
    done (took 0.138212369 seconds)
    (225/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.067640724 seconds)
    (226/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.056576759 seconds)
    (227/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.055002273 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07580552 seconds)
    (229/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.056639342 seconds)
    (230/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.170605078 seconds)
    (231/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.05597355 seconds)
    (232/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073850709 seconds)
    (233/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.055693851 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.068563429 seconds)
    (235/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.055115813 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.070525236 seconds)
    (237/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.066901384 seconds)
    (238/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07653315 seconds)
    (239/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.055454193 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.147756747 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.070161895 seconds)
    (242/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.068814554 seconds)
    (243/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.057002216 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.069361657 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.092187795 seconds)
    (246/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.182421146 seconds)
    (247/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.182914998 seconds)
    (248/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.202486701 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.186225695 seconds)
    (250/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.055268805 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.069633002 seconds)
    (252/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.054621807 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.192532684 seconds)
    (254/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.07748854 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.092216279 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.117139764 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.070953467 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068912343 seconds)
    (259/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.054702152 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076696749 seconds)
    (261/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.070293956 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.131938482 seconds)
    (263/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.054479561 seconds)
    (264/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.071478164 seconds)
    (265/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.114620541 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078773531 seconds)
    (267/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.055187279 seconds)
    (268/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.068546792 seconds)
    (269/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.065751737 seconds)
    (270/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.06928845 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.06942656 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.095959362 seconds)
    (273/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.083699966 seconds)
    (274/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.095551883 seconds)
    (275/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.071843462 seconds)
    (276/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.084279599 seconds)
    (277/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.078497907 seconds)
    (278/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.055017336 seconds)
    (279/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.070311482 seconds)
    (280/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.054437375 seconds)
    (281/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.069305684 seconds)
    (282/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.191647475 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077455999 seconds)
    (284/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.072175275 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068144264 seconds)
    (286/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072743962 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.069464729 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.068263053 seconds)
    (289/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075280569 seconds)
    (290/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.084027937 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077814499 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.13810667 seconds)
    (293/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.05451764 seconds)
    (294/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.070489274 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076139363 seconds)
    (296/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.055786409 seconds)
    (297/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094411322 seconds)
    (298/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.070142944 seconds)
    (299/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084596136 seconds)
    (300/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.068752801 seconds)
    (301/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.055185456 seconds)
    (302/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.070812092 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.075178875 seconds)
    (304/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.077246982 seconds)
    (305/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071465387 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.069151036 seconds)
    (307/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076174809 seconds)
    (308/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.06807129 seconds)
    (309/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.054646074 seconds)
  done (took 32.709501208 seconds)
done (took 34.117861919 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.088207293 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097235382 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.079549876 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.098214977 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084252471 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.079878847 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076668078 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082316075 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083874699 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085799692 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082255231 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057989165 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.078148205 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07909406 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.078778781 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094949174 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.08324505 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077498651 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.078229704 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068744471 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077631171 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06944507 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071498766 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058216433 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.083091152 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076342027 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076354034 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078289795 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069775066 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.070462313 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073482052 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077865317 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.069232336 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082758735 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076424449 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077424282 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078835099 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.081285789 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071403926 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069564894 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.079245658 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06914075 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076837142 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.078063378 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.076770417 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07573787 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07799445 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081234368 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095271547 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071641306 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078684158 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.079904216 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07898996 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.076976932 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.074072899 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077198071 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074480514 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095444923 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.078530101 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072444902 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078710972 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.079156638 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075299618 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077923951 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077582199 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07953564 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080494782 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075870809 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079300285 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.076212058 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068977675 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.077164873 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073983569 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06921254 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079992585 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.082520595 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068319834 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075732403 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07728999 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075148185 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068890864 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071362034 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.073786453 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076347768 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070803703 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057960832 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073580345 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076628663 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068301956 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077774448 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.076233572 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076843323 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.071570218 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079860649 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068465253 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074675881 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.069249826 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069540121 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.071019817 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.074358272 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069133419 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071425124 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078979753 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071562357 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.076852615 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082629873 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069050324 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.076776927 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068045165 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.069340894 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083278786 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078886534 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069399075 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071423489 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068497492 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076023005 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068057931 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068698693 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068561802 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.069109327 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075270063 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06795281 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07018958 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076504416 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.082917124 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068574648 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071957685 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070468406 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06803236 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074481165 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.205282206 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.070644294 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.072008217 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.066324192 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072366527 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.069356613 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.077457052 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071674763 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.078786984 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.072168612 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.078914911 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.074877393 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.076282664 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07466491 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.069684638 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.063938388 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072241385 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07179637 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071642585 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069435744 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071545561 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.069555038 seconds)
done (took 13.100829096 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.07056791 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145028138 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100438856 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100250314 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.090055116 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070671719 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079722372 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.104210776 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071748146 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.105745691 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092327965 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.090621979 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.118817477 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068715788 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069388085 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.073625521 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071172593 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085383887 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.104600716 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091890579 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.120316987 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069134351 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.096674555 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093719661 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.092232654 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.107863283 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.07127054 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073972916 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.073847322 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.097668443 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.093260789 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.074136355 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070697247 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.102527177 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.098316331 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.088187679 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069875635 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087363202 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.071213502 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.070133925 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.071140844 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.103528781 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084424389 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084936459 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.074157638 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.081634854 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070980461 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087497276 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094725429 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.083060857 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.090035556 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.105731655 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072422027 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.088805574 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.069126925 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.090218483 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.081345353 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072747326 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070863426 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.078872873 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.070395226 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.073521396 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.085490846 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.084093548 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074569747 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.08956524 seconds)
  done (took 7.133491883 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087854455 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.09686695 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08801942 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.089049591 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069572179 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069830981 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.070427381 seconds)
  done (took 2.076488425 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070382108 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.093090011 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.094623192 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.09386418 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085754585 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.093060471 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080077729 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070980836 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092469422 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071320049 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092428456 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.105645011 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.074201802 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077784595 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095279336 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070963071 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.096711228 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.070518438 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073814798 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.095073282 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072915758 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.101034815 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.073938384 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.07049682 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085279003 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070487179 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119183377 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075106101 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072240909 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.074112556 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068292161 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.112251694 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.085130847 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078682579 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070708225 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085784948 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085746306 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069064584 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087772931 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079312952 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08518614 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.072170886 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.07180745 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068277865 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.075187803 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081055805 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.072120416 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.072074322 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073326415 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.092255779 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071245472 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085003644 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073994493 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.076244827 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072249385 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078052448 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081887419 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071837308 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091949585 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072553156 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088470467 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087549014 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084965493 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087318701 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072900614 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084584497 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085719812 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073031339 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07259291 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074458584 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087368638 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069035168 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072213425 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081973628 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073141104 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094780852 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094620133 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072332689 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.085283903 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.071554649 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.071089909 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.071455855 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094474125 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07599787 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070618703 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075022378 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074455063 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06888107 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06983913 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.074450938 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068912367 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072705141 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073609185 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.07463365 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073851654 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.088370788 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.072973052 seconds)
  done (took 9.254462444 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072689054 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071788934 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.072642374 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.07154753 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071208302 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.071900965 seconds)
  done (took 1.956538717 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.098117042 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.072620365 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085011364 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.075761383 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.110055382 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.091016413 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091861555 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081634833 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088497611 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082685002 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.091218041 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092585401 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.096371748 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.077117154 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.091296654 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07525016 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.092190726 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078484861 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082131546 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076760037 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089859374 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07654514 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076980272 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086005641 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.079999411 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075465714 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082269898 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082910375 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082341391 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082249745 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076367263 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.080104786 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07437486 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081646748 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.092185436 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074657908 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075136857 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.081617239 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075847969 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.080163178 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.092521387 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076958758 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.077866311 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.080894326 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081902358 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074543751 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081210521 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.082974574 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.09124901 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.080591117 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.081134579 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.074753293 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.07983836 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.081584407 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074452475 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081990409 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.081148451 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.091563546 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076158078 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075070537 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072442052 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.079798018 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081511341 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.079825684 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.08469569 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.081519108 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074371218 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076238034 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077145484 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075586701 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.08097275 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072796585 seconds)
  done (took 7.396343909 seconds)
done (took 29.310592598 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.540270826 seconds)
  done (took 2.033709714 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.638991881 seconds)
  done (took 2.157088349 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.544216776 seconds)
  done (took 8.058420411 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.403168197 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.512970923 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.756116899 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.13840966 seconds)
  done (took 3.363166556 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.722752815 seconds)
  done (took 2.248263283 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234241469 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.220087116 seconds)
  done (took 1.989563383 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.385531974 seconds)
  done (took 1.905613243 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.157631809 seconds)
  done (took 2.676706554 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.266625753 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183777334 seconds)
  done (took 1.974959183 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.493823042 seconds)
  done (took 2.016241516 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.899501217 seconds)
  done (took 6.423023244 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.219518176 seconds)
  done (took 1.784809643 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.245459091 seconds)
  done (took 1.76994523 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.765778776 seconds)
  done (took 3.291279254 seconds)
done (took 43.215124726 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.088304817 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.089538745 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.090088732 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.085403467 seconds)
  done (took 1.866862239 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081433746 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.077546504 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.082049067 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07727542 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.081050736 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077055082 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.078668959 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080271806 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.077166099 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.077749788 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.077828767 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.077562186 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079983484 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079024892 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.076147865 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079809893 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.080472478 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07710352 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.08034418 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07705291 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.074930922 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079282145 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.079662198 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076008962 seconds)
  done (took 3.416895508 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082165832 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.078042809 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.080050042 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.076355543 seconds)
  done (took 1.854269327 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.083028883 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.097310145 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093431799 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.082639916 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.096842857 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.091468631 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.07411754 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.073620664 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.074757424 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.082491767 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.072705973 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.100676091 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.093240853 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.082047875 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.084807168 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070799912 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.07296742 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.09268429 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.083291018 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.082983316 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07489525 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.083067556 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072888918 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.094624358 seconds)
  done (took 3.545637407 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.090768237 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.110359772 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085218902 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.09387034 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.097429793 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069465035 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.092118629 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.095760548 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.132452814 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069858271 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074775649 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069692023 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.078142252 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069354272 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.086015074 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.113718815 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.118587115 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.073576132 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102230017 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069911585 seconds)
  done (took 3.33322418 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076967884 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07387967 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072042105 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069679146 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081514966 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076774251 seconds)
  done (took 1.992495443 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072848594 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.071820407 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.071300223 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.070974103 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07644604 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.072014799 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070209325 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.072689861 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.071969409 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.071173677 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071014067 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069820346 seconds)
  done (took 2.398857547 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.208681927 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072919101 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.073460255 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070522335 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074746737 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.070688207 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085714081 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072145408 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096934914 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.071385481 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.070739282 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072583716 seconds)
  done (took 2.579541704 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214241446 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080686721 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24510389 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157331284 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116088511 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121006301 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11770773 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118444967 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.14810245 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105143903 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172823173 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172669732 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112963618 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142508612 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094982863 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.104834617 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16024141 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169850089 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111502876 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171571172 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156594444 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131584739 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153013836 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107522341 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111543335 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127547825 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07615797 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085046854 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176396016 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139112547 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150037343 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116880361 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097101156 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182687369 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178372619 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145589583 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152633556 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089821348 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.107240803 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.138291309 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208243614 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096599325 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167393487 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254690021 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086630628 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137795399 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12488918 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.124965518 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.110191197 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094349876 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151629408 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192024964 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.143322257 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092466566 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130144315 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119752263 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.118613737 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11876035 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190065689 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169553573 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133424842 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075564943 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114010555 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157291891 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138440824 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.114532805 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.130635998 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097129942 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140038185 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160622446 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127699594 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150076312 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.122909358 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093852054 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124064408 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144910715 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132544636 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166634645 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129102904 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07786514 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127890014 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106038402 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08520475 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.154942777 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079695157 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179630428 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103787826 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.110304332 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130653178 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113478707 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113727026 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165446641 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146679286 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105312929 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.214265264 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112064397 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.126871074 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150580138 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092394717 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114650263 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122122998 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082701171 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14193861 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080519889 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128196118 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079462703 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129396929 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134516328 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082891023 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127562575 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109225947 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.1054912 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138877694 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16480862 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093302098 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08723605 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174523499 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126742527 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.108008235 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149232627 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161702532 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.103726064 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105741511 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155831574 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185135386 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094311816 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168057012 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111509503 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08827363 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.092476751 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128354498 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116676077 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.129390018 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086538781 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.122500829 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173531091 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079582697 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100384399 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139011594 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083038832 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084918299 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109548019 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109035176 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100201891 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.103918037 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.106705716 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140266102 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127301354 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109453871 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126438515 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248682587 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178085563 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09254284 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.107002764 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109724491 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.075642587 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.141439563 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161643947 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084421965 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168722585 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.127245081 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122202079 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123139562 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088994707 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145498442 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084733466 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075389205 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149961202 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115112699 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115758251 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.156043945 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121981324 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.130445591 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.126343495 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136970413 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135784917 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.134331974 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111083216 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.093444213 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115929321 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132055591 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.078056804 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09562286 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.085140173 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109232878 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100350909 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087963046 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146470849 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128946949 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115632332 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116191893 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101899872 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152354229 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080879988 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133783659 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.124090898 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10037148 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.156193462 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155929417 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135777428 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10375109 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14145744 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.074203033 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077883209 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091848135 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124227207 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.233523834 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088945575 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121923789 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152724543 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134279093 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141614406 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130451752 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125545025 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160862888 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073983906 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.125328055 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151957902 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12690415 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.109915323 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096245791 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.104376784 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148084602 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112338518 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188556579 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118733949 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128129577 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158182302 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.106396673 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084367441 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107821624 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14030769 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109351544 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148215425 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103910357 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092916623 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113699122 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.079568955 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103791298 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131794726 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12317779 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138812532 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.120456926 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13771518 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082270591 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120213293 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126566922 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126330603 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.068674294 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123916324 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164113128 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099125214 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121525672 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156441896 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083301685 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.13988623 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178036877 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.296127039 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091003896 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114320797 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125700535 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133502538 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124852368 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146000507 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112778209 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142192719 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11494802 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.090518835 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09332483 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102265025 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11049871 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.100848606 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.110238434 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.118631507 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.100197102 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137322721 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108371278 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115613039 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122235191 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.104693294 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096184853 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102871565 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182224616 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123072391 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177252294 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.104059724 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.148192394 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168781105 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079474931 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083619663 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.082566421 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145295877 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088976403 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135468856 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.11277187 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12292583 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128305362 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14730355 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10006791 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073073655 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115619892 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138025239 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130431812 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103363583 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10847815 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166912 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.104451171 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083326509 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118115537 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121043197 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107236762 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17425075 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.065139212 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108480589 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079225847 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.230490301 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133330746 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158317211 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085989551 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.109376778 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12422305 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117205086 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133244522 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106164832 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114229422 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132845162 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15686204 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134855877 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.095300705 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117622821 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132723674 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161316604 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110708465 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.10204211 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17816555 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156307903 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.165271965 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.092682263 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117583061 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11711471 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112540047 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141520141 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088195356 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168955558 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086444655 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141620691 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108363966 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093184639 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13388133 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.114122624 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093479763 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152403034 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122665661 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087465056 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082043232 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122771936 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124296467 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110682487 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07964031 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145416501 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.077683888 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136150138 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164772371 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08475058 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109210426 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099729162 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083181477 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257075574 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10845061 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093484252 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.103670361 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177297314 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.090543476 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154974125 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139748213 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118312347 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140457772 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107216761 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.645314516 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082360503 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156105246 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121723287 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18021331 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104980877 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121451245 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115301756 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127813226 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151648002 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108288752 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.191751869 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138238409 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.121109947 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084327998 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107024488 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109502227 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.093557483 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112792512 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117782443 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120289927 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.097316838 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.120341214 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12863619 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086337846 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100726986 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159608789 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122095889 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150401555 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145687056 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090953766 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121804811 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141873609 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084769597 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.124931024 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156246122 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109640649 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10423008 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.085326631 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.104752564 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160859614 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.225092322 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166981917 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125483539 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116044937 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118357887 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.118193587 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136446377 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112604177 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126731766 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098063292 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.114749706 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118278983 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086814275 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081312115 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113765778 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116898986 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.103704465 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102347794 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.103675212 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155342183 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.076911505 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103313163 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120190629 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149724917 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180596858 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.093112521 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087612226 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123422002 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120187678 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.117507292 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125336709 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083539627 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086635189 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.08438561 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.082819162 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113134024 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11760379 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120201259 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115137799 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168050976 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087751196 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.243012908 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100670224 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110109156 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074530239 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.082626073 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101098594 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102650522 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112217128 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115997836 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16411772 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099566328 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.094078755 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094311917 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.07800379 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086966334 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131236862 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112738592 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120956589 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2547999 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.068155207 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114224877 seconds)
  done (took 61.477772604 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.112558077 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.08719978 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.101039347 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149769288 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.128135235 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.206977715 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156415701 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194690076 seconds)
  done (took 2.785173967 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072376831 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.101096427 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.108619671 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.088006169 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.072127809 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.073259719 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.238383329 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.086579249 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.071444862 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.101976341 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.083339948 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.07354655 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.446642109 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070617127 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.072230587 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.066095197 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071753203 seconds)
  done (took 3.539716059 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.413351883 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.621935225 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.366352082 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.080722568 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.977252514 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.095189453 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.176356872 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.138434218 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.0832265 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.529237779 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.414454766 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.133440784 seconds)
  done (took 18.6830422 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.087507661 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.079673748 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.095049202 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.094950304 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.082432642 seconds)
  done (took 2.086399298 seconds)
done (took 111.140713028 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.086269519 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.620853215 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05722242 seconds)
  done (took 2.356847915 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088701371 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089880705 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090471149 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088878948 seconds)
  done (took 2.014653711 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.07966627 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.081134236 seconds)
  done (took 1.810921524 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.242962254 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.174213942 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.101877637 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.088548827 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.085345568 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.08478136 seconds)
  done (took 1.913927375 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077744236 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.080146573 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.077073907 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.081422784 seconds)
  done (took 1.966315806 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081060686 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055782315 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.058791166 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.06142311 seconds)
  done (took 1.908665445 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.092361155 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084329344 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082840957 seconds)
  done (took 1.911148522 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10739402 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091257864 seconds)
  done (took 1.850653547 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08725446 seconds)
  done (took 1.740696173 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.100361956 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.106383232 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.137691145 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.116558201 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.145189418 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.114659144 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088878526 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.090298867 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.08106293 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.091391776 seconds)
  done (took 2.725485742 seconds)
done (took 22.451936441 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083270252 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.376436371 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364558378 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.0956952 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67431033 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.360431059 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.003393369 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097851628 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121008543 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071639001 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089575798 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652429569 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.995897767 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.334549104 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.982177332 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.328285942 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.654020505 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07206965 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071796793 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071953488 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.989291004 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071547395 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072110521 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073273468 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653804488 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.377011901 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072292757 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.333820499 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072768128 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074070935 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.360376381 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073486392 seconds)
  done (took 16.365381791 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074630259 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126088256 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077748993 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090318184 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074949827 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073973398 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075363669 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090762349 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126860104 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072033483 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090983768 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072491251 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.075769772 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073277488 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092127617 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072003627 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072902358 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07301081 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073552789 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072353617 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091845235 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07182529 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073305994 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073310529 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.0730023 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085218482 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072750466 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072890562 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07351705 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074921474 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075483445 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073283479 seconds)
  done (took 4.230401145 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120595825 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.130643985 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077980628 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109482495 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116614576 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074401247 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.150199734 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098690353 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.133038478 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072801386 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090147296 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072432259 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.107997045 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073739968 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093499831 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072619831 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073644155 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073406727 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07253796 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072668063 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092785121 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072599046 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072968794 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073888974 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073404096 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086767765 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.0731387 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072853588 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072961527 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075139786 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076169479 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073051277 seconds)
  done (took 4.471046754 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077643861 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.080158459 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.088290801 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.089349032 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.074099977 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07741981 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.077437717 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.074143132 seconds)
  done (took 2.308541723 seconds)
done (took 29.035723886 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083992771 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.073553383 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.076622414 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08662794 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07817224 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082551741 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.071204946 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.080191925 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076940907 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.077675885 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.080017289 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071956705 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.075540356 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070809377 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07915762 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.072110437 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084589726 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.076799359 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.084131983 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084296108 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.074778836 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078069589 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.080355411 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083762066 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.08422904 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083784061 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082250999 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.078032046 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073485116 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.075106541 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.082034021 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.08926991 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073801231 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084243381 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.072739742 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071949923 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.076277823 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072285974 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084169343 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.082286246 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074795835 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.080763818 seconds)
  done (took 4.956200168 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093353583 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.098079082 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.090330029 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065495851 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.071205061 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.070331803 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.093949836 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064089742 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.063674188 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.09358926 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059671915 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.064029319 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.067396146 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057476929 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.064844018 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060738203 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.066133128 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059365402 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.064948689 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.063972428 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.094407945 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.058027878 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.083581504 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.067563456 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.05978366 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06596456 seconds)
  done (took 3.543356507 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078953722 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.089858969 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.095503286 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136762735 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.110885294 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.083691533 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08437968 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.100982395 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.094261802 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.07172799 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07625203 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.098795501 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094874645 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.079171032 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.072118661 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.091298701 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.088776069 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073698302 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078109371 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099781233 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.092749195 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.091084813 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.102001987 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.088575025 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070797808 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074371085 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075844362 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.086398621 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074549055 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.081980754 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07508218 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075573799 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.074322862 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.084114391 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074559238 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073961681 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09993329 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082314764 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08404673 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.072286578 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.080804624 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.073531418 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09800197 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.133282176 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.071700457 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078969679 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07601781 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082195572 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.082519386 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093354593 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083988285 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.071939828 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.075256011 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070839359 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.071301389 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075285535 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.073608858 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074314979 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081536348 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.077752552 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.097301795 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076970549 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088248039 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.071806409 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080033753 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.071004536 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.072964933 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.07121189 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.101298598 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073603194 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116586913 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.072261219 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.07254036 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081753133 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080325382 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.080081894 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.071906638 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088513469 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082397231 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075503458 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.080683819 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074976187 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074927667 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.09624704 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.074702591 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.073958994 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.073247695 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.078222895 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074717897 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.073293047 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085567946 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.071330657 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074947213 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089498074 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071930414 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.07365943 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.077794023 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076413051 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.07186248 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083669721 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076942658 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.073108769 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082124688 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.071930318 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.075069725 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.085865081 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.079716736 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070447734 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.076624747 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.078118068 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072599373 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073182834 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074529872 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.073850092 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081096345 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078805426 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076528914 seconds)
  done (took 11.223273155 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.173001042 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.165039519 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074919679 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.155772039 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.081358746 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.084402813 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.160454557 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099768445 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.073021924 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072970711 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.073623433 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.116105979 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.112020252 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121768863 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.084291829 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.072428199 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.089735792 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.120777965 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.160517221 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.154689553 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.09059846 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.081889647 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074958776 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.07371272 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.075227709 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082999838 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090421858 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.083982878 seconds)
  done (took 4.612179269 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085121195 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.111511255 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.079771124 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.097009464 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.096151528 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072522085 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.074923308 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.074025233 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086963776 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082659584 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072776025 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07786678 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.079355209 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.076189409 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.073263891 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.079352706 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079864306 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.074414225 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075908632 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077760751 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.082995897 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.097234205 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075968561 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072119881 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077706097 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.071405193 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067396591 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.089107493 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072976282 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.101332559 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.070265424 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.078081315 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.088198392 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.073161793 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.072255483 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072403711 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072472409 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.07273806 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073993976 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.07170547 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.071373066 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.062318702 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.071166768 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.083892396 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.079704583 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.060210887 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077120856 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.078079308 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.078368649 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.070455432 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.076359188 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.076081528 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07566949 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.080164806 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076324898 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.077899254 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073745359 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.078937687 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.081923472 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072794295 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069617445 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070868086 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.077203449 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.069338866 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.08271364 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.077217088 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070999946 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071920747 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.0741136 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.079566446 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072167225 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.077113796 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069810238 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.074343049 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077520328 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075232728 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073624889 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070974666 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071991404 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.072451676 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.059529661 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.072302157 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057667822 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075840947 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070311872 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070518336 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072801058 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.077301883 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.083960455 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.073917224 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078341839 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.073506539 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.071396021 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075058935 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064296798 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074960582 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083934055 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.087129067 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.07206085 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069831135 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086043571 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.077046228 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071284048 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059825979 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076687615 seconds)
  done (took 9.703008747 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.096708974 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074639113 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.089226902 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.095678763 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.093174618 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07926709 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082588935 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.073891495 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.088839059 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.079063292 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.082795731 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.072232042 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.082908251 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082236964 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.07457723 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.082761007 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.076861392 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.090302026 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.088340332 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.072802597 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.081644964 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08619268 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.095719983 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.087480292 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085634524 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086891893 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.096182084 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.083231625 seconds)
  done (took 4.081366608 seconds)
done (took 39.786181218 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.77268928 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.927847966 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.753190869 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.083078068 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.054173754 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.766018673 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.916453421 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.74603987 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.872672974 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.788632752 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.084382738 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.956468594 seconds)
done (took 65.411046229 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.782204977 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.896302844 seconds)
    (2/2) benchmarking "String"...
    done (took 1.980494622 seconds)
  done (took 5.565079513 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.995137571 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.324354505 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.997048552 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.74814723 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.754489153 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.067880638 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.557362786 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.261406567 seconds)
  done (took 30.399143635 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.91357845 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.974245023 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.456945373 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.497275313 seconds)
  done (took 15.585044589 seconds)
done (took 63.104574456 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.746839604 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.77232673 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.7823458 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.734091139 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.811119245 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.768159944 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.860713918 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.018771563 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.749210083 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.74021562 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.75120011 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.22966798 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.752457275 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.888402125 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.757422276 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.758669216 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.825962423 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.278326969 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.91067158 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.759031141 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.76109148 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.787922055 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.753984666 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.763128594 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.754145036 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.753147955 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.143906535 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.756081987 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.382511907 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.752037681 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.784320728 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.102359957 seconds)
  done (took 204.078856919 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.74986803 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.771704531 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.83542866 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.767455592 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.176838613 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.965310394 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.864425021 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.214145634 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.756871164 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.771655802 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.850290984 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.75154426 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.869256676 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.708516737 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.780935118 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.751195832 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.988762493 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.884162392 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.784449657 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.907417405 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.761913636 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.681189146 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.654590514 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.841773305 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.756487524 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.75909247 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.919986838 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.773097412 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.949091526 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.95516479 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.765146674 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.791874643 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.976556987 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.624828827 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.75503516 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.771388703 seconds)
  done (took 168.578862145 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.925085915 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.752707521 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.751637185 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.752020357 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.764168251 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.752071629 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.884444527 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.882385491 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.36563691 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.149155285 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.755303046 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.752808621 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.803917849 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.55964296 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.752769458 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.819810287 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.766134533 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.754569952 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.768737148 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.77936995 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.756819228 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.754591218 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.883227563 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.768031132 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.981243116 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.759657092 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.7534164 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.75863823 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.124559234 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.753613762 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.759416075 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.012048217 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.754016179 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.753599301 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.613203826 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.439507419 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.846598611 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.754906972 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.760099194 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.754109681 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.753574034 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.970381562 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.75537852 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.754252058 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.756826652 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.902221897 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.756505651 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.881974776 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.754545194 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.252263633 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.754693474 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.755059639 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.414358325 seconds)
    (53/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.762906907 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.363676572 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.757698648 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.75406383 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.75755611 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.754710239 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.754530142 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.761668863 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.390655146 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.835062381 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.757346481 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.759100648 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.761080606 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.755430309 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.974487311 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.75808849 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.464156581 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.818764016 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.878761038 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.879019875 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.758438138 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.821701487 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.849487848 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.756466217 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.755436958 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.75681141 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.755625895 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.836466898 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.756033688 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.882823995 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.76392908 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.75714753 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.806443487 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.825378346 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.756948594 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.593887012 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.760180267 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.755011404 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.052747855 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.824256176 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.755815888 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.756277668 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.755826012 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.884073221 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.879616287 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.470596281 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.760160292 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.393033672 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.765082158 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.903901796 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.758318106 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.900387599 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.760410015 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.838759346 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.761995554 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.758863294 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.757447485 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.789369356 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.757667547 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.816972923 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.757777409 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.133193882 seconds)
  done (took 400.116711871 seconds)
done (took 776.442682911 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.404827976 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.367271048 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.477378641 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.389863734 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.364625439 seconds)
  done (took 13.699841074 seconds)
done (took 15.394800948 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.846073784 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.853910204 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.782371212 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.850479568 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.780108692 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.850505234 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.832590705 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.783930179 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.819569738 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.78326215 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.821078533 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.783445396 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.771046001 seconds)
  done (took 25.254826345 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.994443093 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.993204364 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.829092458 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.986908994 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.805856849 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.01291551 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.92042138 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.908466472 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.912555461 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.777669859 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.773112418 seconds)
  done (took 22.612813872 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.994240269 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.995764968 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.835463351 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.020425917 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.808931226 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.989307507 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.924214705 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.916652475 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.91608372 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.776475595 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.772793032 seconds)
  done (took 22.649047156 seconds)
done (took 72.212639929 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.769407498 seconds)
  done (took 3.468110621 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.799654448 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.962802808 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.776784707 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.773085358 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.769389306 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.769923359 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.772847491 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.768182014 seconds)
  done (took 16.092522055 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.767403296 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.768293438 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.764886835 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.768179616 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.76809608 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.765643895 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.76600391 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.768436535 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.765505327 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.76472958 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.76537813 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.765865631 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.768346655 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.765932109 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.769093576 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.76786402 seconds)
  done (took 29.969311161 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.768418282 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.765522223 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.765262673 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.766740312 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.766633711 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.766349071 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.767943084 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.76660991 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.765986515 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.766569247 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.766835898 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.766178529 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.766251972 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.766587968 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.767801626 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.767628014 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.765841302 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.767210007 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.77155442 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.766899805 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.768486703 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.766632695 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.767892495 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.767832933 seconds)
  done (took 44.112674147 seconds)
done (took 95.340541749 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.471211757 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.392289815 seconds)
  done (took 9.564487263 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.772801362 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.770072651 seconds)
  done (took 5.299220399 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.769924766 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.769716755 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.770268619 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.769600771 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.770269904 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.770249388 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.77028384 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.770010424 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.769988324 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.771036961 seconds)
  done (took 19.402687087 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.770727966 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.770225521 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.767281065 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.771093268 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.770806111 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.767515989 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.770210613 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.771287516 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.770302891 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.768014135 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.770887791 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.769130553 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.771485247 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.768747799 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.770819085 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.769020076 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.769802757 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.768989891 seconds)
  done (took 33.558616361 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.77203906 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.772953446 seconds)
  done (took 5.247846401 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.768740254 seconds)
    (2/7) benchmarking "second"...
    done (took 1.769255821 seconds)
    (3/7) benchmarking "month"...
    done (took 1.769000234 seconds)
    (4/7) benchmarking "year"...
    done (took 1.768743101 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.768469919 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.76851759 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.76835057 seconds)
  done (took 14.084450202 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.772589803 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.93688802 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.001928713 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.398984027 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.773466065 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.776451671 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.725847397 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.775688557 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.777351164 seconds)
  done (took 19.641733327 seconds)
done (took 108.500778394 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.554397959 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.769593197 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.020183281 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.817303164 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.828801643 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.065034933 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.785062724 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.075794096 seconds)
done (took 42.619479106 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.791420019 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 4.020073028 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.067218486 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.794878538 seconds)
  done (took 16.58666043 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.759241822 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.307357151 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.80535805 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.351804901 seconds)
  done (took 19.958288651 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.151314579 seconds)
    (2/2) benchmarking "read"...
    done (took 2.11402383 seconds)
  done (took 5.97520162 seconds)
done (took 51.016795993 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.773640106 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.771530518 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.773844783 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.771574839 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.774633574 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.771612021 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.770968736 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.773912074 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.774393632 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.773820873 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.774903551 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.774615235 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.772301177 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.771680776 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.774530295 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.772709333 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.77165879 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.77505621 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.77134027 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.771912124 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.774587726 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.774797789 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.772440897 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.771795192 seconds)
  done (took 44.260391349 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.775341941 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.773297354 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.775156957 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.774988984 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.772964042 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.77541815 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.775571376 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.773073247 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.776476225 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.775465555 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.772731033 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.773507761 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.775911973 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.77286675 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.776345854 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.773696237 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.776050258 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.773190416 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.776585857 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.774486309 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.776487995 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.773706659 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.774696617 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.777275294 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.773499282 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.773322831 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.776893484 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.774273385 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.777016646 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.774379595 seconds)
  done (took 54.952061401 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.781715746 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.78455126 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.775969522 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.777468113 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.776751684 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.776630246 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.777252029 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.776683055 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.777580892 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.777311816 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.777337543 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.776852784 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.777249008 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.778216522 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.777722653 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.778197449 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.778135542 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.777608843 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.778509851 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.778070897 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.777975867 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.778085201 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.777918279 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.777569438 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.777298215 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.777797715 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.778325566 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.777779956 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.777920319 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.778614645 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.778017115 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.778814056 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.777958438 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.777924909 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.778217643 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.778139482 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.782982972 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.787455567 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.778488937 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.778404311 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.779128946 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.77947988 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.779012891 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.779195083 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.778804841 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.780042508 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.779426723 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.779946991 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.779257031 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.779093931 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.779832604 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.778706551 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.779184107 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.779682038 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.779512424 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.780126146 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.779839129 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.780217605 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.779728253 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.779995571 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.780307984 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.780015337 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.780746563 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.780401262 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.782119029 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.779769589 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.779796681 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.780813563 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.780671422 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.780304342 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.780647784 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.781031851 seconds)
  done (took 129.802893498 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.78069427 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.778040364 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.777804161 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.777794912 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.778056423 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.780598419 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.777212984 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.780675451 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.778884074 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.782395335 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.780879268 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.778566892 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.777669279 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.78164585 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.781240354 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.778736465 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.781417759 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.778998229 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.781959245 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.781825961 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.782456971 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.779896015 seconds)
  done (took 40.868887701 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.781634748 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.782050891 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.779987092 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.78272145 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.779774875 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.781898621 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.781832291 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.78241927 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.782622692 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.78013211 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.780726996 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.783972732 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.780217255 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.779987792 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.779470235 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.779897433 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.781964475 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.780302593 seconds)
  done (took 33.774958737 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.780429941 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.780053149 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.782434651 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.7799233 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.780578022 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.783791575 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.780069702 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.782478477 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.78286858 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.780630505 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.783502677 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.782803622 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.784581363 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.779712215 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.782727637 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.781521754 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.783638276 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.7800741 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.783839923 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.780906679 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.78033429 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.784216626 seconds)
  done (took 40.914915106 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.783696422 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.783957839 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.78183843 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.781236943 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.780932731 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.784120697 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.784564717 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.781511458 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.784386296 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.783726961 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.780447715 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.785090959 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.781631398 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.782123389 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.781859203 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.781604326 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.784868144 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.783092033 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.784651761 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.781690686 seconds)
  done (took 37.371611454 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.786621435 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.786234155 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.786939281 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.786639175 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.787860352 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.786655169 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.787231492 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.787089611 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.787410375 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.788267899 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.787146465 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.786065922 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.786615061 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.786933327 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.786231226 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.787664887 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.788241138 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.786594327 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.787121335 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.787378979 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.7883963 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.788576657 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.788397117 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.788735967 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.788071805 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.786916355 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.787389466 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.787741089 seconds)
  done (took 51.761910513 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.786207562 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.786319708 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.783303684 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.784130179 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.783102988 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.782657493 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.783890046 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.784211783 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.786566676 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.783444384 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.786803676 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.78660607 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.786319068 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.787329466 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.786491265 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.787344993 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787037862 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.783983353 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.784621299 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.784888386 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.787231513 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.787453468 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.787109517 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.784433479 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784423635 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.787591999 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.785766125 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.785739332 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.787759335 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.784249295 seconds)
  done (took 55.284355066 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.80704244 seconds)
    (2/2) benchmarking "in"...
    done (took 1.80617829 seconds)
  done (took 5.332010659 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.785310537 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.787868097 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.788809509 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.785337373 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.78512564 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.787923399 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.788445853 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.785973317 seconds)
  done (took 16.013424192 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.788044516 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.787895171 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.788505539 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.787718354 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.790507902 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.788721041 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.794522595 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.788814939 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.789188627 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.790741294 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.796439429 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.797682671 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.791354833 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.788571863 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.788008693 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.790264292 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.788659187 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.791230551 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.790367559 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.789093 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.790626807 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.790691816 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.791169199 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.786804848 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.790535423 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.799329192 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.793415455 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.790660479 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.789493308 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.79257071 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.78915568 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.786961519 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.791533889 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.79167573 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.790828354 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.79224579 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.798116723 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.790645573 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.795437603 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.792597052 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.790821469 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.788903475 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.791548087 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.792454155 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.791389152 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.792042325 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.790370392 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.787521098 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.790685853 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.793193886 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.79619068 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.790011699 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.788216295 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.794887227 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.792303768 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.79711331 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.792529563 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.794219833 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.80185297 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.799840314 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.803976603 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.799034667 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.793562859 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.792462423 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.802310097 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.815837025 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.797735942 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.788782994 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.788647443 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.792539234 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.797408561 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.80562754 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.801386007 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.792629169 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.793578311 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.792441529 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.793350313 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.792829928 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.799252094 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.797286386 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.794158629 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.79484323 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.803550274 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.815471463 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.792682465 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.793822651 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.794053318 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.793585427 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.793722312 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.802167164 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.795266005 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.79284412 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.793023475 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.793599876 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.795149534 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.794729152 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.792442874 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.79564504 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.790829187 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.793972975 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.795237412 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.799126241 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.804469539 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.795671087 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.795024936 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.799838558 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.794997863 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.794322245 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.800169547 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.794318506 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.795497384 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.795484957 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.800026272 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.791407227 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.797124702 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.803017219 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.795129354 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.79631569 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.795416018 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.795068563 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.803962098 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.820419952 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.796168377 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.794311305 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.800051328 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.808029863 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.796549688 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.797410185 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.794756299 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.791929741 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.791860428 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.796489925 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.795703964 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.795941377 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.796815289 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.795521091 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.792025986 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.795244099 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.796967532 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.796743543 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.796883393 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.795695326 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.797258498 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.796992164 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.797818561 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.797055153 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.801388973 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.796140081 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.797854125 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.796677474 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.793079642 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.796162561 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.797483338 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.798805644 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.797368225 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.797875675 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.795859168 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.79898981 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.796238865 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.796661418 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.796617665 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.797585021 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.801293324 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.798109173 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.800815185 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.796014913 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.795171949 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.796511361 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.797125005 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.796928208 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.797466124 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.796313481 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.801151858 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.807027542 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.797383981 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.799221036 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.799902164 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.798704091 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.798985763 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.799284759 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.800964522 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.805816118 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.799103769 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.803949991 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.79944956 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.799081854 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.798007028 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.797474293 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.797366884 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.799741736 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.800657636 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.80715196 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.811546051 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.807683075 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.799412357 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.802967763 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.79926616 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.8035782 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.801913266 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.800047439 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.798549931 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.8004619 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.798357751 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.799817517 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.800306741 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.800836692 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.798171579 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.799787853 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.799856679 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.800234036 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.800294892 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.800391023 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.80067591 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.796134022 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.799987629 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.800565658 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.799343205 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.796908476 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.798915156 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.79940508 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.799918722 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.801751041 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.806159889 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.796823471 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.800851761 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.800434455 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.79977782 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.798677463 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.800301209 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.802025765 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.801314776 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.807003357 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.801076979 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.801310316 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.805471612 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.801163957 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.800160723 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.802745499 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.801079044 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.797905376 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.803262129 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.809369623 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.800864885 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.802648933 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.802531403 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.801596326 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.802439447 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.80783177 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.799032413 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.80045227 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.801416459 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.802713587 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.797897935 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.802658949 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.802140443 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.802037385 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.804236178 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.802776804 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.80258579 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.802668859 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.803164569 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.803667522 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.803068821 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.80645669 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.811186706 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.80805229 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.803197477 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.804997471 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.804319756 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.806884133 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.803353527 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.804351576 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.8024149 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.816205766 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.812319488 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.808648691 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.804903852 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.802574643 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.808564482 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.804076187 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.807794339 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.802788577 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.803446432 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.80300824 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.802042519 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.799810943 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.804312274 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.802920325 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.80427336 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.804625528 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.807557509 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.803716029 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.802430054 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.805195247 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.804868931 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.804224959 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.8042967 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.804211764 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.805711157 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.80641054 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.802648761 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.803388193 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.810321498 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.80507104 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.804823766 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.803521081 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.804757223 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.803773158 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.804370279 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.805724107 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.808158612 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.814548894 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.808086315 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.813875497 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.806999088 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.815168392 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.805742455 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.808988182 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.81524644 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.801607156 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.803910599 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.804163456 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.806543792 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.811871514 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.806135401 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.806042566 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.811285008 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.805658327 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.808021743 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.805995839 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.806401074 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.80584519 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.807217979 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.813596148 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.806420391 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.810047472 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.80683794 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.80323381 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.807340101 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.806659961 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.805639884 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.809724845 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.808092531 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.806813031 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.80516482 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.806480915 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.806399852 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.807588137 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.806920251 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.803320157 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.80602307 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.812708382 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.807380112 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.813002232 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.806715008 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.81426744 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.808126223 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.812866016 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.808767279 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.808790307 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.808242574 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.807098242 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.808112902 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.806389544 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.807550046 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.808805411 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.809589793 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.812029344 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.809234679 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.809000107 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.808731509 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.809114168 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.808564574 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.817707795 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.833414586 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.810499927 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.812461343 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.805655161 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.811410015 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.813684351 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.810540501 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.807667645 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.812144602 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.819907823 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.817255092 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.809204256 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.809646747 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.809102926 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.80974374 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.808190878 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.808816483 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.809536256 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.808406596 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.809363317 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.810597929 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.812420816 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.808848962 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.810087807 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.809924138 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.810790074 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.818798165 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.809831668 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.811269998 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.81060273 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.809242294 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.80959647 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.809672493 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.810436036 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.810578462 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.809766092 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.810712636 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.817545811 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.817599585 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.812410357 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.809499841 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.811024989 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.810531188 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.811437723 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.811570388 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.811782681 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.812115523 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.812181245 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.812316038 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.811131791 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.810709435 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.810405809 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.812331344 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.811147359 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.81387423 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.818412139 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.811605143 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.808681824 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.811621955 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.811036451 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.8104572 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.812140482 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.817737749 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.814837768 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.821994654 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.820858721 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.816583508 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.812271185 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.815511334 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.820341012 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.811583182 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.812865537 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.813122519 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.813690587 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.812418164 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.81616387 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.813084338 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.817424153 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.812522684 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.81177193 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.819006645 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.813098425 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.813566001 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.813226716 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.816620878 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.811954042 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.809829803 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.812577567 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.812292874 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.819554434 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.813452422 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.814831227 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.814794078 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.811654273 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.814657708 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.818048236 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.813284174 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.81491631 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.810246592 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.813662103 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.814354319 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.813525187 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.810072755 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.813766955 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.813317032 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.815893379 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.821989053 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.810522149 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.815760048 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.813129529 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.814146867 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.815440511 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.813734265 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.811470419 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.811973596 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.81324279 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.81542857 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.814594357 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.816428449 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.814472464 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.816763653 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.816430971 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.816059888 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.817917332 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.825014989 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.822287192 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.811470854 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.814438566 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.814978491 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.819165054 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.815703136 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.816243934 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.815124265 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.816572961 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.816343905 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.816560053 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.8142505 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.818967207 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.829749426 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.815526831 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.81482439 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.815494776 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.818654028 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.816672536 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.812843114 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.815121786 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.816626544 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.818394639 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.824588527 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.816964163 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.822173703 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.816789826 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.817065627 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.821320518 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.818748146 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.825467349 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.818687864 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.817857874 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.817687828 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.821958388 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.832918213 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.816687088 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.82666608 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.847082806 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.817727109 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.818821509 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.818152606 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.816981692 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.818605629 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.818754387 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.818792824 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.817241583 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.81707146 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.818587847 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.81896271 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.823201135 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.819118759 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.816542076 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.817632573 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.816953402 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.81860782 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.814329198 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.81735202 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.816844622 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.818663789 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.81922123 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.819332366 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.817853032 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.83153506 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.827912985 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.81754375 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.819323076 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.814508536 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.821770583 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.821316411 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.829528897 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.825472717 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.819078144 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.81869819 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.820861442 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.820449358 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.815577793 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.818984376 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.819092699 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.818327454 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.815692713 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.832037549 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.828606804 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.82337217 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.818659813 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.821380947 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.819717184 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.819428186 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.821178638 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.821070557 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.821626542 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.820495683 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.82537587 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.819075202 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.819353756 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.822243985 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.827352228 seconds)
  done (took 1078.169585257 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.816671285 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.816294066 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.817147025 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.816534693 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.816818255 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.816537933 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.817378161 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.818072396 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.81890537 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.817886281 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.817014451 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.818169438 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.817780572 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.818043774 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.817686838 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.817588951 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.8170876 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.817299241 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.817885935 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.818232537 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.817279363 seconds)
  done (took 39.915446607 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.821453316 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.818069706 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.819000119 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.820726023 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.818265131 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.821363955 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.818564589 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.821291673 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.821270584 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.818351568 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.821575902 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.820952249 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.818605629 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.818616418 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.817960292 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.821256096 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.821541655 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.817969658 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.82235296 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.819502516 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.821109705 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.819958691 seconds)
  done (took 41.790165266 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.823614503 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.824074724 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.821375126 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.819394857 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.822831718 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.8196031 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.824933656 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.823637687 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.821459761 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.823145157 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.82267533 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.82373996 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.830813192 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.828111764 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.823973087 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.823166219 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.967656453 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.824478102 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.825073027 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.824863332 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.82035753 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.82825695 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.820245069 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.819903518 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.82287955 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.823594217 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.823224988 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.82215624 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.824909883 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.824851785 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.829090635 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.824433522 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.823517163 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.825260782 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.823733582 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.825016594 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.827790102 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.825890162 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.821017055 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.823835058 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.833869558 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.845005889 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.825948502 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.83079661 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.823519984 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.823249628 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.828623092 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.834152974 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.821085128 seconds)
  done (took 91.318167201 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.824043897 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.825580825 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.821148462 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.825213478 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.824314281 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.824647675 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.825629328 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.825764717 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.821881781 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.822155752 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.825618111 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.822384054 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.823104392 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.826902343 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.824916594 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.822198938 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.823479264 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.822686576 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.822264972 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.82297235 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.82238479 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.826571228 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.825346663 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.822538362 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.825421186 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.822886427 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.822407878 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.826643831 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.823044329 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.823085735 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.825988091 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.826163621 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.825751679 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.823563195 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.823622905 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.82581295 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.826601956 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.822996613 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.826325702 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.823136377 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.826276988 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.826824998 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.826913077 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.827247528 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.823649432 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.824940307 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.823901597 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.824525421 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.824228026 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.827044279 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.826837069 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.825195719 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.82758066 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.823729791 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.827444933 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.827205182 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.82414779 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.824512518 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.826799559 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.825270785 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.825574757 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.828417787 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.825669033 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.828135311 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.827405438 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.825368777 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.825721975 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.828875519 seconds)
  done (took 125.852826197 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.829902243 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.829157842 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.830383915 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.829448309 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.830377918 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.830360052 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.830348436 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.83055907 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.829902512 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.830942656 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.830843474 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.829305537 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.830293156 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.829492035 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.829471804 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.83041256 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.829919205 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.830280419 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.82975262 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.83073747 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.831141247 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.830482959 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.830785382 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.830942967 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.831258345 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.832017397 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.831214606 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.830711388 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.830146938 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.830317246 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.830382785 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.831337941 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.830832085 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.831315884 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.831436709 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.831438431 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.830899932 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.831201701 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.831436511 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.831729832 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.83161529 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.831779929 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.831577348 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.832434594 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.830821756 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.831600585 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.831440265 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.833067423 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.830926879 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.832391859 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.832744006 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.832816739 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.831951865 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.83349418 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.832307112 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.831954334 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.833473976 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.833617945 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.832226272 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.833193533 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.833009829 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.831577423 seconds)
  done (took 115.292832266 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.831034073 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.831078651 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.829425108 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.828352761 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.830840415 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.829550017 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.831174809 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.831621143 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.83197427 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.831303357 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.830938742 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.828985935 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.829745113 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.831168467 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.829070472 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829344419 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.82922107 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.829311258 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.831942319 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.829692783 seconds)
  done (took 38.367041039 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.828703723 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.831767203 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.829751231 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.830098093 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.832799333 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.829678728 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.832863721 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.832257112 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.829622472 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.831841333 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.832698219 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.833360276 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829890717 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.830307098 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.832710781 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.830603337 seconds)
  done (took 31.060982308 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.8306285 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.833411379 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.834696156 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.834673966 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.831047701 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.830845797 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.832935757 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.830335054 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.830099029 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.833260217 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.833158624 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.833522576 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.834193746 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.835223751 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.830609044 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.833796205 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.831573789 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.832000164 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.83438347 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.836331638 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.83202511 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.832033811 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.83438926 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.834694722 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.832274933 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.832301469 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.83185561 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.831630287 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.83153538 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.834978432 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.831960338 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.83182243 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.832118323 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.832138125 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.836247329 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.832524666 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.834688237 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.835017863 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.834396157 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.83498613 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.8354772 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.83243908 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.835999403 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.835138001 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.832249404 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.83553749 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.832745859 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.833207186 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.83277948 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.83242615 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.835237931 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.83633985 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.835232018 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.83655844 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.835668601 seconds)
  done (took 102.601615482 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.836932739 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.836596834 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.834062202 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.836697512 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.838428418 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.83335388 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.837605789 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.832685239 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.833641704 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.836870387 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.834843637 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.835034782 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.832475807 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.835027916 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.833590352 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.836106609 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.833264173 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.833199272 seconds)
  done (took 34.796180065 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.833796335 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.834999324 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.835791411 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.832940099 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.833579399 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.835650956 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.83322128 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.835815089 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.834510077 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.833446259 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.833089467 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.836001133 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.836555859 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.834222531 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.833355414 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831864678 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.835199134 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.835752258 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.833577899 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.832013363 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.835762752 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.835246141 seconds)
  done (took 42.122180284 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.835259078 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.834718764 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.851921623 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.85830734 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.857884351 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.872963862 seconds)
  done (took 12.875238446 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831834422 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835105276 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.831330468 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834595481 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83496283 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829755323 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829788454 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831517155 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834385919 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831562265 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828400123 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830848229 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829712822 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827192381 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830179295 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830480262 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825267825 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825834341 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825354023 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827306192 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825769117 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828598021 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824825755 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823779269 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824789568 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824626101 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828963334 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824907656 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824796259 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827631175 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827546243 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824616855 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827189036 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825610093 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827486845 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827598362 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824618488 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828246951 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827516518 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825698469 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.828037133 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828513565 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828565305 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825272915 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827738279 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825217107 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824651175 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825441603 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826497904 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828258585 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828917142 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826478581 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828116981 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829013841 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828416172 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828921157 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826461643 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826180018 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829514196 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827470215 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826139245 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827940155 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82552791 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826483412 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829823505 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82688653 seconds)
  done (took 122.40776324 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826357753 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.826236934 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82607108 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827875114 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826376988 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827183562 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82697506 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826270979 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827819275 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826919508 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830228842 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826571853 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82634173 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826557524 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827107603 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826278528 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826040777 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825956595 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826228449 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83050616 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826706721 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826636508 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826931374 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826317968 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82754605 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831062725 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826365584 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826617742 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82708473 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82530972 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827221755 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826923146 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82677041 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.82592162 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826764069 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82648676 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826903637 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826847053 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826875433 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829420466 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827228268 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830997997 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825012417 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825201268 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824982498 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824849371 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82424294 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821408741 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819539721 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81977554 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819508456 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819435342 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819319675 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81930422 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8193511 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819056016 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818642625 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819593332 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819433776 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820974729 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818755163 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819572945 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821826949 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818759683 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817872072 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81806338 seconds)
  done (took 122.193357783 seconds)
done (took 2510.806162378 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.804684594 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.970155872 seconds)
  done (took 15.523939019 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.984110013 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.935890414 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.819803119 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.864159154 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.82003188 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.840853407 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.817427254 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.819709599 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.820260031 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.820067049 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.820182823 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.006162992 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.87004059 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.819932815 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.81988298 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.914729789 seconds)
  done (took 51.547503479 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.823137541 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.824315339 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.835715141 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.826304275 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.82352312 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.839746666 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.859011181 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.827261579 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.887421039 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.837195422 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.94219552 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.835518123 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.821887015 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.89376647 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.836150429 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.837642494 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.917816302 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.902307868 seconds)
  done (took 35.122119278 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.90396209 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.825375043 seconds)
  done (took 10.487207307 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.838776561 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.842359959 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.850197873 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.827228551 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.82470181 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.836822028 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.819298797 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.818967665 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.815305123 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.83694442 seconds)
  done (took 70.06542762 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.819636596 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.815249013 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.816061511 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.813080664 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.806758958 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.811129736 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.813989171 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.8096298 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.48935004 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.850373546 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.821469767 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.81792084 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.812796567 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.815568486 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.810701157 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.836248344 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.905825363 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.810534487 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.811793848 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.818568055 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.812791983 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.864290989 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.827520275 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.815259752 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.844671384 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.490462992 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.821212478 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.818299389 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.90543264 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.81082741 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.811613318 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.813033963 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.815198237 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.183585697 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.117781996 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.811985343 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.827525974 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.821382047 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.810428597 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.902991241 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.81211925 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.818438148 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.442901997 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.097777016 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.923958856 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.854326472 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.130873367 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.829374982 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.812272031 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.841297349 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.81396106 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.811898257 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.824290544 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.290044688 seconds)
  done (took 129.085980525 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.805250763 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.156655598 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.97762987 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.8052452 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.09738981 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.017851251 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.805827923 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.857026029 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.805134753 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.038759735 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.065003975 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.91594028 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.805186864 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.80406968 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.804384104 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.80288278 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.967674377 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.881061086 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.807016265 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.802835242 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.837798003 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.050615398 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.932086582 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.805241445 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.835063549 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.019278482 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.931461767 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.914052279 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.590443553 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.802007727 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.869790827 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.805143362 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.804548069 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.800944756 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.962841525 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.925313568 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.88996145 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.805769847 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.801489855 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.801949668 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.476939414 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.007297567 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.901719098 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.947150951 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.003364914 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.015880426 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.590623897 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.80111721 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.547111645 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.969877932 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.036872519 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.035565674 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.929622925 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.804561173 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.124129833 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.8016343 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.802562508 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.056873059 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.952428742 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.907710844 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.804563902 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.800425775 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.801018176 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.052051151 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.805409054 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.902292991 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.806228233 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.801079918 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.904954699 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.911603087 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.946590358 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.021740125 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.841163667 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.709190486 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.34001783 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.055142419 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.876349816 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.061570612 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.807213687 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.803137794 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.886358881 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.65678335 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.061505301 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.060473105 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.06296101 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.842934097 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.531011469 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.802877795 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.035717038 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.030929261 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.057927477 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.031187195 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.044760107 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.137439942 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.803068775 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.80231287 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.028665703 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.944799185 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.806800359 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.157624973 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.042168726 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.374744029 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.829120969 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.118361564 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.94024836 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.80705903 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.449238061 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.802561935 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.03144457 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.849116698 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.805732213 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.807553536 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.028118066 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.781644532 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.805899044 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.675536309 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.869508092 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.809125117 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.043740155 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.807367531 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.070374769 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.809496802 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.046843503 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.976354478 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.843530764 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.984074327 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.026519686 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.807372129 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.057372871 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.054557638 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.924897788 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.084228128 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.702912084 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.804295573 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.097447519 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.807365887 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.804434092 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.981060401 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.807349339 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.957501731 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.808045652 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.092665126 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.834049063 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.061853126 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.809549348 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.063221788 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.8450017 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.860916733 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.807769364 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.935273614 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.806899441 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.640713776 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.968462687 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.809348516 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.806542166 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.367575356 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.807333163 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.966455682 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.042622501 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.832094574 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.881538239 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.48351474 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.807430225 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.894658838 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.834297699 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.199064999 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.806568695 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.062515427 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.808751322 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.807017897 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.807100971 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.050498183 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.048726266 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.812230947 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.805998598 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.709771165 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.806060468 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.807687684 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.996237142 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.147029843 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.807054548 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.01519765 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.80986817 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.940182139 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.810575104 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.888707598 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.146004041 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.808243917 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.806707457 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.80946939 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.808944467 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.809280857 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.021873326 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.837863396 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.345974422 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.950323703 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.079340454 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.12349364 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.061584658 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.85613483 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.80929026 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.0677635 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.811922958 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.874855538 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.81024939 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.832214695 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.044449438 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.811576162 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.104263179 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.089969063 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.687307591 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.859645266 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.810940359 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.808295897 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.808405244 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.959076468 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.903003766 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.811179123 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.808258551 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.927813235 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.936041309 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.024326557 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.810704321 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.924928669 seconds)
  done (took 890.654231538 seconds)
done (took 1204.235106808 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.808581253 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.811865487 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.798772273 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.814262071 seconds)
  done (took 28.979954903 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.819394956 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.814993465 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.817565123 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.815245614 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.81889181 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.817583705 seconds)
  done (took 12.650384443 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.832302042 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.815043326 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.812628288 seconds)
  done (took 21.206769495 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.884332503 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.201228436 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.927649156 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.254964223 seconds)
  done (took 10.015189767 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.824024978 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.818884463 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.819198008 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.819805515 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.820342757 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.822116078 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.819532794 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.820742572 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.822011464 seconds)
  done (took 18.135118116 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.394051086 seconds)
done (took 97.128028054 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.825676385 seconds)
    (2/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.9982653 seconds)
    (3/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.293344901 seconds)
    (4/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.253025833 seconds)
    (5/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.805935882 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.970273256 seconds)
    (7/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.820334877 seconds)
    (8/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.273761272 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.120136906 seconds)
    (10/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.816830494 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.868183414 seconds)
    (12/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.84877264 seconds)
    (13/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.971845529 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.874683977 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.70783404 seconds)
    (16/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.941882876 seconds)
    (17/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.158011663 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.98087304 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.896001375 seconds)
    (20/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.799931017 seconds)
    (21/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.520338372 seconds)
    (22/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.792724338 seconds)
    (23/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.843846195 seconds)
    (24/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.98487979 seconds)
    (25/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.249480628 seconds)
    (26/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.822965071 seconds)
    (27/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.816957238 seconds)
    (28/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.099817484 seconds)
    (29/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.84393704 seconds)
    (30/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.204649223 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.746426567 seconds)
    (32/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.002873729 seconds)
    (33/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.806078933 seconds)
    (34/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.981805639 seconds)
    (35/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.844212409 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.803403171 seconds)
    (37/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.406479367 seconds)
    (38/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.912337935 seconds)
    (39/309) benchmarking ("sort", Float64, false)...
    done (took 5.563819018 seconds)
    (40/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.155646801 seconds)
    (41/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.836689631 seconds)
    (42/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.991259043 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.922144866 seconds)
    (44/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.162344016 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.805297985 seconds)
    (46/309) benchmarking ("sort", BigInt, false)...
    done (took 8.074387141 seconds)
    (47/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.82298706 seconds)
    (48/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.817931688 seconds)
    (49/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.929419497 seconds)
    (50/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.28284134 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.20612247 seconds)
    (52/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.8465618 seconds)
    (53/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.995135445 seconds)
    (54/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.71690627 seconds)
    (55/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.909531808 seconds)
    (56/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.902964119 seconds)
    (57/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.802550302 seconds)
    (58/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.996568316 seconds)
    (59/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.822243125 seconds)
    (60/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.026246954 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.08705315 seconds)
    (62/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.90665635 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.075662022 seconds)
    (64/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.123076766 seconds)
    (65/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.09352182 seconds)
    (66/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.055536528 seconds)
    (67/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.807608548 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.004520243 seconds)
    (69/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.729249087 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.149511829 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.190396836 seconds)
    (72/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.82433542 seconds)
    (73/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.257842108 seconds)
    (74/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.081528902 seconds)
    (75/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.052226196 seconds)
    (76/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.054583215 seconds)
    (77/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.07781059 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.82056185 seconds)
    (79/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.821419938 seconds)
    (80/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.884013214 seconds)
    (81/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.116798481 seconds)
    (82/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.965080755 seconds)
    (83/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.824280439 seconds)
    (84/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.832525282 seconds)
    (85/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.037553318 seconds)
    (86/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.919398933 seconds)
    (87/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.906912456 seconds)
    (88/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.868168507 seconds)
    (89/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.939234517 seconds)
    (90/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.809895529 seconds)
    (91/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.023340987 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.92137849 seconds)
    (93/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.99885038 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.810630669 seconds)
    (95/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.383629344 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.475441723 seconds)
    (97/309) benchmarking ("sort", Int64, false)...
    done (took 5.513534202 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.464569931 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.499523802 seconds)
    (100/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.984535167 seconds)
    (101/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.276393452 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.622280218 seconds)
    (103/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.922525904 seconds)
    (104/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.203700577 seconds)
    (105/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.920893002 seconds)
    (106/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.205366638 seconds)
    (107/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.443945526 seconds)
    (108/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.967325105 seconds)
    (109/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.810549032 seconds)
    (110/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.340036966 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.199431365 seconds)
    (112/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.230854547 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.920720027 seconds)
    (114/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.805834777 seconds)
    (115/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.218322565 seconds)
    (116/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.916664373 seconds)
    (117/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.154204241 seconds)
    (118/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.843783262 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.894948783 seconds)
    (120/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.821102315 seconds)
    (121/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.808123536 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.69354935 seconds)
    (123/309) benchmarking ("sort", Int8, false)...
    done (took 4.773823697 seconds)
    (124/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.841598459 seconds)
    (125/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.923426015 seconds)
    (126/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.35652442 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.824521505 seconds)
    (128/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.921564546 seconds)
    (129/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.31869815 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.119760995 seconds)
    (131/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.907904809 seconds)
    (132/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.297422717 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.167648868 seconds)
    (134/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.855852263 seconds)
    (135/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.903337731 seconds)
    (136/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.077837397 seconds)
    (137/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.084320036 seconds)
    (138/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.814453415 seconds)
    (139/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.979543212 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.989923483 seconds)
    (141/309) benchmarking ("sort", Bool, false)...
    done (took 2.124506118 seconds)
    (142/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.847131537 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.078502815 seconds)
    (144/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.934082774 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.045736791 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.077875336 seconds)
    (147/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.121920937 seconds)
    (148/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.829520549 seconds)
    (149/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 7.070417804 seconds)
    (150/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.837974161 seconds)
    (151/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.919822583 seconds)
    (152/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.92739991 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.96445703 seconds)
    (154/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.83176167 seconds)
    (155/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.88592478 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.069601519 seconds)
    (157/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.011889055 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.056732819 seconds)
    (159/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.854399177 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.290672255 seconds)
    (161/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 2.768656379 seconds)
    (162/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.94521994 seconds)
    (163/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.107201756 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.062196692 seconds)
    (165/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.937436086 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.155533737 seconds)
    (167/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.399128232 seconds)
    (168/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.852066766 seconds)
    (169/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.931670973 seconds)
    (170/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.832523713 seconds)
    (171/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 3.157226078 seconds)
    (172/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.895480014 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.837718631 seconds)
    (174/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.93648715 seconds)
    (175/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.015604421 seconds)
    (176/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.908841094 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.949896886 seconds)
    (178/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.516591566 seconds)
    (179/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.958055688 seconds)
    (180/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.846921833 seconds)
    (181/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.740095706 seconds)
    (182/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.214888282 seconds)
    (183/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.830809098 seconds)
    (184/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.013451103 seconds)
    (185/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.067730767 seconds)
    (186/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.956954148 seconds)
    (187/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.15715475 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.905307699 seconds)
    (189/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.24123871 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.209951186 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.858209906 seconds)
    (192/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.812394347 seconds)
    (193/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.153627737 seconds)
    (194/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.884983526 seconds)
    (195/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.891656973 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.86039405 seconds)
    (197/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.006916639 seconds)
    (198/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.985594519 seconds)
    (199/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.930138452 seconds)
    (200/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.299874535 seconds)
    (201/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.237127099 seconds)
    (202/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.678606858 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.523339739 seconds)
    (204/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.278100711 seconds)
    (205/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.859598352 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.888080032 seconds)
    (207/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.050309593 seconds)
    (208/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.071957453 seconds)
    (209/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.060001411 seconds)
    (210/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.89895729 seconds)
    (211/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.936431254 seconds)
    (212/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.40196841 seconds)
    (213/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.845146096 seconds)
    (214/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.85851578 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.964613351 seconds)
    (216/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.856494768 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.637642905 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.034403465 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.924147667 seconds)
    (220/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.130465254 seconds)
    (221/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.1384213 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.139882204 seconds)
    (223/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.837644248 seconds)
    (224/309) benchmarking ("sort", Float32, false)...
    done (took 5.607373296 seconds)
    (225/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.989318383 seconds)
    (226/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.821239123 seconds)
    (227/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.203530077 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.854759717 seconds)
    (229/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.246973021 seconds)
    (230/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.034620936 seconds)
    (231/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.808679908 seconds)
    (232/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.934486549 seconds)
    (233/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.115356663 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.875084242 seconds)
    (235/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.900447113 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.167894093 seconds)
    (237/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.95757431 seconds)
    (238/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.941827815 seconds)
    (239/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.899017436 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.814821756 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.077272199 seconds)
    (242/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.997653279 seconds)
    (243/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.822076398 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.588089154 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.812702735 seconds)
    (246/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.005768568 seconds)
    (247/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.837608733 seconds)
    (248/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.283271797 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.96311326 seconds)
    (250/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.965360306 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.132972051 seconds)
    (252/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.948850063 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.835642417 seconds)
    (254/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.921008451 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.753625704 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.824037095 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.888966076 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.006195461 seconds)
    (259/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.275434246 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.864121524 seconds)
    (261/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.836413482 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.918209044 seconds)
    (263/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.179913659 seconds)
    (264/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.946767855 seconds)
    (265/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.753309288 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.185791123 seconds)
    (267/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.077769106 seconds)
    (268/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.928686505 seconds)
    (269/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.290464814 seconds)
    (270/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.962963046 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.110560381 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.941993502 seconds)
    (273/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.343320782 seconds)
    (274/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.907995686 seconds)
    (275/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.827874152 seconds)
    (276/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.546948503 seconds)
    (277/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.848181974 seconds)
    (278/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.935243774 seconds)
    (279/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.837268093 seconds)
    (280/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.025761265 seconds)
    (281/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.176926855 seconds)
    (282/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.836280739 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.943423741 seconds)
    (284/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.023384733 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.915486489 seconds)
    (286/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.894511786 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.217282965 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.974445151 seconds)
    (289/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.848763476 seconds)
    (290/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.345140858 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.535012802 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.849852796 seconds)
    (293/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.933940207 seconds)
    (294/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.834231191 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 3.306563594 seconds)
    (296/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.840718712 seconds)
    (297/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.887082393 seconds)
    (298/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.889291175 seconds)
    (299/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.164513885 seconds)
    (300/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.985977953 seconds)
    (301/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.850705425 seconds)
    (302/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.013442903 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.854887816 seconds)
    (304/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.860535324 seconds)
    (305/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.929969274 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.451271548 seconds)
    (307/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.863326349 seconds)
    (308/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.916875318 seconds)
    (309/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.181023677 seconds)
  done (took 993.824988337 seconds)
done (took 995.638850615 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.870217861 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.862422821 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.846786218 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.869046269 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.959099416 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.875653598 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.85777362 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.849979328 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.895712142 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.897183626 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.84631836 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.874510724 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.849154681 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.848112184 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.847644676 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.861583989 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.158116689 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.87284656 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.864133114 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.857910776 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.863923856 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.845767277 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.896739927 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.874775351 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.851618657 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.850433986 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.851398261 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.867385915 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.959258444 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.851773553 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.850448038 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.859053551 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.158447663 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.871984764 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.843428402 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.868361184 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.859197071 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.857299162 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.852082664 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.880848473 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.244728435 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.882736978 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.850959825 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.849800016 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.849995109 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.852927321 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.850755186 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.855470398 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.861891988 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.863169264 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.245892515 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.898360624 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.852516608 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.850604813 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.861380109 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.850418729 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.853757831 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.865439053 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.869881849 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.865675097 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.148571281 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.88064834 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.852168375 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.86672717 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.858164864 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.280006546 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.878851028 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.856087686 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.246903953 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.88821489 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.28081891 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.893050218 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.852357415 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.865503877 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.882813313 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.159138263 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.869191579 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.850957993 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.858469949 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.849569049 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.860352757 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.863797467 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.856341678 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.851902585 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.864061817 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.879428592 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.86144765 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.85296903 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.861043262 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.870444483 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.858074101 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.86202211 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.854646975 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.848548745 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.860866836 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.855701408 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.855028457 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.854513906 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.857513518 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.86187399 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.244015171 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.902530656 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.848885919 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.850308186 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.851529895 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.866405834 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.246384389 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.886972096 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.873767533 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.900226942 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.855495097 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.151293052 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.879762519 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.868495685 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.862025068 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.857134314 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.848661586 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.149559098 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.272707069 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.902825889 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.855511101 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.850842481 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.869013263 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.856223458 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.851284243 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.163038224 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.879916893 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.866566791 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.973540207 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.864506385 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.884378462 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.851920924 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.856932489 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.882269394 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.869496797 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.885454418 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.857962788 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.869450794 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.869938071 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.851488479 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.866540298 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.864746926 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.855570008 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.859630483 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.848284128 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.88386084 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.86606532 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.866616466 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.875720022 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.975160758 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.852604056 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.151833759 seconds)
done (took 290.938475569 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.922924633 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.851757886 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.950484157 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.850791058 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.933633498 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.93676925 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.850048364 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.848855603 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.848271373 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.223659413 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.849379184 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.84985845 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.847310964 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.849082573 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.933930224 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.851495288 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.848011917 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.186515506 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.852393233 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.922561197 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.845546584 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.849796688 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.851917538 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.226109012 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.844532232 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.849767961 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.924399736 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.851947147 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.193187264 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.85097213 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.851221458 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.192053764 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.942824034 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.871123076 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.863110194 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.859740942 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.935466346 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.856278033 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.934405467 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.932877921 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.951514537 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.894292137 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.850420825 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.846034366 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.855819084 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.855639106 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.850169743 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.88107792 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.853685833 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.851244979 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.188392081 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.863586071 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.860790739 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.851440583 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.851473019 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.877696594 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.851545475 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.856034174 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.943629595 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.856264149 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.916463074 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.230659537 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.224893484 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.854150761 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.852209803 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.851327457 seconds)
  done (took 183.136894497 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.92163078 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.92661787 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.919672713 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.857531843 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.902584996 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.922112611 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.858132873 seconds)
  done (took 15.090427233 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.860408903 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.854652511 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.907132588 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.907367912 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.855229998 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.002652768 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.855633666 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.866596175 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.852974952 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.908046891 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.856405182 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.855862423 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.862144346 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.849633102 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.907625602 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.867670935 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.973500361 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.85623166 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.857078045 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.006738506 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.852874135 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.862698856 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.908495427 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.866819773 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.856918507 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.861967182 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.43928868 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.857182571 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.853537924 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.856177609 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.853360605 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.898935354 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.857473651 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.84895497 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.853941115 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.972312109 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.857269154 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.854133269 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.856388028 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.851135865 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.85702483 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.857580316 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.857670966 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.85428916 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.857041308 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.880313045 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.856667658 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.857076792 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.858611294 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.858716927 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.907874726 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.858010709 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.854536997 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.85568407 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.912537437 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.865228953 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.859012497 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.854901861 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.858951748 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.85498516 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.010257749 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.908644703 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.857368348 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.907940297 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.857837668 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.858117153 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.858041492 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.859928196 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.955992307 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.858188503 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.909385228 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.854433343 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.016900608 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.881343305 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.860008133 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.861498292 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.861563882 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.85910357 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.852176895 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.864311266 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.856372921 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.860274508 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.866079441 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.857245621 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.856347589 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.971415808 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.965937291 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.855738122 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.871507414 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.866587114 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.855987798 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.911919567 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.858799734 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.856873676 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.915430241 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.978209473 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.915011231 seconds)
  done (took 204.618023017 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.86378067 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.867763039 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.85965245 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.876334737 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.861268269 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.859602442 seconds)
  done (took 12.975918199 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.862096159 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.859775189 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.859929008 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.860299148 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.860883656 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.86137345 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.861999955 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.862047628 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.864182864 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.861805204 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.862143188 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.863474167 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.862467188 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.861223444 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.862225551 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.86176207 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.86215871 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.858364584 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.861204286 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.861796811 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.020443124 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.862171529 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.861696894 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.861553678 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.865520546 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.861180873 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.869574167 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.861506967 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.861626677 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.86943533 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.865801231 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.862324777 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.862405605 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.865947117 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.865383261 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.862589441 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.865231821 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.864227272 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.859294171 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.86277851 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.862670341 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.86329122 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.863114463 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.864063574 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.863995877 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.866136162 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.867418385 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.871071371 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.863641621 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.864073927 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.864244944 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.862531197 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.864188183 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.864307404 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.865214367 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.867825891 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.867310954 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.867217534 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.862682073 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.863805045 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.863593679 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.864044233 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.865993184 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.868342649 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.861352558 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.865799243 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.864611845 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.866506461 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.865663538 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.862637037 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.864865685 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.861016507 seconds)
  done (took 137.124944806 seconds)
done (took 554.737565263 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.005338424 seconds)
  done (took 8.796549508 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.91465102 seconds)
  done (took 8.747538995 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.194533672 seconds)
  done (took 9.987666549 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.866326614 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.87034829 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.863689314 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.857167932 seconds)
  done (took 29.264080743 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.969232433 seconds)
  done (took 8.758023684 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.874151611 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.852388107 seconds)
  done (took 15.54883328 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.022084598 seconds)
  done (took 8.811166285 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.962373729 seconds)
  done (took 8.775613424 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.865295451 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.882768824 seconds)
  done (took 15.550859141 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.840003923 seconds)
  done (took 8.630107783 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.474744212 seconds)
  done (took 11.367007479 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.863422908 seconds)
  done (took 8.756993979 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.896315154 seconds)
  done (took 8.686696268 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.935471048 seconds)
  done (took 9.725837298 seconds)
done (took 163.197389646 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.872503563 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.857816417 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.858547244 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.860275524 seconds)
  done (took 29.239596785 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.896443211 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.895932202 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.896992718 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.908827807 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.898890327 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.897046148 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.888430631 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.888996093 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.906887362 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.90032373 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.898435701 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.89836972 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.896560746 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.888868125 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.900874488 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.898735039 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.90718367 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.898410821 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.88927572 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.902064899 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.864047578 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.907662707 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.900371876 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.864484464 seconds)
  done (took 47.284619332 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.062232613 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.936885676 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.016799942 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.915689476 seconds)
  done (took 9.723962958 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.917397527 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.917492057 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.929577615 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.96932138 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.991282596 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.928307377 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.891776257 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.886585099 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.872405546 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.917963929 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.994389419 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.918726182 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.010390104 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.864037623 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.051105913 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.866183212 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.865386221 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.916341463 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.968508198 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.9817115 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.865628636 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.91615224 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.919848509 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.913172083 seconds)
  done (took 48.066525936 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.86412076 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.873100393 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.870471597 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.863687003 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.863570198 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.864747981 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.871843893 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.865546064 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.885208833 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.865580644 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.86373065 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.866178396 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.8639315 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.865201384 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.86445873 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.877281541 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.878454648 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.865922192 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.869207146 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.871028261 seconds)
  done (took 39.166307543 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.858504661 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.713096722 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.212045198 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.112547489 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.860890165 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.866781389 seconds)
  done (took 31.418133689 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.879619077 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.871452804 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.866452254 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.921034296 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.004542205 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.876125781 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.867690157 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.875978138 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.909932083 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.929008336 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.884508661 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.892347486 seconds)
  done (took 24.572546097 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.861384204 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.868964862 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.863947844 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.883476043 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.877410919 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.87409997 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.872881787 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.860493265 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.880444636 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.886108278 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.873403495 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.877793807 seconds)
  done (took 44.277982203 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95017891 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.749448347 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.931325886 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.582208508 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.399255455 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.073284519 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.380272986 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.202893611 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.865703789 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.136633205 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.851156067 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108733817 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.118574496 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.900520998 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.864724801 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.315473047 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.161324324 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.097090642 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.890447259 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.581812956 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.25346793 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.830222382 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.558035831 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.999147383 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.084169889 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.003722067 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.132474415 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.831744657 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004974757 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908433801 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884238476 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.872995409 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.147952144 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.250741847 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989595272 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884041798 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.528856609 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.590927444 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.864990197 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.645234745 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.702466015 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.004529678 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882278758 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873213278 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.809730444 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.495875409 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211673217 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.879689608 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.575810057 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.875270837 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.884301556 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965249822 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.878329965 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.689392583 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.828782631 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.154116898 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.871475184 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882053629 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.442288973 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.930083615 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.598434315 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.810864902 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.969253857 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.606150633 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.339610493 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.024080517 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.879250383 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.878985533 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.810802176 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.52067187 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.997024616 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.02089385 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.895081096 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.526365487 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.193953459 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.883214828 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.958164027 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165167042 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.61444622 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.943831379 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.108992356 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.834374566 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811006299 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.733851264 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.810953961 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141311614 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915044863 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.501154384 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918099498 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.216243869 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.888814716 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89923701 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886249918 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.101791627 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.760331155 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877759257 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.608295464 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.162523221 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899898604 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.213256998 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.813398725 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.881886085 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.132446168 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.088838822 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.068783678 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.431615192 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036021019 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879160465 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.965179398 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.745667372 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.005298278 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.148973961 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938060146 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.92022356 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009694231 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.836378487 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.18359058 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907322984 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.050930602 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.905229928 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.146208583 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.196242892 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.133672868 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962301473 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.880796972 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.879112122 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.559236141 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.506505207 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.105463726 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.881965337 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.327469772 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.00596862 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.881609072 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.815868692 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.686476102 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.83966982 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.985787834 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.104689241 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.789697878 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.270600004 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.81500411 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.027089532 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.996608605 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.104194512 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.524991816 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.961039527 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.141400084 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335928165 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.188058954 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009315885 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900061905 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974653504 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903492043 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.273372473 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.252704475 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.886133468 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.885385369 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.604367963 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.955299997 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89042164 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.886017825 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.707393203 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158583578 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.907253837 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.888197538 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.772465424 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.895989142 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949281251 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.887368299 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.891975391 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.407859775 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.63251854 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.8961064 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.563517955 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1083865 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892260505 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.623482346 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.072569378 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.964937063 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.153448666 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944823782 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.817141511 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.585305639 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.587207216 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883486101 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.822102519 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.883333285 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894027593 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.894873459 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.082531997 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.157834046 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.928305552 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.601399597 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.994282537 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.893722664 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.888167791 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884013044 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.37818552 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.936947704 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.468221128 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.009633447 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020762152 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.898951441 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.81852189 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.887600733 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.889598318 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.885325344 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.838567997 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937715708 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.524263981 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333924419 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.149074585 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.533445987 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.902379624 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.628667375 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.010737503 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.908872002 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.596988711 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.924237456 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.989889555 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961007136 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.895967231 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.617506255 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.65203782 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.450731251 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19920635 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.189700865 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316851314 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.328811058 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.221783103 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.224185485 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122152839 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.416148479 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.946642218 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.234612065 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831747626 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97035397 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.529686867 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.273000448 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903308811 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116277407 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.265543354 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.654488717 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.043034142 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.098666454 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921752979 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.753376817 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.928588406 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.128170075 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.040964979 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.604527754 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.111870677 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224129416 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.627573824 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.0010291 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.886864649 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.581711719 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971044006 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.598616633 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.249913592 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.361327917 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.968407419 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378804003 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.896154174 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.334158751 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.241442362 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.163486283 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.107125294 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.826237825 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.9020153 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.900819118 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.890535218 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.870049728 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.802785715 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.149431774 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.899533829 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.124685962 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.104356331 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.262415555 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.792606566 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.893704742 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889228623 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.191241943 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.624753417 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133380762 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.280543528 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.474556676 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.900477435 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.822735351 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.825439187 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.59155148 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.890261722 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.864849393 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.110421356 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.015963608 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.843725137 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.332302198 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.216472317 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.147797477 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.903617575 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.162145772 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.165405654 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.626006977 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919349335 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.989822267 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.627817241 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.597856371 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.112495299 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.126293468 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.711234515 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.121734398 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.958241719 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.855054845 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.889385651 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.10612845 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.112981011 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.827186119 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136128904 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.617304757 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.90204659 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260849225 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950975773 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.87785547 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.104082183 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.985116131 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903433509 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972007873 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902181833 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.902632644 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.901853405 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938825255 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.884073386 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.021912983 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.905895323 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982930783 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.938670457 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.47024106 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.902882669 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.166989748 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24019606 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.214129945 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.949662567 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.892282828 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893884783 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.82637028 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0310027 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.338082507 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165401111 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.023925055 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.033254028 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919144526 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.617493005 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.236597102 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.21688144 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16848563 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.788466287 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893165311 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.008321806 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.1182369 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90302816 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.104206793 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.12061879 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215390601 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.366952585 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.097731248 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.341624759 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.168561947 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.268169139 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.893153324 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.483336536 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.90664675 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.658903976 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.933526286 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.865268472 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176904984 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904266529 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.269087259 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.915957923 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.088340346 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.410310829 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.535484633 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.25473517 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.893266949 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.955493994 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.167517228 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.276670889 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209193643 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962662973 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.906561602 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.594330373 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032155599 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.798715495 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.139641421 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.894481558 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10583736 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.607240123 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.904982123 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.169871866 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.204775344 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.8923275 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.82592154 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936824462 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.904595654 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.119040153 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.160456893 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.148934974 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.905165849 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.896550748 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.711913498 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.171640089 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.953571998 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830202947 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.90058537 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994252196 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.147834517 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916300477 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.413679233 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.599904377 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.196596487 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.819438535 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919117374 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361028833 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.341919945 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.221857106 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.41601804 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.125646002 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.459778631 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.804133529 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.281431506 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.903146977 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.388304672 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.284687365 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.901412452 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.451407916 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02010823 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.166718785 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.221357656 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.914234291 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.702995572 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.93942333 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122516561 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.494711109 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840524572 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.90477933 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.959689743 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.898761864 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.028423197 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.909799771 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.857436529 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.82522866 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.747691215 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.391737314 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.903555251 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.892337247 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.654638472 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.508513723 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016004677 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053997371 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.900708661 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.610156034 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.191702411 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.154822719 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.46297221 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.976737981 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.90286263 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901154183 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.828619186 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.096736761 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.123105407 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20135197 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.298611825 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.022862959 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.904274298 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.115947465 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112795397 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.892311488 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.055805051 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344124294 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.02238527 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.819533275 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.613329308 seconds)
  done (took 1695.692999562 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.928691032 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.974471128 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.930111366 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.992201525 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.956247194 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.011606138 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.982089709 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.985180672 seconds)
  done (took 57.593148202 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.903241223 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.140579703 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.913181116 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.903857291 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.961583857 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.918599283 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.135943634 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.917383876 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.965670675 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.914573944 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.906510751 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.923304137 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.295071484 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.930550844 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.912988768 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.955816507 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.932197435 seconds)
  done (took 75.425079236 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.906062177 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.085712621 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.946089331 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.93284732 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.835251248 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.926694505 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.136561738 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.978145404 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.910298477 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.078626781 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.245920309 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.914887275 seconds)
  done (took 90.735196012 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.920468819 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.912160998 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.912215282 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.911542039 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.912025486 seconds)
  done (took 11.413413721 seconds)
done (took 2206.4858774 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.155551131 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.139049484 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.151250562 seconds)
  done (took 6.128268137 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.054141213 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.101546458 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.220794925 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.226796062 seconds)
  done (took 10.443793711 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.195839525 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.303774093 seconds)
  done (took 6.335562688 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.231864134 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.930605105 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.287025694 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.904715718 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.904958019 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.906366104 seconds)
  done (took 22.55747883 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.908066359 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.912001878 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.908839039 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.911652928 seconds)
  done (took 9.477812125 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.888832771 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.627749728 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.891561067 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.904930703 seconds)
  done (took 21.150093487 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.657364311 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.307489211 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.661101333 seconds)
  done (took 9.462671132 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.516435125 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.09053281 seconds)
  done (took 9.444265771 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.168921299 seconds)
  done (took 4.006425004 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.937251969 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.179412058 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.436499758 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.44410368 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.537453589 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.735382267 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.217063715 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.14551048 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.359612816 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.371313967 seconds)
  done (took 25.200819125 seconds)
done (took 139.64946508 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.366065174 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.927282272 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.103604715 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.25369798 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.137545049 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.104088761 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.130052563 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.256443232 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.793332255 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.813277478 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.3149304 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.151775726 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.079718392 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.928293352 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.083710113 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.926661813 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.131421341 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.388023436 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.092209521 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.307745669 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.166936463 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.995874514 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.226090498 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.020609548 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.158622986 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.074511474 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.547031044 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.953275032 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.231806152 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.559988277 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.086923102 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.432051685 seconds)
  done (took 170.582719432 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.908112839 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.94782899 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.95271807 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.907564352 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.344473726 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.933982527 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.92467418 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.909282759 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.122894183 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.078400802 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.946190932 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.308904923 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.945654962 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.909094207 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.950912135 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.90928447 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.25155987 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.945895194 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.948368825 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.952345056 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.952786778 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.126206289 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.945029771 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.183385541 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.207441454 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.944746206 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.910345481 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.946691141 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.950446012 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.950429684 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.952491278 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.90961141 seconds)
  done (took 209.964578491 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.909679577 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.922184053 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.927257529 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.910353931 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.918820622 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.933368538 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.911666741 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.911267196 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.419784727 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.46318323 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.935675435 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.929140308 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.931065821 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.911716095 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.933794606 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.911147587 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.938191634 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.940930895 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.939363407 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.930631928 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.934180647 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.61960759 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.931830502 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.614867014 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.931503896 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.93085847 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.911355783 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.936065317 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.940225493 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.932712239 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.936222991 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.912657648 seconds)
  done (took 221.949299348 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.102429257 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.917641639 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.91771604 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.913374499 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.919034413 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.918608872 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.924907441 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.101439122 seconds)
  done (took 19.587975656 seconds)
done (took 623.929408781 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.397583967 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.244819822 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.102980568 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.947734019 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.174737963 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.978033872 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.940316383 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.004875921 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.660618677 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.011266906 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.631629768 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.962918084 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.723866187 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.968609159 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.063284057 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.997909624 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.486272168 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.577278443 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.120075876 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.99905403 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.116774464 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.885142536 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.025908148 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.699069051 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.744784158 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.935581803 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.113378345 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.497079369 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.951953414 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.103673161 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.709336099 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.333938817 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.956959322 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.937615216 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.992987018 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.97316611 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.279843624 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.954980116 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.062503763 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.687115889 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.004753631 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.54861052 seconds)
  done (took 105.35425745 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.910135866 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.90756803 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.906699079 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.907657654 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.908552832 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.907916922 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.907073003 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.907062055 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.907860441 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.9071878 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.90716019 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.909227674 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.908313552 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.908901728 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.90752776 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.907400479 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.908904553 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.910024784 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.907840195 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.907577602 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.908673241 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.908252621 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.923732991 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.907822111 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.908967145 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.908879315 seconds)
  done (took 51.483683446 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.923802334 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.089951346 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.164720521 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.94445318 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.923375773 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.926582457 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.941595708 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.927976296 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.9258031 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.924883562 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.017358197 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.92854963 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.940976986 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.164194985 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.940596698 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.924176904 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.924085087 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.922481563 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.097498192 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.939582155 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.942447234 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.928585275 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.944145233 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.93695201 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.924100255 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.923017969 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.926335543 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.382597926 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.932527167 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.018417124 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.967761715 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.947219587 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.353489907 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.174997187 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.981054029 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.931796891 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.926333546 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.02246654 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.930867333 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.924734974 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.94295366 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.929337634 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.164782533 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.434968569 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.939450619 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.925744135 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.395671977 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.03093714 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.976283584 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.936148151 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.169168065 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.94378 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.926163051 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.925762077 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.961889003 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.931098866 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.924935748 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.275824999 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.937200711 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.943315054 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.929878491 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.925554457 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.102559813 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.934678206 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.090246755 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.934509776 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.931586464 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.926437648 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.166619099 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.943869087 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.438953563 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.941198975 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.925890459 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.02142848 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.095952386 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.423356207 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.939578022 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.10324182 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.373073183 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.951511744 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.9332042 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.372982929 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.954285157 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.934592477 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.927886986 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.927378244 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.926942286 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.969806433 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.943387652 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.371602829 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.443706655 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.295754159 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.954385134 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.942526994 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.927157093 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.273866964 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.935819431 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.927138877 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.161849809 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.450664327 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.943059276 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.933602205 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.42724953 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.944600456 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.946905298 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.936994019 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.170133105 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.946475044 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.97136041 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.927410422 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.934554934 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.930219497 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.946853225 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.936329914 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.92751048 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.418723388 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.042898961 seconds)
  done (took 238.940123873 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.925024403 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.926624905 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.922998356 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.925038606 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.921292895 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.927157422 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.92134922 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.92139027 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.927753633 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.922434923 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.922057892 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.923983059 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.925270731 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.975315019 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.492128437 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.930452343 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.534736296 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.924093699 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.923389846 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.931132745 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.720572626 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.932470714 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.928089955 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.953545741 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.926218593 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.924254439 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.089631985 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.928468902 seconds)
  done (took 169.98341923 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.930431716 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.111955072 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.95398135 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.971006421 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.939501243 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.928423514 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.953362413 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.952863974 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.939467461 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.927903405 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.928887058 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.991541486 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.942703509 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.069254899 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.96390079 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.965391546 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.036999494 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.939470399 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.928374887 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.929393138 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.959374103 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.924981811 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.992712692 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.059690402 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.951554632 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.047477115 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.939845447 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.931971895 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.93012438 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.04998051 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.948690195 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.992510415 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.961001922 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.951678889 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.056608301 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.05080996 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.040549631 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.962382695 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.937249587 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.929928641 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.93019498 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.918883592 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.049107614 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.952165021 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.93291999 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.038211704 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.95570863 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.933602847 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.941819361 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.930415128 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.946179269 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.954362683 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.003921654 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.067165781 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.970231984 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.959213552 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.95734926 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.224976985 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.942750329 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.032794614 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.92941311 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.051891313 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.955080553 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.919262721 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.931831993 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.937353688 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.960725279 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.967709023 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.042072532 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.943760155 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.033357173 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.972049596 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.943819012 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.932680717 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.934803402 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.050225345 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.053722446 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.969145615 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.97168055 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.967921837 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.93146381 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.933726709 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.920799098 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.951804605 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.939599414 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.048660719 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.054434114 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.943203411 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.935074787 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.934726657 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.935508894 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.959392363 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.063591068 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.971615475 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.034273354 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.004839105 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.011058499 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.950893714 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.947080234 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.94223176 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.997935814 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.952416738 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.94548424 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.274328943 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.008402787 seconds)
  done (took 209.485899292 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.388851478 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.988287645 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.996136253 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.254688136 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.363009285 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.780098958 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.983224404 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.987413801 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.010858041 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.173249642 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.052337361 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.004183905 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.971314934 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.961317045 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.988970621 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.007384389 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.997548115 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.305042094 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.111719066 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.063907867 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.967691013 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.298988956 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.303274064 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.375947423 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.022699781 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.324795694 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.667892712 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.127605403 seconds)
  done (took 63.347278538 seconds)
done (took 840.437506505 seconds)
SAVING RESULT...
DONE!
