cset: moving following pidspec: 4888
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.668912743 seconds)
loading group "shootout"... done (took 1.12859834 seconds)
loading group "string"... done (took 0.428256542 seconds)
loading group "linalg"... done (took 7.874412629 seconds)
loading group "parallel"... done (took 0.150616825 seconds)
loading group "find"... done (took 1.238091009 seconds)
loading group "tuple"... done (took 1.940356779 seconds)
loading group "union"... done (took 13.339047031 seconds)
loading group "dates"... done (took 1.376078002 seconds)
loading group "micro"... done (took 0.216059445 seconds)
loading group "simd"... done (took 4.632392868 seconds)
loading group "io"... done (took 0.983918246 seconds)
loading group "random"... done (took 9.075730759 seconds)
loading group "problem"... done (took 1.677195027 seconds)
loading group "array"... done (took 21.244113857 seconds)
loading group "misc"... done (took 1.63506035 seconds)
loading group "scalar"... done (took 46.76429417 seconds)
loading group "sort"... done (took 3.595809513 seconds)
loading group "sparse"... done (took 13.922110062 seconds)
loading group "collection"... done (took 20.818324637 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.5533883 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129769081 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.140034305 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.127278196 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.165307227 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118853611 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.128293559 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084976326 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.95339652 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148596838 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.114351774 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.484969314 seconds)
done (took 5.54347106 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.17489764 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087303056 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079034126 seconds)
  done (took 1.244614184 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067073687 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128090107 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06866464 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068921682 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.069463701 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069967815 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06915435 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069785353 seconds)
  done (took 1.623156397 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073610674 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070098609 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066800092 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071321915 seconds)
  done (took 1.363069121 seconds)
done (took 5.568192749 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.255790787 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.109582372 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.30459494 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.324901078 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.442689868 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.094626392 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.07771638 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.07369004 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.131626548 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.324168761 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.118676756 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.194895887 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.099899933 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.179406932 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.018656281 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.133757958 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086705648 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.126808809 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.0943349 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132730672 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.377260665 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.080826085 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.083914231 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.073163798 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.070829036 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.651878214 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.671700039 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.146065886 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084945156 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.082525071 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.118275209 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.650091275 seconds)
  done (took 10.537522084 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102359386 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.101488268 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070635624 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125965071 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101086241 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.07291347 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.078159705 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.071098575 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09336956 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.131793603 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.094229276 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110592541 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.069503341 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072773521 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.099722184 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.198175216 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080990244 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082817791 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072512231 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.082352923 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.111087023 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082122899 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082926122 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.081754276 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130942112 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.174063318 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09947286 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099307277 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068322466 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081633533 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116461514 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130579319 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069939928 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06798532 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12501539 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.099351227 seconds)
  done (took 4.659174893 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.184234112 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.09466546 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.103551108 seconds)
    (3/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.124992625 seconds)
    (4/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.619437711 seconds)
    (5/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067563497 seconds)
    (6/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.14886149 seconds)
    (7/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.235520566 seconds)
    (8/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.07399843 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.472910102 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.130079571 seconds)
    (11/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.161693428 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.142284097 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.123722029 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.074283984 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.3452277 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.123124241 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.343572397 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.073620763 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.076017154 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.067268058 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077618533 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.070125027 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064967432 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.077863183 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.092208805 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.092210228 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.197599326 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.015217983 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.301188338 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.071194848 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.164794733 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.101390326 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.371066703 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.073559632 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.098352935 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.390444226 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.129093325 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067212359 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.17320565 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.131214785 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066151824 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.120544458 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.082452882 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.072555586 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.072987695 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.070093057 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.0798985 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.083308978 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.10515649 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.071455813 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067123577 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.171051077 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06661723 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.068173559 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.069829575 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15218477 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.069042501 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.162997567 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066643431 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.070623182 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.096406598 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.074001391 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.090918993 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.118496254 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.06656223 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.335604766 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.06655856 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.074224869 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.889971946 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.08233427 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.06996236 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.086594214 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.070131473 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.071309669 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.069919247 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.080209807 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.071785911 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.071135522 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.112788307 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068272658 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.071412956 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.067124094 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.072923041 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.10144058 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067254069 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.458572806 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.100677626 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.067565458 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.078630889 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.108862745 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.068180863 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.06523274 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.074144528 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.070224337 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066302249 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.074241168 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.068797097 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.072517337 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.07537153 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.098369266 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.178646716 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11549989 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.036832432 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072805023 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.068425693 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.073170961 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.073267988 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.071122506 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.06865403 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.073075998 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06976962 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066941504 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.120636373 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067462906 seconds)
  done (took 22.214556791 seconds)
done (took 39.676821727 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.258542466 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083909841 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.08424105 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083849222 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084049165 seconds)
  done (took 1.778249249 seconds)
done (took 2.944267787 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.135989339 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105635384 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065837933 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.103321482 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065964711 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107862989 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107195909 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08454495 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106230005 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066087509 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10361397 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065893458 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06634802 seconds)
  done (took 2.362393304 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082767781 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086038098 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070449024 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082007957 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064075521 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08204627 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081468491 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089527718 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082277134 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073912745 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063782628 seconds)
  done (took 2.016074753 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082377922 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084650979 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07052121 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082217308 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063818758 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083489818 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082773899 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088089594 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084328794 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075472221 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065480126 seconds)
  done (took 2.014722387 seconds)
done (took 7.546752688 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076398404 seconds)
  done (took 1.219329658 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.549714198 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.574153004 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078815138 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100172198 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.204457117 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.107820171 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.232443286 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.082024973 seconds)
  done (took 8.253787259 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099122376 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.0711479 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071618234 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.084965482 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071855592 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071064406 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070644812 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071222537 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070205177 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071011114 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071873924 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070141388 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070310497 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.07161833 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070217416 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070310877 seconds)
  done (took 2.415622361 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.100682912 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098715173 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074482216 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076046823 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073610041 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073360536 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075985662 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075802592 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072378148 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075935612 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078764778 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076434801 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.076448162 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067323776 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.077356306 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07932074 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074319298 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077195935 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.078098166 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078803418 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078232654 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067243167 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.076380923 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077394004 seconds)
  done (took 3.128924044 seconds)
done (took 16.171434339 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114753691 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077930494 seconds)
  done (took 1.345159075 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08188902 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082462832 seconds)
  done (took 1.326966099 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077024061 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.0629755 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.083410768 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.074021852 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063957517 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06443722 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.081997625 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.064206582 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.063968915 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.064134942 seconds)
  done (took 1.861987005 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065634234 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.075984026 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070011227 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082434653 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070282551 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064946188 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.068310759 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065520379 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.072882771 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064148343 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069445384 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.085945308 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070175213 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.087285689 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.070235765 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070820263 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.073038109 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070003246 seconds)
  done (took 2.459965119 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063393698 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06488232 seconds)
  done (took 1.296871009 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067581408 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064694925 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067243751 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067493756 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064284739 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063850251 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065141728 seconds)
  done (took 1.622630096 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.379513187 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.13526542 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.344485954 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071790406 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080382401 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.255050854 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066197243 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073370928 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072713848 seconds)
  done (took 2.687319561 seconds)
done (took 13.77434406 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081720587 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086956703 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.10353022 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.42782008 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093648165 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069217876 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114757753 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189789619 seconds)
done (took 2.347601531 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.215825022 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.778640387 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.453958056 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.220631526 seconds)
  done (took 2.623084617 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343694473 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088290473 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077860019 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067646701 seconds)
  done (took 1.757611483 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.175144214 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071089102 seconds)
  done (took 1.423513305 seconds)
done (took 7.2014056 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066439209 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065975692 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.093085139 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065801572 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065937773 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066170303 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.066319011 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065821713 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065732924 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065898993 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.065684832 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.066031267 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065874867 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065780759 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066275109 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066422383 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066038377 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066064641 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066298974 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065692491 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066375753 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065739614 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066187043 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066046198 seconds)
  done (took 2.825448447 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082389774 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068312754 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.069374551 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.069412503 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070338916 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.069059385 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.069098921 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068253151 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.069586853 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068082816 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070483474 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071549966 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069743625 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071673283 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069279492 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071519343 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071037866 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069536905 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069395863 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071627705 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070860259 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069721969 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072411503 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070988622 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072015517 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071409965 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069586808 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069584136 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071288322 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071700291 seconds)
  done (took 3.30816192 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.066229722 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062318706 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063108282 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071351714 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06263981 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063146428 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063097037 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064099906 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065254002 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063876935 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065022178 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06405652 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063855999 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064751973 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064979854 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068222487 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082538964 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064257602 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064236546 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064863124 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068011716 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064038164 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064328374 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063865839 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064328621 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06399033 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066745021 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06375457 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064526936 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064443872 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068143045 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068938424 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064056355 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07315442 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068335667 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064490965 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068028556 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064039178 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06454179 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06442042 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063262391 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062824379 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062505186 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071424779 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063843236 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065735539 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064681704 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06606008 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064752548 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066675302 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063092005 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064362021 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066592626 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065810263 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069942522 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063825077 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063880032 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063172667 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06338271 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062733959 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062357641 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062470628 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065896444 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063300558 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080064429 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072253157 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062652378 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064220509 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063130925 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065734135 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064460505 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077773563 seconds)
  done (took 5.921402643 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089279751 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091187428 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068040207 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067015699 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063228237 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063668042 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071621419 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063476127 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068924478 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08444073 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064850639 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069663523 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069148541 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069151961 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065131301 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069576801 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073213607 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065149172 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06459359 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068984262 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064890959 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072753282 seconds)
  done (took 2.75420791 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.150121973 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069200146 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105660245 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073042573 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071845926 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07319525 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069043538 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069330401 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069187644 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069366272 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06982187 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069463129 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07145091 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069420069 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071154384 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071154892 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071146131 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071126518 seconds)
  done (took 2.581100022 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079133848 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068521265 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088207202 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068473403 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069214798 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069752565 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074115571 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075137304 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.070699068 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.070364389 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075735564 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06991487 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069796863 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069845444 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070022417 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070126576 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070164191 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070165277 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075401043 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074302947 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074499283 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075444847 seconds)
  done (took 2.797042535 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093682404 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067313979 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082942725 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069408524 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062781033 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064353735 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070505347 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068975545 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070630655 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068769914 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069183204 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064414928 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071682493 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069116703 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072182857 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069542021 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068524875 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069148507 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06932892 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064471557 seconds)
  done (took 2.607665134 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091243813 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066398375 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065526625 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072000927 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066640974 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.065867597 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07300221 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065873809 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065693881 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086669447 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066111028 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066188267 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072116603 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069914649 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065928804 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073791378 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07386423 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073680224 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070450953 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067541498 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087422933 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065943075 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07196189 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066270892 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065759621 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066275868 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065910109 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070029777 seconds)
  done (took 3.196559688 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06623324 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065581645 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065795559 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065750756 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065963236 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065676865 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065617828 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066454247 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067131495 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066015261 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065452588 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065453698 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065278912 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065674819 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065532856 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065939041 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065538832 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067201884 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067232636 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067659392 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066927176 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067120744 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067046834 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067249343 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067444507 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067580451 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067368054 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067506915 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066779337 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067368687 seconds)
  done (took 3.213968815 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075665897 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074115563 seconds)
  done (took 1.371394229 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064667388 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080210397 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062456481 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073348544 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071509757 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065966415 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072563621 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072487997 seconds)
  done (took 1.779464823 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.089469845 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079167411 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.065131857 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081958969 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078946517 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.0885335 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132205737 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.064809454 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075524771 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066005223 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.087834313 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066976219 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075144198 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070620314 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075115598 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078966624 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064393866 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071354795 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067161825 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064459392 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066906509 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.083782428 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074910307 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064653826 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070740715 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093932389 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.083903077 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064747326 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072029877 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076833764 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074626449 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062263226 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064498096 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065381431 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062849721 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.078775865 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086922987 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071548836 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078751849 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065150646 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07699242 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062783936 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073929153 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075888576 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081406623 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.064719509 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.064834491 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062763713 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066824007 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072472456 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064425108 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070819111 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063808675 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078528734 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074386563 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081564761 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064894871 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.07209085 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.073348694 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073810329 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.078973864 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072665924 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075802514 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065745741 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082303085 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.076150573 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08326623 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064100007 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063333983 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064972983 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080402191 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105799103 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07521316 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066783253 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066799934 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064660231 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074103583 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067085442 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.080560765 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.077912435 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066304642 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.077158934 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079544234 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071030865 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.074042161 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073549512 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065020904 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070239112 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06815269 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08629998 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065346386 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064702296 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067148525 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.08247869 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.07368429 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068292242 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.067336353 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078053457 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063498671 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066175138 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065186591 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070222526 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078396586 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068949366 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070114825 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07660239 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075497519 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069289324 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.0706314 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064278179 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064057275 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065908551 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075040156 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.06137629 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070772646 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067996559 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065084027 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076290045 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063837619 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064771939 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07667804 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075984359 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062434474 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061142315 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070584719 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.063539236 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065827157 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076617695 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.062792567 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062654137 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062249067 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071167613 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.062747934 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.20676527 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069908174 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073891389 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.0637507 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064499275 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069991497 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077310565 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069754466 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.073247473 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076874501 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072555591 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066054329 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078555591 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073718006 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068896469 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075613377 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.0708597 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064657079 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068140785 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073015118 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064904218 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.074561542 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068549419 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073303786 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066844977 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064964674 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07182081 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066984259 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068908067 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071284399 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065974812 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080897655 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.073045538 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064357102 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063601151 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.072405061 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066929957 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063872566 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066833893 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071082963 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.064898951 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.062968933 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064737086 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070885788 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075485848 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067344163 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065367686 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074502631 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081921694 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065159882 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072180866 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064132098 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066055178 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066112581 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078839149 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07470425 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069489708 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.073950827 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06396231 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.080720084 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07918075 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.069544897 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064754162 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.069361785 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070628534 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.078792921 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070553313 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067330392 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065006337 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071981626 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067578195 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071778566 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064800512 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068102567 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.069402397 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06355188 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.070424719 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065372106 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079159083 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072238695 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063068491 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066806751 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06323863 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07581059 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063338125 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066202909 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067648864 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065524505 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063713755 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.07133143 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062139582 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077878833 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.079472257 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.072023817 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068961437 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066406637 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078387428 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071842457 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074781485 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.0737582 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075893726 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081322536 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068573917 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.073255069 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080868946 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066546078 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063406036 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.077277182 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064358399 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064521088 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065096018 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064430125 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073070967 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071623391 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075604417 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062735675 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072117352 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.063761213 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.069035285 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063549485 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073861956 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072107855 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069592197 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07670926 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065429459 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.065194271 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072956773 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.064771046 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.065741962 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.066417114 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072514378 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.065799423 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071303075 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067983079 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071166945 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067730352 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063763068 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071153269 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065341691 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.205912544 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076264181 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067642364 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073721022 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.074219819 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067594453 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073090606 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.07125039 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069810121 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074202521 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071993302 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071378247 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073447938 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06459476 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078721248 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065246659 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079578662 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070856326 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063910055 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.071502634 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072948661 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07122478 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066439897 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066468868 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.072312977 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065952639 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072886651 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078097537 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068054112 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082133542 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077250852 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07193504 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.07308506 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071874995 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.072221012 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068983935 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070610787 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067393558 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071608787 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066037125 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075436563 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073335272 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070874543 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072784574 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066735027 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071094992 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067865876 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06373983 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069420801 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069140582 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066206912 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078906086 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066597631 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068172848 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064055319 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065508459 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06418879 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06242301 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.071119479 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074529092 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065369927 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074921506 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069117851 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.073059251 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081818424 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064015146 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065035726 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064532163 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067652432 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079551274 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066787523 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.080168187 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.071587495 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068967866 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063997964 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066735255 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06520759 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.064338803 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065093553 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075306657 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068771766 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066067009 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066527255 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073427022 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067471955 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078972321 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06567905 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.071253486 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066671276 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064584583 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068956989 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06933639 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073880667 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066826731 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.068027616 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064507209 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066714032 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070791361 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072473294 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066147962 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072568485 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079256501 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066416458 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073014367 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068631713 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064519243 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073493364 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066186919 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066005887 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06845379 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074323499 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072590766 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066217065 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078772919 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066249549 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069228655 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063700643 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062250739 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063188332 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063795622 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063992198 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066083519 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064663834 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075697213 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.061946676 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069326307 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068532034 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067925319 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072858021 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.064210782 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069224225 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068030731 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065299501 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069953272 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076998819 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.066692687 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070910573 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064127954 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069015156 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073596802 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066206023 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.213131739 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.071740617 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06652199 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.072117575 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068242761 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065423499 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065563926 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06574559 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.077203128 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067350359 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068976448 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068877726 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064600157 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071027128 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068390779 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080194588 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.07391322 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07349761 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064312495 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064844591 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067121883 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067945501 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072619938 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073149879 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076478862 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.073251166 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070716085 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065491752 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080570249 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076369948 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074439866 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067978992 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074487797 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066769565 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.073817976 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071206553 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071528836 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067050007 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074751183 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072032545 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069852644 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076469328 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074772156 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067478035 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.072309563 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.072568341 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070935429 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064496813 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06639297 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072895648 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075144691 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.073774 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066312269 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082132486 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06754845 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.071361109 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068807887 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066246718 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074983308 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.065060944 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072871741 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067151245 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067192109 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.065049337 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.069423191 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067990238 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073518376 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068850469 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06476713 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081497814 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080986282 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.07246582 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065782809 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065150073 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064791506 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064687271 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069809792 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067315337 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072897102 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081262575 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068010166 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067763529 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063563612 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065159046 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072285716 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07361675 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063592739 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064769292 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067851293 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071616104 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076949745 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064401857 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065708177 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072262937 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071767732 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063288511 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067413698 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062636194 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074411307 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083260539 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066847958 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072257156 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076317672 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08127933 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066681258 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064615004 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066702907 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072533273 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.072249652 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067253722 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067347017 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085280166 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073759976 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.069045679 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065039022 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072753468 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068529033 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079068267 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067632499 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.064314859 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072974095 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070192456 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070233758 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074320386 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074541728 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072044936 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070723879 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.063836595 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068997129 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062241482 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066148082 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.064083952 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.063826393 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066726425 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.069837425 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065931501 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077721512 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076369514 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066297238 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.061095498 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06635738 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.202741386 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.06420014 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067018764 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064811845 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065095767 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.06404933 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064243054 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070817171 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075127519 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071037453 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066608695 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065935222 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063765402 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.076195882 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.073209467 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072183517 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064188199 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066172438 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066726705 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.075211298 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069142617 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068085282 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.073014308 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072234249 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07218977 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.065264927 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.078674398 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065486525 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072998019 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069400149 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066183037 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066593318 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073554665 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068504473 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066325342 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071473929 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071707161 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065901751 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063298525 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062881244 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07429908 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064253146 seconds)
  done (took 43.698747904 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101035722 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064538303 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063132224 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063522009 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072900736 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065103916 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065302932 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065852519 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065989098 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067582588 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064858336 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06530885 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07221163 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079771721 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074621346 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068361416 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063332143 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064418987 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06349909 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064260484 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070536538 seconds)
  done (took 2.776774019 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070202376 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077967064 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075124754 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.080285013 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073907474 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069604352 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077455628 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0704096 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077781398 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074998739 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077838494 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069488626 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075293117 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074365603 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073369821 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06846503 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076138039 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072383109 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069174507 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079824022 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0693731 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07727904 seconds)
  done (took 2.946874098 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064643327 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06386808 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070769163 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062528708 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.063356793 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063000058 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.066289595 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062801053 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.066075146 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067818576 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.068859595 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.069085484 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072967387 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064562976 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069453136 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064262084 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.112003508 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.067755884 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065911423 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06597351 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062778915 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.07134026 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063069772 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062870996 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066787455 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.066738331 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.064919672 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.062705441 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.063850834 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066853865 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064296228 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062660239 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071068675 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071951873 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.068381794 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068291611 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065905536 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065976505 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06668394 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06475544 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.072228519 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065278116 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065931461 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.07143772 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063523868 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064147285 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072563235 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064996305 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063810379 seconds)
  done (took 4.618027156 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.075116718 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113443479 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068963009 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.094433347 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.077121504 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.070014629 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06881039 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.095709305 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.0647325 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064898325 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.078121552 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078131645 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066646315 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067960029 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070636366 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06691404 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067380328 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065867018 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069652981 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066680806 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070902456 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.070342188 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076998422 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077208799 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067600643 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065777262 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065747641 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.067753842 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077239608 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070240721 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068280207 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068451253 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.07724039 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070888836 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066172322 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066226969 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.078324405 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066621823 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066515954 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06555999 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.065868781 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.067626765 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070326044 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.078343821 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066587876 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07103989 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066351719 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064370881 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077230842 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066619343 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.070955831 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.07979907 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067463501 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066600239 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068324496 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.077712952 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066577874 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065004598 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.066654998 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077035194 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064660721 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06747238 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078001275 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.065681288 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069896682 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078619649 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071466977 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067413278 seconds)
  done (took 6.322899895 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073094896 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094935702 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079913222 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080188338 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074317918 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074181015 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074171214 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074045311 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075009518 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080317139 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076177468 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117409116 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.072093574 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07808456 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076407819 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.076258091 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07640318 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076455423 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07716837 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076134489 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.076071835 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082293541 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.076346382 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08249703 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079362844 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.072100932 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076252421 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.076059535 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082246572 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075835387 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079553558 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075287752 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074732221 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080239258 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.077203916 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074010082 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064041663 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073873543 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07402334 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073966449 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070036574 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080127189 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074039262 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071018435 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073983248 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074025514 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080040578 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077390513 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075714153 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078126207 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074729551 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080517507 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075411192 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076603801 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081708843 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.084347974 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080672971 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081151326 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075261759 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080482505 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080662088 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.083278808 seconds)
  done (took 6.162173716 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081075059 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070493603 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082544315 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062938495 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.0649573 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072784047 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063114933 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063376888 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072227787 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.072913721 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074649661 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074663166 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077132585 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074574084 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07490671 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077605582 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074629318 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074785565 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075671394 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074711512 seconds)
  done (took 2.802594135 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077169608 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081776692 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069076141 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072912726 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068474684 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073142312 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069429482 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070651441 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070795186 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070319742 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.0762697 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076276229 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070653642 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074490811 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075903497 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074814573 seconds)
  done (took 2.502445009 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083874338 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071240251 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077502503 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.064485095 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068167372 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06385465 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065687034 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063982559 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.065397631 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079015111 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065652798 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.077357874 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065780589 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064612531 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065226802 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.0717939 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065336377 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065853578 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065969673 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078421465 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.072869083 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06739773 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070102952 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065858147 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.071118703 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073223835 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067341222 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069928188 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065809234 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06602893 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070135465 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071583534 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063945435 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066260614 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063347394 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064233849 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064555049 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065692387 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071025675 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064809575 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063590175 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069969761 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06532064 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068243183 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064881925 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065830292 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065087193 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071158048 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066128878 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.071580822 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066052421 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068241852 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066650497 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073976912 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068365103 seconds)
  done (took 5.091328099 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079844808 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068585796 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062937416 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06283799 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067889358 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.085800753 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068292424 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068766935 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069428002 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062977715 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068986768 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068190774 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069086656 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071675793 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069120526 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068616245 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062727526 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06816378 seconds)
  done (took 2.587753479 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073901345 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068008092 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072558626 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068365036 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06768545 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067471875 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063148495 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062959882 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063605319 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068106648 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069624303 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068961868 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064526084 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068979557 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069397891 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069333593 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06916994 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064846161 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069187799 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064772234 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068967813 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064553271 seconds)
  done (took 2.823591536 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095879889 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084618074 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.146377851 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.082372269 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.095489186 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.074648555 seconds)
  done (took 1.917807936 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093345696 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098445989 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068017116 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067952843 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073276764 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072417411 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073368683 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073115571 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076861505 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077250698 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072341514 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07943876 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076096065 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078584031 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074031702 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074169225 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071117416 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071338388 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067897406 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080356368 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071916379 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075788562 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071480559 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071443001 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071422217 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077640098 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076297437 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076182403 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071630575 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075838436 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073563331 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07175698 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075955408 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07604397 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068142617 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075725399 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07142233 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080649042 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073379395 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077512226 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068093517 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073742913 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075280055 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075450625 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075437082 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071170139 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074825852 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071749741 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07315847 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086272993 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073885575 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077490319 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073655703 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076515655 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076038055 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082896651 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076443655 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078010385 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074300035 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076585222 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077913799 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074060608 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077267779 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076448076 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073716755 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077756384 seconds)
  done (took 6.315205152 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1040626 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068230046 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071135362 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076372822 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077111303 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071750145 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071638611 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071548699 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071393573 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068465397 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107082667 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072018314 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077668349 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078210685 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071802631 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071494691 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071633201 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077788373 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068995677 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0829749 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071370646 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077320433 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077708806 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077707716 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075973825 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073452888 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071939679 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071409459 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071258009 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071789384 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074960938 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071318125 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077800027 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068453475 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078101059 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071686207 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071397071 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075154377 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071837387 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073629002 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077623512 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080753045 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071425702 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071673741 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076136399 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071416564 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071283416 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069005832 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072086818 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069099586 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076364628 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076412336 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076635286 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07781283 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071713959 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071658465 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071584083 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072032523 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071792418 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074063597 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077929574 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071742202 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083004255 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071710679 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071543641 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0787211 seconds)
  done (took 6.29301005 seconds)
done (took 130.395426243 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.208350582 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185257255 seconds)
  done (took 1.723442788 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.075261519 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.10433431 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082485113 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.135105273 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071639433 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105550964 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104661022 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082816498 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071910102 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.07132084 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071278973 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.074740301 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136813411 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.072988166 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071159149 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074315174 seconds)
  done (took 2.757613509 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104967369 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.212449826 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.1086205 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069947971 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106866423 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079626918 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.073367801 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.084091687 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.076774816 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.072385129 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078615311 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.076488484 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071706381 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.076906682 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.077556784 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079386432 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.07237393 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079961102 seconds)
  done (took 2.952368249 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101930582 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.093977713 seconds)
  done (took 1.552268291 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.175450694 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133764439 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201349203 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.346004536 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.151148025 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.412526215 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.13677586 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.135931274 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.112693253 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.132344358 seconds)
  done (took 3.286993044 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104670982 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.198028692 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.294892171 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.125804689 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07646077 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.107665119 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.124792517 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082035035 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081709107 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080989608 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080815113 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07785879 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100792887 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077049064 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.077506548 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080421526 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106398097 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077291202 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078263801 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079202786 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.107255103 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.072687488 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.079190389 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077422653 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081184834 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081222906 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.073597831 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.072184119 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078713758 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077903654 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081379425 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.108695185 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.079652799 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105236686 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075061564 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106056743 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078364978 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074920597 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076404331 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074803845 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07800293 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078117609 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.079053669 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077707585 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071619986 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078422648 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.072000589 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.072593383 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.08258841 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.073408462 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082559598 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.082115519 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107493533 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072012442 seconds)
  done (took 6.257018995 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108298052 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106961947 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071538722 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.11293521 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104507517 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072714236 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.1078932 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100963331 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.110564586 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071600188 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071039275 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071210722 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080646433 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081170645 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115125839 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.1078409 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073240355 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071364105 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107785135 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107449405 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070019794 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101689552 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098096094 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107158334 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069836715 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071566414 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06980904 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071471807 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077282026 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.08014578 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070498438 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079014552 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083349944 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077349362 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069143131 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070451275 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070042786 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078182606 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078823649 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078340468 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076966873 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069315065 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069716394 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070536381 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071213627 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069462958 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077362461 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078575783 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077488822 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070397154 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070945023 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069552629 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070540618 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078806656 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.0767322 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079271919 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078755944 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070098002 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069919201 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072272417 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079531943 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079014514 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079191404 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070895725 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079491659 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072134664 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080417547 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082772788 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070015226 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071410126 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070091496 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070073295 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070961668 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076990117 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076923635 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071369415 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070399598 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070407367 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079262425 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077819497 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070000815 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076663654 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069336303 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070009384 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070576196 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070760329 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076659794 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078799117 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071389782 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069669846 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071184843 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070066953 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068850391 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076503799 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078128106 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077795545 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077038273 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070348042 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077544642 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076683101 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070741117 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07699032 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069754884 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070753347 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069485067 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075808592 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.07539907 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077553324 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069453072 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068887956 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.075380641 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078339541 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068954488 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.075517469 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077769862 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.076330874 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068535327 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079003004 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.202661016 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080143282 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071633417 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080121059 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07075723 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078322283 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070752014 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069711586 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069977255 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.077710529 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071330792 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069885612 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070615757 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070229518 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077973994 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081008808 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071386275 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07713098 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077485729 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071484652 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078017699 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070035755 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077851199 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070509147 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071447635 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070342756 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082857542 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072271397 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072111827 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072232428 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082134661 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071246742 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080190727 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076565106 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069647297 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080604766 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079651327 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076453847 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079281408 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071524944 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070110812 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07033691 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070159043 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076936329 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078114702 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070988033 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070058138 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076536553 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079171728 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06903953 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079335271 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079978886 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.080268993 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07221735 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07264056 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083275887 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08170927 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078141602 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.07793137 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07845616 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070466626 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077329544 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078320224 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070225858 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08354349 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069990916 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081685523 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078149192 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076850137 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078359844 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079537717 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.08002395 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079902092 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081708934 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070040865 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070258654 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078013511 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070133121 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070624831 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077520639 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071379572 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071319913 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082122994 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070910374 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079815735 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06950528 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07839864 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069329672 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071251734 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08240969 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07033116 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071164461 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078061175 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073153272 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079674337 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081728928 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077536594 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070015228 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070838212 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077999323 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077468056 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069154316 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069437665 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070626439 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076299 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076400056 seconds)
  done (took 18.658411117 seconds)
done (took 38.553357122 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.234291107 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.173198159 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.20380689 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.131435454 seconds)
  done (took 2.20600542 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.115176137 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.108766895 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.090710335 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066454446 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.097986307 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066390813 seconds)
  done (took 1.941996353 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.344858825 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.234471067 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.208762284 seconds)
  done (took 2.180388809 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.222995095 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.210356947 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.46228027 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.287875386 seconds)
  done (took 2.676954265 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145960252 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.086817949 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.065330651 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082952512 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.127423501 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.151925727 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.097126702 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.121498697 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076360207 seconds)
  done (took 2.405802016 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.159305864 seconds)
done (took 12.98534124 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.208460614 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.130240221 seconds)
    (3/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.222407823 seconds)
    (4/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.272533634 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.100697986 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.111395768 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070109946 seconds)
    (8/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077800465 seconds)
    (9/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077902584 seconds)
    (10/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.1914074 seconds)
    (11/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.199940038 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.104267641 seconds)
    (13/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.159030786 seconds)
    (14/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075255847 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.097431147 seconds)
    (16/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.085223088 seconds)
    (17/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075617132 seconds)
    (18/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.409352486 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.161498721 seconds)
    (20/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.075803364 seconds)
    (21/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.17673685 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.143915414 seconds)
    (23/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.207240759 seconds)
    (24/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.151487668 seconds)
    (25/309) benchmarking ("sort", BigInt, false)...
    done (took 0.25711679 seconds)
    (26/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.228666228 seconds)
    (27/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.073984474 seconds)
    (28/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.069190744 seconds)
    (29/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.172956946 seconds)
    (30/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.20645223 seconds)
    (31/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.163125907 seconds)
    (32/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.081058031 seconds)
    (33/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075795095 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.104772298 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.094060131 seconds)
    (36/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.066535477 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.094542734 seconds)
    (38/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.242451376 seconds)
    (39/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066661834 seconds)
    (40/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.213931035 seconds)
    (41/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067709076 seconds)
    (42/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.137825442 seconds)
    (43/309) benchmarking ("sort", Bool, false)...
    done (took 0.159421171 seconds)
    (44/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.065949259 seconds)
    (45/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.120820499 seconds)
    (46/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.194005215 seconds)
    (47/309) benchmarking ("sort", Int8, false)...
    done (took 0.182696155 seconds)
    (48/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.073677387 seconds)
    (49/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.220133938 seconds)
    (50/309) benchmarking ("sort", Int64, false)...
    done (took 0.067950656 seconds)
    (51/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.138432284 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075182448 seconds)
    (53/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.224124405 seconds)
    (54/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.069174464 seconds)
    (55/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077903904 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.099064459 seconds)
    (57/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.079357848 seconds)
    (58/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.086788232 seconds)
    (59/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.075797594 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066662642 seconds)
    (61/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.07743314 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066619516 seconds)
    (63/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083881509 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.134904666 seconds)
    (65/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.205705936 seconds)
    (66/309) benchmarking ("sort", Float64, false)...
    done (took 0.130767527 seconds)
    (67/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076973499 seconds)
    (68/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.090862094 seconds)
    (69/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066878618 seconds)
    (70/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070290574 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.119403987 seconds)
    (72/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.075503725 seconds)
    (73/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.190974689 seconds)
    (74/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.06619015 seconds)
    (75/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.066274622 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.06633156 seconds)
    (77/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.097593078 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.155517969 seconds)
    (79/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.077372112 seconds)
    (80/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074718085 seconds)
    (81/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.194589473 seconds)
    (82/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.224032495 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.113299552 seconds)
    (84/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072567321 seconds)
    (85/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066306842 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065625583 seconds)
    (87/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.066352329 seconds)
    (88/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.16582501 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088548437 seconds)
    (90/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.133606877 seconds)
    (91/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.214959508 seconds)
    (92/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.071334981 seconds)
    (93/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.079547019 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067869099 seconds)
    (95/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.201469566 seconds)
    (96/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.075082139 seconds)
    (97/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.068801817 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.096367653 seconds)
    (99/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075892271 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.069454512 seconds)
    (101/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.175339079 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.177164562 seconds)
    (103/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.066427948 seconds)
    (104/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.139557119 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.18579916 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067740446 seconds)
    (107/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.103402608 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.133283357 seconds)
    (109/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.18867541 seconds)
    (110/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068421804 seconds)
    (111/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079519583 seconds)
    (112/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.174247365 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.090466416 seconds)
    (114/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075937248 seconds)
    (115/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067696296 seconds)
    (116/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066261431 seconds)
    (117/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.176427798 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.140497815 seconds)
    (119/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.078350578 seconds)
    (120/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071830768 seconds)
    (121/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075025873 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.098137634 seconds)
    (123/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.067454159 seconds)
    (124/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.164526091 seconds)
    (125/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.165018783 seconds)
    (126/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.16840613 seconds)
    (127/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.079104067 seconds)
    (128/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.077818741 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.081925269 seconds)
    (130/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.070329457 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.075732352 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077160493 seconds)
    (133/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.101605313 seconds)
    (134/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066477602 seconds)
    (135/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.199633217 seconds)
    (136/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.077609237 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.128401855 seconds)
    (138/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075776518 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074722559 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06722253 seconds)
    (141/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067782403 seconds)
    (142/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.079162026 seconds)
    (143/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07542687 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.09046634 seconds)
    (145/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.067531358 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066852145 seconds)
    (147/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070308628 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.09077676 seconds)
    (149/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.077747828 seconds)
    (150/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.182920634 seconds)
    (151/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066308413 seconds)
    (152/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071356561 seconds)
    (153/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071922104 seconds)
    (154/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.065919429 seconds)
    (155/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06695987 seconds)
    (156/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075242397 seconds)
    (157/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.067297837 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.098767125 seconds)
    (159/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.136043819 seconds)
    (160/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.139765403 seconds)
    (161/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074521278 seconds)
    (162/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.207440159 seconds)
    (163/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.067516113 seconds)
    (164/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.161372985 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066766827 seconds)
    (166/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081245076 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.143749608 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067865364 seconds)
    (169/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067429447 seconds)
    (170/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.066708001 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.096753834 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.142083471 seconds)
    (173/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.067378318 seconds)
    (174/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.137926063 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090207785 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.131932695 seconds)
    (177/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.138169942 seconds)
    (178/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.094813953 seconds)
    (179/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089213379 seconds)
    (180/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.13800538 seconds)
    (181/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074362341 seconds)
    (182/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.07569247 seconds)
    (183/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.065858967 seconds)
    (184/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.225339924 seconds)
    (185/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119813873 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.118950002 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067693557 seconds)
    (188/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.065862089 seconds)
    (189/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.155600856 seconds)
    (190/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074514715 seconds)
    (191/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066464269 seconds)
    (192/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075279736 seconds)
    (193/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.067219819 seconds)
    (194/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.158295249 seconds)
    (195/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.066641504 seconds)
    (196/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.065813574 seconds)
    (197/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07450713 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.07328784 seconds)
    (199/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065739462 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088878527 seconds)
    (201/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.06848971 seconds)
    (202/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.06696343 seconds)
    (203/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066106218 seconds)
    (204/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092712072 seconds)
    (205/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.067620916 seconds)
    (206/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066704792 seconds)
    (207/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.18007156 seconds)
    (208/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.072638293 seconds)
    (209/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066757171 seconds)
    (210/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.065323052 seconds)
    (211/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.230148148 seconds)
    (212/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076233296 seconds)
    (213/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.181342557 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.068221002 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.0950088 seconds)
    (216/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.140300696 seconds)
    (217/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092678131 seconds)
    (218/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066673414 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07758169 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075732168 seconds)
    (221/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076377653 seconds)
    (222/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067488004 seconds)
    (223/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.168427825 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.139488521 seconds)
    (225/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066235749 seconds)
    (226/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.066295272 seconds)
    (227/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094032658 seconds)
    (228/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067255262 seconds)
    (229/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071158823 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.109864626 seconds)
    (231/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073324764 seconds)
    (232/309) benchmarking ("sort", Float32, false)...
    done (took 0.132783131 seconds)
    (233/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.066616211 seconds)
    (234/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066855993 seconds)
    (235/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075209962 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.147254759 seconds)
    (237/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.075339877 seconds)
    (238/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.069988521 seconds)
    (239/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.139933552 seconds)
    (240/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.06761872 seconds)
    (241/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.067471306 seconds)
    (242/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066690801 seconds)
    (243/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079872978 seconds)
    (244/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075324812 seconds)
    (245/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074618137 seconds)
    (246/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.142562397 seconds)
    (247/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066674579 seconds)
    (248/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079362806 seconds)
    (249/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075310946 seconds)
    (250/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068106601 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091990899 seconds)
    (252/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.065904597 seconds)
    (253/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066528211 seconds)
    (254/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067845104 seconds)
    (255/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.066020512 seconds)
    (256/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.066132208 seconds)
    (257/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079736889 seconds)
    (258/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.067796858 seconds)
    (259/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068175926 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066915299 seconds)
    (261/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066232315 seconds)
    (262/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068110066 seconds)
    (263/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066326197 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092424355 seconds)
    (265/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.068442689 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.123916458 seconds)
    (267/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068733012 seconds)
    (268/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.067324636 seconds)
    (269/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075476977 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.079238586 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.122593749 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076491893 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.069090067 seconds)
    (274/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.068834935 seconds)
    (275/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.07085343 seconds)
    (276/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.068881662 seconds)
    (277/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.070503006 seconds)
    (278/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076124365 seconds)
    (279/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.069473347 seconds)
    (280/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075795283 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.126130038 seconds)
    (282/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.070025235 seconds)
    (283/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.18914402 seconds)
    (284/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.06673414 seconds)
    (285/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06644775 seconds)
    (286/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068731368 seconds)
    (287/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.071510179 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.095090418 seconds)
    (289/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082391883 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.124197349 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066912578 seconds)
    (292/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.069387171 seconds)
    (293/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.068129758 seconds)
    (294/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069144927 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075860489 seconds)
    (296/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.067838827 seconds)
    (297/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.06623748 seconds)
    (298/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075085329 seconds)
    (299/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066509493 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073755324 seconds)
    (301/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091017243 seconds)
    (302/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.174398872 seconds)
    (303/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071523831 seconds)
    (304/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066450686 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087581132 seconds)
    (306/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.06835428 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.066661298 seconds)
    (308/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067893932 seconds)
    (309/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067913332 seconds)
  done (took 33.454178693 seconds)
done (took 34.862375759 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085447809 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099250723 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075146642 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097248314 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081940437 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.096130055 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075246606 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079883767 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082232031 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081963072 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081356699 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.074215912 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.078255589 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078630154 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076426841 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101058671 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082304092 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075682872 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075073366 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067476525 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074880609 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06717514 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066669751 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.074571083 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.08090623 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077198265 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.079201704 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078284543 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069524699 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.070364102 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.074225063 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.078284406 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068821196 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081822214 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.078409545 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077562727 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078835276 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.081675342 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068855076 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069626691 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.079869464 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069247195 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07707739 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075951893 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.074684442 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074454341 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076094165 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.07941149 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097435878 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07210331 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077603606 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077913096 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078555251 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072942948 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072309589 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07475642 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074616566 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097390192 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075164368 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07141387 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076536707 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076317059 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073283504 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07519479 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075028557 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077756957 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078911479 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073655416 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076777216 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073616821 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067283383 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075343697 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071326055 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069237572 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077905674 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079715707 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066297184 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071134967 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075338395 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075320476 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067080541 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071519621 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067032906 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072314305 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071191177 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072611185 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071799902 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073888503 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066849512 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075340096 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074242304 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074607814 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067388174 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07934613 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066974273 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.0733432 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067714023 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067034769 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066847626 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07299492 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067659503 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071361088 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075618384 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066498358 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071670895 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079883004 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067587704 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074400517 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066666223 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066908591 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07815495 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076900945 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067070418 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071432772 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066312848 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072428414 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066988427 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066542853 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06717489 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06679389 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071408456 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066922877 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070696573 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071628916 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07866177 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066239884 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070956702 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070396391 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066484644 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072865167 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066857141 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066501881 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065742817 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078910237 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070045735 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066430573 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071634975 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070497002 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07376809 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065655315 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073991483 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071508652 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069991846 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071896731 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065159464 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076496461 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07013876 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069641091 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.065378914 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065841293 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064936671 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065578737 seconds)
done (took 12.779656067 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070358768 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.122640434 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.091624392 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093047596 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.082894491 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06833687 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074551602 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.089172422 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068945393 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.094157443 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089099662 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087346683 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.107357708 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066409757 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067305171 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068592794 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.069338235 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.077337944 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.09273937 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088897648 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.103812879 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067296106 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.085006032 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.085720871 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.082609336 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.089519944 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068540491 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068610923 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070117527 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.086259916 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.09126153 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070259195 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068521922 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.087656749 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.084065588 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.079185668 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068172651 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.075214369 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.0685579 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067418714 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.069355293 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.085913426 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.074889332 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.074967246 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068749354 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.075279197 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068898617 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.081639186 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.086454132 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075189029 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.081612469 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.089257223 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070936763 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.08199184 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066578977 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.081316971 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.075132508 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068226754 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068131909 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072863254 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067901692 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070099224 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.077346877 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.075695394 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071926078 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081168471 seconds)
  done (took 6.676671607 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086418377 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094987948 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083835854 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083873061 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067503833 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068219879 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067792391 seconds)
  done (took 2.072972944 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067946446 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.093158753 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.094898213 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.094392662 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.0882002 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.09506204 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077979911 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067918252 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.10098741 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067515889 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.09197992 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11298717 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.07190064 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.079000684 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.097120264 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.068071761 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093728917 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067920636 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069149929 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.095955156 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072625837 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094237854 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079252568 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068097251 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.084186555 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068600407 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123133663 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.078407458 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069461484 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.06942689 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069163129 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.11348026 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.083924929 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081193639 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069232933 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081975877 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084730198 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071449306 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082138429 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.078294982 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084176546 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069252455 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067228309 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069430882 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071683711 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078824897 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066963722 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069428051 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069228137 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091862513 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066780744 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08374549 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072196763 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073173745 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073521437 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072465792 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07695442 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069730298 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.092040611 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069299368 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087654887 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087341219 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084334543 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086934012 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068636386 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084155074 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084719517 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069121846 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070061116 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069478666 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08708519 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071582443 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069972515 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079415314 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068647454 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.096354307 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.096233396 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068533117 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081384167 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068874993 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06952704 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.079843214 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09637856 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073001672 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069227704 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073028347 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069946547 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.071220035 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066893763 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071948745 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069754197 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073772467 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069683123 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072258266 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070701549 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087057504 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067966747 seconds)
  done (took 9.144139766 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070083236 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068967 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070778718 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068657007 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069159694 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068969959 seconds)
  done (took 1.965330699 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.090914097 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068808803 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081202576 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.069928388 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.115625989 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.084061256 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085689374 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07841108 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081230838 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080272421 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083647946 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086082486 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.08658283 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070533139 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082518004 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069719462 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083190733 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072601771 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079725161 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070918093 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081131061 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070941162 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071221705 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.087226098 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072248993 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071610373 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077618099 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080065254 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079756472 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077561524 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070860263 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07174825 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.076018758 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077338847 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083234898 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.078150616 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068842703 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074350541 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073112524 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073202882 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087508648 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072676361 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073627479 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077309631 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080575197 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.078674452 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076685886 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078586052 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085259177 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076626826 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077076943 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071778651 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.073534801 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076857945 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.077930423 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078359554 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.0748215 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083415154 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071020202 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.077046264 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068907826 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071706401 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076798048 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071453518 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075314579 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074709847 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076393901 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07067223 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070956343 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068624314 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07452388 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068962274 seconds)
  done (took 7.073026566 seconds)
done (took 28.478900986 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.526777933 seconds)
  done (took 2.025737186 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.634466363 seconds)
  done (took 2.169052786 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.3964917 seconds)
  done (took 7.928051022 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.441081117 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.507636584 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.771692554 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.136499331 seconds)
  done (took 3.424988093 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.725711397 seconds)
  done (took 2.271300574 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.251410518 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.237371585 seconds)
  done (took 2.043761635 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.348690695 seconds)
  done (took 1.880709272 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.09942682 seconds)
  done (took 2.632056517 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.28691913 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163652764 seconds)
  done (took 1.99512705 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.459495785 seconds)
  done (took 1.99708875 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.265456804 seconds)
  done (took 5.806430139 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.241469512 seconds)
  done (took 1.8153358 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.232399955 seconds)
  done (took 1.773379156 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.723845631 seconds)
  done (took 3.261622283 seconds)
done (took 42.566416781 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083675977 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086094625 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08598522 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.082292336 seconds)
  done (took 1.853536812 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076627035 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071874949 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075997175 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07175918 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.0754782 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072562723 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073742191 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075113642 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071741169 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072174923 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07195012 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071838811 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074725732 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073988461 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071163371 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075341151 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075733859 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072136634 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074540321 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071935229 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070768008 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074695071 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074960928 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071482952 seconds)
  done (took 3.299979109 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082527828 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074881083 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.077214433 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073582447 seconds)
  done (took 1.853289772 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078282694 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092071377 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.087918447 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078946619 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092869544 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087878588 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068265227 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068332507 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071960288 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078184442 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067906775 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09605322 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.090281323 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078279683 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080000311 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06487825 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066771042 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.08913041 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078663055 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.079229273 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069905772 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078290105 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067305754 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087077108 seconds)
  done (took 3.440666304 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.088085857 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.067846547 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.087532759 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.093268466 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.094098708 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067770945 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.090370825 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094531363 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.139568423 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067638737 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073473726 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067431218 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105373965 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067446402 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.084437002 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109733195 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113328594 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071217463 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099204513 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067479674 seconds)
  done (took 3.30239174 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.084206506 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070798847 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071672114 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067047371 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077425898 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074693245 seconds)
  done (took 2.001543576 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069551145 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069293569 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069115769 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069014047 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073386347 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071404752 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067412873 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069323589 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069572091 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068807573 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068277515 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067602952 seconds)
  done (took 2.384050999 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.163824725 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070673929 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071884538 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067833002 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073124316 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068579544 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083355685 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071224394 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.086447221 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068314768 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069015735 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071884188 seconds)
  done (took 2.518362135 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187437367 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074554893 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220884684 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153005546 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101449782 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114639791 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113810701 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112764103 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.137592142 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095909195 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150629662 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154639161 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106411497 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129259349 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089126296 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.124123722 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13955503 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153516767 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099568035 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152142559 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139289228 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120263473 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138691479 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099000439 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100060983 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115379979 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072725962 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077042424 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157278295 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122825916 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133386498 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104471169 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088416259 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165875891 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154035077 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13030785 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144091954 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081654649 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.117247217 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.125870985 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186584403 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087467219 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146616787 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102771128 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077990997 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119580867 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109203152 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.113210007 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.097385736 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08659606 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275233298 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169712545 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.129619191 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083622235 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11903774 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104112057 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.110291894 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115648476 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171668255 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14777608 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121310627 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071848484 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109027946 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139332631 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123833064 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.10351086 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.116472554 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089052237 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128557892 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145164399 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126217535 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135651668 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.115977984 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084657316 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113622923 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132162959 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118076102 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158515227 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11523904 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07186965 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112653486 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093655761 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078749267 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143528551 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074655059 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162146149 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096559998 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.119810615 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127431284 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106301035 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10474045 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144764715 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137505134 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100872337 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.085158345 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098934242 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.112586529 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131395149 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084233732 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103748458 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106651494 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076656001 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120287488 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.072924116 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110014899 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.09224415 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112390121 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267967831 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07900169 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115459239 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100526587 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.09853875 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124732847 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145215329 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085373818 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078432892 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152121886 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113145567 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.099257467 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133103287 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145835043 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.118043698 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094240627 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133570333 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163569141 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087655885 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148227873 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09771253 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081004469 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.102651935 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113664029 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105463973 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.116603711 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078958497 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.111032637 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155406172 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.072922025 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092870149 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123960647 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07939756 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078670932 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099658967 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098520598 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093584202 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097589905 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.099238695 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125335583 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114778565 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100991856 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117205658 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093630859 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154666911 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085930546 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.09924388 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101307303 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072118916 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.128269444 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142466897 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076347928 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153308425 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.115693225 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113145457 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111975087 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080768902 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131292497 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076570696 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070824517 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127816489 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.259388162 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1052868 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.140165063 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11307424 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.115912028 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.112134664 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119644061 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120451337 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.120179754 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103181442 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087429072 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108923621 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120874758 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072292919 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.088244779 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080172994 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099519985 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090042756 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082292536 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130144401 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114910273 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108821284 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108298881 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093264213 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137295981 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077737879 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11754632 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116225207 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092425865 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.142469009 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139541595 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122633364 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097401823 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128492546 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072778467 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073378074 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.08489429 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118263228 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082133618 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08146779 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106914898 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138906408 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12114003 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124858521 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120864923 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115870854 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14689407 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072178653 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117923244 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134376314 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112584257 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.100826126 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08722349 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.09500884 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131123074 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097788611 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170895043 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106321948 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11432456 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.294918072 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099015515 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077506782 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100963037 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128679308 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096076215 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132529608 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095817531 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08445817 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103040991 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.077062003 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09404675 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118941097 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108393654 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127641877 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.106760345 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120341831 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076898965 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104372001 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11523789 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112150471 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081787965 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113227273 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152264601 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093592249 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110904214 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139402835 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07689836 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.136997903 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159266183 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135418686 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082164131 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099375742 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113638146 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118566579 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112525003 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133934744 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098585027 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128748264 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105711659 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084880064 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083653932 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093332319 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100416749 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.109085625 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.099238817 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.10728421 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092844077 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123272505 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09828361 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105648978 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110406687 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097647797 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.094549208 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093327308 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159686282 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10891914 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155304677 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.095292455 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.129845998 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.305183749 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075047958 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077601881 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079509851 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134986409 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083055426 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120264804 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.110877074 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113912254 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113193095 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134095116 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092252518 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.071022855 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105341813 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122364635 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121380878 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093233889 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.097302155 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147598858 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.113169706 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076888698 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111977329 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114220992 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099732773 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159475941 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079812894 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108029792 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075172132 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077577064 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117898798 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141288046 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084592462 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101796541 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11389942 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104951065 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118992269 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092996254 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110063955 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127227677 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135884333 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119851418 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087180127 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106635298 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121539439 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142457774 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099951348 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097026656 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159822295 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140802009 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.147942672 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.083518425 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108308772 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107646479 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104115928 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124579971 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081596065 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153157113 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079021573 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123935555 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093466548 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.237736436 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120102805 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.111521809 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086432905 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134471633 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10903397 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080700772 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078656075 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105181776 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110027093 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097401578 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073243227 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128915038 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073341213 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123808698 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155207444 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078244466 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099600155 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092280015 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080566722 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097584212 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096899839 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083020086 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096558809 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15614113 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.084826232 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136272135 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125000312 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106933775 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129320856 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100345402 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640749952 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078663708 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139480416 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109444047 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167179816 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096209243 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111048938 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104792919 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11186372 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132589931 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098310141 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177333857 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122812467 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.109948573 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077474673 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097728613 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098137752 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.085158505 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103908456 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107643181 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106933816 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.090530372 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.1090004 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1129501 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080834872 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092824507 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139851105 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106884883 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283191318 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134894958 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083203659 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110853448 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124604445 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07798812 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.112983837 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140590849 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099133182 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096666161 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080596627 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.094069797 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158277221 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072107065 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142964233 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111218486 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104809282 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106359484 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.103513168 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120131798 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097756533 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112212247 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088336391 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.104359601 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107267762 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081582667 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078046417 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100364055 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105039745 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.094753307 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093207795 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096701846 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139065516 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071688684 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093631473 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112898973 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131886244 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16345035 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.103475099 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081658539 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111167026 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111173046 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.106627634 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112850512 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080706874 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112461129 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080027871 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.099397133 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.11986705 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107013991 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116867227 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105547567 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155599866 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082918474 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.227463756 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092377057 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099269203 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.086700918 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077830844 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092973458 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091763022 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097674436 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108027467 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.310243318 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092622729 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087494185 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089047735 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074750107 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081788208 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118468466 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105677788 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109836956 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099014261 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081134529 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098032774 seconds)
  done (took 56.430306465 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.103479787 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.078377101 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.098189805 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148195561 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122681527 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203907293 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.15523179 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189812153 seconds)
  done (took 2.779873349 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069413454 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096784678 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102613681 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083577606 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068100575 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069302743 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.241190695 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082551063 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06788181 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.095488727 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080671898 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070402224 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.432949544 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067675478 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068837854 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.078737014 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068462398 seconds)
  done (took 3.512500561 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.390697825 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.596709882 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.386582774 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.077371124 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.881505086 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092197627 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.123126216 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.140209111 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082239516 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.532366234 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.365584909 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131088433 seconds)
  done (took 18.483404339 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.082056684 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.0798669 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.090292994 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.090174025 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.078701244 seconds)
  done (took 2.098646023 seconds)
done (took 105.533738401 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082302401 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.196312445 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069732318 seconds)
  done (took 1.966823144 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091064837 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089692318 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089515086 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086951162 seconds)
  done (took 2.039677187 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075835571 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077759382 seconds)
  done (took 1.829653092 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.242466224 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.17286579 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.099308777 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084574935 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081482983 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.08188567 seconds)
  done (took 1.931836357 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073756657 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074211409 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074199636 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078347301 seconds)
  done (took 1.975257782 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.071473409 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.06790561 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.070163238 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.073412269 seconds)
  done (took 1.960861842 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085758863 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085451693 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080368063 seconds)
  done (took 1.928231777 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106458465 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094846264 seconds)
  done (took 1.87753256 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082181449 seconds)
  done (took 1.760050298 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097177759 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.106169237 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132388172 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114049905 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141790525 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.118854335 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.083565163 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088410106 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078613163 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085637583 seconds)
  done (took 2.72369663 seconds)
done (took 22.264896025 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079871643 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.367526474 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364499115 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091295868 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67135151 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358430271 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.970803103 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093121091 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111774978 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07039865 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087159675 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649363777 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.961801983 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.326367218 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.949878004 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323520792 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.654222735 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06976691 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069303 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070047345 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.956772733 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069678597 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070165225 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070207954 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653370698 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375401335 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071674636 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324883074 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071250509 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077007499 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.362648247 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074701959 seconds)
  done (took 16.171373837 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072034695 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122075079 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077344756 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086231157 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071647286 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071876201 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073306842 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070104814 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121995889 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07040347 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087648694 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06995012 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074357002 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071047562 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090137725 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070267505 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073118044 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071313653 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072217546 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071800186 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089693747 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073657775 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074641332 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07416905 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074349256 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08663989 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074920417 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073399841 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073935614 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078115368 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.078946591 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075473006 seconds)
  done (took 4.208783625 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117598686 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126313397 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078058425 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107609564 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11760484 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073064332 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.146383609 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094338322 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124715599 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07055703 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087924639 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070313215 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103940948 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071642109 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091256173 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071045468 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073943766 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071066018 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070358749 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07119856 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089979122 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070656595 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071545425 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071317721 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071854898 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085268914 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072046237 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070899401 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071104469 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074562207 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076478145 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072475516 seconds)
  done (took 4.432045667 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07214222 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074435465 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081451788 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082776021 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068920414 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071749552 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07544779 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.071783806 seconds)
  done (took 2.296492472 seconds)
done (took 28.795234712 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079546364 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069199781 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072528709 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.088380842 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075747353 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080098023 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066873199 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075540383 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073318202 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073637879 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076914138 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068627872 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071597577 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066885607 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073778784 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067791523 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081359839 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071576204 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080449014 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081346452 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070698637 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074546667 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076589273 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081370022 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081041213 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.08074994 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.07783656 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076224377 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071837209 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.075145761 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.073778881 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.08327025 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.085588898 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.085098711 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071209297 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070899407 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075009991 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072531902 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.085112016 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.080301282 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072900784 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079818104 seconds)
  done (took 4.862238155 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085230928 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089796362 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082525215 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079758609 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.097789218 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082484529 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.086563968 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07815264 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078367896 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086323817 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074710505 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081377907 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079495603 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073606785 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077837091 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075320637 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.07955283 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074649528 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078010483 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078736783 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087027738 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.0765456 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.090434631 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.083030012 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.078387193 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.084710205 seconds)
  done (took 3.826725228 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074426311 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086537362 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093282236 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143501664 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.115025576 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.089502895 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.084756127 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096061914 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.099098201 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071698377 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07502936 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093133355 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096506941 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.078076441 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.112840382 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084630615 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084115888 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071290347 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076147301 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09698184 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089022276 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085892847 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094064948 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085072105 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069251794 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071352246 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074209133 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08412111 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071503332 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.081202375 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072084235 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073139053 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070215827 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079121436 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071663643 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068552439 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092374175 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080495696 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081732534 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.106004962 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.079714403 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.07070746 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09434054 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12787893 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.071218441 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074580182 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07319609 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080475043 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068616921 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096376424 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083788163 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.07155851 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.072089133 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.0700983 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.071157559 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.073922214 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071367721 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071691223 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079983979 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075617061 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090365582 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073857755 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087816639 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068502125 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079279205 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068690721 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070733389 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068119941 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097286956 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070725086 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112250178 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071278722 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068078931 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080764042 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079583355 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075171008 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06904991 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088408345 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079777634 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072874537 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077510467 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071892234 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072605694 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.098712991 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069614677 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068919879 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067869928 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074691674 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072300062 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070014379 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081193769 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068748201 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072317751 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088091649 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069363374 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070095493 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072628453 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071210523 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069115574 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080205147 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074267163 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070818799 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079823021 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.07030752 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072751433 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08285439 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076385168 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068437769 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071058406 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072548991 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071316219 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070877338 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072457843 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071339277 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076254344 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075697041 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074861087 seconds)
  done (took 11.022842327 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166145842 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.159071341 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071152737 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150075758 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077617134 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081258379 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.155630165 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097161272 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069425296 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070872535 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069257981 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112598639 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.108166718 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.118364428 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081197096 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070056356 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.094738073 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.117823077 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.156563541 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14987661 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.091585358 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078020424 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071784991 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074521054 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07136848 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079372742 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086569024 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077960535 seconds)
  done (took 4.546282626 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078608071 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.10442668 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074410582 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092352458 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.088694413 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070050478 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072211354 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07159548 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.08574201 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078619211 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.070166431 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074982214 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074065315 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073239149 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071115377 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076147623 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07705495 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069386811 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074224736 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075358468 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079635812 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094143431 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074722994 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069561308 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072324795 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069664142 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.078411611 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081159649 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069839526 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.105062637 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067554308 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074749877 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083484311 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070218507 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069199268 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070058499 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070244415 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06986577 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071851088 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.069334982 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068385461 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.074331885 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068581807 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079205517 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082617792 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.076537123 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07174552 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07235656 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073021079 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06764065 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072843597 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072607031 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072353899 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077024054 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073862191 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072615779 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070816618 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.095537405 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07609816 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069440209 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068999162 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068894521 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072276197 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.079248325 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084831195 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072532275 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068615014 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070407577 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.082376502 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082400829 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069110287 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074279762 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067486043 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072352569 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07221194 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072197413 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.07076016 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069045802 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069434342 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069824465 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.070725734 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069367195 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.070084538 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072574329 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068390036 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068519601 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070584838 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073774516 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078108124 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069088498 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073428206 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070601343 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06892572 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072559479 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074873846 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07251475 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080316302 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080722894 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070144202 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06841077 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085112415 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075668541 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069683146 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075374748 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074767037 seconds)
  done (took 9.567908574 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091241579 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.07055596 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086225117 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092216534 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079550038 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074686576 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080243205 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070130503 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085509393 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074429395 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077791181 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06825194 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080338638 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079402042 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070708191 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080413878 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072217619 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.089691308 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083556472 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068125473 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078109612 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081302959 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.081748545 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083630602 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082951826 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084584119 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.084115522 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.081451001 seconds)
  done (took 3.986519491 seconds)
done (took 39.5040312 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.800919346 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.950154526 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.772573338 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.954863703 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.888568459 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.898625812 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.862363977 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.769501986 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.078411047 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.820673826 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.082049864 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.234726903 seconds)
done (took 65.940440006 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.863023314 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.923991256 seconds)
    (2/2) benchmarking "String"...
    done (took 2.03268749 seconds)
  done (took 5.663210208 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.008624399 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.434533768 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.036114809 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.771892239 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.776709061 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.199122322 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.546919391 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.228067447 seconds)
  done (took 30.702083912 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.917960929 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.991770349 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.461097127 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.490749784 seconds)
  done (took 15.617204977 seconds)
done (took 63.656421816 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.775507459 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.772150473 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.833716217 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.796436745 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.773327493 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.774850834 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.775300616 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.775912839 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.793644406 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.785485855 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.77173451 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.779123584 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.773013431 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.823909862 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.441340453 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.821483434 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.794751943 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.782558067 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.776413722 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.78570053 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.777734371 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.932699593 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.213862505 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.970659944 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.379551642 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.191950566 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.272257807 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.193742907 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.783050832 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.774115411 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.825671805 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.145778234 seconds)
  done (took 204.574703461 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.772612524 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.679138948 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.763292179 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.822213611 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.081469294 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.958567504 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.877624027 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.127452714 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.781489511 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.796221516 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.945276899 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.776255625 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.962381799 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.715899115 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.809642645 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.866076236 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.944803963 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.967998724 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.811570488 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.936870043 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.800721448 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.820383329 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.773117927 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.921757687 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.806517519 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.862062416 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.787634309 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.80576684 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.963963515 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.920284654 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.817887736 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.798214347 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.950685457 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.642144711 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.779449505 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.790584706 seconds)
  done (took 169.346104374 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.985643885 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.782087538 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.775614053 seconds)
    (3/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.776404425 seconds)
    (4/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.826967893 seconds)
    (5/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.896647617 seconds)
    (6/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.779814668 seconds)
    (7/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.44596558 seconds)
    (8/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.783722121 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.562393075 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.779611101 seconds)
    (11/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.774353258 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.774765312 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.774972324 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.789226237 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.856294667 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.776687435 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.790583751 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.778255063 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.801307553 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.776648161 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.775765703 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.775724248 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.776504085 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.77680831 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.776691154 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.775667874 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.230517395 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.026833299 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.778937432 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.775883001 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.600048095 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.792822181 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.234305819 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.78151535 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.868218541 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.829829398 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.901282089 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.782319443 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.993916864 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.850143294 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.777854232 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.776467831 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.842322951 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.789263723 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.776613228 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.777769878 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.782997061 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.843387315 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.052273515 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.783183494 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.898084775 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.270672887 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.782208038 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.776785164 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.777447446 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.386619496 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.783435374 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.777956922 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.783552988 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.782798512 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.778188323 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.778117678 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.165359418 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.848496087 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.778582051 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.815819952 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.1584739 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.784558431 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.072562613 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.013320229 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.778514165 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.779797633 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.778048908 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.780461186 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.778114498 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.780072267 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.899319852 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.789835318 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.90677451 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.863497171 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.903555139 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.785131653 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.78707695 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.599785299 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.850448072 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.815391641 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.612470829 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.784225834 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.151301303 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.566334741 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.783895379 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.777831399 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.778932642 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.793102134 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.779058814 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.778031425 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.779610627 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.78008962 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.859813881 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.780626334 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.904887887 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.500238541 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.012501083 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.783712511 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.780215539 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.785683926 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.860774106 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.901234754 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.78392563 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.84453259 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.785801717 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.781382955 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.861946531 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.780713375 seconds)
  done (took 401.799876314 seconds)
done (took 779.469927333 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.453532589 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.425560534 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.525287012 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.438465792 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.417299163 seconds)
  done (took 13.974707685 seconds)
done (took 15.688976665 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.855601408 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.86111977 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.799909164 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.860864031 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.795424068 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.860758292 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.843406036 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.802203734 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.829755669 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.803834224 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.830722086 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.802011777 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.788491336 seconds)
  done (took 25.449573064 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.012147697 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.017726686 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.851161808 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.008382578 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.825784494 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.007230766 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.93608529 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.926338268 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.933510764 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.794859397 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.792817996 seconds)
  done (took 22.822699905 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.008075096 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.011542593 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.855209023 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.011816334 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.827623763 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.011392694 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.950193355 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.934486833 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.930129885 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.79652659 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.792966196 seconds)
  done (took 22.846463686 seconds)
done (took 72.833821829 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.784643926 seconds)
  done (took 3.501482978 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.803316017 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.959232361 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.784312325 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.783961585 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.784332369 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.785966913 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.784714549 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.784298267 seconds)
  done (took 16.19184775 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.785094126 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.785136752 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.784446005 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.785180439 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.784565965 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.784833888 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.785020141 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.785417667 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.781468928 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.782370382 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.782562972 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.781590443 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.78193812 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.782901941 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.782259893 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.782607198 seconds)
  done (took 30.256048865 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.784212677 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.781759234 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.782645212 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.781871682 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.782859346 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.782326625 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.784068315 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.78265653 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.782099593 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.783208016 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.78348742 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.783192727 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.783793866 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.783920899 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.783498741 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.783676076 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.783383244 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.783325955 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.789537646 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.783698126 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.784111984 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.784257774 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.783901956 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.783791027 seconds)
  done (took 44.528150774 seconds)
done (took 96.194355891 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.544401525 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.638017532 seconds)
  done (took 9.89825843 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.787530096 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.783900706 seconds)
  done (took 5.368626359 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.785900591 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.783943965 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.784404364 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.784038488 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.784423098 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.78393701 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.785922739 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.784108623 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.784434186 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.784311689 seconds)
  done (took 19.56215944 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.784254077 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.784553893 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.784474801 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.7845237 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.784507143 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.784748794 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.784767311 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.785868796 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.785477706 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.78453882 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.784632445 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.785462853 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.78555106 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.785595939 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.785373191 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.785769492 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.785877453 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.785550498 seconds)
  done (took 33.849797168 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.786106062 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.785616675 seconds)
  done (took 5.289763856 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.785226244 seconds)
    (2/7) benchmarking "second"...
    done (took 1.786847105 seconds)
    (3/7) benchmarking "month"...
    done (took 1.785955854 seconds)
    (4/7) benchmarking "year"...
    done (took 1.786580917 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.78619146 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.785675596 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.786213525 seconds)
  done (took 14.221181519 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.787115873 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.951480006 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.019824832 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.43694147 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.787169801 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.788221809 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.720182269 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.78857815 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.78930762 seconds)
  done (took 19.787748973 seconds)
done (took 109.695568244 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.708680108 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.78838815 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.078536039 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.854874736 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.856088777 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.081661162 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.809925318 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.072817892 seconds)
done (took 42.970839132 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.83985606 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 6.554043889 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 6.641809926 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.817981994 seconds)
  done (took 21.734131341 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.790972105 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.114628097 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.813513997 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.6095897 seconds)
  done (took 22.097060862 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.148114776 seconds)
    (2/2) benchmarking "read"...
    done (took 2.139821729 seconds)
  done (took 6.011866418 seconds)
done (took 58.404041007 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.78751062 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.787766878 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.787771621 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.787413791 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.787015519 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.786651757 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.786626649 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.787865436 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.788931133 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.787318388 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.787797894 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.78800641 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.78756922 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.787452633 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.787331611 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.787629912 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.787675037 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.788139826 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.787576108 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.786989281 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.788376608 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.786800306 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.788487635 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.78955612 seconds)
  done (took 44.62614593 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.789419494 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.790087515 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.788307265 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.788441507 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.789933656 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.789200978 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.789061092 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.788966966 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.789860813 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.789008007 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.790082877 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.789599192 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.789573286 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.790095294 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.790438861 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.790205341 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.790504305 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.789754852 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.789231649 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.790601874 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.790472494 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.790414402 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.789881842 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.790570939 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.78947849 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.789943751 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.790032672 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.791511776 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.790758932 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.790574089 seconds)
  done (took 55.417707929 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.789675853 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.790829314 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.789901533 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.790887434 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.790499673 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.790396116 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.789844099 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.790357035 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.790836723 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.789968608 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.790610613 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.79036857 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.791434799 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.790331036 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.791522476 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.790717956 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.791452578 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.790531439 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.790942223 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.791471987 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.790816263 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.790707521 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.790669592 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.791331231 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.791456681 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.792898292 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.7915086 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.791692206 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.791750462 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.792122849 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.792375673 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.793021835 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.792695576 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.791921632 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.792171971 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.793169858 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.79425262 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.792225569 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.791976777 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.792017532 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.791660161 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.792491542 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.792533536 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.791645559 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.792622509 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.793499521 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.793146915 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.793509018 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.792530746 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.793131431 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.792776731 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.792867438 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.793156147 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.794088113 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.792962291 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.793020935 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.792505008 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.793004569 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.7924215 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.79458 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.79349879 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.792842262 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.792748007 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.792905888 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.794497512 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.793388018 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.794336275 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.79454867 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.794142935 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.794303784 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.794982521 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.79376845 seconds)
  done (took 130.762873951 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.793927107 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.795040298 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.794842473 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.79388205 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.794180313 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.79347665 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.793823147 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.794368369 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.794867753 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.794491007 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.794459036 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.795240166 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.794232332 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.794508127 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.796929313 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.794000988 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.794258582 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.794353363 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.795303071 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.797082191 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.795666013 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.795889497 seconds)
  done (took 41.2118523 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.795426868 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.795484941 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.796063306 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.795135641 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.795366685 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.795323517 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.795872649 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.796241325 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.795320764 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.795972473 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.795447374 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.796037303 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.796496242 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.797338584 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.79519773 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.796223683 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.795990515 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.796597116 seconds)
  done (took 34.055125737 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.796011842 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.79589825 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.796010637 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.795924784 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.795881334 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.797785467 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.796251516 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.796740641 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.795620042 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.796925996 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.796037439 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.798270623 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.796122365 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.796201881 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.796520001 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.797324894 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.79700814 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.798020067 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.796351586 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.796049104 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.796378832 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.796427545 seconds)
  done (took 41.253249622 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.796988428 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.797262288 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.796857613 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.797545511 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.799014633 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.798498673 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.798497304 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.797061259 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.79738211 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.79786523 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.798582775 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.797338815 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.798264399 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.797336405 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.797324032 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.798653129 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.798541048 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.798877952 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.798113283 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.798109335 seconds)
  done (took 37.6884333 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.798261607 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.798372381 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.799090952 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.798164677 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.801237793 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.799193447 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.79960946 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.799110353 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.798667148 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.800251536 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.79874755 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.799624992 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.799155805 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.798788583 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.798775901 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.798870661 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.797964625 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.800108883 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.799755 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.799564193 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.799407121 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.798832771 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.800426482 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.799376259 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.799595123 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.799522375 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.799648184 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.800227147 seconds)
  done (took 52.111893025 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.799873956 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.798685326 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.799778857 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.799074018 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.800246413 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.799441318 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.80023466 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.800232625 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.799756286 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.800548073 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.800456996 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.800208931 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.800722136 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.799809244 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.80008826 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.80073551 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.800767676 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.800617107 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.800796992 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.800284456 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.800077072 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.801343649 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.801005911 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.800564395 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.800789238 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.802578778 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.801429827 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.802964533 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.801258876 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.799850968 seconds)
  done (took 55.74710326 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.821448653 seconds)
    (2/2) benchmarking "in"...
    done (took 1.822278475 seconds)
  done (took 5.376694065 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.800526486 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.801213498 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.800595306 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.801163342 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.8010947 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.801536499 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.801356694 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.800613819 seconds)
  done (took 16.140923683 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.804609241 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.801035299 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.802209083 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.801399992 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.801430808 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.803930517 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.809468649 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.801734643 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.804222917 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.80268546 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.809124213 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.811733643 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.805700379 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.804541188 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.803679415 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.805486756 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.801912126 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.802838129 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.802077236 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.803299103 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.803292423 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.805454042 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.807006438 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.803303867 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.805072279 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.814619418 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.809111555 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.803508893 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.803865951 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.808168067 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.805372622 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.803226218 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.804306395 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.803841522 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.804419447 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.804513545 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.813493552 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.806153661 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.810658306 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.805667511 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.803662593 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.802764536 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.806154418 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.80618352 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.806398193 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.804712084 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.804252043 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.80387907 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.8050898 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.808213281 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.812136297 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.805350208 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.803964516 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.808698826 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.807405851 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.812261785 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.806198593 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.808266772 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.813583558 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.815054562 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.816056563 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.813292547 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.807792702 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.805774198 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.813694252 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.829247042 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.813065695 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.806775199 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.804310263 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.805222499 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.812290036 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.81751334 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.816126877 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.806096832 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.805003109 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.805270313 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.807314059 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.806074452 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.81339313 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.810037218 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.806724757 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.805737045 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.815031439 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.828691482 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.807151392 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.805993504 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.807074879 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.807336062 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.808440751 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.818145775 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.807614747 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.806140377 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.807681296 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.808305019 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.8099202 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.807047454 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.808359368 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.809439326 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.807622389 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.807541987 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.807373549 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.810879004 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.816507988 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.807286569 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.80743473 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.813957202 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.807128405 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.807480322 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.814639124 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.807059899 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.80793934 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.810289971 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.814758938 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.807979073 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.812192759 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.817295722 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.808629925 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.810373845 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.808766079 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.808349623 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.817025032 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.835041488 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.80868393 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.807992581 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.812930148 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.81842429 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.808368246 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.81342622 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.809512539 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.809374125 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.80864831 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.811048324 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.808406385 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.810303202 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.808922273 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.81137635 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.809036833 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.810372753 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.809344891 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.81364822 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.811225062 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.810821248 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.810917302 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.814171868 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.810888741 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.812802918 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.816796854 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.812116096 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.812047103 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.812268812 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.810585386 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.809426204 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.811863695 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.810622725 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.811952864 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.810631141 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.811162432 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.810400484 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.809768267 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.811064025 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.81038418 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.812784375 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.815296554 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.81070762 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.815674288 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.811410745 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.810529828 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.811247055 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.810664035 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.812076305 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.810461773 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.811225763 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.814802801 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.81816483 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.810418319 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.811099991 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.814617745 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.810931077 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.810368768 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.812302025 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.814613075 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.82085025 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.811199374 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.818863613 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.812261234 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.811901121 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.811353793 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.813521033 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.813316453 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.81189756 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.814898292 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.819641178 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.822092736 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.82138284 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.813808528 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.815732582 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.814266655 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.816028492 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.816687659 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.812927828 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.811013901 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.812904489 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.812648037 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.811489659 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.814102378 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.812715908 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.812722439 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.812273562 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.811461887 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.813541478 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.812471114 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.815470075 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.814406105 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.813037846 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.813281235 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.814453468 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.814748109 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.812995092 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.814658673 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.812564372 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.812319036 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.813446191 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.8198698 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.812239627 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.816402246 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.8166149 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.815252111 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.813530364 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.812627863 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.816716295 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.814337349 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.820585802 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.816496881 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.814956169 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.821558403 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.814690281 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.814547861 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.817849899 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.813093366 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.813380136 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.816574712 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.822163986 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.814200325 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.815094605 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.814101873 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.815608044 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.813875539 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.820789925 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.814897373 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.816013203 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.815395385 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.817526369 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.815143147 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.816797497 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.817411419 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.817456167 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.818108588 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.815218247 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.814993049 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.817750171 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.815855414 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.814778971 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.816334124 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.818836295 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.822394688 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.821720961 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.816698059 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.819024966 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.816439021 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.819037062 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.817595615 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.81573581 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.816144445 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.826843229 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.824008707 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.823217297 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.819336322 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.814909896 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.822866655 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.818550389 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.820778648 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.816989631 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.818673839 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.817789909 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.819113141 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.81593779 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.817877099 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.816460752 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.818779932 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.818360213 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.820700831 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.816824571 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.817225741 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.817349011 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.816429001 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.816408803 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.817665426 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.81677048 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.821837417 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.820658584 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.818678577 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.818319981 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.825421213 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.819983265 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.821898135 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.819431815 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.818221682 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.818077979 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.821003054 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.818057313 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.820463668 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.826758933 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.822056098 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.827179695 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.820017469 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.828051965 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.818184008 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.82194074 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.826086274 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.817871608 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.819445106 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.81960829 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.818632913 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.826341521 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.819890446 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.819835925 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.823780725 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.817772455 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.819315146 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.818343807 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.819354154 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.820071046 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.819113592 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.826354533 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.822330212 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.825277913 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.822417695 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.819122164 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.818781018 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.818555786 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.820040887 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.823693931 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.820154291 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.82097813 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.820922475 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.821332182 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.819024402 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.819731532 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.820129452 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.818651892 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.819246017 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.826962329 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.82233946 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.82454736 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.820004262 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.828561367 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.819972284 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.827947929 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.821941405 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.822772737 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.819395459 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.819470947 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.823839568 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.822836757 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.824053144 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.821513214 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.822527679 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.824314998 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.820245431 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.824564994 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.823688082 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.820767495 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.822676724 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.830470693 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.843777116 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.823757757 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.824452576 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.820859987 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.822714948 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.824150322 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.821920726 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.822757462 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.82460795 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.832072634 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.82906301 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.824581065 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.822910224 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.823802736 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.822805448 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.821330654 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.822254535 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.821367216 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.822936926 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.824475159 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.822189141 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.825882976 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.820638413 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.824291653 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.823727597 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.823193842 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.832730856 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.821859145 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.824294733 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.823867215 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.822192705 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.824099612 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.823627741 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.823298375 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.824902704 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.821915105 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.823750921 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.829469041 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.830769512 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.827036559 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.825187556 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.822894211 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.825181207 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.825291452 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.823710551 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.823233246 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.823783126 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.82539882 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.82358913 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.825952233 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.824718776 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.82455997 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.826447307 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.823893151 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.827328767 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.832826891 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.825728819 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.823620019 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.823403133 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.824038521 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.824348027 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.82584554 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.83187428 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.826631065 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.834481435 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.832430773 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.828191675 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.826103405 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.828146995 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.833030752 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.825458717 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.826787447 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.824974166 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.827505426 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.826781335 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.829845209 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.824541943 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.831800201 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.82562636 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.824803434 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.831955655 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.826765744 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.825093705 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.826261899 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.829593292 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.826130877 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.825087254 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.824237164 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.826904522 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.832910328 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.8275808 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.825535134 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.82787704 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.826287798 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.828174167 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.829910529 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.826241275 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.82672096 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.826128483 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.827938561 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.825221166 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.825457798 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.8248569 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.827446025 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.827191008 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.828815517 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.834374917 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.826319367 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.829390046 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.827460688 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.828884306 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.827538046 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.825952753 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.825975784 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.825929894 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.828218587 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.827827755 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.82917495 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.830509575 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.827338565 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.830133931 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.830593778 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.827748122 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.830259356 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.836140192 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.833598585 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.827642344 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.827749737 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.830027615 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.832170138 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.826861556 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.828231587 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.828609096 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.831109236 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.828230858 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.828479777 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.827631548 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.831971667 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.844338196 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.827725592 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.828842717 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.830160651 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.83272429 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.828347924 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.828720145 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.829339558 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.830364538 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.831173224 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.834898712 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.82875354 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.836017072 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.829535158 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.830996547 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.832570864 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.833008379 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.837476604 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.832876369 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.829372221 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.828718808 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.834389932 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.845712012 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.829075122 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.837391506 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.858580009 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.832141535 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.831863105 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.830602573 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.830603789 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.829941522 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.831788671 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.829060186 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.829487545 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.828511233 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.829779802 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.831469331 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.838308019 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.832816404 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.828949113 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.829602013 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.831009002 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.832709337 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.829564875 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.830405126 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.829329803 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.829383471 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.828415196 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.829980718 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.832247673 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.840808926 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.841383088 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.828730364 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.830911875 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.829990785 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.834963002 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.833433985 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.841528192 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.837307518 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.831007478 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.829632932 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.833260666 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.830283973 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.831253496 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.832603919 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.831713772 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.831636366 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.830687059 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.841893344 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.839032172 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.836258317 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.832202664 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.831194275 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.832007194 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.834824549 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.831052491 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.830477606 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.834018908 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.833242993 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.836245082 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.830315459 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.832359551 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.834790034 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.838148488 seconds)
  done (took 1086.238207344 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.831052699 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.831635595 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.83103377 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.831772084 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.832194978 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.832080507 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.830970412 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.832061663 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.832994125 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.831186531 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.832052699 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.831196657 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.83191266 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.832665201 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.833353241 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.832811737 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.832505611 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.832150097 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.832317758 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.832454351 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.832630968 seconds)
  done (took 40.234707071 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.831619072 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.832845535 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.832544623 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.832406712 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.832357208 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.833629443 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.833613974 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.832059979 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.833330749 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.833208496 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.833473942 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.833438418 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.833580601 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.832879439 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.832894422 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.832566078 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.836068913 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.833249909 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.834309568 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.835123595 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.834223748 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.835136635 seconds)
  done (took 42.097518073 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.83430301 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.835689852 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.835478691 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.834411844 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.834913459 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.834194312 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.835220421 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.835231324 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.833271316 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.836381297 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.836572746 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.835794845 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.842496197 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.841128389 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.837064607 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.833842463 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.98011263 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.835095761 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.834934614 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.835822719 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.833915648 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.841122215 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.835349276 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.835388285 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.835607036 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.834819943 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.834163557 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.834100238 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.83481117 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.838012719 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.838700041 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.834537209 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.835143365 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.838477442 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.836776133 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.837570008 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.839229751 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.835857612 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.835534402 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.834906393 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.845357159 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.858517768 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.836835153 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.842621346 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.836008854 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.835809165 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.839325721 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.844196822 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.8354022 seconds)
  done (took 91.926287021 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.836755044 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.836433923 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.837398654 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.836509601 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.838312732 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.836532264 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.836146047 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.836380062 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.837317667 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.836054084 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.838101807 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.837380114 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.836549444 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.83694504 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.836685424 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.837302829 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.837406942 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.836828246 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.836969544 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.837118363 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.836847254 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.836769883 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.836957363 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.837189093 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.83725316 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.837830781 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.836712453 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.837635345 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.837376203 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.836867841 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.836780181 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.837720459 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.838406353 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.839078563 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.837744651 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.837435083 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.837138955 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.838147047 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.837962427 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.838490371 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.838370655 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.83691729 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.837942775 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.837682369 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.839219052 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.838208077 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.838224675 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.838854013 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.838704634 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.839074261 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.83989692 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.839072071 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.838740027 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.838761651 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.838172539 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.838906264 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.838269228 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.840033481 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.839099325 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.838772631 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.838645846 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.839629773 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.839095132 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.839374731 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.840407552 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.839217131 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.84115866 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.838866114 seconds)
  done (took 126.746159718 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.839514342 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.840144753 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.841048846 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.839867885 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.840185208 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.840234512 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.840292021 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.841076342 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.840894156 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.841138314 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.840271928 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.839823441 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.839744046 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.840237215 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.841215153 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.840638673 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.84126354 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.840111654 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.841361671 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.841164148 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.839899933 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.840249007 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.840927964 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.841363668 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.840640379 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.840840796 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.841286519 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.840456194 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.841790609 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.842184771 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.841645708 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.840397988 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.841819305 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.8416477 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.842049455 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.840750552 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.84234986 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.841886061 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.841896017 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.840941658 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.843503344 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.842038724 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.843390771 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.842852238 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.842103087 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.84393434 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.843651395 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.842592903 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.843174619 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.842376586 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.842044586 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.842883225 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.842018426 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.8411791 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.842623722 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.842690221 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.843038004 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.842930211 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.843474162 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.843632533 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.843868582 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.843529495 seconds)
  done (took 115.950701296 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.843215524 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.842438846 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.842098095 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.842913622 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.84334334 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.843535304 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.843358046 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.842768605 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.843916462 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.84323697 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.842575969 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.843974592 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.845057428 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.843866617 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.842840332 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.84451526 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.843957711 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.844368899 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.844234889 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.843340841 seconds)
  done (took 38.642553121 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.844883995 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.844573153 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.843825271 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.843836701 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.845303468 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.844335675 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.845263107 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.843797995 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.844790148 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.84435767 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.844479006 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.845095854 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.845137138 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.844772047 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.844066445 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.844120491 seconds)
  done (took 31.286150291 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.843398125 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.843973544 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.844557214 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.84494069 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.843839935 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.84447505 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.844577262 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.845962293 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.84520684 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.846033696 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.845455722 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.845648949 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.844581033 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.845068431 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.844006678 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.845763289 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.846233825 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.846077719 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.845357809 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.8455536 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.846181057 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.845266809 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.846143692 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.846969287 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.845461726 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.846713065 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.846956788 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.847069563 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.845646195 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.846941362 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.84664928 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.846464129 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.846061666 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.846037003 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.847168936 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.846285159 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.846326291 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.846289646 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.84620272 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.847428046 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.845801908 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.846370931 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.845738378 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.845573533 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.84723416 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.848160742 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.847345722 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.851259394 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.847775126 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.846739839 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.846927168 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.847228294 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.847978478 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.847117633 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.847146741 seconds)
  done (took 103.312701168 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.847043309 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.847489697 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.847790569 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.848731769 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.848542218 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.847369049 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.847714744 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.847790399 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.847857487 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.847850643 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.84728129 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.84795385 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.848591648 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.847706574 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.849256174 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.84830443 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.848828869 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.849867196 seconds)
  done (took 35.043849297 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.849761437 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.847977042 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.848595087 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.84780638 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.849355372 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.848913302 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.847250308 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.847570663 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.849436874 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.848713812 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.848533166 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.849234173 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.849708246 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.848728217 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.849447701 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.849149318 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.850573614 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.849218385 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.849411989 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.849202834 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.848899716 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.849429126 seconds)
  done (took 42.456326384 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.850153602 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.850005657 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.864556914 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.870804254 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.870107131 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.883955194 seconds)
  done (took 12.968891426 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849920044 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849919358 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.85076558 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84967069 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851463355 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850411009 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849673398 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849615283 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849998403 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850103463 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849886067 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850995917 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851059371 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851177376 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849873025 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850411861 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849361703 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850546094 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850677882 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850630337 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851778329 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850895984 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851380563 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851644039 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852118087 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85245209 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851940888 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85464893 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852423209 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852384532 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851699382 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851282717 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851957246 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851432328 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850651214 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851249677 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852067646 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851960056 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852607256 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851600384 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.85145216 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852151872 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85308469 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851413795 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852604972 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852875266 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853397733 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85269254 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851999752 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853627991 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853927621 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853313362 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852565969 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8511166 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853366488 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854214197 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85377408 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853973892 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854259351 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855252946 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853411029 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854276169 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853955861 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854353121 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854472395 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854162206 seconds)
  done (took 124.012730992 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854349895 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.853254471 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852758615 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853161954 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853130729 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853723342 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853306709 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853979112 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853459259 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8533705 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852986341 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854017383 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854146243 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853998633 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854761482 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854296846 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854246033 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854235264 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854589587 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853574216 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853994889 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855112978 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854230952 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854789409 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853680231 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854681894 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854544957 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855298628 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8553995 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854320844 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854265532 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855771426 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855743676 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.855218754 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857012842 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856916773 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855195174 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856607609 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855710548 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856222758 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857514354 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855428697 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855834577 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856057381 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855771299 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855070372 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856264249 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855948952 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85663792 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85690737 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85767275 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85682502 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857480339 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856045816 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856938727 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856766111 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856743955 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855851563 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857703431 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857227488 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856638463 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855619154 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856247907 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856661497 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857778896 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856901761 seconds)
  done (took 124.23655058 seconds)
done (took 2531.270313452 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.88776561 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.880641254 seconds)
  done (took 15.554563724 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.020452628 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.971702054 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.857111492 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.912380955 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.857414003 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.880043831 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.882047953 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.858843006 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.858550949 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.85818647 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.858345144 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.043520033 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.858419286 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.858432223 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.858125375 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.952774549 seconds)
  done (took 52.182144487 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.860009474 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.864546374 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.872407436 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.866657686 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.863144977 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.874141578 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.893639509 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.866620136 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.896988576 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.875000617 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.931715041 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.874888157 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.862876303 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.911908238 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.878491974 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.877843765 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.954785519 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.93875018 seconds)
  done (took 35.752272581 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.940116148 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.886389485 seconds)
  done (took 10.622942039 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.896028908 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.892638405 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.947734037 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.876356002 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.877540478 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.893388614 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.899108218 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.894146691 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.861598639 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.876709397 seconds)
  done (took 70.708724696 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.869250015 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.868455888 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.864709458 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.862493302 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.860898773 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.866907814 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.864238254 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.866935194 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.520209434 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.901091897 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.872493629 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.869983513 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.865088327 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.864762413 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.864086776 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.886835779 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.971434405 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.86256559 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.863118215 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.870451078 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.86527475 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.931691863 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.879285286 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.867305535 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.895005688 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.520583815 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.876084721 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.87157282 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.999663259 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.863649622 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.865377327 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.051806791 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.866452403 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.313785113 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.137583115 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.871426185 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.878312292 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.872906715 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.863809414 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.991397513 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.866244712 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.871824164 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.801624454 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.117082698 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.954045609 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.909273181 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.172706343 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.882335928 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.865746439 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.89438876 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.867266074 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.865556799 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.87954301 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.380353435 seconds)
  done (took 132.541781988 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.865366768 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.210689826 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.030540508 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.866337363 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.147421523 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.071241604 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.867774854 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.912588812 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.867423312 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.094157759 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.118996373 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.970277 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.868469126 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.865037834 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.869226458 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.864750792 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.017813513 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.937094229 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.867548727 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.86490211 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.893470687 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.107240869 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.988665046 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.869828149 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.892101322 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.075632583 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.988255197 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.968897498 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.657983028 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.866287839 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.928484718 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.869589315 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.868864538 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.865291025 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.021365157 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.960624606 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.948721882 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.870456499 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.867143927 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.866551272 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.524775319 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.064323156 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.961332758 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.996770426 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.118814026 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.07183448 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.643137178 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.866076872 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.603003468 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.029280964 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.093923987 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.094692143 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.986513463 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.870767399 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.197557509 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.866495214 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.867066237 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.115686371 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.086746028 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.964676589 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.872341284 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.867789102 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.867253727 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.104891883 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.869010714 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.96274872 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.874170387 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.867626299 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.963607587 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.966482643 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.098738146 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.081153441 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.896956682 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.219044037 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.365190289 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.113367089 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.932641469 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.118755502 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.870331139 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.867116435 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.942716404 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.710005604 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.116466502 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.108784864 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.107669479 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.89765432 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.580062582 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.85987974 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.08454778 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.080569997 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.117561561 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.104372251 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.094686981 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.174370341 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.857441513 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.853979541 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.149672491 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.973147656 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.852132463 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.189975464 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.07518772 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.374627151 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.873763948 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.146830437 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.973214452 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.847583835 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.471162045 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.84290261 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.069121258 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.881834797 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.843102193 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.839560342 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.059602269 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.828493301 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.839926899 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.482234913 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.896301289 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.84141542 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.065181972 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.836135926 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.098903699 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.834359532 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.060694807 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.248438225 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.860282148 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.000659811 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.07359751 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.831015498 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.063906169 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.068054953 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.940855472 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.048801837 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.522866953 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.825120361 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.106080567 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.825370522 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.820550658 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.987397478 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.819906544 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.960387524 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.820927152 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.110818335 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.839089971 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.045094845 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.265799453 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.065528289 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.846335868 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.863804908 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.818057347 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.935028769 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.81435398 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.646151291 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.965472383 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.814202605 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.807291432 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.354660481 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.806256816 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.951070031 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.030520331 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.827096841 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.877242175 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.466367878 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.804451881 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.884184511 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.825659437 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.183783364 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.804804172 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.056735548 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.808783874 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.802824857 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.801984084 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.036201504 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.985397955 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.805645926 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.803756878 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.710005473 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.803116716 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.804084434 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.984750264 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.133099474 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.802408866 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.004136986 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.807152785 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.931882369 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.807141217 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.879769353 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.134426971 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.803416603 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.804389385 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.804314744 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.805331067 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.803138903 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.011923268 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.828530392 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.307505453 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.940233829 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.074929185 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.113117422 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.043366742 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.846668928 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.8056606 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.058430096 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.807081174 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.86588077 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.807143414 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.823943902 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.03102207 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.808318937 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.066471158 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.073858574 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.659919122 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.853017364 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.809052789 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.80562878 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.8045743 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.949499149 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.88967473 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.809103698 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.805336968 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.919847978 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.92701296 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.016674989 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.808250652 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.856384952 seconds)
  done (took 895.72820305 seconds)
done (took 1214.87632867 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.80613813 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.808715042 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.808531187 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.808486043 seconds)
  done (took 28.971451639 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.805506468 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.805781803 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.80603321 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.807836228 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.80645127 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.807739142 seconds)
  done (took 12.577058544 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.893434051 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.809463965 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.809179768 seconds)
  done (took 21.251146202 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.876577447 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.188006948 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.940942413 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.220251837 seconds)
  done (took 9.963970778 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.80740272 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.806926378 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.806556266 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.80734192 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.807769346 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.80813693 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.806567114 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.807481231 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.808295441 seconds)
  done (took 18.005080412 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.895251224 seconds)
done (took 96.4017256 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.985114398 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.798165859 seconds)
    (3/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.061128156 seconds)
    (4/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.120734692 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.94193011 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.550570983 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.97540516 seconds)
    (8/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.88802226 seconds)
    (9/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.894248882 seconds)
    (10/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.056800541 seconds)
    (11/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.614200079 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.182021978 seconds)
    (13/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.979103074 seconds)
    (14/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.037114281 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.538164042 seconds)
    (16/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.111779429 seconds)
    (17/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.897838382 seconds)
    (18/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.176665837 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.976272697 seconds)
    (20/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.245671858 seconds)
    (21/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.876778948 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.897000618 seconds)
    (23/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.635669872 seconds)
    (24/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.773435162 seconds)
    (25/309) benchmarking ("sort", BigInt, false)...
    done (took 6.878216812 seconds)
    (26/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.877286136 seconds)
    (27/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.060892119 seconds)
    (28/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.87573401 seconds)
    (29/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.40099962 seconds)
    (30/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.239668223 seconds)
    (31/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.97679547 seconds)
    (32/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.876142872 seconds)
    (33/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.148503445 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.266780524 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.199015677 seconds)
    (36/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.984436335 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.760615785 seconds)
    (38/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.171099562 seconds)
    (39/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.231631476 seconds)
    (40/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.130553353 seconds)
    (41/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.186220674 seconds)
    (42/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.038317979 seconds)
    (43/309) benchmarking ("sort", Bool, false)...
    done (took 2.101639578 seconds)
    (44/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.063807482 seconds)
    (45/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.751484951 seconds)
    (46/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.057733791 seconds)
    (47/309) benchmarking ("sort", Int8, false)...
    done (took 4.778046477 seconds)
    (48/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.13776367 seconds)
    (49/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.218078952 seconds)
    (50/309) benchmarking ("sort", Int64, false)...
    done (took 5.549757766 seconds)
    (51/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.033405519 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.136140447 seconds)
    (53/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.8756207 seconds)
    (54/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.124686251 seconds)
    (55/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.894204016 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.206769448 seconds)
    (57/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.947092616 seconds)
    (58/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.378886377 seconds)
    (59/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.955185876 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.959971315 seconds)
    (61/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.875172575 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.599084613 seconds)
    (63/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.712977171 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.014223619 seconds)
    (65/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.877861121 seconds)
    (66/309) benchmarking ("sort", Float64, false)...
    done (took 5.608394424 seconds)
    (67/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.896872344 seconds)
    (68/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.879073643 seconds)
    (69/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.095264837 seconds)
    (70/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.942355751 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.009634392 seconds)
    (72/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.011028321 seconds)
    (73/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.244905104 seconds)
    (74/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.064326522 seconds)
    (75/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.122822109 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.556074837 seconds)
    (77/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.68938971 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.883126595 seconds)
    (79/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.011394279 seconds)
    (80/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.90012626 seconds)
    (81/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.046011162 seconds)
    (82/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.013644413 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.148690005 seconds)
    (84/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.964019801 seconds)
    (85/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.88271139 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.17474305 seconds)
    (87/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.187903988 seconds)
    (88/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.963079776 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.802945673 seconds)
    (90/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.882773417 seconds)
    (91/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.196799942 seconds)
    (92/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.198155285 seconds)
    (93/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.879058985 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.363133706 seconds)
    (95/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.115331272 seconds)
    (96/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.956131655 seconds)
    (97/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.184529896 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.661219285 seconds)
    (99/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.895925187 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.26879381 seconds)
    (101/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.034878762 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.881659453 seconds)
    (103/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.325800666 seconds)
    (104/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.337754943 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.88037892 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.208835575 seconds)
    (107/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.889713716 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.009354586 seconds)
    (109/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.875349297 seconds)
    (110/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.877415339 seconds)
    (111/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.138764083 seconds)
    (112/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.085416245 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.173925598 seconds)
    (114/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.897649946 seconds)
    (115/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.005332149 seconds)
    (116/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.113590437 seconds)
    (117/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.129781761 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.915752788 seconds)
    (119/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.893952096 seconds)
    (120/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.934936182 seconds)
    (121/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.879441518 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.780562649 seconds)
    (123/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.960236899 seconds)
    (124/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.9775612 seconds)
    (125/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.986939671 seconds)
    (126/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.320887152 seconds)
    (127/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.911573418 seconds)
    (128/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.89828085 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.224119427 seconds)
    (130/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.204674717 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.021951836 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.13259437 seconds)
    (133/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.876073967 seconds)
    (134/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.151029207 seconds)
    (135/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.250394613 seconds)
    (136/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.904083782 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.876098795 seconds)
    (138/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.084074487 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 3.083672467 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.293610386 seconds)
    (141/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.832367366 seconds)
    (142/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.882448429 seconds)
    (143/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.94662015 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.981644653 seconds)
    (145/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.11363963 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.227341342 seconds)
    (147/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.943399863 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.857311786 seconds)
    (149/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.898119887 seconds)
    (150/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.878393863 seconds)
    (151/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.189268573 seconds)
    (152/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.233910858 seconds)
    (153/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.865140802 seconds)
    (154/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.92103722 seconds)
    (155/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.880507171 seconds)
    (156/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.053626102 seconds)
    (157/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.957836798 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.85921572 seconds)
    (159/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.965137914 seconds)
    (160/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.881985647 seconds)
    (161/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.030534417 seconds)
    (162/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.317242471 seconds)
    (163/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.408208122 seconds)
    (164/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.749298123 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.123581843 seconds)
    (166/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.439059347 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.890866291 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.883136576 seconds)
    (169/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.230157373 seconds)
    (170/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.884316573 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 7.013381505 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.181054157 seconds)
    (173/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.162947169 seconds)
    (174/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.96517121 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.9877516 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.01523724 seconds)
    (177/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.882104991 seconds)
    (178/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 3.07114617 seconds)
    (179/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.911870903 seconds)
    (180/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.981506959 seconds)
    (181/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.96442524 seconds)
    (182/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.881233309 seconds)
    (183/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 3.427178097 seconds)
    (184/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.888817367 seconds)
    (185/309) benchmarking ("sort", BigFloat, false)...
    done (took 7.418884761 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.887576027 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.105585771 seconds)
    (188/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.338923395 seconds)
    (189/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.030890978 seconds)
    (190/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.911945512 seconds)
    (191/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.212127148 seconds)
    (192/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.896342358 seconds)
    (193/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.000298208 seconds)
    (194/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.9855997 seconds)
    (195/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.886634006 seconds)
    (196/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 3.275135197 seconds)
    (197/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.925274124 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.946568434 seconds)
    (199/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.960056576 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.782054814 seconds)
    (201/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.023021854 seconds)
    (202/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.096728448 seconds)
    (203/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.641310013 seconds)
    (204/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.886901728 seconds)
    (205/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.158235782 seconds)
    (206/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.405502923 seconds)
    (207/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.88882825 seconds)
    (208/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.112032038 seconds)
    (209/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.885602787 seconds)
    (210/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 3.171375249 seconds)
    (211/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.969634821 seconds)
    (212/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.010893212 seconds)
    (213/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.883730622 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.198294087 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.509107765 seconds)
    (216/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.153550847 seconds)
    (217/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.889338593 seconds)
    (218/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.941195246 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.667718947 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.206454798 seconds)
    (221/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.886216116 seconds)
    (222/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.01189626 seconds)
    (223/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.028646655 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.88959167 seconds)
    (225/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.082606686 seconds)
    (226/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.038767559 seconds)
    (227/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.925612526 seconds)
    (228/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.884601437 seconds)
    (229/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.026899729 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.008941174 seconds)
    (231/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.899332967 seconds)
    (232/309) benchmarking ("sort", Float32, false)...
    done (took 5.608148085 seconds)
    (233/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.186922774 seconds)
    (234/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.815165686 seconds)
    (235/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.912982151 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.883827408 seconds)
    (237/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.023064943 seconds)
    (238/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.14080385 seconds)
    (239/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.050947991 seconds)
    (240/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.983499753 seconds)
    (241/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.050039383 seconds)
    (242/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.073010517 seconds)
    (243/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.411976229 seconds)
    (244/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.888385471 seconds)
    (245/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 3.278925322 seconds)
    (246/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.907243272 seconds)
    (247/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.215373821 seconds)
    (248/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.539468954 seconds)
    (249/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.90826755 seconds)
    (250/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.26040299 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.651028837 seconds)
    (252/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.957522774 seconds)
    (253/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.207698004 seconds)
    (254/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.117952305 seconds)
    (255/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.112437406 seconds)
    (256/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.009812777 seconds)
    (257/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.545703417 seconds)
    (258/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.876292069 seconds)
    (259/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.184984153 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.19996775 seconds)
    (261/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.236258713 seconds)
    (262/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.869709437 seconds)
    (263/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 3.304151016 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.161149063 seconds)
    (265/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.958499163 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.989005088 seconds)
    (267/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.250445359 seconds)
    (268/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.014885322 seconds)
    (269/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.870819885 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.266635008 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.890925128 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 2.767472622 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.169828542 seconds)
    (274/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.043513532 seconds)
    (275/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.855029438 seconds)
    (276/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.944777624 seconds)
    (277/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.138549644 seconds)
    (278/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.870648967 seconds)
    (279/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.846498216 seconds)
    (280/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.943736649 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.968548589 seconds)
    (282/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.946355966 seconds)
    (283/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.84791273 seconds)
    (284/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.788458535 seconds)
    (285/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.920742601 seconds)
    (286/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.05799654 seconds)
    (287/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.195012044 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.567165265 seconds)
    (289/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.332578283 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.845034659 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.231333506 seconds)
    (292/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.650888403 seconds)
    (293/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.152130001 seconds)
    (294/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.833597799 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.062650188 seconds)
    (296/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.929708142 seconds)
    (297/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.073748742 seconds)
    (298/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.856638852 seconds)
    (299/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.940189841 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.858702999 seconds)
    (301/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.836452945 seconds)
    (302/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.000191906 seconds)
    (303/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.919570836 seconds)
    (304/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.936664643 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.77324176 seconds)
    (306/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.835098805 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.424667918 seconds)
    (308/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.830224744 seconds)
    (309/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.847766321 seconds)
  done (took 1004.212598504 seconds)
done (took 1006.073992015 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.025857334 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.841696774 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.823777315 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.84507068 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.936394763 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.864933181 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.834499423 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.826058183 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.871779138 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.872179429 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.820324082 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.861907683 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.823115681 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.821939676 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.821493562 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.838848282 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.12021531 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.85276447 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.840595356 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.833953337 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.840649976 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.820912984 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.871771097 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.86211455 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.826974117 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.827905972 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.827580754 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.842759561 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.935698416 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.826167385 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.828779624 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.836409602 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.121640072 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.850634091 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.82122917 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.842380971 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.83725104 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.83507873 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.828432165 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.856007655 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.207734016 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.860971048 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.824343356 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.82379267 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.823992317 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.830006487 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.824527287 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.8330386 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.839328099 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.841082231 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.201462807 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.878089279 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.828637234 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.824368482 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.837665966 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.826144309 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.828213664 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.843380459 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.841932579 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.839056296 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.1066496 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.858814818 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.82592272 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.839823635 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.828110407 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.232581861 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.855759885 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.827794424 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.205096659 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.863860307 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.231823357 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.866798438 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.82049682 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.832071594 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.848743545 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.113412388 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.841657039 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.815996823 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.825806148 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.813549167 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.8282062 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.832319903 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.820114059 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.816362952 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.833263763 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.858721628 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.828907083 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.815923164 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.82714383 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.835467877 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.824957463 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.8291515 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.819286402 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.813105773 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.827760424 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.820823621 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.820739593 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.820402999 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.820931619 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.830469403 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.199008167 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.872218531 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.813150376 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.813662914 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.817263819 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.832671569 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.198518982 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.856096533 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.839791718 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.866789909 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.818357824 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.098919415 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.850246589 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.834503414 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.828723928 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.81886691 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.814500817 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.100485239 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.223835576 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.871713202 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.817301419 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.816640953 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.835077512 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.819464677 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.814710007 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.114844242 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.848856275 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.835226726 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.942138636 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.832102586 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.851254403 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.817045519 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.821679502 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.861090222 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.834008006 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.849529267 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.818803753 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.835591512 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.830245788 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.810094689 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.824506068 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.825944651 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.813344006 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.820602666 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.807103726 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.855660284 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.825306287 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.825559954 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.833375706 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.930004767 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.804421618 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.088484583 seconds)
done (took 287.228267301 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.887697797 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.803582214 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.896720634 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.803043718 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.89996763 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.877770275 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.802006183 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.803234098 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.803484553 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.291153667 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.802879927 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.807551948 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.804949852 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.80320401 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.882658782 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.803372846 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.803345631 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.238895222 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.804451668 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.886667806 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.804044436 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.803493777 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.80373315 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.293281177 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.804307729 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.803293575 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.886306244 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.804273127 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.240347387 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.805164842 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.804983844 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.240919659 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.884707888 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.831531767 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.811533249 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.810211113 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.893329876 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.813539756 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.872854726 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.880730608 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.89917514 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.836724841 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.804808382 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.804868503 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.808612105 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.805578579 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.804220906 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.83651784 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.806359956 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.808968165 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.247742578 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.812740286 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.809740102 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.805624881 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.804343419 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.832893156 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.805777335 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.807127262 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.888517692 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.805730864 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.875676012 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.293051085 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.296831089 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.805200693 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.805524656 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.805289668 seconds)
  done (took 180.853828745 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.871700535 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.882960578 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.870820204 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.811188065 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.854724504 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.873395249 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.810530389 seconds)
  done (took 14.712733451 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.813390164 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.805512768 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.856238197 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.856006973 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.805336564 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.962179343 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.805308616 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.819010989 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.810338506 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.833975006 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.805792163 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.806150416 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.813282144 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.807365458 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.855935633 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.818491276 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.922298079 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.809080858 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.806712531 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.955454312 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.811278637 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.813550817 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.832593684 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.819144702 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.807483128 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.8162907 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.399766727 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.807286379 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.806156105 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.806944261 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.807247398 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.850730833 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.806886548 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.807727582 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.807372099 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.922333285 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.807510306 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.807873148 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.807881298 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.807950334 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.807871596 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.808180581 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.807898917 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.807263679 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.806867739 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.830931715 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.807312904 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.807547976 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.807206855 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.80798869 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.834044271 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.80715683 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.808157761 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.815571169 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.851685364 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.815221116 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.808017305 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.807660825 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.807915624 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.807752912 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.957606403 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.85900928 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.80882818 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.85848704 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.808346531 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.80891985 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.808266793 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.809029722 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.89821783 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.808416052 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.860258542 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.808385663 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.967794071 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.833531119 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.8095333 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.812740596 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.813314546 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.809140572 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.808446628 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.818358773 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.808432777 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.812467976 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.817933284 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.814889544 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.809183006 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.923213334 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.950714076 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.809349442 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.811915493 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.818044706 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.809777055 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.854480519 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.809126749 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.810970741 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.866491167 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.926284439 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.838290008 seconds)
  done (took 199.782685412 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.817922695 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.819222067 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.811884717 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.826493438 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.812018837 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.811917914 seconds)
  done (took 12.642052011 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.815309431 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.814509484 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.810129423 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.811521865 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.810843609 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.8106705 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.811013264 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.814859682 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.814461412 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.811119799 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.810028826 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.811794605 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.811355868 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.81056994 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.811021018 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.811414067 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.811534773 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.811151494 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.81083525 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.811697493 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.061820037 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.811562042 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.812104567 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.81494472 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.816219532 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.810740937 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.826257126 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.811560073 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.811614546 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.820983316 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.816408693 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.812539235 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.814785211 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.819664727 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.816446951 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.815793199 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.815556733 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.812589237 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.811702837 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.812880004 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.813493852 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.8128385 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.812676818 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.813519542 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.816079252 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.819586336 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.816915239 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.825938681 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.812698369 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.813692532 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.813803596 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.813198874 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.813024396 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.813002766 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.817252494 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.820891155 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.817068984 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.814191648 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.813305321 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.816624803 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.817395971 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.813332831 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.81617956 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.817758958 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.820459967 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.814218487 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.816991701 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.817342655 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.813731428 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.812588807 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.814512056 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.813592132 seconds)
  done (took 133.624393692 seconds)
done (took 543.365813045 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.153880692 seconds)
  done (took 8.898559619 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.879249034 seconds)
  done (took 8.736929319 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.122596172 seconds)
  done (took 9.923887937 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.886942355 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.902518412 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.879345139 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.86986294 seconds)
  done (took 29.35212549 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.945742895 seconds)
  done (took 8.74490533 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.885865798 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.890984315 seconds)
  done (took 15.920340779 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.954306894 seconds)
  done (took 8.762343222 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.314561785 seconds)
  done (took 9.117517009 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.877439406 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.878204143 seconds)
  done (took 15.577629586 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.874848749 seconds)
  done (took 8.67637082 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.031276724 seconds)
  done (took 9.938950395 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.892134265 seconds)
  done (took 8.763219129 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.927370412 seconds)
  done (took 8.72927599 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.056929552 seconds)
  done (took 9.858823097 seconds)
done (took 162.746054165 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.889029256 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.87065253 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.87603173 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.870660804 seconds)
  done (took 29.308019313 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.906179637 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.904292081 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.904928441 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.916333714 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.907262723 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.903997199 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.897973831 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.897063996 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.916606277 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.90790178 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.906658429 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.909024338 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.904833461 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.898169593 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.90823985 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.90819004 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.91686054 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.907213073 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.89876007 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.908174849 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.874038131 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.916777234 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.908700318 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.873584988 seconds)
  done (took 47.504141895 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.063527715 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.945301955 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.028635449 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.926736528 seconds)
  done (took 9.766939406 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.925016311 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.927159198 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.937529588 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.975627858 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.999909334 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.936085978 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.899260897 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.894233326 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.881352913 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.926420114 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.001689364 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.921119268 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.011190545 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.873497557 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.055173236 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.874061479 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.875354006 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.925398343 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.97658 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.989380488 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.87414164 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.925569151 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.928163571 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.92109048 seconds)
  done (took 48.25860423 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.87481428 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.883062714 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.881381046 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.87612508 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.876084548 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.875954478 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.882690172 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.877516054 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.897324232 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.877709949 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.874879637 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.876434184 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.883067529 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.876445914 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.876244864 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.889716344 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.890035737 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.876409906 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.880288305 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.882974379 seconds)
  done (took 39.4131733 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.874697278 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.721198905 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.221088485 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.127953502 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.874490993 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.87431968 seconds)
  done (took 31.499863954 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.889767068 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.883257046 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.878742508 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.932969956 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.021978939 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.887963048 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.877796221 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.888299334 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.924790633 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.946809262 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.900169029 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.905206655 seconds)
  done (took 24.742897097 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.876831341 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.88016146 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.879128595 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.89200489 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.888538538 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.885818558 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.884926926 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.875529605 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.892102423 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.897127827 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.88567142 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.890844071 seconds)
  done (took 44.437975666 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953936141 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.751511387 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.337746713 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33678009 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.399414034 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.078886812 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.877325241 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.96164942 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.877579781 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.146803347 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.192323599 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10945266 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.161963304 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.60782723 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.013210618 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.399668056 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.205442503 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.139862324 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.947153733 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.58202392 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016408183 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.381458157 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.646108687 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.020263326 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.123914565 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.044935537 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.185418555 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.869901963 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968920017 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.923775584 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925656033 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.921114947 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.192666369 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042433166 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990958644 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926122049 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.332505761 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.626378652 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.932846731 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.541972378 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.368461732 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.027727046 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92557792 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921828981 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.847682294 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384744921 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.115711365 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.924128746 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.620659404 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.921623324 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.927263406 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995444298 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.92418641 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.730915884 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.603572924 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.191136314 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.922497793 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925689421 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.476739301 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.916707278 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.532144067 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.961266693 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.008107047 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.534429654 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.366450107 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.071986744 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.923037082 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.923728806 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849032666 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.530384709 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.025612524 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.058807621 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.940677582 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.563329702 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.205868816 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.284835248 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.962082474 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.202348061 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.659574435 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.960605594 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141000696 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.873277189 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.853285486 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.757382778 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.850210047 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.143973819 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956260948 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.518213135 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961144869 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.006650329 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.929378846 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938417859 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925485077 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.138138399 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.819662823 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925193611 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.176638715 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.167162668 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941270123 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.009981731 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851807465 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.926051688 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172311913 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.127689949 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.134526448 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.50443268 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008274405 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.814959672 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.045782016 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.795942442 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.038756774 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.1910739 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.98008512 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.909791743 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031661678 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.874382966 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186672905 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.839572974 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.133105714 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.241007879 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.148264776 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.264914111 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.171596631 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988214179 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.92546402 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.92661805 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.603075577 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.524136839 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.14155987 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.940384644 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37424779 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.038874233 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.927071887 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.860456175 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.59720649 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.239690908 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.99217823 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.140362084 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.828665834 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.309443702 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.85384393 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.064160618 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.92709557 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.140179613 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.564217822 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.0029324 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.175609855 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.118510608 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.221446665 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.042316165 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940577362 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019462497 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943496476 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.311579705 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.280421863 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.928687264 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.930222001 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.594801149 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.97596707 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931998609 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.930734318 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.453198637 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.195782651 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.945926734 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.928681048 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.804157232 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.939308583 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990541363 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.931720423 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.931628311 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.452646173 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.435329514 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.934048375 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.598370051 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.144467624 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932292409 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.535560028 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.092832993 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.941450288 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.190667019 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.988879865 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.854922974 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.628985671 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.629724229 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.928752599 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.856039229 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.929295238 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931836503 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.934260283 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.118317555 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.200006206 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.978343556 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.594310922 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.022806902 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93455578 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.933917823 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.92868171 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.423292472 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.925094501 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.520613539 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.044857625 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059502802 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.941748616 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.856867595 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.932268743 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.932620203 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.929608971 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.881356757 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977950853 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.593403192 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.121050997 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.178397401 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.336658729 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938916429 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.58464833 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.038542758 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.951557157 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.183633306 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.511913173 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.038142877 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002007258 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.936756493 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.598804867 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.655422738 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.48539051 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220688012 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.241986213 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.270768101 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.384003776 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.255395819 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.019063955 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158267503 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.452290871 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.986010377 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.025180604 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.866660885 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946186693 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.568551905 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.295288979 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942552079 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.148363215 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.215496689 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.242708095 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050263459 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.135842964 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961331874 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.821225816 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.960061347 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.470293708 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949279208 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.284578518 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.119625075 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.015227266 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.181741488 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.998168606 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.933914268 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.272521052 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974251926 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.634677182 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.284674184 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.394335282 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.386190868 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141667752 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.942668032 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.37201525 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.278392248 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.191477766 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.056129229 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.86316389 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.939726494 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.939403584 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.949320493 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.90686785 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.778124733 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.177989835 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939196591 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160336622 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.127735766 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.299833242 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.890212503 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.936716322 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934986693 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186410303 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.671844654 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091015464 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.321742902 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.507159274 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.945592252 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.862317537 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861884145 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.635381188 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.942837406 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.900083352 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.143866585 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.066323345 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.617133564 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381157812 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246440204 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.178652114 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.946999389 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.200086613 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.205007532 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.427943848 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95496949 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.033607612 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.185542121 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.669629005 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.149837544 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.162931751 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.469171059 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.155047024 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.384847076 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.908727485 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.937761694 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.143230213 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.15043509 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.261291783 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094148405 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.646722723 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.946677697 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288444427 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993373639 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.259810002 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.107957211 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.032643793 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944222345 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014198027 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.940548175 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.942800604 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.942449194 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947234759 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.261163989 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.034207579 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.948692719 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012815975 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.920062357 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.494894774 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.945878374 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201973427 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275096251 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.261875934 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.996036977 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.939356949 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.940157315 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863743973 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06696482 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.378368183 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.209579972 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.058864969 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.071726775 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958232778 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.17432994 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.221616251 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.248935342 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.21055719 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.821221411 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.633073865 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.058809666 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.155483027 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943586885 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.141240398 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.156735069 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.239266897 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.505563263 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.151839728 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.131167123 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.211683164 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.299822322 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.941009754 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.52082745 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.951163361 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.338272128 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.972591834 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.236248989 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163313995 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.943225941 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061451611 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.941713194 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.137261554 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.389965251 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.559451326 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.27563075 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.792659937 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.943540221 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.208082075 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.257168738 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239262585 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017331327 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946268791 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.635372665 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073292342 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.773287743 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.155509412 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.941822718 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.144025065 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.650245275 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.944405844 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20597117 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239419093 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.941597883 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.77225788 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945274023 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.944890274 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.155742684 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.161377291 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.1863982 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945284374 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.949560602 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.749152687 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.210512105 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.996365247 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.868474073 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.94415747 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987685471 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.168954048 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.960680128 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.45717593 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.641904727 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223260641 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.84771229 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958887103 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.452425655 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.316083336 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262950201 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.457550404 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.167489599 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.494152068 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.853903874 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.323558848 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.944969526 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.407295626 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.323476115 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.945009988 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.511607937 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054975212 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.205729821 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.265296533 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.963392575 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.618537597 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.962568651 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.159309034 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344257028 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.874082013 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.943944118 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.992579006 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.944010499 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.955357522 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.953491817 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.771794094 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409931471 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.784050053 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.508055738 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.949453715 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.954385856 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.210056737 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.513438489 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056230391 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964105129 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.956845717 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.651575807 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.237857471 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.19089918 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.519887889 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.040989902 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.948838819 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.947052444 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.866333145 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.129538327 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.135849895 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.23189326 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.368761957 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.056740416 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.950254011 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.155186677 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.150412181 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.256292762 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047811168 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.147456174 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061564487 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.889070453 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.65282114 seconds)
  done (took 1690.870953884 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.968539035 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.958855595 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.962017957 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.00291607 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.958914301 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.960951609 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.990389667 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.040011406 seconds)
  done (took 57.71927588 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.949916011 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.240213735 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.954530431 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.951792043 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.955984285 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.95054024 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.109479956 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.96307579 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.954224993 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.955534856 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.951713419 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.951182192 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.24716714 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.975764849 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.951936601 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.350808341 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.954691611 seconds)
  done (took 76.253648554 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.01306982 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.31429238 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.02257674 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.955637967 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.747207466 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.966750237 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.937850447 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.96144783 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.955564288 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.999472212 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.250683704 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.959591889 seconds)
  done (took 90.964459214 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.965120648 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.954254167 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.95450851 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.953846254 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.955327145 seconds)
  done (took 11.670125993 seconds)
done (took 2204.297169267 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.183282859 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.011860513 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.055916796 seconds)
  done (took 5.945694718 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.101606288 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.145879239 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.257299975 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.26333991 seconds)
  done (took 10.653914656 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.262722993 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.318038595 seconds)
  done (took 6.458768049 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.275696143 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.9740168 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.326430431 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.954724317 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.956886623 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.955521044 seconds)
  done (took 22.751104536 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.952321102 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.953353248 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.952755912 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.953228306 seconds)
  done (took 9.690117348 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.953834228 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.667299798 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.958387154 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.970005822 seconds)
  done (took 21.42846795 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.100437624 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.068776627 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.096299478 seconds)
  done (took 8.145388693 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.096528626 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.814805721 seconds)
  done (took 6.789796674 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.091297948 seconds)
  done (took 3.970566173 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.980971092 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.223419324 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.440597714 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.473728288 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.548257921 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.780572953 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.281865156 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.182420148 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.411261883 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.417980506 seconds)
  done (took 25.621314572 seconds)
done (took 137.091828865 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.299280486 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.981322964 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.159572437 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.304869984 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.194894191 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.159065094 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.17795699 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.296612985 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.988228922 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.975798669 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.310329097 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.193681212 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.119666082 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.97622944 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.122673163 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.976607355 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.185126305 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.317744235 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.997285907 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.235024269 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.182338232 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.95686933 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.152775894 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.972796325 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.190679522 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.111962479 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.50116112 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.979444383 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.139089099 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.515766474 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.117293516 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.377806444 seconds)
  done (took 171.050833949 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.958098814 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.957993865 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.959206181 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.958196575 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.503337519 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.956908551 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.958671754 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.957622025 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.401195094 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.39437561 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.958290309 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.494581292 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.958893678 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.95653731 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.956231545 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.956112706 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.574362929 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.958005428 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.956964677 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.957818067 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.958750049 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.335242484 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.958072153 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.348534463 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.564623409 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.959719034 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.959465947 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.959370418 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.957061749 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.957944465 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.959512306 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.958630108 seconds)
  done (took 212.493963757 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.859222046 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.960776463 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.961092155 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.959421461 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.960644371 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.982985446 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.961826131 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.959597988 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.72933293 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.722190946 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.961181824 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.982763648 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.960043584 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.959524882 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.960637292 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.959414116 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.960253374 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.899299669 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.962198348 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.9610117 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.961093613 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.588946621 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.960093281 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.603126342 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.961204923 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.960974911 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.960482109 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.960783188 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.960110075 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.962231089 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.960985718 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.960711816 seconds)
  done (took 223.308825867 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.198708733 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.960097593 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.960295404 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.949724944 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.959320837 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.9589484 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.946946684 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.211914898 seconds)
  done (took 20.033533832 seconds)
done (took 628.774126632 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.323975376 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.168644156 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.143024778 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.991291667 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.212515849 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.030457223 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.985620746 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.047987507 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.819625156 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.059619402 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.619877612 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.008449006 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.723148286 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.017102587 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.108618083 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.044301968 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.531252149 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.636378798 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.125589797 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.041784855 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.162344854 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.901152632 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.066255891 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.85019376 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.633206513 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.955579494 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.017349098 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.53908581 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.999694882 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.143530708 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.648193234 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.262993812 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.996631806 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.980796993 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.038599754 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.02002297 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.208941567 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.995183499 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.106244228 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.693518995 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.05868282 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.722538387 seconds)
  done (took 106.527059984 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.975093703 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.970173133 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.9705633 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.97015549 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.979537475 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.970137347 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.970434696 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.970309969 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.969047566 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.96986281 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.969485605 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.978638706 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.969960025 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.97775973 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.970318565 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.970588687 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.969923853 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.978504733 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.970706402 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.971369648 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.970912076 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.971527534 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.964127005 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.970332056 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.969855462 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.971236457 seconds)
  done (took 53.162467678 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.963810034 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.124269012 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.209164027 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.985051255 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.965968707 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.967369882 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.983414134 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.970042034 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.967959047 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.967396741 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.053643958 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.971987928 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.982855167 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.208945539 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.982293818 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.964274417 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.964011584 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.966366146 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.132669908 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.981886809 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.984852621 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.97036777 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.984494516 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.981444841 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.968285472 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.967249944 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.9698238 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.407373401 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.976675415 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.055051782 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.015219215 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.989741222 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.349997892 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.219771679 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.023903023 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.975633554 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.965462312 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.059804782 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.974762526 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.967759681 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.984855687 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.973771017 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.210022363 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.49599102 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.982594543 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.965892606 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.418878487 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.067816656 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.008352075 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.978748902 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.213234829 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.985104554 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.967647404 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.969200238 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.004403421 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.976718274 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.968794759 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.277788549 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.980503895 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.986899454 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.972540293 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.969333894 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.13933805 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.977054669 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.127893696 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.978067359 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.975216615 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.969675378 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.211371697 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.98541904 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.508702466 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.982648985 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.967241165 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.055756558 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.13300429 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.443587051 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.981490401 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.142094848 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.366699058 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.992796454 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.976932937 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.39722422 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.996935266 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.976714551 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.968940386 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.96938953 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.966793848 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.010633545 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.984877616 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.420585506 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.50914783 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.294406888 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.995322712 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.985802442 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.970012889 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.278358391 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.977099253 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.970306236 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.205222722 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.518028326 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.984169515 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.976610771 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.486211638 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.985273547 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.988474113 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.979035078 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.216770671 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.986994137 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.013401466 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.968614209 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.975851355 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.97441918 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.988797157 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.977684298 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.968665075 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.47826703 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.076246495 seconds)
  done (took 243.709250346 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.970858357 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.970882398 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.969974937 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.971903742 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.969092146 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.970715633 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.970439441 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.9697655 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.970179114 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.968726624 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.969767461 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.968854546 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.972687132 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.973155423 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.976129291 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.971944395 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.575219147 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.968620083 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.971623325 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.970785649 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.620026852 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.976454458 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.970529833 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.971485685 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.971484132 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.97182518 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.974454248 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.974112479 seconds)
  done (took 170.349875123 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.969598861 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.083310447 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.990948342 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.00016688 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.980573945 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.969748262 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.069193912 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.988993934 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.976449604 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.970626103 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.971495082 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.030709437 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.982224951 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.069152121 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.003510518 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.078186846 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.077234803 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.977544117 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.970337993 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.972175345 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.000818149 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.985515385 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.033015313 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.098220667 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.991800277 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.085616668 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.9949665 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.971886672 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.973302969 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.08557483 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.992637915 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.03205713 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.003641947 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.992063838 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.091321403 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.092025775 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.07740404 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.07722884 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.979782217 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.972675023 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.971822782 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.975049091 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.08629357 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.994066368 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.975343752 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.089682213 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.994017517 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.972568835 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.972578562 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.973427307 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.987133594 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.992311517 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.038154913 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.104172131 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.010647167 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.995919913 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.072826235 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.100865516 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.974682503 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.071682493 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.981988761 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.086653658 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.994896126 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.976885769 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.975556701 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.976646752 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.003252873 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.083259502 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.080702497 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.983310865 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.072799346 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.00978421 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.985470482 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.975939787 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.974844484 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.0892227 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.094869209 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.011457593 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.014569394 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.009622276 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.986526463 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.976609007 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.979058072 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.992642804 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.982868057 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.089442329 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.093814557 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.980798293 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.975240101 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.97539072 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.9749615 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.002016384 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.097483551 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.014898249 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.0867086 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.042695416 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.05254388 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.990936308 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.988692756 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.980823828 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.038120581 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.992600954 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.986627428 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.272961425 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.037030214 seconds)
  done (took 213.89022868 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.347656156 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.026710429 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.033819558 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.283201513 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.338658933 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.951946103 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.023691471 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.027392291 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.049013554 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.234148799 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.097186127 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.045678646 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.014705735 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.999244258 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.028906803 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.046014245 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.036761551 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.36755872 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.228741842 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.205186217 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.01769667 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.287096033 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.343587774 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.588906903 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.075739286 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.412029527 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.619915867 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.159817473 seconds)
  done (took 64.799124707 seconds)
done (took 854.323635299 seconds)
SAVING RESULT...
DONE!
