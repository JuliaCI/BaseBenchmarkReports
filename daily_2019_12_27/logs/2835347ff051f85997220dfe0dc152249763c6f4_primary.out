cset: moving following pidspec: 17428
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.403085491 seconds)
loading group "string"... done (took 0.578390589 seconds)
loading group "linalg"... done (took 7.352940837 seconds)
loading group "parallel"... done (took 0.162808156 seconds)
loading group "find"... done (took 1.174433496 seconds)
loading group "tuple"... done (took 1.847420631 seconds)
loading group "dates"... done (took 1.333339126 seconds)
loading group "micro"... done (took 0.222855837 seconds)
loading group "io"... done (took 0.970039449 seconds)
loading group "scalar"... done (took 39.226511365 seconds)
loading group "sparse"... done (took 12.521862573 seconds)
loading group "broadcast"... done (took 1.001848535 seconds)
loading group "union"... done (took 13.00375359 seconds)
loading group "simd"... done (took 4.86142104 seconds)
loading group "random"... done (took 9.398979922 seconds)
loading group "problem"... done (took 1.845907684 seconds)
loading group "array"... done (took 22.55239113 seconds)
loading group "misc"... done (took 1.828622061 seconds)
loading group "sort"... done (took 3.75082878 seconds)
loading group "collection"... done (took 18.464585571 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.522950821 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125733565 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118521181 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.11968852 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147928027 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112465424 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125864896 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086804223 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.81681343 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148943853 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117745514 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.42952838 seconds)
done (took 5.189043777 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176061027 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083909568 seconds)
    (2/2) benchmarking "String"...
    done (took 0.083097869 seconds)
  done (took 1.305287277 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06514376 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122160244 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066494384 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067534227 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067228189 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066707457 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06638223 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06624073 seconds)
  done (took 1.66126062 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073451486 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069321395 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066715545 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068051926 seconds)
  done (took 1.416255355 seconds)
done (took 5.773177894 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.794280291 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.208074855 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187651271 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.413812112 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133600932 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.159659208 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.640618028 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.305631364 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.189393152 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081511052 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10909182 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.329431549 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111284952 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.636765957 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074730277 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090569973 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137355165 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.407934362 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067599909 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081904224 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088691205 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129175077 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.08811013 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074474808 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.145745026 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067860797 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.13703708 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080720808 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066772715 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.213133024 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.1728167 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.65259508 seconds)
  done (took 10.254641127 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09758415 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.09766458 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068764752 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12303544 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100111782 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072056266 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071930816 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06877197 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08807797 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127886831 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088753504 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101407594 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065965079 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068575256 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085402567 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203631026 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081760783 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082004456 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071241767 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075682667 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105722066 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078379352 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077400577 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076814337 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129481788 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.18329916 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09937329 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099901694 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069170961 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082099467 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.118336775 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128679369 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067724359 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067935815 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.127454241 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097411322 seconds)
  done (took 4.622947155 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.007183345 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.143870837 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091335443 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.135571239 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064982321 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.10889599 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066157316 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081379639 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.209424715 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.469107335 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.59286689 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112045954 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10398558 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068028096 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068850333 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.110965825 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066657804 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.501980643 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.095470487 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106605528 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082045603 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070954838 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068609338 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.353366595 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067973155 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063953465 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068869811 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057564304 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126313492 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068355932 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.945634692 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126805151 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066476736 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100903839 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161643686 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089940389 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.275183674 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06920581 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065100589 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064456956 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.152275696 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070655801 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066155801 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084130184 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102909803 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112866643 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065862206 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066956805 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.166141742 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065184971 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079535616 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.631767275 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152290346 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079481306 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.06775077 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066449477 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.260974794 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.091246972 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070956624 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065181388 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.199749715 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132454483 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067774831 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067234753 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068267835 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069611558 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.379536125 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069078544 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.00500342 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070640556 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07990464 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07034685 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07023366 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073491599 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073188831 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087532769 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066528808 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075286078 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.06627396 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066243045 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067174565 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083848641 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.381375077 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06747932 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068342462 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065292726 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063918917 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089148639 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097508753 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067119146 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065884387 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100281397 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068374714 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066479983 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.107211253 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066703785 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083488383 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069776207 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113351113 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066122803 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.190968464 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06597182 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096895583 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070633714 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098766313 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080122167 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070455971 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.420365298 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06782814 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06696123 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.071152168 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068174331 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070018858 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068894318 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.0829307 seconds)
  done (took 21.330236757 seconds)
done (took 38.352673662 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.236141355 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.085241147 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074893795 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074427744 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074614045 seconds)
  done (took 1.778361393 seconds)
done (took 2.992320604 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.12391495 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100130488 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065016447 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097683403 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064448688 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102263455 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10133265 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082411043 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10116667 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064465086 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098149483 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064642364 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064385076 seconds)
  done (took 2.362626072 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084219856 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084880433 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071153822 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083646951 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064371491 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083400165 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082212305 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089535974 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082611463 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072947504 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063961239 seconds)
  done (took 2.069477738 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082467401 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084555344 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069812419 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082574069 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064190255 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082940815 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082784817 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087399529 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08348119 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075826369 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065552167 seconds)
  done (took 2.06068762 seconds)
done (took 7.693990675 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077948739 seconds)
  done (took 1.269520262 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.593635778 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.112983191 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083906416 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.115198829 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.189599285 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118829249 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.272606246 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087205935 seconds)
  done (took 8.952537614 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.089169351 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.08272728 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072920658 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068911269 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071381734 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07092113 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.06875473 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072730999 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068307794 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071660282 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07187829 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069992817 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068234209 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07092109 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071711591 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068330672 seconds)
  done (took 2.422520893 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092527384 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092392125 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07597895 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077199992 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073203603 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071955101 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074051754 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073816275 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070618614 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072293407 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074614525 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073592419 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071691976 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064563638 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073598974 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075151558 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071045474 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073746254 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075009541 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077017391 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076931251 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066114949 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07359437 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075653127 seconds)
  done (took 3.096108035 seconds)
done (took 16.941657708 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114878217 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071884562 seconds)
  done (took 1.385755165 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081198695 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083131764 seconds)
  done (took 1.371950824 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083005247 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066137151 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090776313 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078498202 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066212595 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065844301 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087630101 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066039592 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065835477 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065765207 seconds)
  done (took 1.943718194 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06842329 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.0774337 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071130092 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081664147 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074324301 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064820298 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071524405 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069213694 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080346216 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064324747 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072997065 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084650675 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072895278 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08659771 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074178079 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070606779 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.07291347 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068808268 seconds)
  done (took 2.537800738 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.0653533 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066233512 seconds)
  done (took 1.344216896 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067090502 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06298344 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067121665 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066795361 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063766584 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062348577 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063272856 seconds)
  done (took 1.662801461 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.383695781 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112698779 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.319302024 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072407543 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.084123886 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.262556545 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.068563765 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07210175 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072782862 seconds)
  done (took 2.705300867 seconds)
done (took 14.166313387 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080191044 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087239463 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095782961 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.373832154 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091316899 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066137086 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11361467 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.18905094 seconds)
done (took 2.32138593 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213241907 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.637436712 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.402453428 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.204263387 seconds)
  done (took 2.455712535 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344371183 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090673827 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060863551 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069109556 seconds)
  done (took 1.788713216 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06647015 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069737895 seconds)
  done (took 1.357247023 seconds)
done (took 7.038923853 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066605742 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066712885 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063261213 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066266443 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.065793273 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065490464 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068366471 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068313727 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.067794778 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.086143799 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.06997609 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069468776 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065494451 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065377426 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068006591 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065726769 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065444764 seconds)
    (18/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065429512 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065498574 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068016252 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065688348 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065632642 seconds)
    (23/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067804869 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.073531094 seconds)
  done (took 2.889152989 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084699184 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066834468 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071943529 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071043479 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069206991 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070531135 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07113283 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06567642 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071227305 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067788076 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069105163 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069095359 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068332235 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069926992 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068160144 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068923142 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070883421 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065844641 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068477266 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070137248 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070725947 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065761143 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069181719 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070959236 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069164847 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071048397 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068757866 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065651506 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070865856 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069313463 seconds)
  done (took 3.323136972 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068859087 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063485247 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064223409 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070935371 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062966475 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064161251 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06292018 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063969559 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063627636 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063284366 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064717033 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063033134 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063388719 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06401401 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064450604 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067339375 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079038792 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063638528 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063241879 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063928577 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067196636 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063770931 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063443236 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062991678 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063350194 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063215606 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064022525 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063229767 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063797005 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063518664 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066414262 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067438728 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063751584 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070646907 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06720474 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06310009 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067223768 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062901034 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064044556 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063070508 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063046767 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063368696 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064019839 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071264897 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063249148 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064821277 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063491917 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06453392 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.175007924 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065919005 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062873623 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063512277 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066224903 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064463985 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067544946 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062635327 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064289804 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062843798 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064358067 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063100595 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062893023 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062572806 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065631271 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063593463 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077814186 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069740821 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063030664 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064783989 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06423942 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065642546 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064761957 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077503776 seconds)
  done (took 6.036500835 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089492803 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086155684 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065389667 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065137536 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061747492 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063573903 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069699542 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064280845 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065187093 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081751682 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063873176 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064613699 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06479478 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067549372 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064030302 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064842689 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072331103 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061307915 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063462262 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06704686 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064224839 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068855621 seconds)
  done (took 2.7405797 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.155352497 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06995838 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10609571 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075146565 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069669168 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074974387 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069567798 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069757257 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069839886 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067289358 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067468029 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069770773 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069855597 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067542181 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066851786 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067366904 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070000681 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067312178 seconds)
  done (took 2.610604126 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077361628 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065759666 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086526088 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06591956 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065663149 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067932499 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070236971 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074087495 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068354842 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065418051 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073597854 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068145223 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067812693 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065560047 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068340125 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065383723 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068387259 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066012855 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073679249 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070271115 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070011437 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074150234 seconds)
  done (took 2.777335508 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079145726 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06854818 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081108584 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068174866 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06200365 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064316474 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069959172 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065815076 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069533717 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067727641 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065412471 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063880387 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068833046 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065169738 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068191634 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064916152 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067865699 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065484518 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067764188 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06139772 seconds)
  done (took 2.595735576 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088025361 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068554123 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067525878 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075490457 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067978998 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067659685 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075082193 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067482988 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067519018 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088267107 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067390612 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067275546 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075052207 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071587712 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067092146 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074604197 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074288938 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074415772 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06711639 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067063726 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088762145 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067333071 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074697977 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067495074 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067867962 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06747773 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067596831 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071577384 seconds)
  done (took 3.25334874 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067227577 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065888943 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063391612 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063595286 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063604976 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06318671 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063731454 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063705547 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066220155 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063732359 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065751709 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065936833 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066282347 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066241181 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065531137 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066300083 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065978085 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063373231 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064127657 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063400386 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066131641 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065622218 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.0662339 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063501594 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062908331 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065750511 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06361056 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063194388 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065611748 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062943918 seconds)
  done (took 3.187454678 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075653815 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073787395 seconds)
  done (took 1.395800781 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063802018 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080226754 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063635075 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069600465 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07059293 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066774284 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073164618 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068922348 seconds)
  done (took 1.799581018 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08219399 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077694564 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067328353 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.082335512 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080460597 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085754629 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.139092949 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068876597 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074846302 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066347478 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082702749 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067622474 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075204649 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069061611 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074309066 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075089986 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065622522 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073844124 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06897222 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064634804 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067342073 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074950408 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068784274 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061339199 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067465968 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.08906689 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077333857 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065996074 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069311565 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073951676 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072161301 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059998745 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066285543 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066353209 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064166213 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076486371 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080610424 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068980058 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075294981 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067092284 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075789871 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061112449 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070860596 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072751195 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076438245 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066817057 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066323807 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06068576 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064267092 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068418128 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061343179 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068541254 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060671037 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073088449 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070378581 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076692262 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065008126 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067809975 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069105843 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068824186 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072985482 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068612903 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068536896 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066037302 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075884386 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070814407 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075357709 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060991049 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060453089 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06457448 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076757035 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089693959 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072313887 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067234833 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067201133 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064955722 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069555032 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067097742 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071778246 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07286542 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066448991 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071937644 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07383402 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06677856 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069466083 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073638907 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065023886 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069410094 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065087315 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084418824 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066285615 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066108319 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066402604 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079162608 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072268711 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068041856 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066762957 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075970312 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062293108 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068870353 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068407415 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06793058 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076641162 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070609524 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070508061 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074499186 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073140552 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065670604 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068280962 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061958101 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066053734 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06409685 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072872161 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059250983 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068004949 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066327604 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066525906 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073394348 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.0638508 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065104621 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072541221 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071113382 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.189653312 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065558003 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070908867 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068035886 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070722644 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075586576 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066927881 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063674698 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.0639088 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073663476 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068468492 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.073236306 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074172118 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072926619 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064095722 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066827895 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074248083 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.078708782 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069918873 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071067917 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075248852 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070573364 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067946108 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075675487 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071810127 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068536853 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074838511 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.070130919 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063255377 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072112899 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071930118 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067490999 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072581148 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072233266 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071736753 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068694098 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067097317 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075997799 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069969248 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068094439 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068437638 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067427917 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078920545 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070310125 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063332222 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066720466 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077839274 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067034691 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068155806 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068581844 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070974195 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.069510836 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066874205 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068798216 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070375225 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078270763 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072923863 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07033466 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074799001 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080104684 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068721947 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071512038 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068005138 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069924585 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069208868 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077545737 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074538064 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074042223 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071056656 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064317283 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073762956 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076263048 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067563124 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065577032 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067476774 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072078598 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074005003 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072584747 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068804372 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066394331 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0691364 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07123516 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.07115218 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068194253 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067446144 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074411243 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066256238 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075114824 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068874021 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079054957 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071460655 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062903433 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071425828 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066280221 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074682111 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063262455 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066603298 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067908157 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06967069 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067315759 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071325279 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06187629 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075469719 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076008532 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069009882 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068088811 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.067572382 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075293314 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069749963 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072383361 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071419457 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073400425 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077979257 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066794867 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070891996 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.077935695 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067296228 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061281985 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072786068 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065602599 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065366652 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065658061 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064898313 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067919902 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073944265 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072731424 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.188249407 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069963357 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065484914 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066208112 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061871655 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072305309 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071852739 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06875284 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074738476 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069970957 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06986496 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072656354 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06840258 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069636276 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.070543918 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072132902 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069518368 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070779943 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06818926 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.073205779 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068522477 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066588488 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071709988 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069669654 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070279284 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074724907 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.069369499 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069439524 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071380734 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069462656 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069822179 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069457614 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067416697 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072373917 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070223407 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069909471 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071717944 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063100711 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075886181 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068018796 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076337369 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.06921949 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065348357 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075406026 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07114317 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074154438 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.070100646 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068958582 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071020922 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068236553 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072219153 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075886668 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067364414 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079649392 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077079074 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070260611 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071411851 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069891069 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070221953 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067126338 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069354305 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069668389 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069735498 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068692007 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072762605 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068987916 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.0674321 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069005296 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068585353 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066867886 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068300037 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061920962 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067699697 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067897617 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068654695 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077973804 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069120437 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067777146 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067294486 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069182248 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06719863 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064553068 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076223075 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07687418 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068742061 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075051327 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066975732 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068995019 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07973407 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062904061 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066575337 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066187805 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066109671 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075724393 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068161215 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076380953 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066985702 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06708094 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06427728 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068260916 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067120511 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062769731 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066119926 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072064182 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067633956 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067735559 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06868374 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071289037 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06934983 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077511395 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065898457 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067508515 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065993076 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062941084 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064556229 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064084707 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.06784906 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065641418 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063261849 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062792157 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065264408 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066580891 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06656919 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067232646 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066481308 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072035058 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06523421 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067902336 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067472759 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060339513 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.200598595 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066880534 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066745527 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066686813 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070745446 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070467344 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067845515 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076152677 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066258341 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067752841 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06682225 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063865529 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066124939 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066124284 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065539296 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066575078 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068659851 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07516236 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064725708 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071803894 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067225111 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066973573 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073218396 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067858395 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069692911 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073358692 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067763687 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069417353 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075097078 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070424748 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070255816 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067037491 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068266645 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072745597 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066474426 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073655971 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068227659 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06783101 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.06834405 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06528627 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06652841 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068763467 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067775008 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075198175 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069300371 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067815786 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068464488 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06639673 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069796633 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071551401 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074258758 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068597197 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069961378 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061266036 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064117834 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067736793 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06425144 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067814991 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069327591 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072487654 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070498391 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069327785 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06714425 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077973548 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07558695 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071879148 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065759195 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072832785 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069362254 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071136313 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069787509 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068971591 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070521829 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073556263 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070435 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068080617 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075783828 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071986787 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069187756 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070122344 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069336182 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068582054 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063018065 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068725598 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070042008 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073098312 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070486882 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068865056 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079339304 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066382033 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069066834 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071342231 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067143194 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072984334 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063047433 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070081297 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069030889 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068962508 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062867868 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067659934 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066546635 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070448312 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067532754 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06327116 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079421808 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077670496 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071696327 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067718943 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067407262 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062926677 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063161346 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.06755887 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068487865 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068602757 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077000886 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065253896 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066308842 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062395477 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067470136 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070202429 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070796647 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064491582 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062163738 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066297112 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070986342 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072641471 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065865202 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06683233 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070341099 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069250895 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.195102197 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069856284 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063569015 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070522059 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079602913 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06717638 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067915124 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07378022 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074829459 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066891386 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062331967 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06693257 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069881705 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069545278 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070294587 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069872028 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083851469 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072199016 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068565215 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068386546 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071715537 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067868085 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077045516 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070186577 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069659744 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074359582 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070781652 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077496882 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072476886 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076668705 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073521418 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071656299 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06810957 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069772416 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067425002 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068129296 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069329702 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069516578 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07411608 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075972198 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067135628 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078962957 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075760258 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068798449 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063828657 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066155275 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066254958 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.06159909 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067761712 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064351446 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064391525 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065361769 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065399559 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068284092 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072288797 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06720604 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067531119 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067604814 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06356193 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071395203 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071045221 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069504558 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065214854 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068909846 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069097327 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072661639 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071934723 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066154869 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069931227 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070614976 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069488742 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063459121 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075020106 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068137037 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070632845 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06736272 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068496014 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068925002 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07181326 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072876182 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069357324 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070209163 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072227313 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070231848 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065563793 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064889407 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073807523 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065953032 seconds)
  done (took 43.371935878 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101032265 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062772006 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06157649 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061559056 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072621384 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062288677 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061518142 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062790175 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063257199 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064760889 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061589299 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061323683 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069638368 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077159007 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07330482 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066213116 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061655573 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062745816 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061758145 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062359756 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069943993 seconds)
  done (took 2.7330967 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073073391 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.076745534 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074936847 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081678929 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070448282 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069985127 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075018036 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069904217 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07798566 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071697009 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078274953 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070224262 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072048917 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071877299 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072264636 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06988569 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078132914 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070607331 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069735464 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07543409 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069830023 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074638256 seconds)
  done (took 2.926916471 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067095766 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066067032 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.06777333 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060981441 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066370892 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.0613765 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068543354 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063428226 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068916726 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064967326 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065277405 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064919743 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067997674 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061308296 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066753883 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064114988 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106680913 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068995045 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065242091 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066635089 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060914413 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068284958 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060766012 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063173143 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06667558 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070527251 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067726213 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065645851 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06751324 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066734088 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06762656 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065722855 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069368545 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068058706 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066823158 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06664769 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06720667 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067475779 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062787896 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065441121 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068435647 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063535832 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067834716 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068691894 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065333911 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065250238 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069671663 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067534461 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062345092 seconds)
  done (took 4.596237403 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079031194 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108414005 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067138959 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.0903188 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079571694 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072125728 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069518791 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089331745 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063204319 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063846169 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081688363 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078479449 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064850585 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069721662 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072121828 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06530074 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066397044 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064019132 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069264824 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064440775 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068703364 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071634734 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079278657 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077341905 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069062453 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063948757 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064593512 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069537675 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076842182 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069306681 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069655055 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070289168 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080144234 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070557607 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064743954 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067366467 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080763202 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065349032 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067278771 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062484568 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067237418 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069087731 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071866998 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080663711 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064908991 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070134939 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064590812 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063204768 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.07865919 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069139372 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074560687 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.07947667 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069780514 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066151642 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069377667 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080651488 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065249161 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064041868 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068876528 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077096337 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063248079 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069282698 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077699986 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067017084 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072125629 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078300545 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069935245 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068529342 seconds)
  done (took 6.324870831 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075421819 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094733508 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084207834 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082350599 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075419657 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075191182 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075144059 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07528759 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07514168 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080582421 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075365844 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116378745 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.072981478 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078060384 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075592303 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075143775 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076052007 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075156946 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075346872 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075005566 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.07538184 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082476926 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075033321 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082961943 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079510718 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.07104596 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075153918 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075890435 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08232195 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075196782 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086821869 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074767644 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074891022 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082785547 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079654902 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074406995 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066335234 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074688311 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074737141 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07544823 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070552431 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082478916 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074385179 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070424422 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075528716 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074430618 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081838334 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079254323 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077184759 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079362401 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075134336 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082040103 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075106322 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075165937 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082927305 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085185741 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082237873 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082523492 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075288033 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082319329 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082589425 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084781283 seconds)
  done (took 6.195819878 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082132907 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073978325 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082007748 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06126772 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063492076 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071570472 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064008098 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063769157 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073439371 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073527927 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07594489 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071370951 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073969313 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076360993 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071876496 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073775568 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071649686 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071184728 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074001847 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071532221 seconds)
  done (took 2.778383432 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074266875 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083295537 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067085567 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071445534 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068865039 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071006267 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068267937 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069028543 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067470959 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068931783 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07559367 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075612155 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06704267 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071372261 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075617536 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070906974 seconds)
  done (took 2.476259692 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084356479 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072735436 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079970794 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066151923 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066581888 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062289059 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065751908 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061333424 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061789278 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077871743 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064998912 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076218808 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065501326 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064218889 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062822684 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070455477 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062009776 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06293335 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065509038 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078071188 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071073111 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066196194 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070521726 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067604021 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069609738 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072437441 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066158408 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067265735 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064351025 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067714868 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.07031116 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070731012 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064469455 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065013372 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066234912 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063688564 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065620032 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066275475 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072447364 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067112373 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064652931 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069402221 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065943754 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06620412 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061627634 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065946967 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061329045 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067553531 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063562908 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067676301 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065356965 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06803637 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065541297 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071901802 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067996396 seconds)
  done (took 5.050634673 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078372563 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.0698816 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061588734 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063684242 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068969907 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067215154 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069265438 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06664813 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067650946 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063450135 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066737142 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068312266 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067411782 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069258963 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066888219 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068947721 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06125896 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067003777 seconds)
  done (took 2.55491848 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07033966 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066449207 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072398599 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065455925 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065893037 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06804595 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061649739 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064267318 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064190228 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065809213 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065117934 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068426511 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064559922 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068538348 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065485652 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066130167 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067528286 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065976316 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067075381 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063738288 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06977665 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066087764 seconds)
  done (took 2.799868545 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094559724 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08215361 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.140829792 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079902513 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084152004 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071132467 seconds)
  done (took 1.89083916 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091405333 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100070546 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066354282 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068876468 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075192393 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070154832 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069297583 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069941555 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078072519 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075766398 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06974518 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077912176 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077892947 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077136088 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074920633 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075465282 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070167556 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069386432 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06681607 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082554755 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069612134 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077498614 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069603768 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070402473 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070423127 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079230479 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07910157 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076135505 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069580091 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077773117 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074858464 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069511336 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078123941 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075486212 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069043186 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077370377 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069915461 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082748261 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075471257 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076854458 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068261494 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075697383 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077638116 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074171162 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07783978 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070530393 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076975357 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071484141 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07200394 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087828016 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07809163 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079732556 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079778684 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081054227 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080196491 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088041953 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078414048 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079407912 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077395442 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07534455 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077131782 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075658517 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076870711 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07532619 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075433533 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07712229 seconds)
  done (took 6.344047069 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103358802 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067252175 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070132094 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075882829 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077076644 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070238836 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070172448 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069869469 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070404583 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066685737 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107855774 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069860111 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077478152 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0772009 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070088127 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06998066 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070190708 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077200907 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066564018 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085129292 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070066777 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077141719 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07711912 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076669686 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076282203 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075176962 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070136867 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069312168 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069860099 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069939325 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07420754 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069854191 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077524911 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066800765 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077626384 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069875542 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069666597 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074399309 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06961776 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074974377 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077007692 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082964517 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069354468 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069439284 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075586402 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06953649 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069552654 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066515625 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069536894 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066503334 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075797679 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075395143 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075545957 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076760727 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069934171 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070029008 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069919046 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069668386 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069809623 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07556092 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077065208 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070076909 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085583695 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070691904 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070302471 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077802941 seconds)
  done (took 6.220977532 seconds)
done (took 130.095445414 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.192161582 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165050526 seconds)
  done (took 1.691373185 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068937423 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098684674 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077102001 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128964206 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066236221 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099975582 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099475035 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077585112 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066199779 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066467761 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065870264 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068276934 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131327763 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066748117 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066387496 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.06887028 seconds)
  done (took 2.664883778 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099511172 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.162121375 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101770991 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064828323 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099393674 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072821005 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064894223 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075552091 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070915599 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06543873 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073106679 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07023496 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064904601 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070526314 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071147507 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072532402 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065183719 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072732827 seconds)
  done (took 2.787493312 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098505452 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092014116 seconds)
  done (took 1.544223305 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.155432987 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105589973 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.146290964 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.351415256 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.163852341 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.147918192 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.147635363 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.145265744 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116242305 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.138456314 seconds)
  done (took 2.968895083 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099564634 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.154537006 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.265986919 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116750399 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072725478 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09346117 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118099515 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.07773823 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080118053 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079765436 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079183202 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075848719 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098739086 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.0732973 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073535245 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075921419 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103393697 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07276185 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074724761 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076366471 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100720979 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066110438 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073458955 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072993203 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076920599 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.07705321 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065647233 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065567667 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075183107 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074583065 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075751319 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093833952 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076878299 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105411641 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.071029549 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106672417 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076767237 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07368895 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074101891 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073003061 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077539768 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077686655 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072351429 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075856667 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065373992 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076327721 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066314773 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065356977 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077163247 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066871638 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077281729 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076464355 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105774608 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067510865 seconds)
  done (took 5.963315005 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103083851 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10629016 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071836826 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112430185 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102430398 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072273746 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102699974 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095709167 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.104051625 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070625987 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068520449 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070337243 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081849109 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082918069 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115256873 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107236546 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074206753 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071040748 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105713774 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104785402 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06870968 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09673417 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091094139 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103000434 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067665934 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070653125 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068062806 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070026003 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07683623 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078322881 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070347281 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080500162 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084575048 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077838004 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067242441 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068072761 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.0693257 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080791351 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078971792 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078589954 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077298512 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067915025 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068048324 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069459277 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069930563 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067392587 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078611075 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080480194 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078947475 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06911098 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070101448 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068857316 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070790781 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080578024 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077182265 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080662403 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079749171 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06825964 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068148184 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072763984 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080446768 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078968081 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080027227 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069189475 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.0790442 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068322296 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079681345 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084437431 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068464338 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.06974594 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068231613 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069875193 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069488676 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077263142 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077877446 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069667083 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06991408 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068561024 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079721979 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078144579 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067875217 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076310088 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067076266 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068539596 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070112992 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071696473 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07976964 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082276672 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072003726 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070237181 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071372068 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068891512 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068603259 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078041683 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.08016043 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079526736 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079974918 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069447308 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077374624 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07695198 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068963167 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077893171 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067156041 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069106084 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068954019 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076434286 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075505263 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077123903 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.198336996 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069093901 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079701765 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080990736 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068717095 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079153486 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080634874 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079440604 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068912304 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081840208 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069322561 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079750715 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070328474 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080222036 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069556012 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080043244 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068468684 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068848567 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069996864 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080988468 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072646682 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070954279 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071608725 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07069304 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.083415471 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08370363 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070575974 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078683616 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078694254 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070696505 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079256107 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069042662 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080407651 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069952071 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06987235 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066976228 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081210135 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069681393 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068708049 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070109003 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080558266 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069509429 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079557523 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077644711 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068275868 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081166357 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080061084 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077493902 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079727218 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070596676 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06861197 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068198662 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069641359 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078243701 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08120754 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073722305 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070942935 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080529353 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.08370087 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069832304 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.080939906 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079223429 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.07820632 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069219894 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071258014 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080438959 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080483603 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078122424 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077820897 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07816563 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068551511 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077425953 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078160357 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068354762 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085060726 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068092544 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082696127 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078646183 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07710091 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078887371 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080496037 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079614294 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080576431 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083143924 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068512872 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068983886 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079600648 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068776047 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069365176 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078414962 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071567462 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071682152 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.086328076 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.0691366 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079366066 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068147467 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079126837 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066837905 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069127546 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081734431 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067107104 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068781274 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077605228 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068402494 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075968305 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079301177 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076361648 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067076152 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06868753 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208485348 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080142898 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068870139 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069140166 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070861092 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078757472 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078474663 seconds)
  done (took 18.704669164 seconds)
done (took 37.683960727 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.211523504 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154257895 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.183992994 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119533198 seconds)
  done (took 2.125823996 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.117291703 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102156267 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092800713 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065654073 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099402169 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066786901 seconds)
  done (took 1.93306922 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311708002 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212700354 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.189012212 seconds)
  done (took 2.100709954 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.201460081 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189744508 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.420533973 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.263964838 seconds)
  done (took 2.574711672 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144870659 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089022834 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067616694 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084566563 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133353293 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161091771 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100957326 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125658978 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078761285 seconds)
  done (took 2.428362202 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149736335 seconds)
done (took 12.711361641 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.237676426 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.122498869 seconds)
    (3/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.1029951 seconds)
    (4/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.100161187 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.105817652 seconds)
    (6/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080740297 seconds)
    (7/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.209611495 seconds)
    (8/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.252382681 seconds)
    (9/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.115407414 seconds)
    (10/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.086823967 seconds)
    (11/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.232481991 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.085907176 seconds)
    (13/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.079605585 seconds)
    (14/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.194143899 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.08080585 seconds)
    (16/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.155776784 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076244195 seconds)
    (18/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.077731046 seconds)
    (19/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.210695244 seconds)
    (20/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.177620613 seconds)
    (21/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.068595392 seconds)
    (22/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.116026296 seconds)
    (23/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.200961531 seconds)
    (24/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.231808654 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.137850619 seconds)
    (26/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073817609 seconds)
    (27/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.189037204 seconds)
    (28/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.166388094 seconds)
    (29/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.069043494 seconds)
    (30/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069132434 seconds)
    (31/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.205487444 seconds)
    (32/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073291336 seconds)
    (33/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.077713768 seconds)
    (34/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052765403 seconds)
    (35/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082802419 seconds)
    (36/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.089926506 seconds)
    (37/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081646451 seconds)
    (38/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.150135539 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071911105 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.093513551 seconds)
    (41/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091171264 seconds)
    (42/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066852088 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.089829418 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.091820725 seconds)
    (45/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.198078535 seconds)
    (46/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.19310093 seconds)
    (47/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073881934 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098799285 seconds)
    (49/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073942902 seconds)
    (50/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072763436 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.123359679 seconds)
    (52/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080179334 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07328677 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085489172 seconds)
    (55/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076222982 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.096709928 seconds)
    (57/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.224497725 seconds)
    (58/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.112172659 seconds)
    (59/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072990625 seconds)
    (60/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075933609 seconds)
    (61/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076631128 seconds)
    (62/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077515011 seconds)
    (63/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066662997 seconds)
    (64/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072771503 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089956929 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067446842 seconds)
    (67/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074457053 seconds)
    (68/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.067854994 seconds)
    (69/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.065212467 seconds)
    (70/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144607346 seconds)
    (71/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.090853189 seconds)
    (72/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.182959545 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.093129415 seconds)
    (74/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.204850517 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.184348771 seconds)
    (76/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.140123884 seconds)
    (77/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051322376 seconds)
    (78/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.101448911 seconds)
    (79/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.165566533 seconds)
    (80/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.1729981 seconds)
    (81/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.141219734 seconds)
    (82/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.082073149 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.090139486 seconds)
    (84/309) benchmarking ("sort", Float64, false)...
    done (took 0.129290452 seconds)
    (85/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.05107499 seconds)
    (86/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.292023428 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.079845211 seconds)
    (88/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.063925528 seconds)
    (89/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.072488609 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 0.07035614 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.155544609 seconds)
    (92/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.076156639 seconds)
    (93/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.082119094 seconds)
    (94/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.095044081 seconds)
    (95/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.079834499 seconds)
    (96/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.057083038 seconds)
    (97/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.104202361 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.116686551 seconds)
    (99/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.054257313 seconds)
    (100/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.203860986 seconds)
    (101/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.054287774 seconds)
    (102/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.202114493 seconds)
    (103/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.05334183 seconds)
    (104/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.053375795 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.151589177 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.097202398 seconds)
    (107/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.117819703 seconds)
    (108/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.117257916 seconds)
    (109/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.16232843 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.094838135 seconds)
    (111/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.054546255 seconds)
    (112/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.053222286 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.161690266 seconds)
    (114/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.112281177 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075989267 seconds)
    (116/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073937082 seconds)
    (117/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.18066675 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.06907212 seconds)
    (119/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.066207661 seconds)
    (120/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.052868268 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.150012294 seconds)
    (122/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.053512372 seconds)
    (123/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.104224012 seconds)
    (124/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.113694661 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.094064243 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.114269553 seconds)
    (127/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.053203373 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.093657417 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 0.140692554 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076719313 seconds)
    (131/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069955601 seconds)
    (132/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.07394996 seconds)
    (133/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.083692474 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.089583018 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093977256 seconds)
    (136/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.163562371 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.140959597 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.073677106 seconds)
    (139/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.05377317 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074944187 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097282484 seconds)
    (142/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.068905936 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.074892792 seconds)
    (144/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.10358442 seconds)
    (145/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.191042394 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.078558259 seconds)
    (147/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.068455395 seconds)
    (148/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.080046841 seconds)
    (149/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.054865247 seconds)
    (150/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08633967 seconds)
    (151/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.053282283 seconds)
    (152/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.053209121 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067387631 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.105125195 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074933462 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.090162767 seconds)
    (157/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092229815 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067715297 seconds)
    (159/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066345292 seconds)
    (160/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.16087763 seconds)
    (161/309) benchmarking ("sort", Float32, false)...
    done (took 0.134968653 seconds)
    (162/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.06835365 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076759362 seconds)
    (164/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074714829 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067889789 seconds)
    (166/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.076661431 seconds)
    (167/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.406009982 seconds)
    (168/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088167159 seconds)
    (169/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.180086306 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091230248 seconds)
    (171/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051361974 seconds)
    (172/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073099381 seconds)
    (173/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.066045504 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.090468466 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087024418 seconds)
    (176/309) benchmarking ("sort", Int8, false)...
    done (took 0.141099766 seconds)
    (177/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.075482404 seconds)
    (178/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.202933633 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066016026 seconds)
    (180/309) benchmarking ("sort", BigInt, false)...
    done (took 0.187989102 seconds)
    (181/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052647583 seconds)
    (182/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.175396944 seconds)
    (183/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052098174 seconds)
    (184/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052150594 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065429102 seconds)
    (186/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.112223095 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065236003 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066584502 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074190249 seconds)
    (190/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078226559 seconds)
    (191/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075453143 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076494505 seconds)
    (193/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.053965955 seconds)
    (194/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068166692 seconds)
    (195/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.155463779 seconds)
    (196/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136817931 seconds)
    (197/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074430073 seconds)
    (198/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.050436321 seconds)
    (199/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.202924166 seconds)
    (200/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.070235309 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067041174 seconds)
    (202/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.110630414 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089283699 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065036967 seconds)
    (205/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073375552 seconds)
    (206/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.070260606 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067513773 seconds)
    (208/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.078247323 seconds)
    (209/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.064764005 seconds)
    (210/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.069444436 seconds)
    (211/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.070674768 seconds)
    (212/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.120275708 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078361456 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07667548 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.115207984 seconds)
    (216/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.073111677 seconds)
    (217/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.066648635 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.122241044 seconds)
    (219/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.068028619 seconds)
    (220/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.075116798 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.142930631 seconds)
    (222/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.05366161 seconds)
    (223/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.05371055 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074139396 seconds)
    (225/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.055900315 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095085383 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068183699 seconds)
    (228/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.212510734 seconds)
    (229/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072544457 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067275339 seconds)
    (231/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084567032 seconds)
    (232/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072632749 seconds)
    (233/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.06426184 seconds)
    (234/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072412367 seconds)
    (235/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.106003826 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.135847137 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.144239723 seconds)
    (238/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055419683 seconds)
    (239/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070607005 seconds)
    (240/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074373511 seconds)
    (241/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.056052942 seconds)
    (242/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.054234971 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.14515275 seconds)
    (244/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076954735 seconds)
    (245/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.187787456 seconds)
    (246/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.16983136 seconds)
    (247/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.07734106 seconds)
    (248/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068777786 seconds)
    (249/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.054562857 seconds)
    (250/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.053090832 seconds)
    (251/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.065603113 seconds)
    (252/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.179483596 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068236828 seconds)
    (254/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.053719374 seconds)
    (255/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069210227 seconds)
    (256/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.070039726 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074635178 seconds)
    (258/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.064026332 seconds)
    (259/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.053566013 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067298444 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.129491463 seconds)
    (262/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.187735243 seconds)
    (263/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.053257472 seconds)
    (264/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.123656795 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077061067 seconds)
    (266/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.053493356 seconds)
    (267/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.0744175 seconds)
    (268/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070928947 seconds)
    (269/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076518549 seconds)
    (270/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.09085108 seconds)
    (271/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.053534461 seconds)
    (272/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.064365542 seconds)
    (273/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075959101 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.068037153 seconds)
    (275/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.054485393 seconds)
    (276/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.053244529 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092392352 seconds)
    (278/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.068898252 seconds)
    (279/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.053066608 seconds)
    (280/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.054525179 seconds)
    (281/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073836255 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075809086 seconds)
    (283/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.054712399 seconds)
    (284/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.068994782 seconds)
    (285/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.054233606 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066358685 seconds)
    (287/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.066648967 seconds)
    (288/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070147975 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065754868 seconds)
    (290/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054908884 seconds)
    (291/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.053126624 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075512125 seconds)
    (293/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.05460061 seconds)
    (294/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.054963142 seconds)
    (295/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075037891 seconds)
    (296/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.053349081 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074007111 seconds)
    (298/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063555874 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.096223616 seconds)
    (300/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067507528 seconds)
    (301/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.053170248 seconds)
    (302/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.05429323 seconds)
    (303/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.067782307 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073631901 seconds)
    (305/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.070980458 seconds)
    (306/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.069031774 seconds)
    (307/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.055551735 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093686545 seconds)
    (309/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.05355523 seconds)
  done (took 31.654376653 seconds)
done (took 33.054431062 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085242892 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093405177 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074814055 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093831554 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081054343 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076675242 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07316623 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078909292 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080664345 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083287431 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078392028 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054728512 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076973766 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077482592 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.078139174 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095496803 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081854726 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076229424 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07615119 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066959664 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075346473 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068153298 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069858035 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056195497 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080937675 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074346719 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07522966 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076888693 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067931456 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068460727 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071595814 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076347534 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067960637 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081511156 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07442602 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076387236 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078060288 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079151293 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069769055 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068159917 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077165498 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068009063 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075506203 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07641946 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.074679119 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074096925 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076207905 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081157715 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095716154 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06937405 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075181531 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076249538 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076360824 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072833174 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.07025955 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073422505 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071151039 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091250434 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073909601 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067468264 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074303694 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074293351 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071215787 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073580011 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073714624 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075979208 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076385993 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071680192 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075059155 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073495606 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067521828 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075434015 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071534583 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068005038 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07890114 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080067949 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066207012 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073646579 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075337643 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.073757194 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067160163 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070577483 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069173067 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074354752 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070105848 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056053204 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071974987 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074303636 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066930981 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07571144 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074217832 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07539872 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069510075 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078196631 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066991316 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073281313 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068005841 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068118546 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.069402662 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071899189 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067411369 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070361854 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077323882 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068680535 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074220451 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081560316 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067608937 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074450491 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066805199 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067028775 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082479801 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077051724 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067886139 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070864077 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066495522 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075511409 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066542847 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067243589 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067860727 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067482327 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073680156 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065803415 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06865546 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072324138 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07785625 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.0646439 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067759812 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066334951 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063966421 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070424696 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06438012 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064198778 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067954229 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.0636132 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06892534 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067136653 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074285314 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069537526 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.209220675 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06814412 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074055567 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070689091 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071847303 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071653439 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064761406 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059287543 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067747298 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067798728 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067777535 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06552323 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067617284 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065695476 seconds)
done (took 12.709249293 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066609374 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.139858283 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097162455 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095944161 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086682588 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067165939 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076304565 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101585713 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068268723 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101949718 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088122997 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086093824 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114555054 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065163289 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066122348 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070199057 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067099471 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081718346 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.10129318 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086940306 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115430856 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065379188 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092609576 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089501578 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087934821 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.09459129 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068908524 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070073661 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069792393 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102398313 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088602488 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.07005283 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066350161 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098479853 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.094098056 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08393307 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066719154 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083464109 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066511493 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065895846 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067504275 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098872673 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080641286 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081291295 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070268476 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069188772 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067758194 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087028433 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094097732 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082801085 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.090024519 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.105460214 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072080779 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.067977328 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066698591 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.089723462 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.067519632 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.071399332 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068346267 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071157795 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067965239 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070937643 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.082634707 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080599261 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072967271 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.083045186 seconds)
  done (took 6.859535937 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083574397 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090764317 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083822222 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084170811 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066057207 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066626449 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066263233 seconds)
  done (took 2.039023197 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067190576 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088441142 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089155053 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089678487 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082343005 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088298556 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07585163 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066957738 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.087390363 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067985614 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088248046 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101441899 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069796909 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073783294 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090583115 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066552175 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090904249 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066862383 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070259396 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091085213 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068898781 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.0951945 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069819061 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067229841 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081554009 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067512468 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118028797 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073740706 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070489297 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071179348 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06651638 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.108506538 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082636283 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077239731 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068376991 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.0844251 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083745446 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067081674 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085792391 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.078053803 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08298599 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069982383 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.069757589 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066793748 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073571588 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.08004499 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070130927 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069177981 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071592136 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089306485 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070052997 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083297268 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072347366 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.075304555 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070490512 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076291965 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079848562 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070705969 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090133857 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07038912 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088320698 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086321446 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.083747231 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086941757 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071847429 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084430927 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.083830696 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071661383 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070397389 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.072602516 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087121656 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067501728 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071081576 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.080452805 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07089778 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093954562 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093491625 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071029836 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.084208259 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070163988 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069443178 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069104784 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.095548599 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075627808 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068679268 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074063577 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072459041 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067370637 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068386134 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072785147 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065204151 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069201874 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069474054 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069946752 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069305125 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083492918 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069527513 seconds)
  done (took 9.007806694 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068710608 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06861228 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070002151 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068159355 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068420606 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069238353 seconds)
  done (took 1.929872485 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094326344 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069006179 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080298786 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071734169 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105028954 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087612254 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087240516 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078190777 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084352519 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079376959 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087298912 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088888814 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093279715 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07226668 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086906268 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072025321 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087514476 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074957578 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.07836995 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07308617 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086723329 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073036455 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073481556 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082828088 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076757277 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073873974 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.070276315 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082301738 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081684062 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081918959 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.075280287 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.079838725 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074201687 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081224097 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.090985045 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072971748 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073687587 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077952071 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072533018 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076335448 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088596797 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072430265 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074487117 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077192857 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078409989 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070718977 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077237639 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074981021 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.087020324 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077053225 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07762196 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071161089 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.076488746 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076861308 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070906037 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077923908 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077315902 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087033406 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072539881 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070726198 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069123029 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.076980559 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078154196 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075700269 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078660915 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077269163 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07066204 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072103252 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073418853 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071888808 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077615058 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069147203 seconds)
  done (took 7.130972198 seconds)
done (took 28.449743484 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.532502994 seconds)
  done (took 2.012901031 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.620018942 seconds)
  done (took 2.123961971 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.346540152 seconds)
  done (took 7.84515294 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.400919811 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.525138953 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.721357407 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131774431 seconds)
  done (took 3.311967591 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.702962919 seconds)
  done (took 2.209175737 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.214852644 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.202780309 seconds)
  done (took 1.9339835 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.375691297 seconds)
  done (took 1.873010353 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.125646031 seconds)
  done (took 2.626715715 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.260175607 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175489405 seconds)
  done (took 1.943608219 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.473385554 seconds)
  done (took 1.979108784 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.826641846 seconds)
  done (took 6.331337821 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.211001775 seconds)
  done (took 1.760272393 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239850531 seconds)
  done (took 1.745244256 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.703794433 seconds)
  done (took 3.208027783 seconds)
done (took 42.413094336 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080150847 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081510989 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081376094 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079379515 seconds)
  done (took 1.81444831 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077510609 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073454971 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077300482 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072943976 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077659505 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073543626 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.075031774 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076018224 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073372719 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073592097 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073065422 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.074229905 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075414026 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.075287442 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071476514 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075617916 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076440893 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074595634 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075924507 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073259353 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070793289 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075283224 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07580575 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072044723 seconds)
  done (took 3.296286546 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078774267 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073320672 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076167938 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07228577 seconds)
  done (took 1.812550652 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078672028 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095368669 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090609007 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078564701 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092862856 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087375382 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069259527 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069348416 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071325135 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077877795 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068050744 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097173204 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089151331 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078040668 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080011807 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066041001 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068426938 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088188563 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078219238 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078786168 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070433919 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07790901 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068282253 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088613977 seconds)
  done (took 3.416807275 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086727271 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.106102591 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082351301 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089220053 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091449273 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066315144 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.088637554 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091648647 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127411588 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065236963 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071536465 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066122414 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072980538 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065514647 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081458275 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.108160388 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112120421 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069192188 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097258491 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065737515 seconds)
  done (took 3.225087876 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073588663 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070270768 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066574923 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069559901 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07775856 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073355317 seconds)
  done (took 1.953133822 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068752872 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068782007 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068275867 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067428504 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072547935 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068328037 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066070628 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068424583 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067992288 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067917442 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067103173 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066016039 seconds)
  done (took 2.334070422 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.202470016 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069572715 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.06951535 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066147826 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070931539 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067017637 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081350177 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068177122 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.092365967 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066731799 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067160356 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068880717 seconds)
  done (took 2.509120231 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208995562 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0765779 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24038661 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1518583 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111520464 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115785459 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112272876 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114652252 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.14238484 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101198086 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168805223 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16729353 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107759455 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137983168 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089436241 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.101776162 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15443784 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163516474 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105568507 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169746737 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146030967 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129993237 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148777423 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102536767 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10678921 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122112989 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071245626 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080066409 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17090026 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133140597 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144284299 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111685799 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093096859 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177661822 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172912693 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141751585 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14743907 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084755468 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105838831 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.1351786 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201830139 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08841346 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161265377 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108815136 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.21973256 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135294342 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12093013 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121407973 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107297853 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090669743 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147097295 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184422347 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139285375 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088462451 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125522935 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11464122 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114840825 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114160409 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184078662 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163485081 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12973656 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071680461 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10908132 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154918484 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134187754 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109538067 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125913309 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092366261 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137644877 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156182542 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12175855 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145530657 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.117736153 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089562121 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120243097 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141394801 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128105237 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161966807 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125734696 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073725753 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124748095 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102683032 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081547053 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.146589823 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075843636 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177676529 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099669676 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10962289 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12945107 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113698503 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110413241 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16010905 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145326211 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10301518 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065231567 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246686847 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.122476049 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149075298 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087688681 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111183168 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119006591 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077579014 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138522819 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076129676 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125379555 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078417074 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128615317 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131561735 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077991472 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125251471 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105453209 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.102327199 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13363067 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163503777 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088533435 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082330358 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170841307 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12369337 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104954025 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145967269 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157894673 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102881862 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101905539 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150945572 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180650296 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089873496 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164586106 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107365415 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084080139 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088728143 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124616863 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112709239 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.125144058 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082086806 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118799971 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170102021 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075550282 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096627701 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136564209 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080715407 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081951736 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106224982 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10526722 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096276365 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100090214 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103497279 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136497904 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124393202 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105969974 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124065715 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100723713 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316769615 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088808744 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.104216955 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105165367 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070818463 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136461796 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158803548 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080303148 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166307953 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124394804 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118458094 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120615325 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084644105 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142448349 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079353127 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071209375 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145295813 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111540763 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110062489 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.153403763 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116546255 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.12660197 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119458975 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134022199 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132233021 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131486474 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106276629 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08960297 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112032212 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127301067 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073607944 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091839291 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080041389 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106125841 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096329424 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083372406 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142450435 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126410105 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113953711 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117406679 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100073626 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149997427 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076758032 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12894852 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120584971 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096340005 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.154251529 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153602674 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131771828 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099218163 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137674431 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07041716 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074243003 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088352739 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123105404 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082642071 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083241969 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.259238549 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14988067 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131540998 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137776591 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12563445 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121377957 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158044009 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071177926 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118795837 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149991208 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122249788 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105851889 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092000522 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100289113 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144738521 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108183656 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18310239 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117619899 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125345247 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154381039 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101786193 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080391741 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104367565 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137215152 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104015125 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14526464 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10040938 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088957461 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111200694 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074741751 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099747275 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127331948 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119175796 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135704172 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.116502805 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133372468 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078875274 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116654245 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124317505 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122809169 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06464437 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121461337 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163609488 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095454824 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118977203 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15381239 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079381371 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134354998 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176208527 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144894656 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084958528 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251940381 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120498609 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130173555 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121903003 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142312411 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108854742 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138255377 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111098051 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086764262 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088301158 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098653596 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106470475 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096282841 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107391866 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114454829 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096243105 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13278709 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104357725 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111338654 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119243212 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098819117 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091792645 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097707655 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178677762 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120174983 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17261114 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.101121601 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.147292723 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165099093 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074976463 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079317595 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078116989 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140956581 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084998292 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130739386 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.107592411 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11849234 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124862916 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143271744 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096557994 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070810881 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110781343 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133851443 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125347548 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099188609 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10496686 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16673113 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.10188573 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079949202 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114755365 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116512052 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103410158 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172331879 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062053356 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106272057 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0766369 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080819921 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129855353 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295421893 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081495239 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.105249263 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121277801 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112231426 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130578376 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101626699 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109285363 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127850429 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150864893 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129109591 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090616215 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112082193 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128795848 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158152119 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106831856 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09690854 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174179397 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156235105 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.161591025 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08777832 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115020108 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115432242 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11159751 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13910205 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083914783 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165761774 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082784532 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136930542 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103589936 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089313039 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12970831 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108795635 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088662897 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149035521 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118302986 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083182343 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078001244 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118607867 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120586735 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106760757 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075826986 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139212018 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074105589 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133432137 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161123077 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081061137 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107914377 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097408985 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079865592 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106526059 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102081225 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087733491 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099789299 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170444423 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.085779285 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146585597 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129538555 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109701719 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132118817 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100212152 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.637433985 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076242329 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149234615 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113804661 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169255613 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09669886 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113371769 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106685579 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116560779 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135177743 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099181023 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175818498 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124506841 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.110813955 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077792715 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096857291 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098676146 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.083954968 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103127059 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10969241 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110098305 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.088735106 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.109987669 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117887481 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080373398 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092697165 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148350799 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112348803 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135044574 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134281103 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083358667 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113522844 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132255778 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077925657 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.114587684 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143547893 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101463001 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096071888 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.07813685 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.095953225 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150206166 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.071594879 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149814969 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114589148 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.364572059 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117462142 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115994358 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134765018 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110567383 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126368226 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094932072 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.113764324 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115662702 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084323575 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079442316 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108330895 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115795978 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.102557536 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100350124 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.100323711 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156017923 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.074022052 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100874394 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117698766 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145774138 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176355156 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.091385534 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084485878 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119846385 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11553465 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113894414 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122760307 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079731652 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082638204 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082330528 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.079626771 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.11044725 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114992716 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116122414 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112572214 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164645147 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084271527 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.233363253 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096580612 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105849505 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070374465 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079066738 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096903552 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098584512 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10827766 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110924727 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160591764 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096764186 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090821941 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09234573 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074895616 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08400342 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130388899 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110686063 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119630626 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098652707 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062592696 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108015669 seconds)
  done (took 59.127154122 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110619951 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083362975 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.09587433 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.1460547 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.124184785 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203666511 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.154919669 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189637809 seconds)
  done (took 2.782036793 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068701084 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096377179 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103818007 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083707009 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067188597 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069824995 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.235643161 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081812355 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06769289 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099201969 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079227892 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069958224 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.430633415 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066547429 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068506464 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062355042 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068437141 seconds)
  done (took 3.466399789 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.390478674 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.613346217 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.353779505 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072583534 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.437949115 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089504997 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.12907066 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.132492258 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073778976 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537773174 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.397940087 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.125402356 seconds)
  done (took 18.010054036 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076300867 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069554629 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084766158 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084302307 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073206626 seconds)
  done (took 2.043516628 seconds)
done (took 107.350639312 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082850877 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.606052465 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053456493 seconds)
  done (took 2.340210022 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085219245 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088991759 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087844385 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084290925 seconds)
  done (took 2.005742931 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075968208 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078293586 seconds)
  done (took 1.808601978 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.235500935 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.164014758 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.09756045 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083202485 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079884451 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079827452 seconds)
  done (took 1.904465606 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072768824 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075756379 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073246009 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076427764 seconds)
  done (took 1.952085555 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077706578 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052387488 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055119342 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.058125631 seconds)
  done (took 1.899888417 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087905813 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079876484 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.07935425 seconds)
  done (took 1.903033803 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103149228 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.087147605 seconds)
  done (took 1.84498598 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082527161 seconds)
  done (took 1.740265583 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.101216455 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102857317 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132789849 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111919437 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140334729 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110703661 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085166242 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085931107 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.07702955 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087129275 seconds)
  done (took 2.689774321 seconds)
done (took 22.321112494 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080546224 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.361669473 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361614004 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091296817 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668678959 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357401988 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.004247218 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094386152 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115899088 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068533839 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085794799 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650160372 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.991726318 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.316845912 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.979495223 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.413875723 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.663333836 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069151786 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067888244 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068497002 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.98632842 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068370879 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068651165 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069196019 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649348444 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372475224 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069033446 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.408602899 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068873236 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070386033 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355444365 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069221104 seconds)
  done (took 16.406537181 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070436771 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119835008 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07406275 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085726686 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071353754 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070617895 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073506033 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069418858 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12197082 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068255264 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086736312 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067960871 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072889074 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.085277731 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088559277 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069806211 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072629729 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072249805 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07147464 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071250646 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091598448 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.0707832 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071108035 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070434639 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068448256 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081049517 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069517372 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069120981 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068790559 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070583227 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071535688 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069433467 seconds)
  done (took 4.125153966 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115638189 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126579925 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07451849 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104400079 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111659843 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071841237 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143748131 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094186851 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130101739 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071904912 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090156155 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071350469 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.107108474 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072572101 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093057505 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072188189 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072550219 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072475994 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070796877 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070324591 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088043779 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06852318 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068665356 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069567657 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069071071 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082286785 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068574791 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069008637 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068785621 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070598911 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072133047 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07006772 seconds)
  done (took 4.375131727 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07266908 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076334849 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084321852 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084994423 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069665997 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072471401 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073709585 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069786729 seconds)
  done (took 2.275787258 seconds)
done (took 28.84536665 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079820773 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070187616 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073234511 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083337337 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073414664 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079279224 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067445327 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075679295 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07280235 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074101658 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075303641 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068045087 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071373714 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067411611 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07431691 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067916192 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079504442 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072217717 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080299348 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080248408 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070015619 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073872274 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075680806 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078993482 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079522257 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079366582 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078175449 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073468138 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068991688 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070840652 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077372587 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085077902 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069619296 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079697053 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068367941 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067885856 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072014441 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067872326 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079422991 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07739851 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070373618 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076588798 seconds)
  done (took 4.776022756 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088180339 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09383095 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085817821 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062004065 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067220918 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065953868 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089633086 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060502273 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059471877 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088527935 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056064643 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059947396 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065745197 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054394764 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060925744 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056828259 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062319374 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056351555 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060814995 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059762038 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.090017124 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054049713 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077976759 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064124322 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056311268 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062109429 seconds)
  done (took 3.437187238 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075272602 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085799122 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090040275 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131982743 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.107040935 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079772445 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080051827 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095673203 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.089604038 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067464728 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071674766 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093319859 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090279583 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074117594 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067840095 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086854223 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084143684 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.06928168 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074000603 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095210582 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087638213 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086928812 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097186488 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084293454 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067459865 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070644805 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.07224124 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082698605 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073465509 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077911697 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07234527 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072202107 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070416129 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080486656 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07210752 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070154383 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093501339 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078933333 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079734317 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069193878 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076649779 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069620218 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094214352 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128062741 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067770894 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074818249 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072398015 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078708193 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068371817 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090033606 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080389412 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068026513 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071740597 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067539596 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068546805 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081810901 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070716349 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071037167 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078614272 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074581563 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093723726 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073466769 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084645212 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068478032 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076424057 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.0677919 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068794893 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067085561 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097495409 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069940532 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112636475 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071414074 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069601475 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077218005 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076145031 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07475954 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.071580036 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084540457 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079128869 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071959735 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077310468 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071600785 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070837846 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.092403689 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070864475 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069768387 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070219889 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073769158 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070967884 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069266817 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081664737 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067277709 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070606668 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085461198 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067939449 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069075914 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073397426 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072281391 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067394819 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.0788113 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072445516 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069310217 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077454396 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068054479 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070969588 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081030306 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074502415 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066922919 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072198574 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074149035 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068858999 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069862571 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071191413 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069679387 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077028958 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074818419 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072885373 seconds)
  done (took 10.760677668 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165106598 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.157540605 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071545327 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.152362271 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077014231 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079826264 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151785973 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095700699 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068691955 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069112229 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072529483 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114798357 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.110448955 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.12327964 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082782324 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070487457 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086388296 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116264752 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154475054 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147670122 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.085249768 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077630579 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070234513 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069563932 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070760275 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079189307 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086617036 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077318275 seconds)
  done (took 4.496761882 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081220903 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106669375 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075615304 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091618805 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091917946 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068691984 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070592842 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069980694 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.082687358 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07865775 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.07025452 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074458219 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075420779 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071783371 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071386292 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.077036422 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076258177 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069535297 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071686469 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074401088 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079182034 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092694181 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072346417 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067336818 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073107994 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067583986 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064024854 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084632723 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068676835 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.095864576 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066074326 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073454497 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082526481 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06925435 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067970339 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06843961 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068666346 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067932994 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070321966 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06698165 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067220014 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058079941 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068002902 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.081329915 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.078505989 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.059361685 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075827889 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.076543992 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075966514 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06745829 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071462104 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071164656 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.0713169 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07600307 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071965102 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073684516 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069939569 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074996614 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077315926 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068011933 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065265064 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066835303 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073362369 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065648136 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.07697252 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073761263 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066797297 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067776246 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070192455 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.075097723 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068058559 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072362133 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065788945 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070228673 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073072144 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069966874 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069407012 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066914929 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068533918 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068358946 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056190476 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068406724 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053460722 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071825363 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066539118 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067172106 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068351699 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07321114 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080402476 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069954908 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074886383 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069058535 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06773738 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071296691 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06031341 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071133403 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084050604 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083417412 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068383825 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066469742 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081912426 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073275908 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067178278 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056346408 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073246068 seconds)
  done (took 9.291357042 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091095416 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070418025 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085361692 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091947735 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087624651 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074754558 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078304528 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069587045 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.08370173 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074830921 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077784592 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068576339 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078816951 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078191108 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070484043 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080289364 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.076296181 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.089595434 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087221625 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.074015174 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.08104688 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084276711 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.094505551 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.086440733 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084928998 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085960383 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.094807583 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.081970571 seconds)
  done (took 4.000064546 seconds)
done (took 38.426571768 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.748928366 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.930051349 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.746292751 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.110879322 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.919305676 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.768159089 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.944261469 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.739808671 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.948647174 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.779278193 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.950823477 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.923470259 seconds)
done (took 65.191603594 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.82085599 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.87910333 seconds)
    (2/2) benchmarking "String"...
    done (took 1.978647903 seconds)
  done (took 5.538555766 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.965393912 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.364597138 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.985096891 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.738330845 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.745774578 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.058008567 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.542952175 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.247981082 seconds)
  done (took 30.363818409 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.833969929 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.974147786 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.396964662 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.434736701 seconds)
  done (took 15.36827253 seconds)
done (took 62.818877752 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.759923103 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.7431962 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.758963993 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.721100243 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.795143208 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.745957934 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.194235337 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.971110955 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.738981913 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.728027472 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.73903259 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.166020791 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.749018957 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.040100166 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.73556878 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.736440698 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.796682763 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.330810511 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.892849422 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.746570834 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.742698634 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.773949337 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.737583764 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.743914772 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.7631335 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.738784664 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.159832482 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.744185856 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.577375768 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.741596078 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.801599837 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.791479962 seconds)
  done (took 204.085363093 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.739271122 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.708261514 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.787737921 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.748118181 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.059207257 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.92237196 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.85762848 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.202846648 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.746144978 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.771464041 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.913580126 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.744499981 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.94165424 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.732330659 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.768889498 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.741971441 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.927871755 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.965925295 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.777425748 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.913748023 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.745355277 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.807815683 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.772231302 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.922287277 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.757494677 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.847168904 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.743741619 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.747813176 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.934466912 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.892678554 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.775249951 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.759719782 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.934677545 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.614902546 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.747929201 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.753962272 seconds)
  done (took 168.410708716 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.126964484 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.743290932 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.740631208 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.741147472 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.747149647 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.742341484 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.863415895 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.86591578 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.348204396 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.765135026 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.793106159 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.562238143 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.741338047 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.809387929 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.755407713 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.742014046 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.743135223 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.757163781 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.769897829 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.742284181 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.74271475 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.864798635 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.758629267 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.240272529 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.753412883 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.742736371 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.748063798 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.113519966 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.742684553 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.748339481 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.985096129 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.742637702 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.742183927 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.639582453 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.398730581 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.833374094 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.744158936 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.749753561 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.74259788 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.742896642 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.962849267 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.743943303 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.744305854 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.746932743 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.919528338 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.743039355 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.867975587 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.74315464 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.247878437 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.743500117 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.742836236 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.770015028 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.438561437 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.746608373 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.74335244 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.743585385 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.74609576 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.745495509 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.744010426 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.748910884 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.641100466 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.818942779 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.747520851 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.747711061 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.75031176 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.745819331 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.789795696 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.744022107 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.731652612 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.799280976 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.97963712 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.865590366 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.748490284 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.813245219 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.839489659 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.745498984 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.74539502 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.745493587 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.745612314 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.827487 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.745690337 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.865842065 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.753724527 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.746712444 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.797079114 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.814386474 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.745032886 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.746000484 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.639091689 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.751045221 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.746439517 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.060320214 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.812443156 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.746457439 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.745403805 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.745317319 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.867010407 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.866140607 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.544730004 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.749703644 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.651226086 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.753012048 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.886452148 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.74654969 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.929969275 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.75004434 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.82948367 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.751054351 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.748298035 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.745588559 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.779553797 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.747397044 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.806335392 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.747493832 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.118430405 seconds)
  done (took 398.129960395 seconds)
done (took 774.486721516 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.404925679 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.358218797 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.473113544 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.383444581 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.356456871 seconds)
  done (took 13.664013274 seconds)
done (took 15.348411456 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.832844832 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.839025871 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.770238885 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.835602786 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.766198229 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.835632301 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.817222422 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.772495243 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.802337303 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.773073107 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.806555578 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.772199118 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.760155178 seconds)
  done (took 25.070930515 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.988008006 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.992525751 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.823757153 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.979606639 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.796589165 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.996120402 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.910600117 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.898992631 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.902015029 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.765141479 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.760355887 seconds)
  done (took 22.503073365 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.983259014 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.993949398 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.827578448 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.003088373 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.801274007 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.982851445 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.914445229 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.901514944 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.905639928 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.766321794 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.761547371 seconds)
  done (took 22.531438221 seconds)
done (took 71.790974888 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.757016248 seconds)
  done (took 3.446075655 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.782959693 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.936683038 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.762887557 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.761635346 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.758655045 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.758757506 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.76382097 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.757324908 seconds)
  done (took 15.973220319 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.754080912 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.758899423 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.758377544 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.75442412 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.757244703 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.756675355 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.754682852 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.75686555 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.756102984 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.756894855 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.75903781 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.755129346 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.756945876 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.75799482 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.757177972 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.754011377 seconds)
  done (took 29.796349321 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.756474167 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.754881309 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.754542963 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.756757185 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.753240318 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.75558214 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.756980621 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.754720127 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.755502441 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.755500631 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.7560932 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.754759317 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.756268571 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.753754154 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.757026939 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.75560316 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.756395013 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.754792197 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.759595777 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.755831489 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.758156297 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.755695313 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.756819497 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.756507191 seconds)
  done (took 43.83481138 seconds)
done (took 94.737653316 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.670960271 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.152423343 seconds)
  done (took 8.517012154 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.760922838 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.757647216 seconds)
  done (took 5.248120219 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.758072626 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.757637686 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.759595113 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.759812904 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.758291839 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.75949171 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.759067944 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.759774969 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.759332133 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.760752585 seconds)
  done (took 19.285236419 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.760169816 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.760524728 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.756324346 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.761188737 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.759172766 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.757196832 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.760277585 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.760145898 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.760058691 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.758782622 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.760423823 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.757209555 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.759884077 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.758530195 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.759844574 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.758366533 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.75786848 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.757639181 seconds)
  done (took 33.356407644 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.761616427 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.76058894 seconds)
  done (took 5.215896936 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.757565576 seconds)
    (2/7) benchmarking "second"...
    done (took 1.757517912 seconds)
    (3/7) benchmarking "month"...
    done (took 1.758555689 seconds)
    (4/7) benchmarking "year"...
    done (took 1.757081523 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.759076428 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.756733679 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.75803454 seconds)
  done (took 13.999314958 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.761437372 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.920353878 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.990383049 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.420146051 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.762562721 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.764544112 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.683056537 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.763755531 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.766130897 seconds)
  done (took 19.527792384 seconds)
done (took 106.839611032 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.557743937 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.756220561 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.140946383 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.813894606 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.775870874 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.099172274 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.777166492 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.059914679 seconds)
done (took 42.67420003 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.84317287 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.300886837 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.337411824 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.175766659 seconds)
  done (took 12.507991556 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.740552463 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.280741598 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.793863781 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.342481351 seconds)
  done (took 19.873038996 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.123324929 seconds)
    (2/2) benchmarking "read"...
    done (took 2.100398902 seconds)
  done (took 5.921196628 seconds)
done (took 46.838477654 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.762412226 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.763534385 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.758972147 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.761112958 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.76069513 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.759091862 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.761756505 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.764854502 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.763569999 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.761927712 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.762925838 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.764077561 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.760483781 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.759881787 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.762095678 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.760119868 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.760086297 seconds)
    (18/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.760380975 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.760435692 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.765607423 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.759434758 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.762939688 seconds)
    (23/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.764253223 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.761646808 seconds)
  done (took 43.976878911 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.763580272 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.761952103 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.763900347 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.763859435 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.762457508 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.764951949 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.764148762 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.762653593 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.762129838 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.763911004 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.760477024 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.760176618 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.76307885 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.760929857 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.764774249 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.760932226 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.764541926 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.762388605 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.763889134 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.762613482 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.763199471 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.760463026 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.762726362 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.765192744 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.761735095 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.762031673 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.763473135 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.762231961 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.767003249 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.761671425 seconds)
  done (took 54.585260194 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.767875932 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.772472562 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.76590318 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.76414264 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.765978157 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.768156783 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.767793633 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.764818484 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.766141309 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.766464823 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.767496369 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.765683865 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.764383007 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.765735943 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.766410008 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.766310962 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.766105703 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.767414971 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.764152461 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.764733599 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.765630754 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.763568506 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.765361743 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.765347642 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.765561085 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.765128794 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.764029709 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.769294255 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.764692758 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.766580898 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.767420902 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.765515771 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.766687878 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.765458475 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.768636719 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.767421655 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.772660617 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.774709212 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.768023049 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.767838202 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.764559696 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.768619409 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.765791193 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.765885 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.767043962 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.766916174 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.764273066 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.766655265 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.766915619 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.767955242 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.766151211 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.766818207 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.766752812 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.765851404 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.767262313 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.767716943 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.766913859 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.765745257 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.76651594 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.764979111 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.767148748 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.767549353 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.768168319 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.767761335 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.769120554 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.766975292 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.766982465 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.767284353 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.767088455 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.767827597 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.76751371 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.767958565 seconds)
  done (took 128.908240125 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.767134651 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.764917356 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.765599321 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.765028189 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.76513023 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.767035422 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.766394038 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.769667977 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.767937432 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.767181775 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.769167202 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.767514417 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.765539096 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.769147431 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.769715203 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.766011684 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.769865429 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.765995026 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.767600459 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.769069546 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.767971496 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.767481662 seconds)
  done (took 40.582051849 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.7696491 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.768186663 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.766909854 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.769599245 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.768785231 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.768894208 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.771373367 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.771372619 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.76942639 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.766090244 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769854593 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.769518389 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.766554853 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.768352891 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.770358309 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.769752332 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.77168117 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.766567972 seconds)
  done (took 33.546636666 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.767037995 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.767977974 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.76962528 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.766665545 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.766781307 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.770944809 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.768287321 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.772927484 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.771166838 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.769419926 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.773830355 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.772964885 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.773630848 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769611483 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.772215028 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.770355045 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.771762314 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.769000549 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.772907463 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.766540128 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.771080028 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.771785715 seconds)
  done (took 40.651111462 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.771631531 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.773181424 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.769345512 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.768862867 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.771037797 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.773571502 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.772522651 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.768146533 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.772416385 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.772896446 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.769040656 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.771491678 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.768361106 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.770258967 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.769299605 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.770555401 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.772227419 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.770272288 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.771694464 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.768342522 seconds)
  done (took 37.120831357 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.774670306 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.773993191 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.773078733 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.772984677 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.773617858 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.774632074 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.770886118 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.775593125 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.772949847 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.772963986 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.773266246 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.773148659 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.772129501 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.772796308 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.772651687 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.771872097 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.772920295 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.774810409 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.774092014 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.773494707 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.773979846 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.773838014 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.772228507 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.77335708 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.773379625 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.774331478 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.775481188 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.774452571 seconds)
  done (took 51.363627092 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.772995323 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.775665806 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.77095538 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.772528909 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.772635541 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.772859665 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.773457752 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.771223846 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.774692724 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.771609948 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.775872802 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.772882731 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.773632372 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.775944368 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.774616032 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.775009242 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773171052 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.773434617 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.771318247 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.773824452 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.774885231 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.775955715 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.773944774 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.773724978 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.771932517 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.774596061 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.775205508 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.770751104 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.774544367 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.773179443 seconds)
  done (took 54.915710297 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.792424689 seconds)
    (2/2) benchmarking "in"...
    done (took 1.79423813 seconds)
  done (took 5.295819187 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.770356581 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.774168383 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.773884897 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.774921225 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.771932832 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.774208815 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.77638209 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.772122954 seconds)
  done (took 15.895056062 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.775398135 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.776866284 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.774440157 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.779659716 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.777453416 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.77559211 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.782981653 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.774027907 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.779890002 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.776140883 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.78207428 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.78347106 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.78153597 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.778293671 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.777460339 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.776875433 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.776200225 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.777093074 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.778087012 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.776704164 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.777564035 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.778542237 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.780270237 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.775082442 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.780909153 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.786389266 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.781202902 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.776632545 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.776318791 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.781709503 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.776036338 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.775230438 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.778362081 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.776000788 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.7763885 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.779610609 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.783558875 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.778376178 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.782243463 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.779003421 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.778109327 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.774234416 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.77852798 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.778059208 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.779250542 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.777435181 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.77762277 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.773581806 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.778123483 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.781212199 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.781325239 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.776832507 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.773642798 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.782800852 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.779056045 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.7858285 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.778701815 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.782199266 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.787562002 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.788151384 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.789703308 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.785347625 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.780062755 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.778425969 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.789256054 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.801238163 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.785217353 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.776856006 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.776453292 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.778171138 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.785176738 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.790775473 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.787636371 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.7786009 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.779683437 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.77744826 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.780757817 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.779374281 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.786478793 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.781215803 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.779917197 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.780004088 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.788989163 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.800285748 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.779670109 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.781535893 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.780806045 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.780195843 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.782215237 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.791506422 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.78234391 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.780194806 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.781322901 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.7828155 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.782290833 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.783435732 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.780337233 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.781608807 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.777766013 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.780517313 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.781032637 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.783305996 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.790834146 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.78093122 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.781834256 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.787107388 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.780838653 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.779573399 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.787517061 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.780025406 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.781788094 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.781333601 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.787511618 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.778264841 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.783103303 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.789366272 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.782068238 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.784136104 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.782409557 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.78120373 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.790672527 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.806280122 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.782498999 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.782682396 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.788511006 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.792798917 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.782034988 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.786663055 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.782168597 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.779823963 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.77956203 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.783929214 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.782980789 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.785103511 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.784066237 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.783862605 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.78083409 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.781764276 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.783234805 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.782393059 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.784965322 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.784427572 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.784920516 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.785706341 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.783505664 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.784922351 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.789512717 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.783129314 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.784291858 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.784760946 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.78061494 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.782684218 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.784971011 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.783622551 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.78480415 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.784433409 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.78314607 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.785007747 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.78275371 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.783180857 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.783408486 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.78541323 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.787797244 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.784962555 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.787555674 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.783293764 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.782801738 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.784585848 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.785654795 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.784463424 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.784472635 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.782066805 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.786258424 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.791665664 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.784637349 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.786384322 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.786910672 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.784999517 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.785062333 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.785462201 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.787797716 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.794001636 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.785311222 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.791505374 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.784317092 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.787237389 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.785605632 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.786294216 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.78456144 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.786390863 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.788018959 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.791493122 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.797460738 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.795371419 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.787295094 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.788093138 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.786780439 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.789127235 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.790552429 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.786322068 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.786430235 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.786439165 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.785751786 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.787050862 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.786260737 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.787049414 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.785719167 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.785203592 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.785203406 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.786977033 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.78701453 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.789491661 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.788369244 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.784715662 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.786905479 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.787765143 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.786563369 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.785590671 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.787281075 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.786556486 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.787660532 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.788419477 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.79236186 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.783332956 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.78871776 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.788434603 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.786936022 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.786048454 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.788416459 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.789302368 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.788018667 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.793348622 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.786875455 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.788768664 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.796727295 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.787706351 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.787875594 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.790930291 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.787532234 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.786347226 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.791510701 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.795622323 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.787999503 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.789749283 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.790446856 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.787210562 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.790298042 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.794611001 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.785679612 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.790576342 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.789465138 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.793991104 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.786440221 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.792967054 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.788553309 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.791285395 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.793325449 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.789886736 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.79115868 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.792723522 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.790455311 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.791034549 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.78910909 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.791684715 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.798112855 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.794195465 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.789890011 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.794661537 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.792075986 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.792722284 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.790397223 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.791017847 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.789655539 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.802945417 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.798138425 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.7959848 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.791977031 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.790598029 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.793535956 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.791539766 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.794715073 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.790575475 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.791590297 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.789733137 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.790287821 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.788909159 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.792153792 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.790521236 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.790007483 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.79338349 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.793315175 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.790608629 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.79135428 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.792521995 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.791506645 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.790311825 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.791011622 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.791427878 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.793343684 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.792631821 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.79287336 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.792802612 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.797695879 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.793116113 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.793036431 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.791930849 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.792986579 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.791116165 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.793158003 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.792910059 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.794721865 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.799898123 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.796810323 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.801400191 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.794821698 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.800933375 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.794120121 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.795664599 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.799315457 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.7901802 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.790509151 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.79232481 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.793389594 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.799039561 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.792229646 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.793030996 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.796773547 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.794308301 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.793385887 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.793641042 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.794176599 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.792347955 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.793445172 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.800249757 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.794368436 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.795782127 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.795921449 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.790656887 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.792898158 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.79272986 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.792482032 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.795688008 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.794123379 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.794254817 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.79317299 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.794279088 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.793564513 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.794321837 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.79384706 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.790452025 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.794125379 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.799804734 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.794868292 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.797796993 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.792618632 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.801794893 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.795001983 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.801596529 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.794969101 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.794502253 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.797218026 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.795063201 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.798034592 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.796110146 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.797524538 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.795582973 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.796281704 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.79972413 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.797160724 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.796328253 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.795171932 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.795496953 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.794418632 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.803639382 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.817211296 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.79657377 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.798705977 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.792633755 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.797533937 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.80062163 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.796385433 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.796382219 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.798708698 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.805749158 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.802580036 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.796306762 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.797542569 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.79641691 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.796797094 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.795707823 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.79426927 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.795393249 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.796092406 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.797518195 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.797097729 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.800828545 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.797450259 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.798159249 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.797883924 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.797366422 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.807348014 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.797828004 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.798333553 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.79787615 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.797492045 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.798887626 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.798240315 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.797372302 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.79979735 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.798276755 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.799814457 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.806390085 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.804361902 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.801578141 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.799131487 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.799241015 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.799766017 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.800402085 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.800421695 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.798918173 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.799343293 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.799542379 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.799033261 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.799751707 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.798635421 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.799728088 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.798468282 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.798489778 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.801188997 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.804403663 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.799310257 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.796796222 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.800169421 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.798917749 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.79688981 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.799693123 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.805404296 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.801862019 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.808321596 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.807132235 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.803003635 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.799681245 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.801762574 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.806203541 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.798921607 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.8007486 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.799579814 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.801760871 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.80133266 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.802129796 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.803080215 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.805900113 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.800191749 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.801196238 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.80721765 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.802120616 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.801786086 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.80153427 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.804106295 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.80090608 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.799635602 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.801643611 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.800167622 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.80720914 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.803170885 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.802145439 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.802006417 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.798799699 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.802634035 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.805276597 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.801165358 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.801521528 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.798767583 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.800740941 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.800575612 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.801262589 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.798014419 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.800937019 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.80266168 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.804681243 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.811685376 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.798573929 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.804041086 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.802270874 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.801595826 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.802683832 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.801232904 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.79805674 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.799874206 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.801813783 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.802077571 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.802802507 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.806603377 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.802975273 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.803872137 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.804882444 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.802799423 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.805001683 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.811332902 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.808226798 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.799676951 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.802412699 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.803756588 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.805715189 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.803744854 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.803223821 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.804157361 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.807054375 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.803444057 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.803147088 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.802447823 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.806065607 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.8179225 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.803740392 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.802882544 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.803927711 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.807524967 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.804091736 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.801693682 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.805322007 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.809514154 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.807167405 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.8123796 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.804017271 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.810627859 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.804276597 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.80373364 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.807130976 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.806953626 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.811442471 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.807105307 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.804846429 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.805628068 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.80941401 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.819677511 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.80513698 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.813533038 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.833112575 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.806215975 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.806774564 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.806623005 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.806156464 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.80553597 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.807392505 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.806135835 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.805211127 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.805158088 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.805668887 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.805565887 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.810975077 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.807320164 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.805350361 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.807236619 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.805688234 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.807117144 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.803000614 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.806940533 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.805193241 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.806328709 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.806514789 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.806448879 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.806015683 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.818597416 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.815965821 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.806803301 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.806198921 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.80176184 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.810210658 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.809484007 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.816196643 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.812802823 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.807149626 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.806278331 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.808208745 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.806666893 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.803580053 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.807947783 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.807462732 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.808383164 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.805039171 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.818534986 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.816509791 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.811833797 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.80840794 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.808981377 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.807123465 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.808132252 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.807815202 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.807549146 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.808389482 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.808631764 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.811834339 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.806200908 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.807292714 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.810894066 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.81432909 seconds)
  done (took 1070.634545417 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.804309678 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.804031672 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.80479586 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.805229093 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.805635554 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.806843874 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.804303586 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.805445094 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.807253622 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.805601873 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.806324158 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.805742572 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.806797823 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.806493408 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.806665389 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.806196112 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.806212245 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.80607357 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.805621198 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.808250949 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.807606328 seconds)
  done (took 39.667467074 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.809124092 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.809468271 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.807763438 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.809331878 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.807112702 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.80869957 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.806995206 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.809992364 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.810300556 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.808552458 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.811993311 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.809081574 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.806285712 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.807694984 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.806349038 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.809864961 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.810088845 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.810335704 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.809926812 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.807497595 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.810693511 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.807986581 seconds)
  done (took 41.538521595 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.810500949 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.810747091 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.810879163 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.809342984 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.811175957 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.807939946 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.810966794 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.809281141 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.810102772 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.811229521 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.810882474 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.813639003 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.817049561 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.815884688 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.812682579 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.810202318 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.953949107 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.811526655 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.812233888 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.810451842 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.809033394 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.815491385 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.808346606 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.808280657 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.811878858 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.811328912 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.813310317 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.812449393 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.812249435 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.813289113 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.816994622 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.810126485 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.811378829 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.814185644 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.81050216 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.81503966 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.816747686 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.814206359 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.807924141 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.815378456 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.821761454 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.833125365 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.813601591 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.820489411 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.812602887 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.816156664 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.814104007 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.824289638 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.810055657 seconds)
  done (took 90.730436601 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.812856952 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.812145218 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.812344396 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.812304984 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.815814539 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.813473406 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.814560979 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.816744648 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.811662717 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.810913378 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.814491793 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.811477087 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.809384473 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.816181469 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.813045056 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.808481331 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.813574271 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.811190964 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.81332328 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.808958307 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.812166729 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.811865945 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.813875063 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.813491962 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.81397475 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.811408874 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.812954082 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.813969712 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.811126813 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.812993494 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.815248993 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.813933319 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.818107077 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.810894842 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.813716322 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.815405766 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.813807703 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.811129836 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.816377031 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.811909694 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.818030293 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.8185939 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.814050116 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.815645544 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.815031713 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.812704509 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.812065113 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.810887494 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.812426895 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.814553417 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.817612687 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.81314464 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.815744486 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.812257722 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.815642716 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.815438604 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.811955529 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.814860309 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.814604366 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.817353849 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.814727188 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.816706874 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.81445797 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.815691847 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.813945935 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.812964454 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.814672452 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.814008392 seconds)
  done (took 125.079103698 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.816355675 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.816726079 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.81574293 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.815598278 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.816567892 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.81670603 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.817520125 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.818998504 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.814020453 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.815455754 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.818771479 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.81751968 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.819472218 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.817690395 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.818901268 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.818400183 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.81782091 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.820051876 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.82061744 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.821047108 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.819464448 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.818756743 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.820261232 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.817725224 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.819884501 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.818404951 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.820426673 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.816736467 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.818354403 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.817676733 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.817509325 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.818900755 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.819654801 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.81811963 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.819294984 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.818939796 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.820271215 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.817051576 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.819146423 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.818354322 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.818935614 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.81980438 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.818876208 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.819842083 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.820138362 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.817597377 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.819721566 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.818298579 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.820228495 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.819703227 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.819308309 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.818672969 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.820969235 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.819337588 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.81968672 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.81949918 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.819328464 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.820771037 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.820096747 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.819468527 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.820431586 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.817294694 seconds)
  done (took 114.50648391 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.818280989 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.821873984 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.816677174 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.81608479 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.81924917 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.816002954 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.819149623 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.821885161 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.8198622 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.820600565 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.820092256 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.816820184 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.819107012 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.819284798 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.818231093 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.818681305 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.816763113 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.817629103 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.822220032 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.816520689 seconds)
  done (took 38.127376979 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.818193975 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.820909494 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.81889185 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.818120007 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.820484582 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.817480365 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.823224673 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.821158631 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.817533388 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.822001437 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.82202832 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.821266403 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.818240665 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.819284745 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.821386634 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.818235177 seconds)
  done (took 30.870611164 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.818362299 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.822141685 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.823041762 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.821053224 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.819804652 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.818914189 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.823446838 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.821163428 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.818637359 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.820820597 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.821908466 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.82270705 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.822392635 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.824440637 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.821358585 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.823129561 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.819663805 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.819226712 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.822530594 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.825013085 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.820097783 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.819936582 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.823644517 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.821728403 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.821236015 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.823392923 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.820624513 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.822700554 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.821493558 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.824500572 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.820571278 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.822422337 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.821552167 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.821327283 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.825260511 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.820591347 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.825894874 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.823555873 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.82589324 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.825235953 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.822732897 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.820409398 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.82360651 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.824655802 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.822983391 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.825599526 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.822256658 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.821151616 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.820332987 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.820680689 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.823716876 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.823409022 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.824589128 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.82517723 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.824908258 seconds)
  done (took 101.982606083 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.823848818 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.82427304 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.823108916 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.825271595 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.825433283 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.822493596 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.824506496 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.822057149 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.821931597 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.823593367 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.822557528 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.82553787 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.82149047 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.826119449 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.822897302 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.824983127 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.822737346 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.822315602 seconds)
  done (took 34.583194518 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.822125062 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.822411471 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.825434035 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.821820113 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.821535145 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.82556915 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.821088416 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.825156639 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.824727549 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.823512224 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.821467387 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.825706705 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.826136311 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.825971183 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.822648808 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.823009272 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.825967085 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.825726289 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.822758612 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.824381642 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.826413603 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.825347487 seconds)
  done (took 41.887097253 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.825309188 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.827610763 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.841688684 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.84523633 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.848256677 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.860771112 seconds)
  done (took 12.806872543 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824179121 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826853288 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.823086724 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826455494 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827440087 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824577102 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826713064 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825745947 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826284407 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826944014 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824748986 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827278692 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828057989 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827931492 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826683715 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827957736 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822754377 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826858289 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824784284 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827156665 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826044148 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828120771 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824681864 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822133816 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825423428 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822085751 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828986156 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824922484 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825730615 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827792189 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828208354 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825812698 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827450224 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827362846 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826754495 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827386334 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824978817 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829234762 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829825514 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825108916 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.827917141 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826577938 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829188447 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826286438 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827220168 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826544594 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826526328 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827818507 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827611667 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829137391 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830659023 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827823901 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828994317 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829548232 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83064297 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829894435 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827503476 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826403872 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829572045 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826379844 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828042837 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830094254 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826552299 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826465617 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831018735 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827144727 seconds)
  done (took 122.343370099 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827503144 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.82603484 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8274136 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829060181 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828350691 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827982372 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827111495 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828469653 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82800574 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827728212 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83294992 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828891203 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829600573 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827723671 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826023754 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827949762 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825506282 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825946285 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83023 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832577419 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828533095 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830417282 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828431552 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826494987 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828806873 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832615224 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829690135 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829347751 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828730076 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829372624 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828136273 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828711389 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829895781 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.830364373 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830044212 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829167346 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831116239 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830501827 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828069896 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830787563 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832088819 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832617156 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829185685 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829893675 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827885282 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83049455 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830790238 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829354562 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827842422 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831642735 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831204754 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830475691 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829006484 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829317461 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82915762 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829250392 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831500943 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832742314 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833252477 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834079179 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831684928 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827069719 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833746388 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832021198 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830222259 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830993485 seconds)
  done (took 122.51603404 seconds)
done (took 2495.807710411 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.816486086 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.105590771 seconds)
  done (took 15.684551977 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.996930138 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.947564805 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.830057791 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.847247691 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.831403917 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.850570813 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.834787998 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.833576141 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.834894074 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.834171164 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.833360922 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.020878144 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.833383768 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.830907709 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.831088816 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.928558634 seconds)
  done (took 51.688686649 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.834314415 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.838617237 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.844198072 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.841096917 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.838151169 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.856478749 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.868372572 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.836560333 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.897708324 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.850867289 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.953773507 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.8455706 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.831351675 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.902563204 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.84940751 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.848978798 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.930668223 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.912641745 seconds)
  done (took 35.346590587 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.914872889 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.83888225 seconds)
  done (took 10.526520766 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.857642192 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.860754793 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.840554569 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.836091817 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.842618161 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.831051319 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.859601171 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.862658836 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.865274002 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.847676606 seconds)
  done (took 70.271227666 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.840836721 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.838195956 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.839841262 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.83486486 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.830455039 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.833263373 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.836344436 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.830978163 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.530264836 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.876575869 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.845689074 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.842450876 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.836824134 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.837020045 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.834678966 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.860589087 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.962268403 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.836371235 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.834083887 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.842602056 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.838306912 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.892040438 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.851877834 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.836385045 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.866064426 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.529715875 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.847389636 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.84473467 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.958612192 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.834052212 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.837984326 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.841408993 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.840722438 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.229985729 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.134966253 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.837666392 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.847658358 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.846314545 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.836594228 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.9662335 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.840461237 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.842307307 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.781178391 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.107046038 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.947619237 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.884115571 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.221665959 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.84335314 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.838466001 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.869926963 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.841402468 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.841922255 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.853354629 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.343141166 seconds)
  done (took 130.970293591 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.834010348 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.097128738 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.990951739 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.833796012 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.121645124 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.041359378 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.835846357 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.882739691 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.839504011 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.06642826 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.055316557 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.945065398 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.834650277 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.836136194 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.83144295 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.833722261 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.999387018 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.908291921 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.838971312 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.834849937 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.865794366 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.084738259 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.963031761 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.835408465 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.857112322 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.047498693 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.961923042 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.945511605 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.328634796 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.832405653 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.900350703 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.83411611 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.832704633 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.835630256 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.991628594 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.932462686 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.925087954 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.835792313 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.832231121 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.835953115 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.510120178 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.033815019 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.931782404 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.977876195 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.089583212 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.039511297 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.626290526 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.834201507 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.574934309 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.995538844 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.074772853 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.068792446 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.962105939 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.837864146 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.101468735 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.830406775 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.836134238 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.068931859 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.082564113 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.938381721 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.836565778 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.835043753 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.834814004 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.083932743 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.835534953 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.934023625 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.840638103 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.834399722 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.929156615 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.939656909 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.088015702 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.0514664 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.87104976 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.133551049 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.304688181 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.086373003 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.907322091 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.070472761 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.838122736 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.836977806 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.923389418 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.691668717 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.039381573 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.089642858 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.092542927 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.875412528 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.563054331 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.83841392 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.067546103 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.063505049 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.09329184 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.079853217 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.990606385 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.160449557 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.834754713 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.838375023 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.08475356 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.975373402 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.839903183 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.200539199 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.075867546 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.424017713 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.86721154 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.147035093 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.972750019 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.837060936 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.479878392 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.831807889 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.064362212 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.879663884 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.83742934 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.836394751 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.055925884 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.822145465 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.836441629 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.55174242 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.901783448 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.837464138 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.074334578 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.837182091 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.103216494 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.83857446 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.077332318 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.881317317 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.870440152 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.013502802 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.079397065 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.841317757 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.097475376 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.086618954 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.958980804 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.110786902 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.763001853 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.841567775 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.130937296 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.841335764 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.838461274 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.011686375 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.841431829 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.07545825 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.841083109 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.127920635 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.868128617 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.99699345 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.840604813 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.098626181 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.878219748 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.893091673 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.839506628 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.972857526 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.840127522 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.716113956 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.991792301 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.840531946 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.839170066 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.379869543 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.838615122 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.996525847 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.075025542 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.869236847 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.917094814 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.513035733 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.839792852 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.929176086 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.86819065 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.18780926 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.840520445 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.057359887 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.843796127 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.373704985 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.844150244 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.082857071 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.076256934 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.846768844 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.837268527 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.747576131 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.837620238 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.840607362 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.004249409 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.656828066 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.841508961 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.045696955 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.841139123 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.97405075 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.841621453 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.928321246 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.197008846 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.840486855 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.841255494 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.842486519 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.842453876 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.841457781 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.052004642 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.874530434 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.375744105 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.983725464 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.118278923 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.162048997 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.09597327 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.891405722 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.846075784 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.093339337 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.844162152 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.909910988 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.844790795 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.865668949 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.079666078 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.84677499 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.054672955 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.128093656 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.77673841 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.89561898 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.848340325 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.845016765 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.763673564 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.996517758 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.937064887 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.844657244 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.841774282 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.96070691 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.970042984 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.059228144 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.84354725 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.075021629 seconds)
  done (took 896.528993623 seconds)
done (took 1212.778018142 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.843730884 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.839592493 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.829315295 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.844691001 seconds)
  done (took 29.137567357 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.848884849 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.850441437 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.852644446 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.848441423 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.85444883 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.851496918 seconds)
  done (took 12.886490225 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.929956022 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.844972088 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.847533737 seconds)
  done (took 21.402201031 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.918047078 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.265013787 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.962203352 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.293631054 seconds)
  done (took 10.21967419 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.854558163 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.851921095 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.849011317 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.852898579 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.849152782 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.851899759 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.850980943 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.851349095 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.851347442 seconds)
  done (took 18.441770538 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.219150781 seconds)
done (took 98.081640838 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.217045154 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.778381705 seconds)
    (3/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.416237695 seconds)
    (4/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.855302449 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.558476152 seconds)
    (6/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.53590829 seconds)
    (7/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.060571754 seconds)
    (8/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.449643634 seconds)
    (9/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.84505396 seconds)
    (10/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.251567291 seconds)
    (11/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.305246975 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.008639101 seconds)
    (13/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.97484402 seconds)
    (14/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.114092212 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.885949266 seconds)
    (16/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.074605661 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.877960288 seconds)
    (18/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.87057108 seconds)
    (19/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.39418449 seconds)
    (20/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.831286586 seconds)
    (21/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.916617731 seconds)
    (22/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.985403488 seconds)
    (23/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.829751109 seconds)
    (24/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.748207586 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.920193703 seconds)
    (26/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.926050433 seconds)
    (27/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.150158916 seconds)
    (28/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.477166795 seconds)
    (29/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.728707649 seconds)
    (30/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.990914873 seconds)
    (31/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.831400358 seconds)
    (32/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.925521725 seconds)
    (33/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.979422314 seconds)
    (34/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.404649947 seconds)
    (35/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.75771328 seconds)
    (36/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.969518461 seconds)
    (37/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.360132812 seconds)
    (38/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.923709538 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.957632028 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.236123318 seconds)
    (41/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.875471836 seconds)
    (42/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.929992486 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.095126107 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.543201166 seconds)
    (45/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.850707618 seconds)
    (46/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.833810381 seconds)
    (47/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 3.447434546 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.920919321 seconds)
    (49/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.933269103 seconds)
    (50/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.185559822 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.8370176 seconds)
    (52/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.580309768 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.971136081 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.102793421 seconds)
    (55/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.276671072 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.958748049 seconds)
    (57/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.206132108 seconds)
    (58/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.149213254 seconds)
    (59/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.874675939 seconds)
    (60/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.932302324 seconds)
    (61/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.865841008 seconds)
    (62/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.861790162 seconds)
    (63/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.896353995 seconds)
    (64/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.87831036 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.053557095 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.909529621 seconds)
    (67/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.875472832 seconds)
    (68/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.250855745 seconds)
    (69/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.836957731 seconds)
    (70/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.901654657 seconds)
    (71/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.365807068 seconds)
    (72/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.218623858 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.848671826 seconds)
    (74/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 9.508978467 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.935239254 seconds)
    (76/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.838058395 seconds)
    (77/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.300965928 seconds)
    (78/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.185875576 seconds)
    (79/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.94855749 seconds)
    (80/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.965854934 seconds)
    (81/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.071505703 seconds)
    (82/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.854913159 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.229972702 seconds)
    (84/309) benchmarking ("sort", Float64, false)...
    done (took 5.595448435 seconds)
    (85/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.780972296 seconds)
    (86/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.02491411 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.096721687 seconds)
    (88/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.353631452 seconds)
    (89/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.834574103 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 5.55527286 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.963843821 seconds)
    (92/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.10235242 seconds)
    (93/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.853394537 seconds)
    (94/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.131199162 seconds)
    (95/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.939819842 seconds)
    (96/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.893997046 seconds)
    (97/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 3.868477054 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.933318669 seconds)
    (99/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.777799043 seconds)
    (100/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.461081887 seconds)
    (101/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.281723932 seconds)
    (102/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.121726393 seconds)
    (103/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.282207407 seconds)
    (104/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.957544927 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.861339226 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.64884094 seconds)
    (107/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.146201123 seconds)
    (108/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.983369566 seconds)
    (109/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.162680361 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.075386701 seconds)
    (111/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.947778447 seconds)
    (112/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.161925986 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.878187799 seconds)
    (114/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.019893044 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.071542459 seconds)
    (116/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.875787409 seconds)
    (117/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.08766174 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.197313045 seconds)
    (119/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.404262153 seconds)
    (120/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.946922954 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.859248249 seconds)
    (122/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.023272265 seconds)
    (123/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.999017413 seconds)
    (124/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.140585921 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.967514739 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.099286741 seconds)
    (127/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.010469004 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.813019548 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 2.31449731 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.876213429 seconds)
    (131/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.854404123 seconds)
    (132/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 3.51333026 seconds)
    (133/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.04776144 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.120808589 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.665388503 seconds)
    (136/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.325018281 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.964674854 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.074726174 seconds)
    (139/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.025357212 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.122090196 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.876121346 seconds)
    (142/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.968472582 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.96510633 seconds)
    (144/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.007488918 seconds)
    (145/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.051955102 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.231587202 seconds)
    (147/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.857587581 seconds)
    (148/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.005159489 seconds)
    (149/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.839454662 seconds)
    (150/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.38023727 seconds)
    (151/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.154385401 seconds)
    (152/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.164716407 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.087190801 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.928139702 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.881822387 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.791888299 seconds)
    (157/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.864477228 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.221184323 seconds)
    (159/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.958987653 seconds)
    (160/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.0072632 seconds)
    (161/309) benchmarking ("sort", Float32, false)...
    done (took 5.588550909 seconds)
    (162/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.85919949 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.944040019 seconds)
    (164/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.882312243 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.553615336 seconds)
    (166/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.979538508 seconds)
    (167/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.938269944 seconds)
    (168/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.871230331 seconds)
    (169/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.860724162 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.790798211 seconds)
    (171/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.299420048 seconds)
    (172/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.98147113 seconds)
    (173/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.099698146 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.184799743 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.768051553 seconds)
    (176/309) benchmarking ("sort", Int8, false)...
    done (took 4.853399585 seconds)
    (177/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.968573409 seconds)
    (178/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.341486573 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.252338787 seconds)
    (180/309) benchmarking ("sort", BigInt, false)...
    done (took 6.85924774 seconds)
    (181/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.339016307 seconds)
    (182/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.856806935 seconds)
    (183/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.331684773 seconds)
    (184/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.196185698 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.155109189 seconds)
    (186/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.068123771 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.247396371 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.153629296 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.88915343 seconds)
    (190/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.865898265 seconds)
    (191/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.005642631 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.981271257 seconds)
    (193/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.218813266 seconds)
    (194/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.860197621 seconds)
    (195/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.122058502 seconds)
    (196/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.864547327 seconds)
    (197/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.94627077 seconds)
    (198/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.961652229 seconds)
    (199/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.994256029 seconds)
    (200/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.001648734 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.246699289 seconds)
    (202/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.824458994 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.81554197 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.925943002 seconds)
    (205/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.945208396 seconds)
    (206/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.950584234 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.159699886 seconds)
    (208/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.872764022 seconds)
    (209/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.029080368 seconds)
    (210/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.603667399 seconds)
    (211/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.959669969 seconds)
    (212/309) benchmarking ("map", abs, BigInt, true)...
    done (took 8.694498663 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.748393858 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.089412022 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.702383975 seconds)
    (216/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.048012927 seconds)
    (217/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.84099594 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.01241051 seconds)
    (219/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.191749936 seconds)
    (220/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.999070901 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.862613882 seconds)
    (222/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.072322257 seconds)
    (223/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.107609153 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.883958614 seconds)
    (225/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.84411651 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 3.839211173 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.510726992 seconds)
    (228/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.844186809 seconds)
    (229/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.929606968 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.904462688 seconds)
    (231/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.711316495 seconds)
    (232/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.960153298 seconds)
    (233/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.374353301 seconds)
    (234/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.878695633 seconds)
    (235/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.996643737 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.984477229 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.860000753 seconds)
    (238/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.351570053 seconds)
    (239/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.763193813 seconds)
    (240/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.011629711 seconds)
    (241/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.847239026 seconds)
    (242/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.850091797 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.860558461 seconds)
    (244/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.871843634 seconds)
    (245/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.858651223 seconds)
    (246/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.053886561 seconds)
    (247/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.634452409 seconds)
    (248/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.697240233 seconds)
    (249/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.973210994 seconds)
    (250/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.139720497 seconds)
    (251/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.994344657 seconds)
    (252/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.861173758 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.951856726 seconds)
    (254/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.013485925 seconds)
    (255/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.986516651 seconds)
    (256/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.967402358 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.886585581 seconds)
    (258/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.15518291 seconds)
    (259/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.991875944 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.194146593 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.892608379 seconds)
    (262/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.051559523 seconds)
    (263/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.186140456 seconds)
    (264/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.8628648 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.221025706 seconds)
    (266/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.893070139 seconds)
    (267/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.010182072 seconds)
    (268/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.928993158 seconds)
    (269/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.881027002 seconds)
    (270/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.876419305 seconds)
    (271/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.254315162 seconds)
    (272/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.112774672 seconds)
    (273/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.897807303 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.134625059 seconds)
    (275/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.256933442 seconds)
    (276/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.06043967 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.986896892 seconds)
    (278/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.079398742 seconds)
    (279/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.026257988 seconds)
    (280/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.193514934 seconds)
    (281/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.987792751 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.945515479 seconds)
    (283/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.33006817 seconds)
    (284/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.947293651 seconds)
    (285/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.012669925 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.9465917 seconds)
    (287/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.977603269 seconds)
    (288/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.927752936 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.985443734 seconds)
    (290/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.205768824 seconds)
    (291/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.173973479 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.622162718 seconds)
    (293/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.849115539 seconds)
    (294/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.918247122 seconds)
    (295/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.888527069 seconds)
    (296/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.055508633 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.901581867 seconds)
    (298/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.056920441 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.970160421 seconds)
    (300/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.955203385 seconds)
    (301/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.272443599 seconds)
    (302/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.450855307 seconds)
    (303/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.143222385 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.887858965 seconds)
    (305/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.911270645 seconds)
    (306/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.027773529 seconds)
    (307/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.851255216 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 4.121787062 seconds)
    (309/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.070159828 seconds)
  done (took 1017.858302264 seconds)
done (took 1019.702731309 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.898650076 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.892337729 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.873982305 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.897127421 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.986778382 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.909343066 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.885196093 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.878562083 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.922146074 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.923113119 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.874688313 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.907252086 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.877787707 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.87672893 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.873442093 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.891152567 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.187758945 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.906320046 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.894668158 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.884176777 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.895108645 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.877198118 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.928264521 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.905566596 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.879210725 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.881202872 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.880334837 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.899247218 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.990249386 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.881109289 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.878760997 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.8886976 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.186696367 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.907501708 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.872389164 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.895445237 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.888922216 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.88779072 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.879305279 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.909231575 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.337420508 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.887297545 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.876869567 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.879453293 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.875693071 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.882912919 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.882089464 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.88496818 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.891121018 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.892741365 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.332002639 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.90170057 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.878552015 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.880356155 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.888939047 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.87899333 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.8823556 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.896457866 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.899490548 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.897152972 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.182050669 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.912279926 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.880072316 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.897086156 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.887636088 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.369797866 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.882442955 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.885056064 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.338846121 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.888605295 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.372433391 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.896884859 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.881057629 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.89415338 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.912619009 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.189650274 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.903880791 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.877071214 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.888653262 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.881144043 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.891359926 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.894271474 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.88556618 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.881525279 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.89468126 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.918869736 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.891402228 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.884221807 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.89210179 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.898561293 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.889467368 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.892499466 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.885378075 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.87540114 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.889280348 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.883712612 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.8864585 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.885056956 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.886425418 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.889467365 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.341406197 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.90410707 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.87876459 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.877807227 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.88047751 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.893974789 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.335559143 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.888591089 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.904496294 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.929542091 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.885440205 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.184161426 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.915190386 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.896630834 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.890978614 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.885866299 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.877325834 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.181370336 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.367332299 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.903592059 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.884553851 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.881824128 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.897645775 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.885234772 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.880134936 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.190256683 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.912087806 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.896414202 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.003995384 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.892590085 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.918317331 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.881360572 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.885998829 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.920849563 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.899033766 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.913246575 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.886651644 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.899372159 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.900962783 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.881320555 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.893695375 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.894657984 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.885610525 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.886559021 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.877350169 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.920476668 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.894965873 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.896962983 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.903491866 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.008318336 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.879479731 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.188503135 seconds)
done (took 295.769567402 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.954185061 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.875951503 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.980081624 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.879365633 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.963777288 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.968658868 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.879319592 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.877688535 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.877137642 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.253315391 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.878805788 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.877454686 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.879202958 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.878145032 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.966200769 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.880931465 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.878645927 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.251939953 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.883635431 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.95420452 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.876101702 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.880079429 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.883355982 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.257686001 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.877691217 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.882879993 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.956212661 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.881480951 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.25169471 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.881278407 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.875085855 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.223648762 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.976195964 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.900654824 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.892371793 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.888739325 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.966886513 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.886412033 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.967894224 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.966186289 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.982083341 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.923426276 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.881486292 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.879801908 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.886242477 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.884750961 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.879249025 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.912426061 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.878002673 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.880365468 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.220156856 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.893642894 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.880282767 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.879348979 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.880585082 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.915881045 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.878433735 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.88574482 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.975897521 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.886140871 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.946937558 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.284769732 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.258088475 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.884721925 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.879413738 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.882532041 seconds)
  done (took 185.241486998 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.949086419 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.959033469 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.952922086 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.888031621 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.935005445 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.953534013 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.888829046 seconds)
  done (took 15.337768106 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.891007737 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.885612938 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.934609327 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.933282747 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.884542887 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.033891402 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.885507787 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.89695342 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.882949325 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.936488711 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.8859965 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.885776032 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.891219338 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.886063507 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.93527047 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.897692731 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.002531902 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.887688673 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.885473843 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.038182774 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.881873933 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.891330871 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.940916483 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.898272554 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.886679435 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.892541768 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.470647415 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.887625174 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.884393185 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.885618442 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.884294244 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.929420335 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.886378541 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.880039517 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.882344427 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.001184413 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.885296534 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.884249076 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.886075204 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.88418116 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.883551814 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.887268662 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.886622975 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.883189215 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.8849802 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.91034599 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.88790567 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.886577122 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.886420664 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.887519331 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.938563326 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.887019509 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.884339092 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.885274727 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.942646137 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.894072951 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.888520384 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.883528312 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.886779756 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.883752178 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.040300271 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.936524514 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.888337136 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.937487706 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.889124995 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.887714594 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.887402626 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.888144182 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.983584523 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.88800175 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.936681964 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.886048172 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.047786762 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.912734232 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.887565949 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.891207024 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.890805975 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.890594934 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.883502461 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.894787957 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.884191528 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.891557537 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.896966487 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.888298187 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.885881811 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.000346317 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.998222377 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.887054595 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.901756747 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.896430388 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.886557806 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.939778064 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.889557038 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.886849713 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.944049681 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.005876758 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.946146074 seconds)
  done (took 207.534351157 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.891191128 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.896023575 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.889461136 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.908256325 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.890606442 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.889478606 seconds)
  done (took 13.181962498 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.891705649 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.889912273 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.886561784 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.889544463 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.890983445 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.891287826 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.888756324 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.891400184 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.89395489 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.889133533 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.892463865 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.891388268 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.890625987 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.88971987 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.89038099 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.890934364 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.890465092 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.886080438 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.892089696 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.887047119 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.040879845 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.890538367 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.890439665 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.890937888 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.898624253 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.890035428 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.898039062 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.891323856 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.891588971 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.899675707 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.894017834 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.892711196 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.89118439 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.898331936 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.896409663 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.893138083 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.895591347 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.890390998 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.888550662 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.892011064 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.891337035 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.892406885 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.88995056 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.894178505 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.892318277 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.897006267 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.895795727 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.901143361 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.893078411 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.893009033 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.891646586 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.89170336 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.891568209 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.893832315 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.893706927 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.897794334 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.898621674 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.89282568 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.891192029 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.894028512 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.894585606 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.895655695 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.895622879 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.899400381 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.901581764 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.895670551 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.895845745 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.897855807 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.893933487 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.891904448 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.896387505 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.889218091 seconds)
  done (took 139.263849729 seconds)
done (took 562.382974625 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.965745032 seconds)
  done (took 8.786358184 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.980270717 seconds)
  done (took 8.8799839 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.381626629 seconds)
  done (took 10.202568479 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.909257034 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.944838079 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.905134945 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.89526088 seconds)
  done (took 29.487053474 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.926999056 seconds)
  done (took 8.749233988 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.900904664 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.88660408 seconds)
  done (took 15.640552224 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.979848092 seconds)
  done (took 8.80306685 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.991339983 seconds)
  done (took 8.836230833 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.905231341 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.935187952 seconds)
  done (took 15.677047608 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.873395967 seconds)
  done (took 8.693803767 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.562774719 seconds)
  done (took 11.387668573 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.890150841 seconds)
  done (took 8.72651949 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.914161818 seconds)
  done (took 8.736536259 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.18301453 seconds)
  done (took 10.004679012 seconds)
done (took 164.431408475 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.893015237 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.891473109 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.887645165 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.887128998 seconds)
  done (took 29.381357623 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.92837385 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.930180439 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.928448361 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.940066356 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.932693499 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.930030585 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.920875766 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.920252475 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.941807537 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.932071493 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.932179806 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.930525237 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.930570065 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.922229456 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.93179917 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.931353718 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.940427189 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.930956986 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.921025097 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.93308376 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.897014166 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.940060457 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.932162038 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.897904405 seconds)
  done (took 48.10119964 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.098823371 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.965907405 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.050719248 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.949294258 seconds)
  done (took 9.889587954 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.947808643 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.951281647 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.961579649 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.000280804 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.02346782 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.96009344 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.923460792 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.918862477 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.9056661 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.949294667 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.025439928 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.943295547 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.045072544 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.89707116 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.082725261 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.895984914 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.89703818 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.95035742 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.002463265 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.014160993 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.89838986 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.949603689 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.952626713 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.947335389 seconds)
  done (took 48.86799667 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.894998975 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.905183255 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.901783885 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.899008808 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.896909267 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.898006305 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.902973898 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.897283212 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.918778085 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.898516336 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.894715671 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.896483891 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.895686946 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.897055752 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.895897454 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.908928523 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.911620837 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.896950914 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.898775964 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.904106866 seconds)
  done (took 39.840792657 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.890545595 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.745829323 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.244120321 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.146235401 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.891721909 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.89469682 seconds)
  done (took 31.637911865 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.911423584 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.906140262 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.898359528 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.954933066 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.038230282 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.906130951 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.90189681 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.911257559 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.945292124 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.967063472 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.918960669 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.925881853 seconds)
  done (took 25.012722974 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.894661135 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.896957037 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.893749154 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.931336409 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.909205949 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.906491496 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.905204055 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.892820026 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.914659814 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.919148309 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.90826868 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.911368722 seconds)
  done (took 44.715780377 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982853923 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.78170728 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.942119369 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.611985377 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.365557956 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.106213519 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.409308598 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.233889573 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.897354521 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.166174708 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.916151697 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003592115 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.149268282 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895459737 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.911478576 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.369867934 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.186587108 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122945717 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921239377 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.640179141 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943008103 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.480014485 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.726880575 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.954388135 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.107615415 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.024292966 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.156253929 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.855420921 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027777892 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.932036429 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903689634 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.89646568 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.168848671 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.268606602 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989855747 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905149783 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.550312076 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.616023926 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.884503626 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.65523107 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.670800027 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.012851652 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904171529 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897112634 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.833456447 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.466973068 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279418995 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.901770129 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.605753892 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.895823152 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.908247022 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985648339 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.899564542 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.709882505 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.847255301 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.175707593 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.89146612 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90420901 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.467077881 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.989928205 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.513640114 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.875565336 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.088420803 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.647672915 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.292941433 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.044012809 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.900367317 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.902202833 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832021227 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.096480223 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947464083 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.044301655 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.917499058 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.547521675 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.20122256 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.965851278 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.841117605 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1841 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.761739867 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.877442524 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.126743168 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.849427052 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830988538 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.758142759 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.833874447 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.166090193 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932846507 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.533638323 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941161855 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.234368331 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.907309383 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916782581 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904341973 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.122115999 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.463551853 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.900001508 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.697229832 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.044382625 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920741072 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.233141103 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831715094 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.900878247 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.155607933 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.107725543 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.221485772 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.415178356 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049101632 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894077447 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.981102241 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.896548663 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.95294841 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.171755737 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.955257877 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.983295742 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956281891 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.861860131 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199736245 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925433117 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.07228174 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.940123063 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.025531092 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.230481928 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.192962225 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963230222 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.900850075 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.898787198 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.731413392 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.451867611 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.168604835 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.899064933 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.469309036 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.953107227 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.902159834 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834666218 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.533631304 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.941100221 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.870935654 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.123762423 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.901813866 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.214087643 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837958624 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.105525399 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.01514713 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.122774905 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.544327329 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.96873337 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.1597525 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.476373147 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.246217824 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957004704 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919518033 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992810499 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924803972 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.412682143 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.199812799 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.904133747 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.905870304 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.712213985 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.904068991 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904174308 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.905959593 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.700640419 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182283272 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.924534769 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.904126878 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.790356235 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.914487459 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970163547 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.908724053 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.912479634 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.453576308 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.649556978 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.909016739 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.538525748 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125607655 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911943019 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.64216274 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.012603579 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.982199918 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.172443426 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.961664154 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.83607569 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.611241284 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.597391008 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904004148 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.83670244 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.902266878 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912182886 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.911133458 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.287939201 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.182146272 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.942140575 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.781700042 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.944041568 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.914939213 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.908485286 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90195004 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.450044175 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.995036851 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.544920268 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.952913788 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040272593 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.916190588 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.839429997 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.905865765 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.907139493 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.904244276 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.860363474 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955386047 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.658934556 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278827546 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.16232784 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.599250824 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.923102433 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.684665272 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.963716213 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.925590554 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.725780681 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918998394 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.943509289 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919763906 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.91567725 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.669037805 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.611446908 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.474767656 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.216744667 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.217596597 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342234824 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.480913952 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.214263117 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.24463184 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140232773 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.4332378 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.965099752 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.248550395 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.847645749 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98894229 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.548874117 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.24763682 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919922576 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135213914 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288835181 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.7818734 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.930678685 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.117138589 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941263405 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.897266244 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.872984698 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.109489399 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045743827 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.668532261 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.102938391 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239680187 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.581678654 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.016488077 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.905996262 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.598414174 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991053814 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.62039348 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.268422041 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.503844376 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.852122682 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394743079 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.911935045 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.35365548 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.260938064 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.309258758 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.03357388 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842706766 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.919977881 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.916971431 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.910579899 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.90722601 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.786775869 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.159748882 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919739857 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141414383 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.270892784 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.207256269 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.813056798 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.914114513 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.910624455 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.205532529 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.799407917 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077433693 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.44947729 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.448047444 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911580744 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.841979071 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.841707267 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.60223879 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.914252206 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.884289567 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13319398 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.099150147 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.897189206 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.485290352 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15605791 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.165333047 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.925227186 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.184826271 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.181596366 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.648320241 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936585372 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.011938739 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.587641775 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.010814796 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.178599244 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.145413078 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.710622524 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.139567051 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.954130318 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.723921928 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.910491648 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.124241601 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.180559831 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.81444805 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136999685 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.629961143 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.918687497 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.23131378 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972184737 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.81344314 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.055208645 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.106155736 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920885585 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998836543 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922335655 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.921439855 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.922335265 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958879192 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.869599996 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.030376257 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.925398819 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001572597 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.007228753 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.44899979 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.918012514 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.186369865 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263707636 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.23942435 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.968191639 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.909564384 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918616256 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.846602234 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048230428 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.360375621 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.185899841 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.042782903 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.214976496 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937151954 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.591500528 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.362878668 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.159516482 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186153065 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.805892176 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91240765 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.92639624 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.176363819 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924809849 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.123455307 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141364065 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.22930009 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.384490327 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.243786334 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.283545234 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184427493 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.282473261 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.911672253 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.503295659 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.919636468 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.615861329 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.953103635 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.816714982 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173854951 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927120793 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.291631722 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.93702131 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.115252499 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.429567188 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.675053202 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.205967912 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.896029128 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.971194054 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.192702562 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.299095068 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223627285 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986968789 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926387601 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.643366228 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053006416 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.789240226 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.189708527 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.915617368 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125822156 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.628461916 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.92655008 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.194752639 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221416945 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.914870171 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.804275423 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926097085 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.923831695 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.141658448 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.182953004 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.167895025 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926265192 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.923547226 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.732737214 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.194169884 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.973597582 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851252703 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.921057691 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013730053 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.168151125 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.937301656 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.43469999 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.629854765 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213552335 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.836251046 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939675802 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.509908148 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.290767222 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.242065419 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.466189466 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.145352945 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.476018916 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.918127361 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.219149166 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.923409829 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.511881717 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.228415339 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.922568157 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.613229402 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961951119 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.188874391 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.234846883 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.929392881 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.663640262 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.88754874 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.143425646 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.520510583 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.865170392 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.920734016 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.979832219 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.917825373 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.048827459 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.931307857 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.799591766 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918736462 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.668567228 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.413782852 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.92462931 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.908102982 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.649747036 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.6357556 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957236268 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063447827 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.927652805 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.630976728 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.212803895 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.175068447 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.623901965 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.930451147 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.924108348 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921119222 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.850481087 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.117703223 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.303884151 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218421786 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.46566114 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.965289629 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.926077155 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.138256218 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133548776 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.811384045 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.051484812 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.499837884 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.965724212 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.652895069 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.60080768 seconds)
  done (took 1705.452802731 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.93047851 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.94958889 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.944317383 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.032677287 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.954351945 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.993138461 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.956525296 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.029829307 seconds)
  done (took 57.647126927 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.921492503 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.124654494 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.931699693 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.922007377 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.928641243 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.923890469 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.096553642 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.934382662 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.939546709 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.932110378 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.924548527 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.924602767 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.259031378 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.946546314 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.923245707 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.921977599 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.930364257 seconds)
  done (took 75.37781964 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.922547693 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.152529194 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.952482547 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.941811694 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.878439257 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.934175819 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.026458945 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.953482094 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.929164139 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.161438128 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.253571449 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.959651166 seconds)
  done (took 90.922911662 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.931481512 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.930787902 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.929122329 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.930006622 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.930791143 seconds)
  done (took 11.514174237 seconds)
done (took 2220.210902185 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.172051565 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.151526261 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.166637125 seconds)
  done (took 6.173351583 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.076409776 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.123705818 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.246800614 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.26639892 seconds)
  done (took 10.577242204 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.224769104 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.298339227 seconds)
  done (took 6.386022132 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.35101862 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.93592896 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.328094935 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.928060282 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.931997346 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.933826837 seconds)
  done (took 22.659756313 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.931308632 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.934472083 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.932101667 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.93452323 seconds)
  done (took 9.595149913 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.914072738 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.719275262 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.916488644 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.93111344 seconds)
  done (took 21.342699188 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.680672379 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.330600487 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.674456966 seconds)
  done (took 9.547530106 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.378743061 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.819872254 seconds)
  done (took 9.061689432 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.199025948 seconds)
  done (took 4.06239277 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.961275078 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.201670845 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.459300556 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.453824772 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.534809775 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.801243597 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.264714576 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.190176911 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.350876316 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.377407867 seconds)
  done (took 25.457834381 seconds)
done (took 140.505876902 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.320216021 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.933652972 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.149181137 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.325964939 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.172780117 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.14650523 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.312912969 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.308994814 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.784702054 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.777361837 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.284349448 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.167820045 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.265367943 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.174528101 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.27275 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.299220737 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.168158656 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.332763699 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.020274989 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.217817937 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.322839257 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.910305985 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.123881886 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.925728488 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.172420623 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.096618351 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.502690314 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.306555962 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.172100497 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.511241985 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.099189046 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.369241593 seconds)
  done (took 172.814142321 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.673570292 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.932435113 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.933545408 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.931931201 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.326238121 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.936828617 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.932935136 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.931724383 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.053146912 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.04677218 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.946275369 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.35599329 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.944979029 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.931171982 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.939231581 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.931341032 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.232665924 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.761392163 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.946799186 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.949474757 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.951085924 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.192443405 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.949610599 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.230390643 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.242554792 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.949676122 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.93250158 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.949387035 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.935523993 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.938670893 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.939162813 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.932196887 seconds)
  done (took 209.649023709 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.923971659 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.932645751 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.932181688 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.934383641 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.935777749 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.932983292 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.933558576 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.933236906 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.534982033 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.525625523 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.931988304 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.93451488 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.933120189 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.934418773 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.936307492 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.934127052 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.939554514 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.943960873 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.939764697 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.938996289 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.943016352 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.679237786 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.939334489 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.687771963 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.939878744 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.9404208 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.935952077 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.942282032 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.946596778 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.947671915 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.945598374 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.934862655 seconds)
  done (took 222.545101519 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.129335439 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.944087706 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.941554173 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.888017879 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.940940513 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.941109029 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.898550622 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.139644129 seconds)
  done (took 19.709009296 seconds)
done (took 626.591956966 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.396047332 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.24609876 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.116119413 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.965139692 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.194253017 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.999829052 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.96189026 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.025459923 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.689544356 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.030345526 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.665876582 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.980880595 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.755391047 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.985900985 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.08526898 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.017827332 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.562236984 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.658320835 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.140493905 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.033718198 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.135057916 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.899691442 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.040157159 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.706633161 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.764528143 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.948554736 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.140169834 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.571072159 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.969477872 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.122428356 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.727293429 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.355120787 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.975266872 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.959264557 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.019563215 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.996003318 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.311035865 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.97199202 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.0796483 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.699327742 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.047986085 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.574329425 seconds)
  done (took 106.396154616 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.932561301 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.930207095 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.930246648 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.932914347 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.933611831 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.930680223 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.92692223 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.929974399 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.929391242 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.928092153 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.931386431 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.932888624 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.931041654 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.932845387 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.928352272 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.930264484 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.930483113 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.933630916 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.930555324 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.928164617 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.929886851 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.928690687 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.941762451 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.931497269 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.928889788 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.932079875 seconds)
  done (took 52.085855178 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.943514704 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.094974374 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.201868286 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.964428302 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.94336294 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.947822502 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.963501849 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.950635869 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.946153381 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.948221676 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.05316719 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.949987008 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.960699619 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.199904735 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.957095933 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.942797872 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.944081322 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.942269719 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.099075511 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.958357508 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.961553165 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.951039754 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.963779212 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.957423799 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.944026605 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.942450125 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.946909097 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.420783953 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.951559308 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.050773572 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.988218546 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.9645348 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.36129366 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.213275925 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.998905926 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.952285235 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.94590643 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.05365804 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.949546193 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.944253477 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.961984857 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.949192131 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.197996094 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.431466638 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.958650233 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.945290994 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.432047926 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.063933767 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.985364033 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.956859428 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.204836794 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.96065795 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.945632398 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.94625718 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.981462192 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.957160968 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.94589377 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.269884889 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.962225049 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.970250418 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.955972917 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.95094336 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.110170739 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.958305481 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.098992084 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.954252113 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.950511631 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.945498532 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.202201774 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.962849424 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.443901052 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.962779 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.94763854 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.055184027 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.103976383 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.4616003 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.96165661 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.112796357 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.383049384 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.972978869 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.956343941 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.412787095 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.977118636 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.955878007 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.951733595 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.951246819 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.94931966 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.991114528 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.964999434 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.364530154 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.451047035 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.290276996 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.977804252 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.96443316 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.950641194 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.273549301 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.96004024 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.95051764 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.199910247 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.456466872 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.960591691 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.953333147 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.425168669 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.964135132 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.969209937 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.95660829 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.209130972 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.964422722 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.992710619 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.950824426 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.956169157 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.952207172 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.970031213 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.957051832 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.949232059 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.420486629 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.075455934 seconds)
  done (took 241.348870802 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.944434794 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.946060364 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.945309035 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.946047499 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.943726231 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.949894702 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.944351942 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.944207567 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.952268387 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.944264378 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.945789157 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.94721002 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.944565755 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.948638844 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.393384905 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.952302546 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.554370952 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.946093911 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.944376678 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.945302488 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.627513647 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.956021003 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.945242086 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.946894732 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.948056085 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.948468697 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.94831819 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.993371268 seconds)
  done (took 170.178880073 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.95367094 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.131456268 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.975240504 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.990266965 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.964726621 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.951936259 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.975231749 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.974646447 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.962329394 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.952828286 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.950766309 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.015864375 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.964986783 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.094496754 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.986383088 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.989445502 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.061169639 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.961542907 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.94978647 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.950429539 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.981542636 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.949504369 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.015307734 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.084348174 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.977255866 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.074103303 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.962828752 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.953551804 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.954046574 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.071025539 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.974429402 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.012745484 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.988283279 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.977225668 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.080778267 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.078465921 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.067062011 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.984210575 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.958472511 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.950497181 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.952984623 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.941081036 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.075277539 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.978956878 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.956834566 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.063811474 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.97837517 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.956855246 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.964194053 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.952361183 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.968901175 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.978025547 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.029180871 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.095103056 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.993897858 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.981606837 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.978706805 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.24235499 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.96754761 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.058206536 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.952067064 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.075254514 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.979473774 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.942493499 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.953098691 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.960115705 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.98411962 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.986082677 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.062376452 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.965377047 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.059715849 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.99319778 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.961260213 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.955048719 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.958770285 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.07626314 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.08139007 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.992546323 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.992560692 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.986812361 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.953430789 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.956620839 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.943587017 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.973320164 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.958588715 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.077441789 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.078633605 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.963631528 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.958259556 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.957928164 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.959477572 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.981256508 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.091042396 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.997838457 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.057128652 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.027405869 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.037230096 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.9761087 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.969633556 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.964116596 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.020548935 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.975622228 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.967222983 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.292623897 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.032140549 seconds)
  done (took 211.93908156 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.440439031 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.012198602 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.021349907 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.273898542 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.393021648 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.842642597 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.00952157 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.011247185 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.034576233 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.197143766 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.083288311 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.024413136 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.996830564 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.984984304 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.009352301 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.033259821 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.023103417 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.354001464 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.138284926 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.106116799 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.992770843 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.323590803 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.333992322 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.46393291 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.042161603 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.331808739 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.696242458 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.150344167 seconds)
  done (took 64.215651239 seconds)
done (took 848.030069163 seconds)
SAVING RESULT...
DONE!
