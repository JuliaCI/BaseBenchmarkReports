cset: moving following pidspec: 2003
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.334582759 seconds)
loading group "string"... done (took 0.478715275 seconds)
loading group "linalg"... done (took 7.942068945 seconds)
loading group "parallel"... done (took 0.174494364 seconds)
loading group "find"... done (took 1.269014664 seconds)
loading group "tuple"... done (took 1.965203423 seconds)
loading group "dates"... done (took 1.331463196 seconds)
loading group "micro"... done (took 0.246095566 seconds)
loading group "io"... done (took 0.663476659 seconds)
loading group "scalar"... done (took 42.079447488 seconds)
loading group "sparse"... done (took 13.135893024 seconds)
loading group "broadcast"... done (took 1.037064126 seconds)
loading group "union"... done (took 14.596035471 seconds)
loading group "simd"... done (took 4.948254866 seconds)
loading group "random"... done (took 10.206819607 seconds)
loading group "problem"... done (took 2.004653705 seconds)
loading group "array"... done (took 22.504479691 seconds)
loading group "misc"... done (took 1.454102939 seconds)
loading group "sort"... done (took 3.594106574 seconds)
loading group "collection"... done (took 19.340482409 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.460747685 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139828585 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.144671981 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.138073 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.199377845 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.137999528 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156223246 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.112690773 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.885816892 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.174978726 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.142126174 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.488779977 seconds)
done (took 4.914567821 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.283073974 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08007296 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095655868 seconds)
  done (took 0.862629768 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.088849099 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.141126097 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.089967104 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.074830536 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.089899476 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.074636279 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.074643641 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.090332403 seconds)
  done (took 1.317703815 seconds)
done (took 3.238610784 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.717134854 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.28549091 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.200604268 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.505564252 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.175849779 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.211824845 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.710520778 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.368908298 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.243370627 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102669585 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.130511782 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.447277968 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130290726 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.683604751 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.086420679 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123293333 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.169359966 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.51178838 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.089677369 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.089923448 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.114774543 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.15054212 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.090003535 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.098308275 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.182504521 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.075517176 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.187352268 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.106845338 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.0748849 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.280890942 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.197103058 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.765309056 seconds)
  done (took 11.025761008 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111257471 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13320832 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076715741 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.151650612 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136304647 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.081694986 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.09832887 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.076298072 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12138562 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178403785 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114898512 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.13883899 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.090786653 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.078445978 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116065623 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.229078702 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.118652023 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.117827642 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.07982154 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103303172 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.119041889 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.110669071 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.090147103 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.105210043 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166747404 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.202421369 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.106922745 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.120307111 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.077162572 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.106920028 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141273425 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.154300021 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075112655 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.076669165 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175460346 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121441353 seconds)
  done (took 4.998798427 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.154406829 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.190395852 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.099862929 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.171405451 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.163604704 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143402766 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.153913679 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107683465 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.258104841 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.204544995 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163040815 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140105667 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108327387 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077057672 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098493334 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.07545697 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.672574908 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.164591626 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.132147591 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.099834439 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097472293 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083254585 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.729466309 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080570392 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.088269984 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080474418 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.086499149 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16037436 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07905457 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.277695796 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.096077194 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.099506003 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.096852219 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.073906823 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13034564 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109470227 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.132808966 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096199598 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.07430667 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.179776638 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080553522 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.091677473 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.10446319 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.094618839 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130526343 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11864931 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.092452741 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07687405 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.226094052 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.074278511 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.090907516 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.01534316 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.174753587 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.0900601 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.074085874 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.337762134 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.113269208 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07507219 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.09149475 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.280188561 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.123523769 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.095059051 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.075868273 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077738567 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.096301255 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.741167261 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.075196464 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.227891335 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08920298 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.085383119 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.092840468 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075046118 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098600204 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081882057 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.112543722 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.072276051 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.094914737 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078332084 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.094648589 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.07532388 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.078112235 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.114368044 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.095747184 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.076757501 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159554068 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.075968904 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.096644998 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1262922 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.095715771 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.075586504 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127199544 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077870705 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.075532868 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.134214578 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.076909976 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.114477297 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09235285 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.138075636 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.078357069 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.220621993 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.074243463 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122524435 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.083587045 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122499909 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.1030958 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076322206 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097702006 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.073993246 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.092605807 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144590744 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.076458619 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.092278802 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.077598158 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.106803228 seconds)
  done (took 23.545321286 seconds)
done (took 40.250151642 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.34819393 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106725729 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.107420013 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107463404 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.104775503 seconds)
  done (took 1.526812598 seconds)
done (took 2.254779227 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.263114112 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.171795068 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072190284 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.184540972 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072773671 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.17553207 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158198483 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.108056313 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.182663106 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.090048801 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163277796 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072843673 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072904469 seconds)
  done (took 2.545931476 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089644071 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112362489 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080025146 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090958753 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090400909 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091086635 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107423559 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097168008 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107528503 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081792604 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.073039398 seconds)
  done (took 1.750514821 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088968729 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.093921453 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096170499 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090129221 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090062176 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090171082 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107158079 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096446753 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107030318 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081362677 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0728759 seconds)
  done (took 1.743984051 seconds)
done (took 6.76447363 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.094039653 seconds)
  done (took 0.816020542 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.04748114 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.401972723 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.120132854 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.164273098 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.32209275 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.210784845 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.599432859 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.130989426 seconds)
  done (took 15.915964381 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.123697342 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.093406288 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.075395198 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.09576231 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.080286445 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.093027917 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.078913348 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.093179586 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.080554241 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.076705319 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.095301198 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.079270208 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.094077373 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.07692609 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.091790566 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.076438395 seconds)
  done (took 2.19940518 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.112537046 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.112017407 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.099017044 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.084424553 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.097334338 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.080521727 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.099362953 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.081409417 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.094567337 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.079717619 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.100467665 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.082999714 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097586495 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.07843445 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.097811362 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.100242919 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.079700511 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.098439975 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.084402113 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.100500534 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.086300565 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098294541 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085709874 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.102191179 seconds)
  done (took 3.068299474 seconds)
done (took 22.730388627 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.146477914 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081298239 seconds)
  done (took 0.961120212 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096106606 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113674338 seconds)
  done (took 0.948300736 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.103619965 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.091956911 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.128525956 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.093963181 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.093215987 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.077505365 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.124994356 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.093210869 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.077637568 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.078410018 seconds)
  done (took 1.703865352 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081855821 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080752484 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101595294 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.11286252 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.087676133 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095021273 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.082343905 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.096333787 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.084587193 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.092973466 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.088092204 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.111862931 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085755225 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.114118631 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.100199201 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085729025 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104578636 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.084225665 seconds)
  done (took 2.431626127 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.077652928 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.078721805 seconds)
  done (took 0.899882352 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080709837 seconds)
    (2/7) benchmarking "second"...
    done (took 0.075244489 seconds)
    (3/7) benchmarking "month"...
    done (took 0.094851472 seconds)
    (4/7) benchmarking "year"...
    done (took 0.094413471 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076865832 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.074525383 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.092086624 seconds)
  done (took 1.331116005 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.480187963 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.141316007 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.272735476 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.083066595 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119321606 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.314643747 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.092618416 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.081061459 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.098634315 seconds)
  done (took 2.483010644 seconds)
done (took 11.497465504 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.087424743 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.096802314 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.123679053 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.457705441 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.113372604 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.075638174 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.154425552 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.257209336 seconds)
done (took 2.111562193 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.14371658 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.334364013 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.120025618 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.069361925 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.091252359 seconds)
  done (took 1.361667346 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075517936 seconds)
    (2/2) benchmarking "read"...
    done (took 0.078598745 seconds)
  done (took 0.900321437 seconds)
done (took 3.153715121 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076712238 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.123150434 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.074512453 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.072780764 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.093232149 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.073078301 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.090533619 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.075347775 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.074939037 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.091912477 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.073535839 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.090750033 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075815325 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.075382588 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088629719 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073220002 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090656626 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.073158766 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072940916 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08805312 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.075177447 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090476269 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.07327883 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.072375933 seconds)
  done (took 2.7386118 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102683022 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092659466 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.081695387 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.096600459 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.079645513 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.097031603 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.080784583 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091007151 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08093363 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.093787872 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079583504 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.094935816 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.078251628 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095213604 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078566109 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.094739713 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.081124884 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091343328 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077184933 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.094389716 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.080895238 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092106689 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.079743908 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096596295 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.079123877 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094567534 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.077528903 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.090938502 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081072624 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095705913 seconds)
  done (took 3.380032404 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.080908699 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.072067684 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090830202 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.081851095 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.090921095 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.079119265 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.07446466 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.092373142 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079793257 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.091025018 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079852305 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.074392709 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.091716985 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.079126419 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.096238604 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.078377817 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.104593009 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.187772687 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.07511803 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.096023263 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.078054894 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.091177453 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.077611085 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.074310062 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.091021758 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.074241341 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091692723 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.074721063 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.075855645 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091780345 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.0776757 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.095082726 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.075261737 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.080932917 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.095403547 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.074547931 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.094978781 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.074655384 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078995145 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.090798268 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.074055463 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.090748492 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.073969586 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.081308738 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.094034139 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.076789157 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.091420228 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.080100597 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.095405002 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.082392105 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.074586249 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.091415228 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.08079054 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096143357 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.078735293 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.074745671 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.093319103 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.074285126 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095095284 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.07502887 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.074252076 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.091525029 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.077007246 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.092651862 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.091400286 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.098245817 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.07479027 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081061969 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095695674 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.077480534 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096590503 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.090098073 seconds)
  done (took 6.925069772 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.078417846 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09986174 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.075267988 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.07492246 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088666025 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.075281932 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099012357 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076324166 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093537848 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.094306715 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091267754 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076973148 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076861196 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096791731 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07587696 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.094385817 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085521958 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08975487 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.075776668 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095410636 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076482126 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09822832 seconds)
  done (took 2.651805557 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.215149248 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101021029 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.138757064 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094890915 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111225284 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111298298 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.082095093 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098874425 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080685117 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099421445 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082996904 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09624541 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108940294 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083646879 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099927543 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085010051 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096776581 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084522175 seconds)
  done (took 2.632801537 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.08910154 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092898061 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.098322286 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092467649 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.076389719 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.095287556 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082943821 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107973783 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.078141097 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092119137 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.087565743 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095138752 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.078788351 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092573606 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078969934 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.091768162 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.07889626 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07567881 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103476711 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098282914 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.082640448 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102912235 seconds)
  done (took 2.73696245 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093649959 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094357958 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.096845773 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097181134 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075685031 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.094886306 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.08566552 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093199877 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.085884929 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.094293025 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077057202 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.093291079 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.084417664 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092654714 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.083698885 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09345231 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078796035 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.076375178 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094313421 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075150993 seconds)
  done (took 2.524540503 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118495883 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107522463 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090779103 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118772781 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09149636 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107993274 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118486225 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.09231759 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10802582 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104409748 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10903296 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091720118 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118934917 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114302618 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092077371 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11925844 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118950131 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103551604 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109214919 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091553068 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120602734 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091989234 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119245925 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109449618 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094166904 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112286788 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094221032 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118588242 seconds)
  done (took 3.755200563 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077208037 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076069556 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.09088227 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.074053641 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.073244696 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.092606841 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.076076481 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.09332049 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078682103 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07578006 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.095400878 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.078067926 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.097327295 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.078151422 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078428889 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.096071999 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078887092 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.092780287 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076279587 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075580117 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.095141785 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077923417 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.095010155 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076420151 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075411801 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.095616851 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076256368 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092166474 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078359261 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075701391 seconds)
  done (took 3.262754239 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.084720525 seconds)
    (2/2) benchmarking "in"...
    done (took 0.098113751 seconds)
  done (took 0.956353957 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.074622942 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109197062 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.073818465 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080113475 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098758743 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.077560972 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.102374034 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08223851 seconds)
  done (took 1.466922735 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095252747 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112854381 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082821344 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.105621719 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.096081215 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.111828993 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141649687 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101578306 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.084221709 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.092762745 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.094968295 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.093939943 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.084083247 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0939701 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.083363025 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083267063 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095108108 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087210597 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.101558146 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.079764083 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099426176 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089468284 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096028192 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.086522437 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.097681724 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090565181 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.106695564 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.091724324 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.101048445 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.089574038 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.09952979 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.07168024 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081433257 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099873679 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078072827 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.112297942 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092042972 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100641529 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.088065827 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103150851 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089721512 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096050026 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085977401 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.103125318 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094093275 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.102183334 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.086198208 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077937076 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.094275162 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.081760377 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095725225 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079316812 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.090665685 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087687599 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.101573193 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094125169 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.09947475 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.081036841 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.081968028 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.099027903 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.086320072 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.098784676 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082474934 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.100125254 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087468852 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.099528141 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085103978 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094187285 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.073488033 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080015019 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.104884603 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102833148 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.104434366 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083837376 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100452075 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.078246413 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.097433837 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084090382 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101885124 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.086618543 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099116272 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084861385 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.103243583 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.078447423 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.09873931 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.087176281 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098658555 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.082671421 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.07630541 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113219965 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.082268379 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098575643 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.077790734 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.106848721 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.083234966 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101344025 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078411061 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088290608 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.091581791 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085614859 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103992585 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.080609231 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.10760541 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083751346 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101244096 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.085033213 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.105284428 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079841085 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.100084138 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.07622614 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085989167 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.100202996 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.08647934 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.091210614 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083199245 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.099954708 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.086481828 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.105591532 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082530829 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101746752 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088316991 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.104764643 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082953219 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.076218856 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.100685935 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085046304 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108376025 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.087682622 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100200487 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.07840398 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096360037 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.084975927 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.101596847 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086074853 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08617138 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101625953 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.074464104 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099423471 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.08540066 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.105596803 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.080575781 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.097850578 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.085179504 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.098203378 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083312349 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.086019266 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.099756305 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.079545265 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.103170931 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.082367605 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.09662417 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09074751 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.101298873 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.082790842 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.083911114 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10849894 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.082850058 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.104682033 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08280339 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.103290573 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086586031 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.097277997 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080563701 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.1007606 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.091210575 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.099670217 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.07951425 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.077018333 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.105091138 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.07777221 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.102013727 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.079442081 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.100496001 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086282241 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.081898912 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.101930874 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.081568065 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113325346 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094281268 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104252196 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.086307643 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.10824953 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084404028 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.099940626 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.08432915 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104446034 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.086770941 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.105494235 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.086321761 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103570281 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.083636255 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.076105373 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104248956 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088336545 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.097805557 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.082570955 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.097109135 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.084748536 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.105822404 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085634966 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.086185025 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100477482 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081282012 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108203815 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.083544368 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.103365687 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.07949474 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.103346082 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.091044912 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.10363449 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08737285 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.107900165 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085056748 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078642234 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107893959 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081966959 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.105279378 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.079403762 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.09606096 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.079367823 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.104540048 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083845359 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.083086757 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.092228431 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088924672 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107270842 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.080215491 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.097268895 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.0866434 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108002242 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.082539941 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083243203 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.09945983 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.083275519 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109933658 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.077024948 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.098921021 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.087905898 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.099901058 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.072162446 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.10165348 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.080428899 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.094792323 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081070456 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.079381859 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098889327 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084487165 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.10028522 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.072965537 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.100628321 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.083495105 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.078523625 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.098767738 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.088022089 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.102565225 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083532044 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108884663 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087619122 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.104795524 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085070801 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.104600894 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.087056391 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.104945472 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084109073 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.104772158 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.08500903 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.079968299 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102129808 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.080043446 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.100786013 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.086001449 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.10614089 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.081318797 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106864909 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085624498 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.080790441 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.101416975 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086625555 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100316524 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.082181271 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.098463423 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084944313 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100039872 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.081378675 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.084280339 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.098238636 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089006895 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.104247742 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090720584 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.100042559 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.078620635 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.1040667 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084297187 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.086849844 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.10657322 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.086987266 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.100971266 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.085222903 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.103022182 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090930008 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.097040816 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091780967 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106114801 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082127815 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.102162048 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.081638967 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.082306725 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.09910868 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083375579 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.105649848 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.081345858 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103122192 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087101003 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.101970722 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.082254489 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082481757 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.106401553 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.081033119 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.105792987 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.076084119 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.09845377 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081206041 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.086507863 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107559033 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.086951486 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.102614113 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.083960019 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106008089 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084599722 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.096379595 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.099405674 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107103732 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087611632 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108293657 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.080422677 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.082127965 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.109872245 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.074925074 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102107946 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082282129 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.096933464 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089683115 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.104970532 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.090421612 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.080605746 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.099059155 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.078583052 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.10620875 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.083476092 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.09338933 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.082470662 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084153388 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.101849929 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08393733 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.105159022 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.083723725 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105298516 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089913729 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.102719754 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08340007 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.104719327 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.078746846 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.079221675 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.099545113 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.084517861 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.105763367 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.079170499 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.078899139 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.1048065 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.083019821 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.100324727 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085856619 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.101774928 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088846466 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104149759 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.084217237 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109969405 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.075988841 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.08390911 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.103828123 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085177541 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.099272639 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086046066 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104245394 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088339057 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.107956084 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.08606086 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100107753 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086229664 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.0821957 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.104874076 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.08571723 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.106218102 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.080681367 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.106743758 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090219606 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101003789 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.083948432 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081180961 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101741225 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.086794538 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.106368561 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.083838156 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108330784 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.08514593 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.101628017 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.08843511 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.104745095 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085296987 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105603914 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.083522842 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087732213 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.099692547 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090038097 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.100518482 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.087799337 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.101763147 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.079834201 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103767043 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.086060343 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083998376 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.105499004 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.087824135 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.099343608 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.081019966 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.101410841 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.084411011 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110228588 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089888844 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.102916884 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085857731 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.080093836 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097413506 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088473909 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.098047441 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084043537 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.102856674 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088272583 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.102763104 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.082740235 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.083962851 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.10874909 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088184062 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105676867 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.079208189 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106030605 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.087507999 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.103369004 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083049952 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.099847171 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088606222 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087803587 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.1026521 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.081134753 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110048245 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086195483 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107424017 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.083542271 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.100899809 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.08273465 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.080106115 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.107290657 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.083739336 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108127993 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.084006851 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104990823 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091820565 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.100923167 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.081910666 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111137196 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085943901 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108676065 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080477953 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.101077985 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088919525 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088143938 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.100440476 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.08127932 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099088889 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.084734684 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.099633672 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.080836354 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110689405 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.090659354 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.102976874 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084920937 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084416829 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.100542906 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.081027538 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.100681328 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08835949 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.102406925 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.091841997 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.081197541 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.100912229 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.080498676 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105767355 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085626159 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104275011 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.079313267 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.080031308 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.100151725 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.084243416 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109191886 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084654475 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.105995348 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085866437 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103147083 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.083595901 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111446179 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079360697 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.085822312 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113912442 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.087562917 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102146269 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.087802627 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109620804 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.088115867 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099964711 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.088289416 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.104149299 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.082887728 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.107432326 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.088997797 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11624496 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08628467 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100765557 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.085239068 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.084623586 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.101418884 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.089567971 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108880321 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.087834781 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107109763 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.084238947 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108886778 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084719686 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108340669 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.085104356 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.104213061 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085495475 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082048565 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.103982914 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.080591235 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.109134413 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.088374138 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106414525 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.090450571 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.081167387 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113252479 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111151746 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087250669 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.079322149 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.101701816 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.082007645 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.100490327 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.088411995 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.079792257 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.104932995 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084915977 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.105236874 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.082758174 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107659445 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.084854642 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.107945726 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.087035634 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.075475411 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.104039174 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.085303524 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102862886 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.081160994 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.106518093 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.088431903 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.108564167 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093337388 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.082919406 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.10397911 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084027486 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103339242 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081233177 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.108821763 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0856649 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.08486604 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102507911 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086508595 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.109241482 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08599115 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.1084439 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08950089 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.10500453 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.091021041 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109800191 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.079603455 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.078628874 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.108948223 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.083207259 seconds)
  done (took 56.148426152 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124232801 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105919102 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077222869 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098073413 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12458079 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082458811 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076808418 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102593732 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081027059 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112083769 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.077807582 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098099167 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119443791 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105331098 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12216688 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113415844 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077498472 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10213144 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077861561 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102047835 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097780383 seconds)
  done (took 2.904233117 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.100787117 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.114401225 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093373869 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120859767 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108889501 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09547266 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114816644 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116737915 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099866165 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110328046 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120477211 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095813431 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.111062992 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.11001368 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090985955 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113177118 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.099583292 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109456771 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.117081191 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094318063 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113603467 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114604458 seconds)
  done (took 3.19081359 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.088279815 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.084821675 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.106625126 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.076997866 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.105906789 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.077125106 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.112100397 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.080363064 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.089843921 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101406553 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08078903 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.10106888 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086470674 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.076834829 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102543499 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.079992605 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.153703675 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.112045717 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086572343 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.108372944 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.080615268 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.105097742 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.080479804 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080384471 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102217519 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.095997704 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.109191558 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.086751587 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.106698003 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081582844 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.086020273 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.101202352 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.083522849 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103157915 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.081622248 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.081030428 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.107026451 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.085773534 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.101560852 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.083140538 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.103351048 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.082274642 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087873442 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104083227 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.083056222 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.100624243 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083425017 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.106768697 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.077460668 seconds)
  done (took 5.408210057 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.114456919 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.134938087 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.106736698 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.147558733 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121447932 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.095248809 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.10857774 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.146497759 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.080923348 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084563947 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125558931 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.121626346 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106674915 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.09284749 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110512431 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086809232 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.109510586 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08288217 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.111918538 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.082612522 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.113159667 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089088424 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.121702185 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.119280235 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091006186 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105909466 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.081943402 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.113044324 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.117922325 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.092344596 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.113471294 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094097518 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.122779488 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.10947356 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082351249 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.109702334 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.103763026 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.108225859 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089642759 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101396029 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089282927 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.113479316 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.090182491 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.123654262 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.107717468 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.08778805 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.107516465 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.079643541 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.119130328 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088703836 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.098148555 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.121313734 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091554938 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.107692686 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.112725048 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101400217 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.107524386 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.085165628 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.111923415 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.097834341 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102039771 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091563544 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119407766 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.110570994 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.095735338 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.120255921 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108971788 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091620842 seconds)
  done (took 8.123938002 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.112357844 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110340485 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103038449 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124042188 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113445711 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.091690587 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113622123 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090884183 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112695632 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.12020714 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09241581 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.162249574 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.088299946 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119826524 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11326396 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092208843 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112702304 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091527269 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.113581183 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091805693 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113293375 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12361582 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092256496 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.124041381 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125966449 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.089363293 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113140858 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092913274 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12402597 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113184388 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105231397 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.113237766 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.09138349 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.124381615 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.126230487 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.11237598 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086647674 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092176267 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.114056928 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113209308 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.089391613 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123695629 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091494103 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.110623148 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09114773 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112795404 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.12484287 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.104539477 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119112504 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120585833 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.092187579 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124231635 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113717255 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093869111 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.124191073 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.133141921 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103737559 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124884491 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114051238 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.103074064 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.124219725 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.131923305 seconds)
  done (took 7.670908945 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112415298 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116134596 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.124775719 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.078499695 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10316184 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091634054 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10292787 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.081368125 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.119508978 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098127392 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123310383 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112130511 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095086481 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122926846 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111683289 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095840515 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112649131 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091437971 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11923429 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.112564228 seconds)
  done (took 2.964697924 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.088684465 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.122843911 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084808791 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112685193 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.087254139 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.112438516 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.086220452 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108965066 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084439262 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107691645 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09611169 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.119167911 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084580042 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113065889 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116791066 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.092228288 seconds)
  done (took 2.45741971 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100103491 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.123335764 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.105701769 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.109622442 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.077646563 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.107260813 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.083237651 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099280573 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.079568939 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121126007 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089922166 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.111846854 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087667733 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.104036105 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.084718352 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.113032754 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.0810346 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.087897882 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.108546341 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.108973372 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.111418382 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.107977538 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.088533521 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.085808875 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.108998284 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.110298775 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.090686587 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.081773925 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.104046341 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.087106797 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.10820978 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.092503768 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101679124 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.088555465 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104200078 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.080964322 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10826545 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087795632 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.111072303 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.08696487 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.1030403 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.086910626 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086829614 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10737826 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.079918591 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.108375568 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.079781086 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.112171728 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.08533525 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.108233508 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.087570606 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.114414309 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.091068427 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117521673 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.094029196 seconds)
  done (took 6.239595202 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097130409 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106522577 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.077604916 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079714452 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.108768638 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.085886323 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.110524979 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08706404 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107267739 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081853156 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107532908 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089782994 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10767934 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.089277743 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108806572 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088794268 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076202618 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.102409033 seconds)
  done (took 2.561894291 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086605934 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081028778 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.108775822 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080860034 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101422397 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.083150502 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098226038 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.08200999 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082509705 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.105760728 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084845071 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.107446509 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082695865 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.108208252 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085358293 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105297668 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.086468377 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083254547 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.105594396 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.079533021 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108625244 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082922553 seconds)
  done (took 2.879258879 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118303203 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.12463588 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.09282908 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.216309974 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.12687052 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.110417677 seconds)
  done (took 1.640676068 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105150755 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138746876 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.081299511 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105726932 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098344121 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111582984 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089123593 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111943417 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124927773 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10299313 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111362338 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125832651 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102028068 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12201301 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120830786 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09835878 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11069864 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109713361 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086740997 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133581435 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089802981 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124957953 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111629578 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090036257 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110760501 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100496085 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124884173 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124374722 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089361417 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125209235 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120314606 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089616095 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12515155 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124089105 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087811399 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124879766 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111586139 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112204188 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119954393 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12338861 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087118793 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120354369 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125351285 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096592589 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124780225 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089533718 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118375518 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110399826 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089778312 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139189944 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12069007 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122206617 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098223661 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126076824 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124858141 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139072253 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102553222 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12212125 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119680281 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123150303 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100759413 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120471651 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123017294 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10243717 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119803273 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122802011 seconds)
  done (took 8.265688437 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120047757 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10544089 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089519768 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125030303 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123243007 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089190787 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111902654 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089703012 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111079837 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086395769 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.158874646 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112500107 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12345625 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101024546 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111739368 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110720149 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090299658 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124357093 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086868658 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139207599 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112486828 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100752962 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123352384 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123074978 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125000121 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098732282 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111949291 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090100947 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111606853 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111325543 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097295793 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111144688 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101977024 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10900003 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121911933 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089883239 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112856063 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097260753 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112508572 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120071464 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101578702 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130226648 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107013152 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085090845 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120217473 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106395576 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086710869 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103152596 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086169891 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103149187 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098585681 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120611152 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120534976 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118147857 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087078352 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108345468 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085419826 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107739529 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08603683 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117586583 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116594245 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08526444 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133991229 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106665636 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085914972 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119969496 seconds)
  done (took 7.977715893 seconds)
done (took 152.211215034 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097018494 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136118785 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096831769 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.177344324 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.081590464 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.114719695 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.134968878 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.094969091 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.102096746 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.081244852 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.103372724 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.083193204 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172281917 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.102093677 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.080521395 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.104700353 seconds)
  done (took 2.614179751 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.175995578 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.291614049 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100900318 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.100754765 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.085702257 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080432035 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.101824808 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.088777724 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.104568976 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.081659085 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.102062117 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.081904075 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.0798801 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.103211074 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.082375982 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.101824025 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.080690013 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.080650916 seconds)
  done (took 2.783544896 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.109394451 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.198658238 seconds)
  done (took 1.171292037 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.116627206 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.174597988 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.268725528 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.152492387 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.131342676 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094780053 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155127173 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.123291192 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.202629456 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.125503696 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.104676612 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.111274597 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.13446876 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.091742653 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.112217256 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.092112474 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141074706 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.091089432 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112270757 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.091941109 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137286544 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.080822353 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114521248 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.088253657 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.184245904 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.127866841 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105875242 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.084069673 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.088555385 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.112493104 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.086786122 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117966368 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.12621292 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.149539773 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.096831059 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.170018324 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.087851616 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.108282441 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.092717282 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.10829889 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.096479106 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.115280107 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.096045726 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.109932051 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.08078572 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.109856565 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.083296353 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.080071973 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.112461934 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.088882216 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.112926486 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.086873919 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.167267396 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.3654329 seconds)
  done (took 7.467456231 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.807063552 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.15060909 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091013863 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.881938446 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138387189 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124477576 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.786966239 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.137885893 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.229778749 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.820032033 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.102088158 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.126925485 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22830743 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.228377984 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.95407045 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.28474585 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.690917111 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.128825823 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.113244218 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.147431003 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115771753 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135039183 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.104844351 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.424571973 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.11058005 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085499977 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.113792866 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.09639628 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.155806961 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.110516348 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.08928148 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196100597 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.244569449 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.178701503 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110934418 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.085319301 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107980887 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.160744737 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.239774718 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214778581 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.171707607 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.083500566 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.108032655 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.095343216 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.128156266 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.082070759 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180241954 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.165015722 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.167036212 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118148612 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.100951716 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.122915973 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099641777 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.162301063 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.112879833 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.317364547 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.296048663 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114793257 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099130529 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.130968025 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266515015 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.090236757 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228995094 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116654906 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218466448 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.114576458 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.759753107 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.167969022 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114654061 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.097572749 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12080168 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095861134 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123285183 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167637348 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.406872598 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103712423 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.118466721 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090044484 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.231741968 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.091407804 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090709497 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186267323 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091818639 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121485782 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10336188 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125410448 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.16966239 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.228357815 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125813798 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098121595 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117916895 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.101513381 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.11199501 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.210470976 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217449504 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161200514 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.213779893 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120623702 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162917372 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.166849639 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123811407 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.17042133 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097771818 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128054534 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123712293 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.195284074 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.143206066 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.114536767 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094368593 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120102926 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.1217756 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.11551374 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.093282312 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.185532468 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.461692819 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.165753936 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.086534501 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.11674384 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093679371 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180641682 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095113315 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263168074 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093796278 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.16142807 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119486918 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.08507138 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.11515852 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.158074314 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122594208 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.096270755 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120003378 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117317973 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.224769128 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.197108279 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12524603 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22154335 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.180555583 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121734362 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17294968 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120978533 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167382547 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098224203 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118866097 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.087293857 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.769024562 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12199795 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.092863139 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113773524 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180522765 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085278709 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086611269 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.109420894 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.08266633 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.799006978 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.090014275 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.106899629 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086452958 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116965804 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.096734977 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.113789061 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.090269009 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159074312 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232952051 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125789745 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096665188 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.115517856 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.162466359 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.092003946 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.115496774 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.091229964 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.113376616 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.096825392 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113829887 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.089748213 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165478679 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.15444448 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.21694275 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.587196079 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.085707431 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.085463214 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.223792317 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109611063 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.256199069 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11604903 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.221834949 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.15855332 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082885577 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.310279968 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.162568678 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.18110341 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.088174978 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.185507085 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.083504805 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.092102381 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.178619856 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.085042045 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115480744 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.153441676 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.099688724 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.119539258 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.918468733 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086577975 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.221423513 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.106374508 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.161621116 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.08739317 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119337009 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289156923 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086810177 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125787353 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.155584451 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.0897298 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.10862913 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.844237179 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.109110666 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.095701487 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116771371 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.2172709 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.159766756 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093684444 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.116025689 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096089974 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.180138534 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207158023 seconds)
  done (took 42.820911317 seconds)
done (took 57.713139248 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.282574071 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211505223 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.263188058 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.166977861 seconds)
  done (took 1.884559415 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.17250862 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.125335451 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.143675256 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.081262838 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149168713 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.103405213 seconds)
  done (took 1.666263033 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.359383019 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.264399721 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.211945643 seconds)
  done (took 1.725367572 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.246722672 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.264953045 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.323094471 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.399024656 seconds)
  done (took 2.225754779 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.200586368 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.102919044 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.125415209 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.11832767 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.167910962 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.203130858 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.144249977 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.149048521 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.106728675 seconds)
  done (took 2.256806772 seconds)
done (took 10.649870767 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.243760647 seconds)
    (2/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.133208574 seconds)
    (3/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.250512966 seconds)
    (4/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.226004872 seconds)
    (5/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.253338196 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.12210189 seconds)
    (7/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.240714664 seconds)
    (8/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.142024637 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.11966758 seconds)
    (10/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.239221268 seconds)
    (11/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.09310121 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.115132941 seconds)
    (13/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.07211693 seconds)
    (14/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.114573513 seconds)
    (15/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.096624015 seconds)
    (16/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.246332467 seconds)
    (17/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.228559473 seconds)
    (18/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.232993742 seconds)
    (19/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.217020195 seconds)
    (20/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.129058318 seconds)
    (21/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.112963423 seconds)
    (22/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.091983042 seconds)
    (23/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.09588796 seconds)
    (24/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.243592472 seconds)
    (25/286) benchmarking ("sort", Int64, true)...
    done (took 0.231957642 seconds)
    (26/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.142382993 seconds)
    (27/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.115320523 seconds)
    (28/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.102056536 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.145890605 seconds)
    (30/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.201075174 seconds)
    (31/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.189760569 seconds)
    (32/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.084642642 seconds)
    (33/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.091314107 seconds)
    (34/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.161648595 seconds)
    (35/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.206918757 seconds)
    (36/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.090098661 seconds)
    (37/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.17849256 seconds)
    (38/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.194268961 seconds)
    (39/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.088048249 seconds)
    (40/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.108580923 seconds)
    (41/286) benchmarking ("sort", BigInt, false)...
    done (took 0.230303836 seconds)
    (42/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.089939284 seconds)
    (43/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.114081131 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.108316685 seconds)
    (45/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.128646101 seconds)
    (46/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.110088123 seconds)
    (47/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.176043549 seconds)
    (48/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.154070704 seconds)
    (49/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.183739746 seconds)
    (50/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.090041405 seconds)
    (51/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.080324881 seconds)
    (52/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.133143959 seconds)
    (53/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.135416676 seconds)
    (54/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.211056537 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.133302048 seconds)
    (56/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.19588973 seconds)
    (57/286) benchmarking ("sort", Int8, true)...
    done (took 0.225974136 seconds)
    (58/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.199323481 seconds)
    (59/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.083192266 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.08133661 seconds)
    (61/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.109460737 seconds)
    (62/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.088822528 seconds)
    (63/286) benchmarking ("sort", BigInt, true)...
    done (took 0.243288621 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.08104281 seconds)
    (65/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.097877752 seconds)
    (66/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.128035772 seconds)
    (67/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.097148544 seconds)
    (68/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.094487614 seconds)
    (69/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.113188429 seconds)
    (70/286) benchmarking ("sort", Int64, false)...
    done (took 0.083207106 seconds)
    (71/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.119340622 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.093898253 seconds)
    (73/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.073290866 seconds)
    (74/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.173483173 seconds)
    (75/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.196580538 seconds)
    (76/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.078897777 seconds)
    (77/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.177982956 seconds)
    (78/286) benchmarking ("sort", Float32, true)...
    done (took 0.235866684 seconds)
    (79/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.186613048 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.081266097 seconds)
    (81/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.168720833 seconds)
    (82/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.12130417 seconds)
    (83/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.110578536 seconds)
    (84/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.103973127 seconds)
    (85/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.162438959 seconds)
    (86/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.1350551 seconds)
    (87/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.189336608 seconds)
    (88/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.141311287 seconds)
    (89/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.124476481 seconds)
    (90/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.091777239 seconds)
    (91/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.25091586 seconds)
    (92/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.151553906 seconds)
    (93/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.084539892 seconds)
    (94/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.163052801 seconds)
    (95/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.141171342 seconds)
    (96/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.113795788 seconds)
    (97/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.110600777 seconds)
    (98/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.095916693 seconds)
    (99/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.080529113 seconds)
    (100/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.157853847 seconds)
    (101/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.15147697 seconds)
    (102/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.094272058 seconds)
    (103/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.069119865 seconds)
    (104/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.12065456 seconds)
    (105/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.080349331 seconds)
    (106/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.169385885 seconds)
    (107/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.071172228 seconds)
    (108/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.119711216 seconds)
    (109/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.110682769 seconds)
    (110/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.113313948 seconds)
    (111/286) benchmarking ("sort", Float64, false)...
    done (took 0.150056651 seconds)
    (112/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.165685571 seconds)
    (113/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.071359744 seconds)
    (114/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.11809722 seconds)
    (115/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.093451689 seconds)
    (116/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.106939289 seconds)
    (117/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.069863837 seconds)
    (118/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.075480878 seconds)
    (119/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.11046009 seconds)
    (120/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.088516373 seconds)
    (121/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.156659819 seconds)
    (122/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.136744939 seconds)
    (123/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.09330683 seconds)
    (124/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.11413642 seconds)
    (125/286) benchmarking ("sort", Bool, false)...
    done (took 0.184481524 seconds)
    (126/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.116858187 seconds)
    (127/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.096049523 seconds)
    (128/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.18810091 seconds)
    (129/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.089377944 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.111754449 seconds)
    (131/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.089318054 seconds)
    (132/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.097820634 seconds)
    (133/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.153922605 seconds)
    (134/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.094677004 seconds)
    (135/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.070329117 seconds)
    (136/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.105386022 seconds)
    (137/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.086286614 seconds)
    (138/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.17920364 seconds)
    (139/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.07274898 seconds)
    (140/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.090604212 seconds)
    (141/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.188724385 seconds)
    (142/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.186533593 seconds)
    (143/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.070115833 seconds)
    (144/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.200818417 seconds)
    (145/286) benchmarking ("sort", Float64, true)...
    done (took 0.238374027 seconds)
    (146/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.083335847 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.106655811 seconds)
    (148/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.081721179 seconds)
    (149/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.089596051 seconds)
    (150/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.131953621 seconds)
    (151/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.07284878 seconds)
    (152/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.17767954 seconds)
    (153/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.116126735 seconds)
    (154/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.097565692 seconds)
    (155/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.176969716 seconds)
    (156/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.070100746 seconds)
    (157/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.084285055 seconds)
    (158/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.094401974 seconds)
    (159/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.083072409 seconds)
    (160/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.116839486 seconds)
    (161/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.081660738 seconds)
    (162/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.112462853 seconds)
    (163/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.093744798 seconds)
    (164/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.069395612 seconds)
    (165/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.114887298 seconds)
    (166/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.091263426 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.108632304 seconds)
    (168/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069932053 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.082388966 seconds)
    (170/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.11219052 seconds)
    (171/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.191602715 seconds)
    (172/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.083161412 seconds)
    (173/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.12590286 seconds)
    (174/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.072044467 seconds)
    (175/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.133680656 seconds)
    (176/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.0893255 seconds)
    (177/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.092096246 seconds)
    (178/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.095139596 seconds)
    (179/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.075765957 seconds)
    (180/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.074728077 seconds)
    (181/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.106561013 seconds)
    (182/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.081016761 seconds)
    (183/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.113759788 seconds)
    (184/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.108087549 seconds)
    (185/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.106035167 seconds)
    (186/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.132939832 seconds)
    (187/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.117680445 seconds)
    (188/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.095951959 seconds)
    (189/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.114457532 seconds)
    (190/286) benchmarking ("sort", Int8, false)...
    done (took 0.193398509 seconds)
    (191/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.084029358 seconds)
    (192/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.070337727 seconds)
    (193/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.104952436 seconds)
    (194/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.08030245 seconds)
    (195/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.106083907 seconds)
    (196/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.08681317 seconds)
    (197/286) benchmarking ("sort", Float32, false)...
    done (took 0.179332801 seconds)
    (198/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.08520864 seconds)
    (199/286) benchmarking ("sort", Bool, true)...
    done (took 0.22882492 seconds)
    (200/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.083587149 seconds)
    (201/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.134201902 seconds)
    (202/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.070781751 seconds)
    (203/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.136327079 seconds)
    (204/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.083527165 seconds)
    (205/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.110510452 seconds)
    (206/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.093303501 seconds)
    (207/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.117803795 seconds)
    (208/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.093660731 seconds)
    (209/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.089832598 seconds)
    (210/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.10718158 seconds)
    (211/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.17749984 seconds)
    (212/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.073272926 seconds)
    (213/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.070508052 seconds)
    (214/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.106165218 seconds)
    (215/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.087916424 seconds)
    (216/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.070574781 seconds)
    (217/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.097701508 seconds)
    (218/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.101257877 seconds)
    (219/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.106485324 seconds)
    (220/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.073245506 seconds)
    (221/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.151037072 seconds)
    (222/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.140100259 seconds)
    (223/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.119776344 seconds)
    (224/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085571391 seconds)
    (225/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.096863466 seconds)
    (226/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.120012059 seconds)
    (227/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.086036774 seconds)
    (228/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.126915025 seconds)
    (229/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.114296568 seconds)
    (230/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.109051267 seconds)
    (231/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.083948606 seconds)
    (232/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.117612441 seconds)
    (233/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.089502699 seconds)
    (234/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.070554481 seconds)
    (235/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.119503526 seconds)
    (236/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.084864222 seconds)
    (237/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.10769876 seconds)
    (238/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.075037661 seconds)
    (239/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.070392867 seconds)
    (240/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.111118185 seconds)
    (241/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.083763889 seconds)
    (242/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.107526796 seconds)
    (243/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.076876387 seconds)
    (244/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.16158219 seconds)
    (245/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.074145497 seconds)
    (246/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.071111948 seconds)
    (247/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.109305006 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.089089939 seconds)
    (249/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.108568532 seconds)
    (250/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.073612745 seconds)
    (251/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.090624513 seconds)
    (252/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.096241647 seconds)
    (253/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.086002475 seconds)
    (254/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.10726616 seconds)
    (255/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.082671409 seconds)
    (256/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.070436512 seconds)
    (257/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.105738606 seconds)
    (258/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.080925887 seconds)
    (259/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.080865603 seconds)
    (260/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.153936169 seconds)
    (261/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.082156195 seconds)
    (262/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.113569233 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.090652487 seconds)
    (264/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.098566199 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.084357806 seconds)
    (266/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.083116652 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.106489793 seconds)
    (268/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.080302119 seconds)
    (269/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.107404068 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.09210769 seconds)
    (271/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.070873669 seconds)
    (272/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.097873425 seconds)
    (273/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.08175929 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.106102094 seconds)
    (275/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.083640745 seconds)
    (276/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.084745707 seconds)
    (277/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.095003968 seconds)
    (278/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.095566836 seconds)
    (279/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.241893802 seconds)
    (280/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.072379243 seconds)
    (281/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.126782231 seconds)
    (282/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.080930851 seconds)
    (283/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.108720551 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.081039144 seconds)
    (285/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.070559709 seconds)
    (286/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.192431765 seconds)
  done (took 35.64470358 seconds)
done (took 36.543605657 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.095522976 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.150160494 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095460895 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136905598 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.097361908 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.121866765 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.091601272 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.094800907 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.121236989 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.097427691 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.11955642 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.074311728 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.118782399 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.093284887 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.118988974 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113034956 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.121025298 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.088555028 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.111382596 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.083371508 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.08566525 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.108168252 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.083465478 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.097822427 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.097645101 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.090118643 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.113977056 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.09358445 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.109486383 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.084826057 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.106113465 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.089830343 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.081967214 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123205871 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.091586821 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.112941864 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.094373969 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.117974745 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.087461691 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.083089458 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.116717623 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.085724635 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.114750606 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094464522 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.084696176 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.107033156 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.086514764 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.122813955 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117722215 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116928069 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.093025234 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.118012753 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095405112 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.088944554 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.108058531 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.087673199 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.107865439 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.118788733 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.111564933 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087671442 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.09070168 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.116140324 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.080881445 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.112344194 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.085929171 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.118774924 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.094408804 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.081199911 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.117177228 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.088034911 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.108438979 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.090380396 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.107186113 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.084558172 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.092460174 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.119571686 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.082201086 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.108726889 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.089500895 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.087938942 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.108840771 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084908337 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.109499052 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.086060218 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.08498312 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.098842111 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.081464094 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.114225091 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.083997185 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.085767118 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.114798181 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093273069 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.109758731 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.096237756 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.106168354 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.083964111 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.082396474 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.108682159 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.0889329 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.081059334 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.108214176 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085000669 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.117139712 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088200255 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.083919769 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.121490908 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.082410352 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.115053411 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.083785844 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.106655416 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102226661 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.116359367 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.084915406 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087909885 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.107600608 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.088255406 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.081690389 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.108683038 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.081993239 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.108438513 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.088860206 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.082030445 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11219994 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.084010142 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.122883009 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087702658 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.084277855 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111310818 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.082574352 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.114834875 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.087012295 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.082627809 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.110032463 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.0799565 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110865356 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088294633 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.085298858 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110939398 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.086517109 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.110194413 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.089736333 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.112828449 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.088335418 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.084428134 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.10802615 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.079021966 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113276687 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089306788 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.083754951 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.108847511 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.086794474 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.082276799 seconds)
done (took 15.984703395 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.082809297 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.181988671 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.148539024 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.121451412 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.132445302 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.08740033 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.119735774 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.116718451 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11375782 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.139407808 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.108298551 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.12870036 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.123552312 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.108533918 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.085283238 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.086043927 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.111246377 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.100905529 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.14859889 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.131896595 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.119863303 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.108564683 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.114748225 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134410293 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.094354448 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.126528295 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.083380388 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.113090026 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.086990579 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.134860967 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.103754906 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.11306138 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.085708152 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.131042687 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.1000302 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.11618589 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.085440186 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.089227347 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.109418362 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.085742807 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.134074226 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.131815064 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.090133196 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.088855918 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.113266183 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.089782926 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.110585953 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.094355731 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.119555776 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.091118291 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.123830911 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.1161021 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.112589138 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.096965064 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.108554027 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.098203287 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.118703778 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090690997 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.127415086 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091138764 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.084897087 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.113370572 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.101915249 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.135915104 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.089328644 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119764502 seconds)
  done (took 8.25595888 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.100014627 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138701653 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106803471 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.129591282 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.085032236 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.10853385 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.089952854 seconds)
  done (took 1.723831169 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.083964679 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.108950854 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.136731039 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.116095651 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.136259917 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.136668108 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094995601 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.085828031 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.130309416 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089598813 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.138532467 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.130845238 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.115995485 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.091673122 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.139792646 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.08988641 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.142798148 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089538597 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116933664 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.117161258 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118342286 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.107203757 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.113180372 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.088937709 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102581783 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.110489472 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.159461911 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094703264 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.082232526 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.113981388 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.084142529 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.150576131 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104778168 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.11992694 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088187773 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130873673 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.108201047 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112856678 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.104246337 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.119617015 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.108531881 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090111721 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.11617573 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.08432764 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.115312882 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.104069163 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.119510709 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.090971079 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091777386 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.136298491 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.091225162 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.133325901 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.09078186 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119037173 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089822189 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.087519348 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.121072985 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089249038 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.136036139 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.087467035 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136786443 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.110930674 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.134601237 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.110803399 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118701146 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.107872934 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.132354337 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.092170735 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.087808446 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.115325136 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.10588804 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.108592026 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.091022882 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.124855253 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.090746356 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.116402065 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.140825371 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091541317 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.128223301 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.089351177 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.111800659 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.090426314 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.141927226 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093582523 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088807548 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116388142 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093438682 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114076847 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088109548 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118786084 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.088976241 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.09216526 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.121267079 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.091237407 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119842996 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.113984422 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.09170077 seconds)
  done (took 11.592996393 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.085842146 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.086200609 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.115476398 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.093287198 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.114642166 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.090675831 seconds)
  done (took 1.567327042 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114003443 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.112596415 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.105080746 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117784464 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.131710621 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.136226687 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.11630992 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12675291 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107037344 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.124314474 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.115793251 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.141412233 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.14521025 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.096043056 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.135120064 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.092820027 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.136200654 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.0964826 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.095118713 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118356386 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.100703781 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.118196754 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.090477423 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132778105 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.100211503 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.117238541 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.09587226 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.12419925 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.100541479 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.121396084 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.093342921 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.122325963 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09060279 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.120898351 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.111975691 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.117174648 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089360789 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.124282981 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.093807005 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.121809152 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.111017386 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.118148561 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.098335016 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.123281592 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.09383068 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119682446 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.099082601 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.1176045 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.109276213 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.125279048 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.096927856 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.115369135 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.0943064 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.123645407 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.092122403 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120611053 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095995655 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.138098396 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.092641379 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.117898905 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.091928863 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.122272786 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.100263079 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.122441779 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.099192915 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.124027395 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096124919 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.117959123 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095437773 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.11691451 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.10313787 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.117231125 seconds)
  done (took 9.046178516 seconds)
done (took 33.142601705 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.683026838 seconds)
  done (took 1.658730386 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.874932332 seconds)
  done (took 1.851931243 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.512934041 seconds)
  done (took 18.516192061 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.466942736 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.555209173 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.952764651 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.161725174 seconds)
  done (took 3.10939838 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.953152947 seconds)
  done (took 1.944678942 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.285571076 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.235034008 seconds)
  done (took 1.502812369 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.812514332 seconds)
  done (took 1.801841284 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.473582767 seconds)
  done (took 2.466899605 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.328023946 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162595008 seconds)
  done (took 1.491298239 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.567636721 seconds)
  done (took 1.565551307 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.282733488 seconds)
  done (took 11.281085932 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.240651437 seconds)
  done (took 1.248540347 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.289761161 seconds)
  done (took 1.288196075 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.640459643 seconds)
  done (took 4.637388529 seconds)
done (took 55.345830678 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.094187558 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.098171303 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.125782331 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.10215574 seconds)
  done (took 1.410672184 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102493685 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.097097615 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.132921934 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.096830366 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.133804903 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097240339 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.128242021 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.175132458 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.097455939 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.098672927 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.125125679 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.09587472 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.121887271 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100210277 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.117950024 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.099887667 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.126818351 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.096487331 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124614946 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.098596142 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119539377 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099847229 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125434453 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.096927041 seconds)
  done (took 3.712540687 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.098091795 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.089694395 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.120109663 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.095746487 seconds)
  done (took 1.408445668 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.098280367 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.104326717 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.133989038 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.10075282 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130432893 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.107840846 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.120309283 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.086989667 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.117288643 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.102551768 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.114383321 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.116475418 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.135413185 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.102076463 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.13003995 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.094800447 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.093212989 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.136307249 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.102539592 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.129944327 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.094805236 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.129256937 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.092627838 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.136734904 seconds)
  done (took 3.720317107 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.167928317 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.12598616 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.115085921 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.119561448 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.135819162 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.143478237 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.090578026 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.144882919 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.090323169 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.13409799 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.094714398 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.170215564 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.102526505 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.111482813 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.089858219 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087899675 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.12816915 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.096391133 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.117646044 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09914045 seconds)
  done (took 3.372535715 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.095423472 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.087966481 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.11146611 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.093103502 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.127315636 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.096268645 seconds)
  done (took 1.625339046 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092011786 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.084387864 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.116278342 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.092256997 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.116973431 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.088900602 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.084189507 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.1137278 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090463336 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.111122582 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.092469926 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.086131839 seconds)
  done (took 2.182441721 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.519729849 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.125053671 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.093226208 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.113639134 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.100935709 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.111135944 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.106132993 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.086031797 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.143611761 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.090114029 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114097158 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.093996862 seconds)
  done (took 2.714267953 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210377259 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101686791 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263828286 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.361511751 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164259345 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170342585 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.282238024 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171035927 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.192265927 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142620323 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201610281 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135444854 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159405264 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183996124 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146248182 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.132370898 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175297557 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232650156 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127761361 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209963303 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165476467 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173336709 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184747782 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157465497 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142660358 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136349022 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.126342354 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103823176 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17545105 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17279516 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202575443 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127673661 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141188444 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203810087 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239226046 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181540931 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28861893 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112540844 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.185635464 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.172845464 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231118138 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145892374 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200502852 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160242853 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133363961 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187982152 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133804317 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.185313097 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.13427688 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138339168 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18654578 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180975197 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.183896229 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139461477 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307540683 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152221923 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.117388514 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183149136 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18820979 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193677913 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172557676 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.119783325 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187682742 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187180559 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182672528 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.148390857 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.167515269 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101396364 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171904736 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197989973 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181388728 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168499084 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.219321354 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112668226 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167758824 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17389265 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157439775 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183151591 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163362163 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.098512188 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150412638 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114692114 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128993822 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.198751862 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101289769 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207194256 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141479598 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.177356628 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209327496 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160048207 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137337304 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167988113 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169545967 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151372286 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.092144225 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14672594 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.153150516 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160711894 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110484304 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155127668 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147695786 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.103736418 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1508542 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.098052331 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15945005 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.132013744 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168118108 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140544336 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.129595687 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168707715 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125719722 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.153318338 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167730609 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189803543 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13504931 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107731543 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193107743 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159164393 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.139555498 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177837959 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188869397 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.128579715 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140536638 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166171731 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196608203 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14425753 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188470935 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142807067 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109635234 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.139371857 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163757666 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159178524 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.13506387 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130094439 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.157086614 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19530352 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.101126118 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135753801 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180698514 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09755278 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128950907 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1476521 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113872196 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.137666722 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.118093303 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.136772531 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160896321 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164630717 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128334293 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151996749 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147174451 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195104119 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138750836 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.128808123 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154013692 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.09712284 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.211460487 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189251536 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107262946 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199889466 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.169812759 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229745098 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167383173 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109795236 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181095983 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103803938 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.123014052 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167954651 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165388648 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166081327 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.185192816 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19928239 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.172324001 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.158652872 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124640677 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167388232 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.170770725 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160297951 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.14155982 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138248308 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164196528 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.127694302 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.100682874 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.1326674 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118715824 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13302855 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108017283 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212885563 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166037737 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188345911 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163622425 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117059151 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1800692 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128084719 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169662392 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.176228054 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114175337 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.182552919 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18260754 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172440533 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144903488 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179800679 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.095175271 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123858683 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.108852835 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162692379 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132923162 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110167529 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145954464 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180623512 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172177328 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149401764 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206940092 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168393899 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194971835 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120562177 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.142412042 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166773407 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163130298 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.180497957 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113329944 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.153794719 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181244109 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141659774 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194254879 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135255716 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166578296 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224451061 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.125856915 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130699754 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153581468 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168014513 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115664342 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16500536 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14916668 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10850912 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150375494 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.127621046 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098677268 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17050251 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145959024 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18103206 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.146395891 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169019878 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099083709 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143234212 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161905964 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116107259 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.11730285 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162935309 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183024413 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148796398 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158192172 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172291199 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106855319 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.310433367 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190112176 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186901274 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140974176 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147063785 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135634626 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159234711 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16624082 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184258843 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14887454 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17921864 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133455361 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.134943976 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140078825 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119769567 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149999207 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.142262345 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106866358 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.152161105 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.141633389 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182436076 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119004669 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167033557 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1686567 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.153599601 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.120486471 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148426707 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205861048 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163457764 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17850943 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.124638896 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.164091337 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201541451 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129557051 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098159221 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.131471137 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18260391 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108324084 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160322216 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.185622345 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231152387 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164583943 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167664325 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113723779 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.087342704 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159642173 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148059968 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20182581 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143932247 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.138096846 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185511489 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.118222547 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13126161 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164126341 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289078104 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117488463 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171317231 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.118574911 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.282471032 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09806383 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130843496 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165068666 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175200062 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.115015574 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.182215901 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170748054 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120073214 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162287746 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141941892 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193847188 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210697014 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170562343 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176213154 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.137185291 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13113437 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162805942 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174300761 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146898592 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.139007003 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137658693 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179512043 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.185906434 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.138948026 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166387261 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166132314 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131530153 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195473032 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109088056 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195342971 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137785555 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165060103 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144215539 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099197796 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156824969 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.190961691 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136776959 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173186637 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134119411 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137587967 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103114489 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158796861 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163681783 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146710286 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.103281232 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176025274 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127421218 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138158666 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179146022 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138077704 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157758951 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120904062 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140374109 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148782073 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116149541 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136133363 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.140345864 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181427975 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.13087952 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181274163 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181310849 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166407803 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164874563 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118552497 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.668246256 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.12714709 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18193813 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121045947 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183393193 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153845671 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171030715 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163431859 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119977469 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165649057 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155182021 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.233213869 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171255086 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.162600105 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105093003 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145487111 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147931801 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.103184269 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151541251 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166524614 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116927837 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.137476288 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.16123115 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14862148 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.110452744 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138669745 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187703406 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120905623 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174623178 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183889962 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138934128 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171154006 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17199606 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105061374 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.158041213 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170582381 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143268118 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149747845 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.104803453 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.133263911 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183034444 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.09601055 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159345372 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16107848 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157652407 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135342452 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.133859666 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164932087 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144012661 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134431633 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130962891 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.157920535 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130351238 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130956413 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126118229 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129309689 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153243059 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.152061841 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100958734 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.164624482 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183552064 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.09372992 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13150602 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279872015 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155219973 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190353908 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.113120147 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134727388 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113266409 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148087213 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.155523896 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159510883 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.104478664 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137712267 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.104315817 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.167554446 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.148388046 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13167309 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186256508 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159611834 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194397057 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136793953 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.284306644 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107699977 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153360699 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.096370756 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.129024426 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144635785 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106559193 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143333768 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191325053 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180763704 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.144431117 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.109351187 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125841871 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.099944496 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132508294 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13164731 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150881577 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158129387 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144090854 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.085886325 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144082698 seconds)
  done (took 76.135915605 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211584553 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.193352641 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.169774257 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.226465915 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.1814907 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.319709167 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.226528604 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.313028186 seconds)
  done (took 2.940254841 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.089495687 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.14381213 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.132674876 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.13469903 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.116173865 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.094835337 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.328444654 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.137830824 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.086538094 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.146808686 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.136968889 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.123533108 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.501056753 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.123931152 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119635215 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.081299814 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.115132519 seconds)
  done (took 3.702366798 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.423862396 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.487154384 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.168434171 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.193417727 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.179793247 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.092092617 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.725035563 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.090708552 seconds)
  done (took 12.462342939 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.117666242 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.108914912 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.167584573 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.165524363 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.121000855 seconds)
  done (took 1.793655414 seconds)
done (took 118.169911563 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.095446303 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.095254877 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.12774849 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.096986159 seconds)
  done (took 1.503377299 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.099994799 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.078754949 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.106055239 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.080309585 seconds)
  done (took 1.467969772 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.1906173 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.173912326 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.417407405 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.082298372 seconds)
  done (took 1.63166935 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.111727952 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.129796175 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.108883144 seconds)
  done (took 1.465650807 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107866095 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.097719775 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.129636383 seconds)
  done (took 1.443880373 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.102719467 seconds)
  done (took 1.208982357 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108868161 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.14079691 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.11652956 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.141214804 seconds)
  done (took 1.619801987 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.099297008 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.095134303 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.139001064 seconds)
  done (took 1.433644169 seconds)
done (took 13.243476963 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103265243 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.427773007 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.392754781 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13637266 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.70187969 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.414586152 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.046681966 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.149474034 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.176386652 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096302538 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141197792 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676757761 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.030033854 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.35159373 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.015254697 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.350448729 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.671112692 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119646556 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095439049 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.116669027 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.029320942 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116743068 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096309164 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093581201 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.699549451 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.398523581 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.119384386 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.350676283 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.118564707 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100240578 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.374436171 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.120022038 seconds)
  done (took 16.914759162 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094870252 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.179078287 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.107989138 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122375497 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.099400709 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.08922173 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123922978 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.08890999 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180805791 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.118933104 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113555896 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.118246496 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.092882798 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.0880874 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.139076044 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.088380744 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.119085198 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.090810668 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118442202 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093273845 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135331518 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.088769849 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.088507 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119730684 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094645808 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130598908 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089277691 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.117386062 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091086625 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095667094 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.121717552 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.089176971 seconds)
  done (took 4.639097145 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141965994 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.188053603 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.107281029 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.154863368 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.171799294 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096850682 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197603759 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147833157 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.162401555 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.1233924 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.107540149 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122590541 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125444217 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.12117496 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.109038513 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120024506 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095602826 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119065982 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095371539 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.118592989 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.115178312 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11898849 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.091712661 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.088550889 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.1201088 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109133517 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.120186026 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.092742144 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.118899326 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103172635 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.09664884 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.120681285 seconds)
  done (took 5.038251337 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.093456799 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.093786313 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.136482395 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.112314834 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.127527916 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.098864129 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.122937168 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.097411769 seconds)
  done (took 2.000385751 seconds)
done (took 29.697326684 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.1071058 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.094322949 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.135227141 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.106004901 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.129412794 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.10430627 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.117380691 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.103680357 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.101286098 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.129006492 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.104759508 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.119738778 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.09719403 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.12362576 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.109172219 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.093819871 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.134214852 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.105882818 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.140098187 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.109868325 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.128347216 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.108243985 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.12839325 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.112449374 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.137285126 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.111703186 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.111343436 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.126627774 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.089243848 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.121769482 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.107415853 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.147459095 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.098532746 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.139602924 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.1015214 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.099872653 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.122220678 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.09298158 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133682666 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.108318395 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.133491342 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.107298247 seconds)
  done (took 5.938855624 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.116486639 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.153392857 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.118765993 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.121988144 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.097822329 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.088549029 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.147406447 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.089279665 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.115597981 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.115619077 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.108469999 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.087067065 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.081522403 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.106669071 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.082524194 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.077841888 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.114320806 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.084846376 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.108931165 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.087125568 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.086958311 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.106856133 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.089082255 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.081035129 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.109947305 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.083807222 seconds)
  done (took 3.787638807 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.094885258 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.102838 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.141425572 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.180373892 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.131526261 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.134229061 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106684785 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.142726333 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112210333 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.087658701 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.122279944 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.122192877 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.137847935 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.100068653 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.122797178 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.11041337 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.132873483 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.097119903 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.09658275 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.141020725 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.111926668 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.129902999 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.105101557 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131501673 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092002813 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09226923 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.124992307 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.100318274 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.128508914 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.103569047 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.125378559 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.096185241 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.120164551 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.10957285 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.101573231 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.125689735 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.107538647 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129940021 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.104278414 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.119330078 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.096574609 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.09108514 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.145182589 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.158290234 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.089205469 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.095079903 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124121832 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103980522 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122208533 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112915691 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128228477 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.093863269 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.091525707 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.120969983 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.090510844 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136743604 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.097416104 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.118845055 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.101868834 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.093741827 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.133088619 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.096275082 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133919036 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.093555676 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.125445553 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.095811611 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.089354101 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.119238385 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.116924426 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125226726 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.132299494 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.127120917 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.090906349 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.12621645 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.096382134 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094816065 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.120633192 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102882681 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130188975 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098705472 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.129677036 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.091107344 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.090725647 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.139433002 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.090793251 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.121158426 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.091662185 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.125323156 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.099334366 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.092506884 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133774659 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.093417439 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123666373 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.107422653 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.118800287 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.090052863 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.094420084 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125077035 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.08812846 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.132662833 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097365263 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.121692515 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.105588239 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.119692971 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.09494814 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.098095362 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.125495047 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.088420805 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125030282 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.10012011 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.119713936 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.099511218 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.096770717 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.122098265 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.099718443 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.127268377 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.101215607 seconds)
  done (took 14.289102138 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.23102483 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.225020086 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.19424856 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.269270582 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.139921177 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.119973046 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.210776959 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.158648566 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097342647 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.158594394 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.171992578 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.187972257 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.177084706 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.190676287 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171487094 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.095924291 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.144501854 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.141797858 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.22241701 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.302281538 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.116181762 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.130481336 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.164730918 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.133394786 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.133686982 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.099024286 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.139876331 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.130789127 seconds)
  done (took 5.799236239 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107812792 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.15403657 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.100541144 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.142281896 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.11821224 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.12164727 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.099393255 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.120878101 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109693128 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134894952 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.095874651 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126016534 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.103235865 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.09781703 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.125822528 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.097704576 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131112079 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.092996664 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12329993 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.101445623 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.099616443 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.140135401 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.124044303 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.095826373 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.098711872 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120124567 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.09750813 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142982769 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124965179 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.114078176 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.086644423 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.129012713 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.107760716 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.121973156 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.096067724 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.090651442 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.127795394 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.090690023 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.122483451 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.09471859 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.089126046 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.116529233 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.087849706 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136339704 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101960708 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.115754818 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.102718736 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.125843018 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.093042239 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.08637803 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.124055936 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.099308877 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.123720031 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.101009274 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.091215588 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.121503635 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.099710161 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.12018326 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.101619636 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.091168313 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.124073225 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094344047 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.125285372 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.093978544 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.130454413 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.101247794 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.117201422 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.094310637 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.093736962 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128643777 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.097662092 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.125332663 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090534448 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.091536593 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.12474347 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.101642504 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.123757205 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.094348437 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.090586346 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.122295144 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.086781975 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124985741 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.083059967 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.091807329 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.119767613 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.094000624 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.121349318 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.104108846 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.141212399 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096552872 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.12773066 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.096562757 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.087863799 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.124734134 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.093232212 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.122864147 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.111622906 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.14041727 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.095498041 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.117731473 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.110865492 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.091541423 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.12127012 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.087146967 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.129801836 seconds)
  done (took 12.689524137 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128232292 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.152427806 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.09770652 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.137999871 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.128986005 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.15833954 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101851932 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.128573658 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.093810005 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.140137378 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.0981556 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.102781081 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.122136623 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.109629949 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157520842 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.10609685 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122966028 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.104154362 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126103671 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.143131322 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.139947961 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.107645737 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.139641344 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.097153908 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.127204699 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.112349134 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161638457 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.109640399 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.13606581 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.115404198 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.139663995 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.137635765 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.148690338 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.101002038 seconds)
  done (took 5.380564314 seconds)
done (took 49.001688831 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.207435217 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.438574092 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.206107412 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.124272885 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.243693935 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.231740033 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.220827428 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.206126382 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.403501663 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.208525897 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.475828218 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.879574307 seconds)
done (took 58.978185208 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.231620428 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.373713386 seconds)
    (2/2) benchmarking "String"...
    done (took 1.508690877 seconds)
  done (took 4.026798962 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.795805694 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.179932215 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.471336937 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.203360318 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.209887735 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.49427238 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.978959406 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.659942924 seconds)
  done (took 28.330616843 seconds)
done (took 42.522223456 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.238043106 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.223574722 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.252971322 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.191104096 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.318680494 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.232092421 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.56723137 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.251471978 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.234525513 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.192466749 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.212169607 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.209064431 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.210636814 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.374917889 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.210251293 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.210385393 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.262901895 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.836741231 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.6418345 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.218485835 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.208190345 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.234377563 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.224482937 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.216985718 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.265684899 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.207143044 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.217032194 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.230662687 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.960709718 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.213234519 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.231601411 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.28097256 seconds)
  done (took 190.712573304 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.207514931 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.207321268 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.276284011 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.277198134 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.604414833 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.40955322 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.341621117 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.689205546 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.233494039 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.240351436 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.369999548 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.214182312 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.443781748 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.178665533 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.242010827 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.292428191 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.449368517 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.505583272 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.25194519 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.333698059 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.231547521 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.368886905 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.255051811 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.397100527 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.231926032 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.272745949 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.224071692 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.218766487 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.396697859 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.345546879 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.229903114 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.25656619 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.849471215 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.064517822 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.224466763 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.218228572 seconds)
  done (took 149.69142039 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.20439305 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.20406949 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.202271416 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.204783052 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.236163487 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.206268036 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.784798096 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.812859795 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.735964719 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.765189121 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.704880482 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.479192437 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.201695298 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299418554 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.219510676 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.204698188 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.22149101 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.232073228 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.205637651 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.206248073 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.810879516 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.222844033 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.387660072 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.390350895 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.224167259 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.23613996 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.605688857 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.203576086 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.237831317 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.789415366 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.552128056 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.264903015 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.201981125 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.203100351 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.619209941 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.325560638 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.205009439 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.238987469 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.210906216 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.490418644 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.212369357 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.205544293 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.208408959 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.208248278 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.919617235 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.212091281 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.790707583 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.212571167 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.182697631 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.20672405 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.205925589 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.271900921 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.010298805 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.212170559 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.206861755 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.206339415 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.205909831 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.205405214 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.237823739 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.371639195 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.313210341 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.213654007 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.208899448 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.237880631 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.210425229 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.388404932 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.207225166 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.315629042 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.265334547 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.432744482 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.810012923 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.212828706 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.308426447 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.326017026 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.206738518 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.206666743 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.205639437 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.205803459 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.205918079 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.317643698 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.205619825 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.633279356 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.383731229 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.224542574 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.685954715 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.308907949 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.20589373 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.651486918 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.212245157 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.20703267 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.966118614 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.304048692 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.208407577 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.206787019 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.207782708 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.631118963 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.810216776 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.494238221 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.212847609 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.600946705 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.212113969 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.642093406 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.769613606 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.917765795 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.214971802 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.31958254 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.386487132 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.226816019 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.208558253 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.688729709 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.214522898 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.264269704 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.2167986 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.608556731 seconds)
  done (took 367.439268309 seconds)
done (took 708.980644999 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.822766208 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.818146611 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.931439473 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.811503305 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.770802672 seconds)
  done (took 10.29099812 seconds)
done (took 11.431664422 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.408509781 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.414196633 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.27638555 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.413551074 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.248582387 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.435286934 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.390547325 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.234894052 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.313808193 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.299845035 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.318789887 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.26992261 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.251704686 seconds)
  done (took 18.416572593 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.583873871 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.536406358 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.281243825 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.579799393 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.257920918 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.529995598 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.42554622 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.430113048 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.456973742 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.232632171 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.222732911 seconds)
  done (took 16.678240619 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.540766821 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.554199378 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.285403681 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.534757412 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.2553152 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.549101884 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.422941017 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.461855428 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.433313082 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.233534437 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.223621238 seconds)
  done (took 16.636302943 seconds)
done (took 52.876584343 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.234705537 seconds)
  done (took 2.379068165 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.262888893 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.432675722 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.249710207 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.229951876 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.223934203 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.229915105 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.232769798 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.226501612 seconds)
  done (took 11.231842529 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.223567126 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.218579299 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.217191249 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.221394756 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.218476572 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.218005828 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.220459335 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.216861933 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.222508141 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.217318305 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.220674831 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.220012598 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.219453882 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.217686274 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.22009853 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.219344362 seconds)
  done (took 20.656937941 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.22126666 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.218565328 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.221261238 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.219915099 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.217388891 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.218566201 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.220882697 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.219343974 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.218108606 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.219185162 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.219267003 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.219639649 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.223173569 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.219039673 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.224918787 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.221423968 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.222666099 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.221851541 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.225961596 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.218972206 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.220313916 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.220051827 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.220155114 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.22086113 seconds)
  done (took 30.438445535 seconds)
done (took 65.851463609 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.89471624 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.981098487 seconds)
  done (took 7.022567266 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.281160903 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.281998561 seconds)
  done (took 3.713364055 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.223241344 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.220995335 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.220639114 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.223022348 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.222490298 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.221886991 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.22166263 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.222520051 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.22397168 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.22155394 seconds)
  done (took 13.367225696 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.22292295 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.222194513 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.2194534 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.222024738 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.225521666 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.219293459 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.22338429 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.223453819 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.222547982 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.220590266 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.223534806 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.22010479 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.224099903 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.222624682 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.225068788 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.219006054 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.219746363 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.218520786 seconds)
  done (took 23.141061314 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.23466782 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.242871977 seconds)
  done (took 3.623052462 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.350633622 seconds)
    (2/7) benchmarking "second"...
    done (took 1.263560748 seconds)
    (3/7) benchmarking "month"...
    done (took 1.349948549 seconds)
    (4/7) benchmarking "year"...
    done (took 1.31811835 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.260178249 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.709332468 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.262065371 seconds)
  done (took 10.660685597 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.224832112 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.407018713 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.509839804 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.799888452 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.226543413 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.22539701 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.115204624 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.227324576 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.230143073 seconds)
  done (took 14.111170872 seconds)
done (took 76.787172695 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.238549111 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.22240177 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.625041064 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.230770204 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.25185237 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.513259684 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.270846842 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.341467232 seconds)
done (took 37.840843496 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.223730297 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.204235715 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.100088195 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.232431929 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.356141121 seconds)
  done (took 19.038679523 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.300046365 seconds)
    (2/2) benchmarking "read"...
    done (took 1.559547055 seconds)
  done (took 5.006573117 seconds)
done (took 31.41621826 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.223446595 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.220854702 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.224592535 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.221072983 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.223633452 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.222119253 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.220612241 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.223878871 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.224746343 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.226593102 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.224922159 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.228500538 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227077717 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.229961946 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226162796 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22423627 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227659075 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.225092913 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226248274 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.224552699 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.225618059 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225297003 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.220828164 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.220580159 seconds)
  done (took 30.535725109 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.225177381 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.221703273 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.224742952 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.22336499 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.220492866 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.224577197 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.223099459 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.221565862 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.222776421 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.223110779 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221399048 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.221378867 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.224803205 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.221160816 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225859265 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.221440809 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.224540775 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221833536 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225285851 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.221772869 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.223513221 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222174043 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.227116663 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225949503 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.222761838 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.223035483 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.225203555 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.224364363 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.225733045 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.224615139 seconds)
  done (took 37.85494073 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.230726302 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.234832375 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.226683144 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.225467104 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.227268408 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.225205594 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.225574793 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.225705091 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.226529761 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.227030567 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.226313925 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.225648623 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.226180355 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.225519288 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.226062321 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.22797026 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.22747747 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.226397944 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.234100943 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.2274912 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.226524773 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.227640625 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.226830879 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.227854555 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.225987915 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.227008407 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.227129276 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.227312251 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.226605125 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.227587246 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.228345848 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.226253688 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.228045458 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.228347325 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.227390451 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.227813243 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.233441016 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.234952279 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.228644488 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.228157652 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.228223525 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.227707653 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.228051493 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.227912638 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.22791812 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.226850826 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.226944986 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.227619279 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.228543224 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.22827724 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.227352961 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.229114993 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.227853224 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.227541815 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.228643955 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.229239582 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.228503571 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.228150827 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.229883436 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.228712301 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.227294024 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.228931669 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.227419895 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.229427886 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.23152729 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.228411533 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.229390975 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.228349313 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.230719886 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.229876931 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.229379837 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.231582053 seconds)
  done (took 89.575664118 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.229682042 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.228627431 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.226450313 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.229713319 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.227630906 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.230868682 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.227898244 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232018724 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228982671 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.229283784 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231307464 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.22940778 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228392105 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.233134026 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232105453 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.229210495 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.232455755 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.229311396 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.232891265 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.233035359 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.231264931 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.228503034 seconds)
  done (took 28.214331138 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232472059 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.234182487 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.228301471 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.234217554 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.231140637 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.235604441 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.232260423 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.233612107 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232473838 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229716763 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230582107 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23161468 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.231568673 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230318319 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231149777 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.231272604 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234275148 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.231952323 seconds)
  done (took 23.330513361 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.230348589 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.23133572 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.231665253 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.229769455 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.230075087 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.232514876 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.23062752 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.234140669 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.233109348 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.230809838 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.233345044 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235491012 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.235601171 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231650799 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234447859 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.232695111 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.23568352 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231676741 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.234262519 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.233752271 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.231698944 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.234214237 seconds)
  done (took 28.274851983 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234410703 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.234375161 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.233323949 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.232471447 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.233097921 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.235710237 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.233346885 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.231981559 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.235142558 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.234904545 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.232332614 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.235890342 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.234004229 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.234385652 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.233118797 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232423956 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.236178759 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.232713647 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.236532776 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.232446605 seconds)
  done (took 25.837338356 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.23615518 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236563155 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.237124348 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.238241171 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.238185647 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.238446977 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.238540195 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.238402305 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.237789495 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.239929517 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.238681754 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.239668392 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238283583 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.238905519 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.239003325 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.238394377 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.238130113 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.238015468 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.239364104 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.239066641 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.240585281 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.237664611 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.238967549 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.239519031 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.240578751 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.240834594 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.239358864 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.23843602 seconds)
  done (took 35.838915985 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.238053944 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.237708703 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.237325492 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.236742271 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.235667461 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.235935256 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.23665379 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.236317263 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.237195708 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.235235302 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.238511836 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.23969434 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.239384178 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.239771205 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.238665176 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.239159595 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239713512 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.236739296 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.238050316 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235200763 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.239948267 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240822114 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.239768514 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.236787027 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237860673 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.241169057 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23876897 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.237066009 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.239034942 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.238460186 seconds)
  done (took 38.302227205 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.284219806 seconds)
    (2/2) benchmarking "in"...
    done (took 1.284700066 seconds)
  done (took 3.73014862 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.237810983 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.24072699 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.240423303 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.238142635 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.238455355 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.239916615 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.241096599 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.237669158 seconds)
  done (took 11.075038235 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.238785069 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.240920516 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.240998127 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.240442309 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.243216201 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.240782073 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24946627 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.263277733 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.241382609 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.24263452 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.250061813 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.251130863 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.244884574 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.241634293 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.242520936 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.243409413 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.242830446 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.243770058 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.244647834 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.242842065 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.243720599 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.243558501 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.244174815 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.240788368 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.242774215 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.25423937 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.246634903 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.243784001 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.242078925 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.246157839 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.242584252 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.241037661 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.24389788 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.245031531 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.244002703 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.246884679 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.255219626 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.26556856 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.250628122 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.245571833 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.244286472 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.239679911 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.245959131 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.245252268 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246394966 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.244491082 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.244458355 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.240713265 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.243359111 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.246542273 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.249008626 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.24342424 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.241049921 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247102646 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.245073563 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.251385612 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.264593218 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.248749184 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.253426697 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.253709053 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.258601584 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.253115063 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.246351533 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.244727595 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256017091 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.271781938 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.252091695 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.26508776 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.245152293 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.246391592 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.254676724 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25983807 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.271470481 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.247100979 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.245655542 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.244737113 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.245789985 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.244404701 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252640897 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.267240548 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.246989325 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.246537054 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.256061705 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.270783943 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.245300958 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.247012484 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.246510637 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.247662934 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.24748773 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257144473 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.268261464 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.244835214 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.246187321 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.245983557 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.248049756 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.250336488 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.247346802 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.246096247 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.247687052 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.249975782 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.251753105 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.252918007 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.258665406 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.252684581 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.249503543 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.255686767 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.249432612 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.24845157 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.255002913 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.248389386 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249389451 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.250504828 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.253986123 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.245535184 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.252036909 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.256707462 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.249722825 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.249331501 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.249555085 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.248414798 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261527549 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.275433647 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.249354503 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.25007063 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.254205912 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.261873913 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250267723 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.249914061 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.252335737 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.246565291 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.245393817 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.252127805 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.250115896 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.248245161 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250409045 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.249335374 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.246931698 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.249084847 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.251403951 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.251140773 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.249252079 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.249623064 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.248770905 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.251643361 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.251349292 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.251092528 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.255496737 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.250054765 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.251416109 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.250609293 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.248729767 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250102301 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.251425596 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.250876575 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.250432005 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.251408275 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.249630574 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.25149679 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.251968709 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.252075895 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.251861085 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.251091091 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.254496631 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.253241615 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.254445797 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.250419728 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.24777378 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.251329203 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.251865103 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.251443254 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.253111466 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.249216372 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.255939983 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.261489066 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.251434654 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.254270367 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.254197305 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.255725419 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.253950467 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.252769047 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.255515301 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.260139297 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.254286505 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.258377959 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.252165507 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.253443196 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.252814494 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.253131556 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.250099595 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.254485928 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.258760788 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.260330293 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.265870766 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.277619283 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.253684767 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.254887173 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.254190152 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.257942183 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.25591241 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.255123321 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.254409701 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.253140146 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.252501559 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.254876719 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.253899264 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.255382004 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.25283287 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.253141798 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.253950249 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.253508782 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252451007 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.253047924 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.25325526 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.249717214 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.252454691 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.25474988 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.252794495 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.250019295 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.252239474 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.254474169 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.253549591 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.255493312 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.25919502 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.251805707 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25483812 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256039604 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.254848606 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.252773885 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.25477595 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.256328028 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.253672625 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.262956158 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.274879916 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.255101758 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262686206 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.276118352 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.254626657 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.257581869 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.256193582 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.253675619 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.25989841 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.263800177 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.254592763 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.257459216 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.257536337 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25576472 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256349819 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.261834488 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.254742311 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.2563565 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.255840685 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.257660175 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.253896669 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.256862794 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.256484241 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.257363948 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.258717183 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.256579297 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.257074612 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.256067118 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.257714926 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.257951041 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.257617737 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261486604 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.268020113 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.264180295 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.257847611 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.259420136 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.257436112 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.261445589 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.257784005 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.258320104 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.258281747 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.270435611 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.284382289 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.26547595 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.259702931 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.259121346 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.263502162 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.26041977 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.262461 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259060053 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.259187532 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.260875375 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.257628355 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.256890778 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258615405 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.260248528 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.259584809 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.25983634 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.262677171 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.259551012 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.258540817 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.261557806 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.258846394 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.260637312 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.259676284 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.258692078 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.262157212 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.261901115 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.258485793 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.260053425 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267413678 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.279162246 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.261438085 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.259512335 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.260409721 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.260667815 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.260926483 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.26230427 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.265056603 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.269589327 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.264493907 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.269297058 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.262661073 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.271983675 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.261806321 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.265168533 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.271384442 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.2590367 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.25974675 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.260572706 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.261994844 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.266810119 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.282260577 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.264448154 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.266313716 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.262021748 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.263204899 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.262082047 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.263150984 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.262612921 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.262144514 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.272052239 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.285586303 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.266998578 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.26309971 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.261216699 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.264011501 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.263467102 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.262074241 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265074908 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.263517844 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.262808972 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.262180074 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.261574151 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.262487424 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.262896621 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.262808794 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.260148523 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.261476377 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.270853857 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.284657788 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268635166 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.264466656 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.268639002 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.266466961 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.271892349 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.28414685 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.263142137 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.266422756 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.263836757 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.264121554 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.262428039 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.264466701 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.266264665 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.265734877 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.268651494 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.264885125 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.266330512 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.264046797 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.264917099 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.265337069 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.274082703 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.289946923 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.265380866 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.269264567 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.260979912 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.267577329 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.270634972 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.26693741 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.263532589 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.268119299 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.276549125 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.273666205 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.265544035 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.266079571 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.264655204 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265941516 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.266525578 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.264920797 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.26507126 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.266834681 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.26571796 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.266657043 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.26961005 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.266379723 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.266427663 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.266989179 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.267734491 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.277017955 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.268324262 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.267260389 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266968635 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.268188902 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.266233859 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.265412346 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.267489102 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.268060347 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266410292 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.26806115 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274612596 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.274082022 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.267677036 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.267227999 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.267467595 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.26761422 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.266829296 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.270020004 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.266931974 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269061178 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.266138447 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.267973347 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.267497966 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.266218654 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.267199021 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.266715058 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.268439574 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271350651 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.274512049 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.269377927 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.265479651 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.266765027 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.270485578 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.265983527 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.267511192 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.2751058 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.273065767 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.280718705 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.276608715 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.27211899 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.26803463 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.271808669 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.276457605 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.26727768 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.268578578 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.269109117 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.26982242 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.27022991 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.27235955 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270344228 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.274569031 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.269320118 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.267531358 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.276410056 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.29261021 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.270205526 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.270849543 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.273446212 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.268813582 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.267226007 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.268604236 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.268320501 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276740873 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.290686696 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.27158118 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.270895108 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.269192018 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.271039485 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.274413024 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.27118919 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.270185249 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.266531028 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.270374519 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.271702791 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.270437651 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.268559921 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.268866912 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.269491255 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.274548346 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.278029724 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.267888079 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272167129 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.270397256 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.269841404 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.271537047 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271544019 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.269056004 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.268354564 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.270424022 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.271583652 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.27070925 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.273751754 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.271317951 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.273909793 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.271858053 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.273267182 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.275713433 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.282616531 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.279160173 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.269488504 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.272105021 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.27314312 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.274040679 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.273750726 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.273492219 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.2721751 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.274063346 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.27251459 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.273869716 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.272557902 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.27668358 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.289817044 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.296080719 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273852497 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.273310635 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.275315131 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.274595556 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.270694384 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.274238452 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.274829906 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.278257582 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.282512682 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.274740163 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279062205 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.293455917 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.275992714 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.280213657 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.279130788 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.283581596 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.277446862 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.274930368 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.274988769 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.279281052 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.291691468 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.274419746 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.285806625 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.307194808 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.294009181 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.273511047 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.27527366 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.273855994 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.276265465 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.275319383 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.278492773 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.275459783 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.275161764 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.275036268 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.275984508 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.281776374 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.274902039 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.279036842 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.276248425 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.276732719 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.277405431 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.272302848 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.278425269 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.27602072 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.276793555 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.277141249 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.276276511 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.274438837 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.288461641 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.303236987 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.274493905 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.276863622 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.272540625 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.27963034 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.279983412 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.288800072 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.284589322 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.277224013 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.278616906 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.277378837 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.277967431 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.275387664 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.276804686 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.277372906 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.278255858 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.274681228 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.289670346 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.287216543 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.282413413 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.275555135 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.278113601 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.279109693 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.277651551 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.278034191 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.278757693 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.277908113 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.281347594 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.283453569 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.279025061 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.278700685 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.282223736 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.285294813 seconds)
  done (took 753.586117177 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.274354344 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.275414346 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.275349084 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.274932965 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276893046 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274857416 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275549217 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.275542014 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.276128873 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.274636899 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.275445615 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27706115 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.275291131 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.276934003 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27496575 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.275276499 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276071689 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.275835108 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.276524248 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274795829 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.276797465 seconds)
  done (took 27.985106624 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.278432043 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.276708082 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.277050639 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.279058927 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.277498737 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.278776746 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.277425 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279394896 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.278975122 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277141911 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.279471979 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.278940057 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.27667004 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.276975327 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276301039 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.280490421 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.28040028 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.277123417 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.280527984 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.278610602 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.28136881 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.279191696 seconds)
  done (took 29.32428556 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.281396004 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.281657278 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.280819182 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.277481963 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.280502295 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.278508045 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.281783337 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.2828693 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.281118151 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.28163854 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.281101938 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.284153202 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.289848236 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.286714569 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.282625733 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.282057923 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.425898505 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.282980497 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.283914264 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.283396245 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.280409378 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.286535927 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.279710542 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.279722226 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.281094496 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.283620247 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.28274445 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.282128402 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.283425167 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.284601401 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.288427241 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.282717061 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.281696109 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.285916893 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.283051676 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.283172005 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.286648344 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.284045249 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.280799181 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.282176275 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.294209584 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.305803757 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.285535359 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.289589216 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.284127438 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.283363166 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.287870703 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.292720542 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.28174676 seconds)
  done (took 64.257411372 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.283691373 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.28386508 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.280974134 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.28549203 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.28433739 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.283984542 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.284505107 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.282967802 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.280927404 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.282330069 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.284687515 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.28184997 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.280414939 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.283534825 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.284283091 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.282928343 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.281678993 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.283375502 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.282159136 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.282785301 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.281434379 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.28522086 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.285883461 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.28214068 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.285211783 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.282809375 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.282018693 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.285920774 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.284736211 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.283128872 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.285862701 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.286578115 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.28594631 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.283537511 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.283779466 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.286667292 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.287275354 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.285567563 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.28816705 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.284456206 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.287141506 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.286554125 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.28643655 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.288292778 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.285082506 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.284382141 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.284608691 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.283625339 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.284963845 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.286933163 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.287568204 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.283144569 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.28719687 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.284422304 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.287413212 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.286741844 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.284439479 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.285234722 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.287593915 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.28609789 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.285288002 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.287553826 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.28602471 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.288259573 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.287234218 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.286662155 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.285634366 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.288970882 seconds)
  done (took 88.573727784 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.287468772 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.289796791 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290402053 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290670559 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.290426068 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.290620523 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.289675269 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.292974486 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.291556618 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.291003288 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.291594448 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.290581152 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.290136651 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.292092751 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.289914987 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.289681608 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.290810255 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.29044472 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.290017999 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291182067 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.290641348 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.291217303 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.29061756 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.292553362 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.292480645 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.290541486 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.290859595 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.291617764 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.291830711 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.291205376 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.291408541 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.292682286 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.291317666 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.291905774 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.289856791 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.291309654 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.292141315 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292227268 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.291282992 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.292300871 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.291846686 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.293028285 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.292058938 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.291466982 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.292038807 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.292140014 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.291614251 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.293002964 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.292316232 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.292477761 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.292808111 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.292360714 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291567961 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.293842391 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.29371024 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.293333835 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292428818 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.293216263 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292480834 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.293232991 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.294272356 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.292495834 seconds)
  done (took 81.286795647 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.292410007 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.291965767 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.289797133 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.289670897 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.292583553 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.290568949 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.294017637 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.292333688 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.293483435 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.294514615 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294889347 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.292223955 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291949206 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294352225 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.291431831 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292874172 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.291699617 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.291514467 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.293627511 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.29206656 seconds)
  done (took 27.058532833 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.290138307 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.292796104 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.291582915 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.29029172 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.292852062 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.292705466 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.292794346 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29404402 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2929721 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2943127 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.293921265 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.294467571 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290712119 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.292249962 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.29452489 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.292398278 seconds)
  done (took 21.892948724 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.293177973 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.294668582 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.295903803 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.296240185 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.291179401 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.291953116 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.293231018 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.291525143 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.291997144 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.295049581 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.295579202 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.295479604 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.2956145 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.296157174 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.293484746 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.296296114 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.292618252 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.293026867 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.296159939 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.296857738 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.29373334 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.293506503 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.297005997 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.294635431 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.294451543 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.295628966 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.294576915 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.294207505 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.293821069 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.295094937 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.293953821 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.294785055 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.294542234 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.293534753 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.296793227 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.295783674 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.296603546 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.296576816 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.297271573 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.297553144 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.297531149 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.295666935 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.297245555 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.296003364 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.295397046 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.297829108 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.296314261 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.294170133 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.296485107 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.297439461 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.298813521 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.299213073 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.297859813 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.297605809 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.299172604 seconds)
  done (took 72.461202984 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.299181754 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.298404759 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.294945546 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.298525425 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.298017292 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.294906609 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.298819139 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.297770717 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.295731661 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.299617834 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.297780819 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.300865114 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.295467689 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.298838648 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.297391807 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.299668427 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.297125546 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.297054908 seconds)
  done (took 24.57532718 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.297338045 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.29682855 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.300427898 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.296141942 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.297689095 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.299616916 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.297581669 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.300513317 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299479078 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.296295509 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29829902 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.300973927 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.300669452 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.300821424 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.296714816 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297292294 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.300407894 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.301744795 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.296806795 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.297912892 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.301132009 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.302076212 seconds)
  done (took 29.794079284 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.301192021 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.300418622 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.300724013 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.318487531 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.320200663 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.32668628 seconds)
  done (took 9.086324628 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309561543 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302776014 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300593213 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30347833 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303641984 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298894783 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299209662 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300345727 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302204427 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300589898 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300195908 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302556399 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303339174 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301065497 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303821896 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302677165 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300209128 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300163154 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301498449 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302145572 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300742557 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303562866 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299461952 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300314617 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301852406 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303257947 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3026985 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301066338 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300895364 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304502786 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304612669 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302068809 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303364535 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30096729 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305453667 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303506436 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302450801 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305826343 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303885697 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302516848 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.307034221 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304257146 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305376777 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303791672 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305895291 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302152321 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302569595 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300983092 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302520699 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305630766 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30428863 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302405252 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303442955 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305624656 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30518325 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304644684 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30200995 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304931606 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306932473 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303971281 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305651642 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305814549 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30324085 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304707069 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308034126 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305615953 seconds)
  done (took 87.254406517 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3049481 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.305543119 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304359893 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306828962 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305062255 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303652818 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304532234 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307030541 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304705964 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306304839 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309997052 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305115659 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303988988 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306812093 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304974679 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305388013 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304800983 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306854959 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308428994 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308923585 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30671896 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305679165 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30644005 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305324195 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306156989 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307506783 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305354285 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305912881 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304480608 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303528706 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305483344 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306781652 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306664614 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.305976444 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305802155 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304303342 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30490764 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304768769 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305150889 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30755904 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305705946 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308202321 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305091429 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304471006 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307275966 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305412564 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306449776 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305169783 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306492728 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306414695 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306504898 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304662961 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307050718 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306388371 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307195998 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305844886 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307525868 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306536159 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306435399 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309861254 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30647397 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306816542 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309276518 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306523881 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307483162 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309806868 seconds)
  done (took 87.432497809 seconds)
done (took 1758.287216151 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.471007347 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.428612791 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.30889586 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.359425173 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.30904849 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.326423633 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.322505692 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.308790145 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.309106206 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.311115062 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.310165135 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.499769299 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.323204307 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.308998994 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.310255198 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.404293608 seconds)
  done (took 42.838111185 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.337669335 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.315616089 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.439632634 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.337451115 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.339501228 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.514055259 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.375107099 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.31526521 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.505365265 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.364576898 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.993528405 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.337828981 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.313162767 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.599527762 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.34299422 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.511938907 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.592821324 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.13679338 seconds)
  done (took 30.900654509 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.822342867 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.351824241 seconds)
  done (took 9.401908048 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.3345643 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.316216598 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.314504491 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.312559442 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.317525553 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.312012993 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.31175125 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.303865702 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.428925066 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.45743758 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.322302661 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.323263581 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.334770743 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.317625306 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.310866567 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.350725755 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.48724354 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.311306705 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.310214148 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.31874223 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.313816582 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.399423917 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.359434331 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.317376591 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.452096427 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.417429763 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.323227396 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.320027871 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.447395402 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.312233869 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.31251923 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.313753661 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.316491438 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.229763534 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.863147581 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.314619507 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.341850479 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.324287212 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.310745932 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.451611551 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.315857515 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.320705464 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.3081184 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.840971479 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.464895237 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.443542197 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.656652452 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.316512695 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.316985754 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.379646247 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.322287843 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.317508216 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.359341511 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.143177582 seconds)
  done (took 111.98360162 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.357281939 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.700047503 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.477042634 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.329878602 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.055742282 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.941433166 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.333942664 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.633822844 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.339862062 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.309361787 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.660473885 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.871926005 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.337640429 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.368042962 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.511148605 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.375433098 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.309945913 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.154999352 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.335767375 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.314221727 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.83754425 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.318347952 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.316818899 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.482918316 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.349386157 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.80884018 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.92190422 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.805442024 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.339580371 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.309841601 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.816676076 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.340511827 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.310179679 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.31145449 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.590755748 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.730179097 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.705527507 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.324132889 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.340865356 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.312853417 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.330501388 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.809566783 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.709684937 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.32065812 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.321644341 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.819854682 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.319170643 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.3145276 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.312140156 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.517332238 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.945299416 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.319101988 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.91333672 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.318471133 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.661968399 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.396064286 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.315573968 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.844139236 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.337673189 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.440661213 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.347207539 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.314081726 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.320160363 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.315954781 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.31750904 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.710397062 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.433410904 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.313585197 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.706726582 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.818270612 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.336664977 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.878679459 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.180789861 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.337226985 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.410688253 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.313712763 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.957771769 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.837032747 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.31332699 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.314312619 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.670013124 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.317508279 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.655652192 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.339192392 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.331701551 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.851199994 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.325104581 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.372731477 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.31495969 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.354853392 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.985407731 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.324984792 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.61884382 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.358778195 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.315376698 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.313211403 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.327540542 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.31426317 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.315785758 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.318371234 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.871936378 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.34205882 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.308984261 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.340653717 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.321280119 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.322068982 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.31524236 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.315551814 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.536395036 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.859336948 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.327323203 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.316101962 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.315500889 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.343088625 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.495982118 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.318419479 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.664361221 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.324847461 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.316164531 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.327368214 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.958819111 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.36023632 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.316385933 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.319405486 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.254874397 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.528536562 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.338401207 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.316767015 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.317759221 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.34153658 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.77594387 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.346730526 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.373856579 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.31741677 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.050585895 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.376785998 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.340064447 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.60090197 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.328186162 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.316916052 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.327503736 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.318052314 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.613547722 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.612295247 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.37750105 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.318031207 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.335877482 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.050783432 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.346126597 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.464982627 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.344596218 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.362367721 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.515311164 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.707343201 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.319842258 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.953746869 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.318696693 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.535435531 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.325408449 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.637977118 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.852827355 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.345022771 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.328620883 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.05978694 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.044833374 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.01029603 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.319513221 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.664177814 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.305490194 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.798780122 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.319712201 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.318548926 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.790246392 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.326474157 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.325035887 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.319174606 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.319389263 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.386011919 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.49334036 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.486209638 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.320565075 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.793795745 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.351384898 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.319653908 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.328654995 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.319627353 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.670985224 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.392206185 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.325219151 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.36797552 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.321101525 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.329911869 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.812746149 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.253935664 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.329278237 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.474255396 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.989296085 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.345696325 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.325920183 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.022423281 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.013436118 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.855835644 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.364484975 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.654290353 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.325889071 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.361011535 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.00427924 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.414828006 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.817915511 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.323331039 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.33063854 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.954407888 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.348174788 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.673976197 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.32250776 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.32174075 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.911031685 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.34691317 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.324912029 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.766102472 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.352149743 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.56912265 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.329731589 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.372301156 seconds)
  done (took 1109.914796427 seconds)
done (took 1306.266755231 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.322567487 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.331143168 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.317902679 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.331138367 seconds)
  done (took 26.545220979 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.334383538 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.330300781 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.331291568 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.330914888 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.333717386 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.330337878 seconds)
  done (took 9.235727189 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.387033671 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.33056355 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.332256685 seconds)
  done (took 19.293881694 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.55564103 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.693331698 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.691073439 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.696074097 seconds)
  done (took 10.881214041 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.331669628 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.331010157 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.330597944 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.33625831 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.336164456 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.337188248 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.333989776 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.33322398 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.335526882 seconds)
  done (took 13.247027864 seconds)
done (took 80.449084001 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.74880767 seconds)
    (2/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.349632542 seconds)
    (3/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.319854747 seconds)
    (4/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.320459726 seconds)
    (5/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.314145379 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.602012495 seconds)
    (7/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.335318983 seconds)
    (8/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.351652353 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.36448332 seconds)
    (10/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.320634143 seconds)
    (11/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.351358011 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.35043825 seconds)
    (13/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.312761062 seconds)
    (14/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.430298893 seconds)
    (15/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.347965313 seconds)
    (16/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.152885003 seconds)
    (17/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.899266409 seconds)
    (18/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.195416881 seconds)
    (19/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.32054245 seconds)
    (20/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.317398969 seconds)
    (21/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.378837855 seconds)
    (22/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.352029875 seconds)
    (23/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.311941931 seconds)
    (24/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.265309785 seconds)
    (25/286) benchmarking ("sort", Int64, true)...
    done (took 6.333989364 seconds)
    (26/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.312429713 seconds)
    (27/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.434338491 seconds)
    (28/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.229097982 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.305728189 seconds)
    (30/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.3119239 seconds)
    (31/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.454874914 seconds)
    (32/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.387819037 seconds)
    (33/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.429716071 seconds)
    (34/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.72971135 seconds)
    (35/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.180170998 seconds)
    (36/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.371227843 seconds)
    (37/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.313039687 seconds)
    (38/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.622737193 seconds)
    (39/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.3594306 seconds)
    (40/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.326458048 seconds)
    (41/286) benchmarking ("sort", BigInt, false)...
    done (took 6.327993147 seconds)
    (42/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.440177691 seconds)
    (43/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.3338022 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.251297348 seconds)
    (45/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.60483704 seconds)
    (46/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.326801782 seconds)
    (47/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.327962606 seconds)
    (48/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.019026586 seconds)
    (49/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.938385983 seconds)
    (50/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.424400816 seconds)
    (51/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.382899164 seconds)
    (52/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.113134945 seconds)
    (53/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.336583703 seconds)
    (54/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.355433689 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.014701993 seconds)
    (56/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.71924186 seconds)
    (57/286) benchmarking ("sort", Int8, true)...
    done (took 6.335545845 seconds)
    (58/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.669912637 seconds)
    (59/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.360138815 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.32467862 seconds)
    (61/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.351979409 seconds)
    (62/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.353349754 seconds)
    (63/286) benchmarking ("sort", BigInt, true)...
    done (took 6.327225932 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.702967388 seconds)
    (65/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.340864206 seconds)
    (66/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.019140848 seconds)
    (67/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.507377491 seconds)
    (68/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.357365937 seconds)
    (69/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.856279486 seconds)
    (70/286) benchmarking ("sort", Int64, false)...
    done (took 5.605663399 seconds)
    (71/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.3375942 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.708244161 seconds)
    (73/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.33948844 seconds)
    (74/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.317291831 seconds)
    (75/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.601383113 seconds)
    (76/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.837475206 seconds)
    (77/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.323802106 seconds)
    (78/286) benchmarking ("sort", Float32, true)...
    done (took 6.355381719 seconds)
    (79/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.238823034 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.270465449 seconds)
    (81/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.910469113 seconds)
    (82/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.368394829 seconds)
    (83/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.333062355 seconds)
    (84/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.326738949 seconds)
    (85/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.436205639 seconds)
    (86/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.133027857 seconds)
    (87/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.324218419 seconds)
    (88/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.33890236 seconds)
    (89/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.334739799 seconds)
    (90/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.625305822 seconds)
    (91/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.151397465 seconds)
    (92/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.217970696 seconds)
    (93/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.141521008 seconds)
    (94/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.98784929 seconds)
    (95/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.346780245 seconds)
    (96/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.356961508 seconds)
    (97/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.41633595 seconds)
    (98/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.356695963 seconds)
    (99/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.32988056 seconds)
    (100/286) benchmarking ("map", identity, BigInt, true)...
    done (took 3.02586276 seconds)
    (101/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.377700653 seconds)
    (102/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.326185818 seconds)
    (103/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.737459086 seconds)
    (104/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.76930213 seconds)
    (105/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.411906155 seconds)
    (106/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.317553998 seconds)
    (107/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.364602065 seconds)
    (108/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.477038041 seconds)
    (109/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.890620163 seconds)
    (110/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.555215721 seconds)
    (111/286) benchmarking ("sort", Float64, false)...
    done (took 5.650544298 seconds)
    (112/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.3323091 seconds)
    (113/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.317890259 seconds)
    (114/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.538127379 seconds)
    (115/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.428737805 seconds)
    (116/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.416148307 seconds)
    (117/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.213894547 seconds)
    (118/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.326336581 seconds)
    (119/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.423404853 seconds)
    (120/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.840189119 seconds)
    (121/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.658210337 seconds)
    (122/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.75335441 seconds)
    (123/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.657865949 seconds)
    (124/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 6.122181252 seconds)
    (125/286) benchmarking ("sort", Bool, false)...
    done (took 1.865108543 seconds)
    (126/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.358792154 seconds)
    (127/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.075846291 seconds)
    (128/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.137263291 seconds)
    (129/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.597079781 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.202755976 seconds)
    (131/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.599280187 seconds)
    (132/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.320001356 seconds)
    (133/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.35035404 seconds)
    (134/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.099703267 seconds)
    (135/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.321458567 seconds)
    (136/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.127255268 seconds)
    (137/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.12390493 seconds)
    (138/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.329302257 seconds)
    (139/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.903270309 seconds)
    (140/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.464356759 seconds)
    (141/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.319251753 seconds)
    (142/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.363632544 seconds)
    (143/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.320201897 seconds)
    (144/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.875954148 seconds)
    (145/286) benchmarking ("sort", Float64, true)...
    done (took 6.332054692 seconds)
    (146/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.368276255 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.754751749 seconds)
    (148/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.262954914 seconds)
    (149/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.368155617 seconds)
    (150/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.348048458 seconds)
    (151/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.321252132 seconds)
    (152/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.327779965 seconds)
    (153/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.356092159 seconds)
    (154/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.889331269 seconds)
    (155/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.328686506 seconds)
    (156/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.425875745 seconds)
    (157/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.468070913 seconds)
    (158/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.288531346 seconds)
    (159/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.349824304 seconds)
    (160/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.34894995 seconds)
    (161/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.350550363 seconds)
    (162/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.370269458 seconds)
    (163/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.342805542 seconds)
    (164/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.875383425 seconds)
    (165/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.375024187 seconds)
    (166/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.372848273 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.95710562 seconds)
    (168/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.138371 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.036458356 seconds)
    (170/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.236937359 seconds)
    (171/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.33036221 seconds)
    (172/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.372500923 seconds)
    (173/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.057443502 seconds)
    (174/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.592633741 seconds)
    (175/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.351986494 seconds)
    (176/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.361830447 seconds)
    (177/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.394577771 seconds)
    (178/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.434732313 seconds)
    (179/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.344942747 seconds)
    (180/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.355552445 seconds)
    (181/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.166259007 seconds)
    (182/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.211618149 seconds)
    (183/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.369649041 seconds)
    (184/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.036835909 seconds)
    (185/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.559026746 seconds)
    (186/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.04445883 seconds)
    (187/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.384417921 seconds)
    (188/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.80380224 seconds)
    (189/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.460430625 seconds)
    (190/286) benchmarking ("sort", Int8, false)...
    done (took 4.368438096 seconds)
    (191/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.073931681 seconds)
    (192/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.635631209 seconds)
    (193/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.872664072 seconds)
    (194/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.425864343 seconds)
    (195/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.303441396 seconds)
    (196/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.399745074 seconds)
    (197/286) benchmarking ("sort", Float32, false)...
    done (took 5.355173861 seconds)
    (198/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.373855858 seconds)
    (199/286) benchmarking ("sort", Bool, true)...
    done (took 5.372640878 seconds)
    (200/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.411901403 seconds)
    (201/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.336883805 seconds)
    (202/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.36122075 seconds)
    (203/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.910852054 seconds)
    (204/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.335842757 seconds)
    (205/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.413405148 seconds)
    (206/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.363703816 seconds)
    (207/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.397105158 seconds)
    (208/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.329192252 seconds)
    (209/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.552820372 seconds)
    (210/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.3403843 seconds)
    (211/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.325199536 seconds)
    (212/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.288821698 seconds)
    (213/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.819148236 seconds)
    (214/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.765672344 seconds)
    (215/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.390632418 seconds)
    (216/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.315376927 seconds)
    (217/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.026612356 seconds)
    (218/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.46059805 seconds)
    (219/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.360808212 seconds)
    (220/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.002502989 seconds)
    (221/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.561226324 seconds)
    (222/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.748129435 seconds)
    (223/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.439426374 seconds)
    (224/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.378533917 seconds)
    (225/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.42524724 seconds)
    (226/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.462984335 seconds)
    (227/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.442926917 seconds)
    (228/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.961708631 seconds)
    (229/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.229590979 seconds)
    (230/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.449980646 seconds)
    (231/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.356253727 seconds)
    (232/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.444471705 seconds)
    (233/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.342173582 seconds)
    (234/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.731579766 seconds)
    (235/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.243107828 seconds)
    (236/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.426083453 seconds)
    (237/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.855003576 seconds)
    (238/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.389564302 seconds)
    (239/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.879487478 seconds)
    (240/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.338468894 seconds)
    (241/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.566243046 seconds)
    (242/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.907629145 seconds)
    (243/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.327796688 seconds)
    (244/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.468319436 seconds)
    (245/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.423330009 seconds)
    (246/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.34715336 seconds)
    (247/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.445503807 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.365521556 seconds)
    (249/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.424804786 seconds)
    (250/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.562674867 seconds)
    (251/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.726307063 seconds)
    (252/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.35297768 seconds)
    (253/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.451359091 seconds)
    (254/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.341644387 seconds)
    (255/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.406298144 seconds)
    (256/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.40936467 seconds)
    (257/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.936010411 seconds)
    (258/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.738268341 seconds)
    (259/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.430550811 seconds)
    (260/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.046769833 seconds)
    (261/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.773782563 seconds)
    (262/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.374450276 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.422345936 seconds)
    (264/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.328060908 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.423511868 seconds)
    (266/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.340226479 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.451436174 seconds)
    (268/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.888856505 seconds)
    (269/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.349002416 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.164155933 seconds)
    (271/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.171244264 seconds)
    (272/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.934395138 seconds)
    (273/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.340514334 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.382944575 seconds)
    (275/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.399901258 seconds)
    (276/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.404878009 seconds)
    (277/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.537945049 seconds)
    (278/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.081992458 seconds)
    (279/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.365074883 seconds)
    (280/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.329807698 seconds)
    (281/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.782276056 seconds)
    (282/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.091792287 seconds)
    (283/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.211755344 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.365573777 seconds)
    (285/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.590785598 seconds)
    (286/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.445638972 seconds)
  done (took 952.523748064 seconds)
done (took 953.770179877 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.375089766 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.37287553 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.353810533 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.375647934 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.467025267 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.530218411 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.363595644 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.355939843 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.399228685 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.403257047 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.353375575 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.527927332 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.354775051 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.355867806 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.353869278 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.368699793 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.484210066 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.354312839 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.370732155 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.362570216 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.370388285 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.352994204 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.40344796 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.529297284 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.35733296 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.356431432 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.35921708 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.374327821 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.468483568 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.357913233 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.358078585 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.367833656 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.509820243 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.357471941 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.34919569 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.375191762 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.366006115 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.363377388 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.358814419 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.386660996 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.017014572 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.363026699 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.357794861 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.357217229 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.357131195 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.361560021 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.358279807 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.364136511 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.36992142 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.373498554 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.036624344 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.379792856 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.359474002 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.358735017 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.366507457 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.357371301 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.360120134 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.373694769 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.376628516 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.374963208 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.5530868 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.367576242 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.35882747 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.374938234 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.365047827 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.961168436 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.353445257 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.360953405 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.93404244 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.362150313 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.960377306 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.367504462 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.358158102 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.373421433 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.391114275 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.566535368 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.360431706 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.358095719 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.367128202 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.357895916 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.368162365 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.373002067 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.364864284 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.359549699 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.374394344 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.535209031 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.369155087 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.359686828 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.367162839 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.3779685 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.368023078 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.369704471 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.361809178 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.354640674 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.368754159 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.363226828 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.361836406 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.361684998 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.363935702 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.371159388 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.934931235 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.379596891 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.356072795 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.356082847 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.358521896 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.373373838 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.935521014 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.360541995 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.382287549 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.407366443 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.360963541 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.548188248 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.372156541 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.378193997 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.369323171 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.365043551 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.355544429 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.520016297 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.935496199 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.376709068 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.363676393 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.359416075 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.379944193 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.362418513 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.35670738 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.496744146 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.362714029 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377036582 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.483875498 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.372190899 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.394612731 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.359707874 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.365889759 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.39312807 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.38155783 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.394216604 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.364362962 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.380696202 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.379064699 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.358824713 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.374501323 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.374283903 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.363270574 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.366734016 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.356437814 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.396637731 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.375782859 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.377224925 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.382596398 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.484480342 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.359142644 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.482437009 seconds)
done (took 232.251415903 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.421142375 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.357384503 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.442446959 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.360984039 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.461618488 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.462026372 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.357844857 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.357698022 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.35727903 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.732987611 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.358961647 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.358927011 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.35355416 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.358066935 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.442198064 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.361524575 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.356525318 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.775378823 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.361614896 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.431140798 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.359480726 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.358970107 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.361913307 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.825476098 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.357816203 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.362028061 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.432532538 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.361004802 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.705231247 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.359357023 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.361146054 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.782002023 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.45192535 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.377606559 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.371342076 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.368455252 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.463310514 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.381435045 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.44488653 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.444300532 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.446172061 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.40020611 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.357879111 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.359697907 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.364108086 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.363797449 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.360079445 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.388654481 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.358281644 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.36034276 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.699365064 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.372108298 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.36053472 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.360384148 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.360206392 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.392925704 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.359954005 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.363266853 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.453119437 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.365353361 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.427088893 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.741481561 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.825027768 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.364810997 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.361978402 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.360828302 seconds)
  done (took 150.599630567 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.429799854 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.438304756 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.480528127 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.365003736 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.415488558 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.487343643 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.365191196 seconds)
  done (took 11.255255905 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.369242549 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.363633284 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.413796149 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.413857413 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.364890375 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.54222369 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.365805382 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.375941899 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.362391248 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.417021017 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.370331847 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.367281436 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.371877215 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.366877339 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.412198367 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.377279641 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.479719463 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.366417547 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.36723731 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.51555314 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.363106438 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.372737033 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.417629456 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.377381204 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.369775142 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.372172418 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.185036799 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.367145793 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.362746609 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.366106533 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.364087959 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.438626375 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.36605817 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.363409548 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.363412032 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.482081499 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.365757868 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.364284263 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.368244061 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.362138542 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.367523044 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.36760926 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.367298986 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.364351963 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.365760069 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.389833467 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.368344719 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.367586449 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.36862487 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.368030783 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.418127085 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.36851402 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.363202581 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.366495543 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.420842286 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.375120469 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.368556125 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.365702171 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.368675004 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.365039905 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.51918511 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.41626754 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.369124985 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.416727051 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.369185381 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.369263752 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.369533034 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.370019796 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.423206907 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.368264925 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.417174785 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.366659128 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.548239216 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.391221884 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.369822556 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.374062116 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.372566349 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.371083017 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.365491392 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.375207518 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.367495663 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.370628043 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.375198753 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.367377843 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.366037974 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.535965452 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.475638807 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.367113974 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.383026883 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.377429158 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.367125293 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.422670208 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.370395243 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.36636796 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.423893603 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.486145936 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.422285252 seconds)
  done (took 156.915853658 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.375699229 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.378643839 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.373602628 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.393922397 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.371166636 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.370398879 seconds)
  done (took 9.543824837 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.37393828 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.373388018 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.372019186 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.370899784 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.371909771 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.375562273 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.373730703 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.373030818 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.375984703 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.372440181 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.375989056 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.374412749 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.376747523 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.372101105 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.372973072 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.372137694 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.372922672 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.369087712 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.370680305 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.372644073 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.476549461 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.373513328 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.372666703 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.374489102 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.380103563 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.372775735 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.379862893 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.372521929 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.371887756 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.380310532 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.37626521 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.376741909 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.3744107 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.379872448 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.378399281 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.37510198 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.377043177 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.376140823 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.372348275 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.377277311 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.375012744 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.374927683 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.374477714 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.375424726 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.376387239 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.379818651 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.380529614 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.382438636 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.374678318 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.376147892 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.377294686 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.373778618 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.377044626 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.376009745 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.376391977 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.397032138 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.379529644 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.375716794 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.376673707 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.37645227 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.376421118 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.377611872 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.378181602 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.380106247 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.372434173 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.37624185 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.378470961 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.381005738 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.374673907 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.375116501 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.378054938 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.373333072 seconds)
  done (took 101.440662674 seconds)
done (took 431.028763929 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.491418331 seconds)
  done (took 7.777822916 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.836226186 seconds)
  done (took 8.123586534 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.211966086 seconds)
  done (took 25.505677164 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.410961518 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.437347459 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.383966995 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.370827558 seconds)
  done (took 26.889530934 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.567137951 seconds)
  done (took 7.854050528 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.36797355 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.3705024 seconds)
  done (took 14.027318353 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.740296549 seconds)
  done (took 8.02608635 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.511644481 seconds)
  done (took 7.806715684 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.392150061 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.390593782 seconds)
  done (took 14.083916424 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.355975902 seconds)
  done (took 7.642792742 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.009432587 seconds)
  done (took 12.296820797 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.37142201 seconds)
  done (took 7.660444828 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.419490016 seconds)
  done (took 7.707106684 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.43492937 seconds)
  done (took 10.722023166 seconds)
done (took 167.41230314 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.368724825 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.373166701 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.370098659 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.370325774 seconds)
  done (took 26.769668185 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.40934594 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.409764959 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.41152845 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.420600613 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.413717305 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.410301812 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.402977907 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.402481745 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.421161254 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.413990415 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.413521298 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.412768346 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.410065065 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.402822777 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.412633027 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.413006415 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.420913276 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.41346286 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.404098992 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.41372766 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.379520191 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.422852071 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.41488616 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.377733838 seconds)
  done (took 35.115488015 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.903204328 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.452632409 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.532649873 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.431936727 seconds)
  done (took 7.608272178 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.432012855 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.432989232 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.444347784 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.481459386 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.517065323 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.440989548 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.405207988 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.399076148 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.386518056 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.432219416 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.507662786 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.448287983 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.53068676 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.377543484 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.613605074 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.378703301 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.379607693 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.431035041 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.482918199 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.498186336 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.379124395 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.430260045 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.436664598 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.448205114 seconds)
  done (took 36.004575177 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.37940133 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.396644992 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.378552433 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.377108909 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.387742981 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.379207387 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.379754975 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.380015317 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.379394374 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.386039722 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.377529003 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.391598814 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.378957232 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.379653576 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.386053512 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.380569043 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.385207017 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.379449198 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.380054682 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.38359391 seconds)
  done (took 28.937933103 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.374192691 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.279942206 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.726016729 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.630757842 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.375992545 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.374963572 seconds)
  done (took 29.053525239 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.460477813 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.60747253 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.382498035 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.791673111 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.862942347 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.381460192 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.382833045 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.644816396 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.032099101 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.019472553 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.453768952 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.4554546 seconds)
  done (took 20.767011808 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.390753893 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.382494716 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.388928278 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.399525412 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.442548482 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.385316729 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.389631704 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.376845042 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.451252114 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.449087659 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.38595177 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.446028489 seconds)
  done (took 38.181256797 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463148208 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.426263049 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.501578735 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.428279747 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.096273091 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.58916411 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.382814745 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.17733051 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.388518775 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65277301 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38011071 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475594697 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.634042132 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382769231 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.386687964 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.45345254 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.606410666 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895941486 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381161378 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.736657221 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404357856 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.393769389 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.806886086 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.645608129 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.593565944 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.362340239 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.640565463 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.154786804 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.695737232 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.394753232 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39051958 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380773872 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653373491 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102030735 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504571561 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.621435177 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403753602 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.928312872 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.401750618 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.715948158 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384686205 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.402204439 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422749608 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382042789 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.316365903 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392699321 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.144319694 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.388277434 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.092109375 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.381184678 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.682259857 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484625224 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.385079572 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.956113059 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.44748573 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.395203327 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.385450628 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.479768168 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95167504 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.171050788 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40748832 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.324386664 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.388108014 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.903674774 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08761923 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.39719435 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.388926343 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.385190355 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315757075 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.872603113 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40786669 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530201055 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.408248189 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.031898661 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1559179 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.392274163 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.337028037 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988708478 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393548826 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.3249413 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611106201 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.159655565 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318611398 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.328277016 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.316191697 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142594689 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398910521 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 5.063681821 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.412490531 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.141073771 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.655760632 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406968446 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406562886 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.606535384 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.270715391 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391413547 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.39916615 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518466692 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405697955 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.137125344 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3403913 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.387188934 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63877573 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.594770048 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395790471 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.483445577 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915825501 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405394502 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.411726497 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.399423242 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.639656432 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.010642674 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.400754364 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.134872076 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409823573 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.164630441 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.184228589 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393775074 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.41684103 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.389521373 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681148981 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.233472383 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.276267809 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452301012 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394043106 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.386600303 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.897626389 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.243113293 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.269616934 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.624132848 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.424062667 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.403662323 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.386834634 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332133246 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.385743962 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38596792 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.171698378 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.610394238 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.386667848 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669442235 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320413488 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534565041 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.398605761 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.610191482 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.670351735 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.390843022 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.644956871 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402967267 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.3944568 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.405626755 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405701269 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487524584 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40888621 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.399499114 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.649362051 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.390664142 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.391914577 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.913101314 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.173380378 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392629424 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.392457967 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395363847 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.018661666 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367642217 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.39409951 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.283410382 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.402718752 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455749071 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.394507939 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.641165023 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.856022042 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40099089 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.412737517 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.400408157 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61299144 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.398770641 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.890492291 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.47758084 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.914746488 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.051200541 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403188955 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.323206863 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.101306234 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.081464051 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389479295 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.578532646 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.389926437 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.630572085 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.404656764 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.406207683 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.014012807 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393160744 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.90144152 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.403603839 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.402615116 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.39642749 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390946864 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.807028998 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.161127083 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41445491 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.41059433 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535739363 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.404236313 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.325783259 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.908328037 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.396798781 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.392482303 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.166640026 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425794867 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.900623799 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255798429 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.650076753 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39250214 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.680573126 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.995099459 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.428587741 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.392226201 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406623885 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407330392 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.407763573 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400120302 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.404098204 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.908708423 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.8388828 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956034265 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.155804417 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964455072 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.832138945 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.400110874 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.284342916 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.149561528 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347681775 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.064584887 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652825874 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.161467061 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.360008788 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924426839 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.684995476 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.257215096 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.692166253 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62402626 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.762088649 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.399920996 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.700206673 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.60669862 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428908595 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.403837406 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.330092242 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.681889375 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998104257 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.425900583 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.475409007 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.162274735 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.415846377 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.176278918 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.458032815 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.257922985 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879292743 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.046934721 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.782902701 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.411574402 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.404138332 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2554871 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.399352001 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.921416469 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058270025 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.39780836 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.947408236 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.352620529 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.641752784 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.408123597 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.401074275 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.136476734 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.400594325 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.651834303 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.686406886 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331595236 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.405879543 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974168288 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.251761564 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.401385235 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395823672 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171144564 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397207864 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.719103442 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.406025462 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.827618886 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40181962 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.3307555 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330460507 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.090367443 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.401485848 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371151223 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913236119 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.399855563 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397265016 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420185967 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254399623 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.653073752 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.411361195 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.027706147 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.62494197 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401560898 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422167097 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.401348444 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396709779 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.38632219 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.27986823 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.633324209 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.417069755 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.622591663 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.517938643 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.316591174 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.47720777 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611271468 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.296163808 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.398544141 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.668616403 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.110413046 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.414701005 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.136553763 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426504905 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.405116907 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.411448438 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.400258596 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420927219 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469814254 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.646785856 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.41136434 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.411021367 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873339853 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434163055 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402123855 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.414894594 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493054691 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.203756339 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.832564266 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.173452689 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.037997382 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.169998642 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.033958382 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.69953327 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.40119626 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402272522 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334288805 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548092369 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.926252449 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675951268 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.533275818 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.405317047 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424113324 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40142576 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.409407135 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620060708 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676885512 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.272769291 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417322335 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.072340013 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.304001768 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.413142808 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.614793242 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924235936 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988480087 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.529488847 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.41572735 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.16935657 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67685077 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.494565058 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40338106 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.997364801 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.40603148 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.293898127 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.416530128 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402654546 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550114322 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.69146064 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10921165 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.434602988 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.560054513 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.175390643 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.757640457 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.657858697 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.922197493 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.653816917 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.041516409 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.174408625 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.666271818 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474273163 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.650409614 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.509631358 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551742756 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.405969948 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.302615328 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.404298341 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255699152 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.114294676 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.415393645 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060378404 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.675237849 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.408290851 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.407032645 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426841406 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.414716943 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.629674953 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.156052248 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.63055268 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.414585203 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.41074531 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.978042319 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.060442595 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.716530539 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341178206 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.409153571 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.673174138 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.641956928 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430597024 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.858463721 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.117221412 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991958224 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.380853596 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427490347 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.417735181 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.202161064 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073474399 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.901205663 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935040712 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.06881435 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407882064 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688230043 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.412207151 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.419566633 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690979412 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.411381217 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.408414733 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.666483871 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.065305755 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.290192244 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.434721387 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.992522977 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.35290479 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.635644825 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.43914018 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342645756 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417589336 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.884167533 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.430281648 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.536490075 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.420620585 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.407378257 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41745127 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.167176246 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.680687617 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.414957106 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.42737519 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.40282751 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.440562579 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515346557 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.018922057 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432175595 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.083014728 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.757321719 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.662461747 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.426068877 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.402491084 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.412518799 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409960767 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.126116817 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.378201458 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.412949786 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99920812 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.426458112 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.427728666 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.41364113 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.627241693 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622047957 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.428082942 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.672591404 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421108741 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.431962024 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.321260839 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.178067477 seconds)
  done (took 1700.628095202 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.45778858 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.468891828 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.436253383 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.438383032 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.46078716 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.479279131 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.464622745 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.483483382 seconds)
  done (took 53.01414566 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.423066997 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.572319528 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.444682091 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.418019316 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.419814589 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.414589909 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.908377718 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.422985242 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.419434963 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.421526073 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.419632901 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.410608538 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.077606843 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.420639745 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.42883556 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.406900951 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.420838945 seconds)
  done (took 66.782928974 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.991372205 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.489216533 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.794521027 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.425108599 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.454168247 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.413584203 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.920723769 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.434192073 seconds)
  done (took 55.249874521 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.429843 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.430146418 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.430912446 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.431279287 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.428927217 seconds)
  done (took 8.476145467 seconds)
done (took 2107.880581872 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.414389 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.41928669 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.417433767 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.420078211 seconds)
  done (took 6.998083113 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.39899726 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.136842517 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.400366245 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.414591656 seconds)
  done (took 18.676909738 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.423987219 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.435224319 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.205720052 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.105181656 seconds)
  done (took 5.639589895 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.163015519 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.17562697 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.160355696 seconds)
  done (took 7.825470742 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.413205652 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.418592131 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.42136963 seconds)
  done (took 20.579442494 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.719700336 seconds)
  done (took 3.046375276 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.558444228 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.620400181 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.753936883 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.754895784 seconds)
  done (took 8.014555903 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.804882646 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.817046826 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.608816751 seconds)
  done (took 6.557669234 seconds)
done (took 91.52436097 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.620999719 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.438793616 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.624824061 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.596922945 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.642942697 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.628815506 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.910672675 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.560010294 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.10199024 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.090461833 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.594883934 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.641264909 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.651216713 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.438444572 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.651276098 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.438786297 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.64692482 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.681176298 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.317898162 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.419506486 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.919656713 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.235657184 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.424079177 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.260618 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.645218431 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.574691708 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.81599039 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.439557047 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.416228551 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.841399383 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.574866881 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.415955305 seconds)
  done (took 198.589747453 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.416500207 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.415940594 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.416796728 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.427669192 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.415830053 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.41765133 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.41656684 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.416213321 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.432239042 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.41690572 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.416459918 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.434642912 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.436393736 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.434465039 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.417180001 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.417233275 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.435290402 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.418381365 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.435213687 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.431630582 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.420235025 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.426581994 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.415621418 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.417276465 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.417946714 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.419046085 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.437605814 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.425550528 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.416894185 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.457108169 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.417040609 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.436652374 seconds)
  done (took 206.907391358 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.42651136 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.419167561 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.418370198 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.436357067 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.418046766 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.420619707 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.437448319 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.427822594 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.419646251 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.418528439 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.431026612 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.43643027 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.420098357 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.4302174 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.421640352 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.427395206 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.428224986 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.418678282 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.418682646 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.419429656 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.420746346 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.419135165 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.432965903 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.427720329 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.424398059 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.420086501 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.42700642 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.420271331 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.419736351 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.421135564 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.440599325 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.434924434 seconds)
  done (took 206.936090039 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.623122756 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.426579645 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.429779292 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.366325981 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.427916297 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.427044343 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.421420469 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.625539233 seconds)
  done (took 15.081257277 seconds)
done (took 628.844459655 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.879697874 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.57200801 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.629429281 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.447090452 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.289260986 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.467093332 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.447319088 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.630984421 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.382585826 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.639443187 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.815183009 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.44545573 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.964356406 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.445776883 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.716017627 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.551741597 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.367492474 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.471186895 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.784727196 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.062066471 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.723617582 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.995983188 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.636206576 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.377400465 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.974666779 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.980840326 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.244530271 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.356670226 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.44834933 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.793696293 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.256955697 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.530481446 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.495090443 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.499830375 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.55717696 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.552621875 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.501569329 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.514309319 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.635499441 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.753088375 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.049778494 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.194588935 seconds)
  done (took 97.416118469 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.419522888 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.41979712 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.417772445 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.419619034 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.420953087 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.419706059 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.419376299 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.418716188 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.419336125 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.418814693 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.420159144 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.420613993 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.419555165 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.420765559 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.419313435 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.419982021 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.419890753 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.421140457 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.420559388 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.419716777 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.420808686 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.421022439 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.421781631 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.418953484 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.420945207 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.42269868 seconds)
  done (took 38.259938081 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.432704696 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.690063908 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.873595723 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.437348637 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.432892193 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.436990303 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.5188594 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.433422137 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.436606502 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.437356195 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.594116024 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.436469003 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.470342382 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.90146522 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.435036505 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.43373792 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.43370357 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.432860813 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.699625515 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.443109466 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.541853005 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.435810708 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.521235576 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.444322852 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.457643145 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.435027297 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.438937682 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.007322915 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.436741326 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.598623544 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.344433428 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.524928414 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.982712207 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.886922034 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.345076234 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.443422071 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.435491463 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.600040697 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.437146486 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.435897545 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.521210682 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.435474655 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.886477414 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.131804236 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.453838597 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.436812589 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.028969431 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.600982683 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.720591038 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.451915372 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.925190454 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.445716282 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.437566786 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.435836738 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.712023772 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.443440674 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.435749199 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.067786193 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.459712148 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.52181754 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.436492525 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.438189916 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.705869856 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.436139015 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.696171304 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.438024489 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.444861533 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.458387625 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.885084978 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.441252822 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.159272646 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.457663815 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.438616961 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.597447863 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.698501998 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.064383267 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.441254097 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.714137871 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.998529068 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.524130231 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.444976901 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.997963161 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.52767192 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.442771713 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.441351374 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.440877439 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.438813946 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.484944913 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.523752167 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.089394181 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.160901304 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.108520616 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.55106353 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.446816489 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.439741322 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.078311945 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.467463171 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.440790707 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.900619203 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.173623853 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.46665333 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.448149973 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.166469606 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.468647683 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.527075774 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.445253519 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.90383044 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.439575835 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.484284161 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.439183121 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.447269083 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.465283923 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.528108539 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.443294954 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.441542919 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.125437865 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.627805667 seconds)
  done (took 190.001226146 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.434600015 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.432783339 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.441427273 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.434366702 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.434357727 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.441914514 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.434559731 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.434336414 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.440115129 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.434187657 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.434624739 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.435755155 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.437863201 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.436438555 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.447123071 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.442370922 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.094152244 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.436947745 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.434276528 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.436328538 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.25715269 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.443732454 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.435836769 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.435336613 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.436089691 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.436335339 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.44355435 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.439068127 seconds)
  done (took 155.072719424 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.442578202 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.1128191 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.452780869 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.588667793 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.467284541 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.440363751 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.586825159 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.5077296 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.443582169 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.440336936 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.440904394 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.780924759 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.445714538 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.019346925 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.662580203 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.590063589 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.019110858 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.462975097 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.441082615 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.441739962 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.592693133 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.457021877 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.78160811 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.072241929 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.444690448 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.075062827 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.434657627 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.444991802 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.442936783 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.076423546 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.441744648 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.782833619 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.529181459 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.510335726 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.077967284 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.020352935 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.035944329 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.608279551 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.445198981 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.440938615 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.44228116 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.434752916 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.078425956 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.446718101 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.444883261 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.086849138 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.466413823 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.446317225 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.451530241 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.443891394 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.511251407 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.511747791 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.78874083 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.087424183 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.530630465 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.457698703 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.592064512 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.84711137 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.449252287 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.022310702 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.433909425 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.085033995 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.466171844 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.43545469 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.445591659 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.450449706 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.612191859 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.592410538 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.06331921 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.47006897 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.023618431 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.635283071 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.449971805 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.446829942 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.448242733 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.085710776 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.045066276 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.64653298 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.598353788 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.66576838 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.438279213 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.445827901 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.437423165 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.535128268 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.45653248 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.084233402 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.074770947 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.476053948 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.449235831 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.448286526 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.447971027 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.646567975 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.086977505 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.534192207 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.020445574 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.810141607 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.791081151 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.448346585 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.512576576 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.465276998 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.793187736 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.449522701 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.510903987 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.91520319 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.793629019 seconds)
  done (took 173.565980269 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.719611541 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.758082945 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.542871248 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.601227296 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.101357384 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.047168566 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.828216226 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.600362569 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.563442903 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.726544993 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.765063713 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.547668887 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.677727437 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.528317587 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.197486538 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.521540182 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.545844939 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.604140868 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.590193389 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.550091967 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.132746017 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.751071295 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.646984961 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.641759456 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.555813675 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.307559166 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.037443759 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.02410757 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.628953807 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.949076244 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.00113983 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.62794713 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.474725078 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.208862209 seconds)
  done (took 70.359990966 seconds)
done (took 726.011157162 seconds)
SAVING RESULT...
DONE!
