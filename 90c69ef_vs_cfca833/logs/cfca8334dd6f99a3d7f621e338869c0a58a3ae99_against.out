cset: moving following pidspec: 23812
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.301974013 seconds)
loading group "string"... done (took 0.468847649 seconds)
loading group "linalg"... done (took 7.829309483 seconds)
loading group "parallel"... done (took 0.170996149 seconds)
loading group "find"... done (took 1.251947736 seconds)
loading group "tuple"... done (took 1.937058206 seconds)
loading group "dates"... done (took 1.313358682 seconds)
loading group "micro"... done (took 0.242535629 seconds)
loading group "io"... done (took 0.65077152 seconds)
loading group "scalar"... done (took 40.71519842 seconds)
loading group "sparse"... done (took 12.674023779 seconds)
loading group "broadcast"... done (took 1.021135719 seconds)
loading group "union"... done (took 13.899471175 seconds)
loading group "simd"... done (took 4.842095569 seconds)
loading group "random"... done (took 9.687936089 seconds)
loading group "problem"... done (took 1.98724843 seconds)
loading group "array"... done (took 22.47737664 seconds)
loading group "misc"... done (took 1.432212555 seconds)
loading group "sort"... done (took 3.596954123 seconds)
loading group "collection"... done (took 19.284309087 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.454798982 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.138466906 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.142234405 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.13230553 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.199918342 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.134563351 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.154856048 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.108007112 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.915896152 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.175972756 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139320722 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.485350242 seconds)
done (took 4.915022793 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.267030108 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.080242866 seconds)
    (2/2) benchmarking "String"...
    done (took 0.092944991 seconds)
  done (took 0.864607619 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.087114136 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.140121551 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.088800407 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.0741463 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.088419689 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.073641395 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.07305993 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.08890054 seconds)
  done (took 1.309024259 seconds)
done (took 3.215534438 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.715246223 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.283404868 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.200035846 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.49897567 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.171381369 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.207757336 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.729398805 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.611841915 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.2415806 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.09921357 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.12801776 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.437795692 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.127587277 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.880994492 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.085066573 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.119864513 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.187208516 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.727560307 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.0874336 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088643245 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.113239156 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.156881672 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088974762 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.096224168 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.179122673 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.07593723 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.183214635 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.105774946 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.074746167 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.27738758 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.196510976 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.935484333 seconds)
  done (took 11.831032654 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11114577 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133728929 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.075737923 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.150271172 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.132650661 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.080092523 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.09613137 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.074709852 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.119516987 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176327692 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.11354148 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136251822 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.088818294 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.076952134 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.11444269 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.227615432 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.116320776 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.116232476 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.078324718 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.101596968 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116729253 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.109468204 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.088327346 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.103793235 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.164899161 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.199769651 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.104228046 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.119811898 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.075514593 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.104553526 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139642184 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.151776043 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073122824 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.075822483 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172396842 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120058369 seconds)
  done (took 4.935496307 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.186803643 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.099023825 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166183794 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.159596438 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.138737008 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.151284411 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106817823 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.252756779 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.120749636 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.159634534 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.105785719 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1413674 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108950015 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076153157 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079743591 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.092138688 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.684821798 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.161696903 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111141456 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.112810285 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.094564898 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081907403 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.772730391 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080592827 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.087324604 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078273683 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.085636226 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.156264777 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078800329 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.167026387 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.118491248 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07817484 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132213226 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.204027154 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107562085 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.132872818 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076826619 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.090939298 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.175916532 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080744249 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.075651293 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.121163448 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132165976 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131188372 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.073929088 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.090554972 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.207901724 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.073773402 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.10717763 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.024237643 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.177357545 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.074273737 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.08647979 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.090581375 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.334842243 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095037643 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097666863 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.074813505 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.342106355 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.110878829 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.093415361 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.075511839 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094329801 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077381372 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.485427103 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.09072408 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.146766536 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.076923492 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.085748407 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.093845489 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.090999849 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083258188 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08196641 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.112207829 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.075420775 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.095491655 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.07590389 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.092083612 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.076585307 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112299387 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.10370791 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.095757759 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.075138355 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.090865903 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144196851 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.087748209 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095524824 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123435304 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.077893165 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.090095363 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124320152 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078429714 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.074867347 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132457891 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.076294303 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.11233367 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.092320868 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.137483669 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.076579045 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.198512804 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.0739294 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.119829926 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.079642252 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126024688 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.103905903 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076861554 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097159564 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.073700605 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.090582434 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143758001 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.075034703 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.091371836 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.077136213 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.105536669 seconds)
  done (took 23.107824679 seconds)
done (took 40.554863154 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.341352023 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104747238 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104674529 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103670742 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.103643408 seconds)
  done (took 1.518121164 seconds)
done (took 2.251140148 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.264584222 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.167438047 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071769248 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.179546165 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072766227 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.168768545 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.153882626 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.106014816 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.176879098 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.087935115 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.157809559 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072346585 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071988307 seconds)
  done (took 2.51023136 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090009286 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110872569 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078199734 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.089662603 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089838939 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089596846 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10533064 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.0954941 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105137628 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080738731 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072192504 seconds)
  done (took 1.736913746 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089544326 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.092614095 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093787515 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088934794 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088957352 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08862579 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105409334 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.094318047 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105904444 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081351848 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071565981 seconds)
  done (took 1.73361142 seconds)
done (took 6.703844108 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.09508183 seconds)
  done (took 0.818919316 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.030416784 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.298806445 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.120854177 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.165005826 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.326130796 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.211639044 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.601296297 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.132584669 seconds)
  done (took 15.807697454 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.109392383 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.110657439 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.077410391 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.09560243 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.076545912 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.092532242 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.077127507 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.091930155 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.078854449 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.078336305 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.09552494 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.080290042 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.094596201 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.077454074 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.0948846 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.076228224 seconds)
  done (took 2.206195499 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.113009516 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.112823489 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.099334953 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.084489762 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.098194436 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.081123493 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.100300707 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.082341869 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.095429883 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.080869694 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.10087211 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.083099784 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098497635 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079389817 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.098143424 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.100543383 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.080326138 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.099308086 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.083644624 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.099774883 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.085604924 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097309286 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.083043421 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.100502278 seconds)
  done (took 3.077695756 seconds)
done (took 22.640524645 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.147465484 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.0816022 seconds)
  done (took 0.9660997 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097178158 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112812794 seconds)
  done (took 0.95249827 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.102369535 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093380278 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.129269795 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094267302 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.094075434 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.078155922 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.125301075 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.093226319 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.078514721 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.078505202 seconds)
  done (took 1.708298996 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082901327 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.082269536 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102022036 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.113811408 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.088816624 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095967652 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.082742058 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097227886 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083608789 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091895386 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.085472405 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.110008408 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.083419636 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.113008344 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.09794753 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083709742 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102604831 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.08172952 seconds)
  done (took 2.422885609 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078021546 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.078942323 seconds)
  done (took 0.902837192 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080990079 seconds)
    (2/7) benchmarking "second"...
    done (took 0.076414925 seconds)
    (3/7) benchmarking "month"...
    done (took 0.095386449 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095079842 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076499624 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075036558 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.092774914 seconds)
  done (took 1.338469949 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.481824051 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.139069597 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.267380152 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.081419855 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.116535616 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.309536291 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.092428032 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.082408806 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.098403474 seconds)
  done (took 2.46996917 seconds)
done (took 11.501879996 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.088615594 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.097585517 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.12496087 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.457844084 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.113602375 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.075021804 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.153784939 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.254806917 seconds)
done (took 2.115697749 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.143999522 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.335343334 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.120504016 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.069458368 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.091416508 seconds)
  done (took 1.367019058 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075957884 seconds)
    (2/2) benchmarking "read"...
    done (took 0.078198207 seconds)
  done (took 0.907596376 seconds)
done (took 3.167738629 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075851393 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.074905207 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.089404737 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.075473123 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.072792939 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.089344343 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.122998245 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.075553496 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.075709023 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.092946527 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.073602524 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.09306518 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.075905888 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075533932 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09051411 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072764147 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091593495 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.07367371 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073288614 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088661564 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075448731 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.088652575 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.073606762 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.075078171 seconds)
  done (took 2.752028412 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102806641 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092538067 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.082469589 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.097658385 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.080185908 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.09818352 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.08114155 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091591912 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.081514183 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.094364784 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07936898 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.096234399 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.077642827 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.096361421 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077816123 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.095720392 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08149666 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091926939 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078049313 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095915045 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.080781285 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09210374 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.079661014 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097909935 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.079584208 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095721762 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.078743073 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.092304915 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081266142 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095885779 seconds)
  done (took 3.404540105 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.081408173 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.073626895 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090499677 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.081416468 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089533055 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.078370332 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.073649876 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.090942316 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078245739 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089436421 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.07969801 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.073481302 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.090789587 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.07802077 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.095286986 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.077938644 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.103581003 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.187594422 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.073495911 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.094614457 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.076950222 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.089504591 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.076046507 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.072894331 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090378064 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.073200788 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091113612 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.073109071 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.073724784 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089791166 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.076239657 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.093631427 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.073477805 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.079969518 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.094004537 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.072826481 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.093289727 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.073080142 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078070809 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.089419786 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.073233043 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.089753875 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.073653106 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.080182338 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.093075601 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.07544505 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.090238843 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.079157322 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.094012134 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.08036396 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.072665589 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.09009905 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.07895226 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.094417843 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.077533198 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.072690085 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090535669 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.072694365 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093798286 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.0727327 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.072234954 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.089641953 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.07534255 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089930636 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.089915744 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.096558974 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.073699468 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078926009 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.093843886 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.075518204 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095555613 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.088512278 seconds)
  done (took 6.837777349 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.07862358 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09988537 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.076163573 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.074709276 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088424631 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073765186 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096522512 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073959172 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092188946 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.092659055 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089961053 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075635722 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075335052 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093753353 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073776581 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.092495515 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08296653 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087637923 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.074120074 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.093418799 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074685959 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096697231 seconds)
  done (took 2.620563778 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.213339939 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099880489 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.135914287 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092740159 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108855575 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108664335 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.08073535 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09920785 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081001144 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099408955 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083396866 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097754791 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109469577 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083321748 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09973902 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085043918 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09750022 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085281919 seconds)
  done (took 2.622449577 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.089583301 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09300074 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.098613096 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093323833 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.07761528 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.095512755 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084206722 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109251457 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.079076156 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093434194 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.086405379 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095419873 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.078681268 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093162774 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078906659 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.093126656 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.079663831 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076760765 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103212617 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098235572 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.082871139 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102701297 seconds)
  done (took 2.749207108 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094216834 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095488076 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.096792786 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097437667 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075664956 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.094953838 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.085311145 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093506765 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.085990585 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.095177481 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076375422 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09399231 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.084925926 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092823675 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.083133023 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093421964 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078914327 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.076281908 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096174879 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.0754497 seconds)
  done (took 2.530948758 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117519816 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107954611 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09135189 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119023592 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091638484 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108476131 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118379343 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091871975 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108453058 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104723651 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107913919 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091744978 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119549012 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115288665 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.091489822 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11926088 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118852306 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102731381 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108245247 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091673131 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119838058 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091451639 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119093878 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10851713 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091840096 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109679845 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092213903 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115001461 seconds)
  done (took 3.743523204 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076373002 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076493939 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090930697 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.074037737 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.073946371 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090747931 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.073341764 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.090560376 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077182993 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073443944 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.093471345 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.075772794 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095434026 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.077203141 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076413598 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.092972757 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075962272 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.090437456 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073716161 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0736567 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.092299068 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076102731 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092793037 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074020614 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073643042 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.092651249 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07329592 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089994333 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076727258 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073461981 seconds)
  done (took 3.206394286 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.084799171 seconds)
    (2/2) benchmarking "in"...
    done (took 0.098197226 seconds)
  done (took 0.956088419 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.075205224 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109487985 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.074440636 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080388107 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099185805 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.077536344 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.103801929 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082405757 seconds)
  done (took 1.472963453 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.094421334 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111604185 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083035811 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.104833386 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094745068 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.110290398 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.137996163 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100121174 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.083269578 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.09230463 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.093963065 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.093090781 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.082186868 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093447696 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.082842179 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083332152 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095100179 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087626853 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102579219 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.079617848 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100143156 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089158647 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096680595 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.085048078 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.09515318 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088217911 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.103962972 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.090079928 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098312602 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.087083876 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.099577097 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.071504465 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081491676 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100068675 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078409725 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.11080973 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089404086 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097547433 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.085534954 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101174923 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086995991 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093548365 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.082820413 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.100862785 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092485689 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099926886 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083434825 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.075366191 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.091680173 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.079495431 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093121186 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.077134197 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.088162799 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085081565 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.098155843 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09114902 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.09671706 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.078889661 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.079441187 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.096469534 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.084314953 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.096351914 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.079922538 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.097527345 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08497446 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.098329132 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084984743 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.092503457 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.071648662 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.078781798 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.103475802 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.100374244 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.103606889 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.08311376 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100918821 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.078642994 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.098221537 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084220752 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102295048 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.085872599 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099407042 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085159271 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.103087685 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.078006577 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.09707608 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.084360938 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096143233 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.081499404 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.074722958 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.109567618 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.080009724 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095831043 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.075777732 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.104182524 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.080749313 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098499205 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.075612723 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084637897 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.088859517 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082626113 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101173237 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.078508354 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.104695336 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083585259 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101008573 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.085253685 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.105403993 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.076956264 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.097870002 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.074446735 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083793606 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.098053165 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.084792697 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.089030507 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081014888 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.097166978 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.083405823 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.102397085 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.07947363 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099767133 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086088784 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.102043044 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080131563 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.073932516 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.098350286 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082486898 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105017481 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.08551281 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098098965 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077031066 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.0931914 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.082070875 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.09920915 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.083417446 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08308178 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.099023759 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.072346119 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.096969407 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.083461312 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.103642857 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.078350414 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.095068004 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.08318368 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.09495186 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081885303 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.08306722 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.097036346 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.076843978 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.100332017 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.080435431 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.09323275 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088146517 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.097330618 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.080348296 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.080891096 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105305066 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.079174198 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.101661844 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080043804 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.099850206 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083583417 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.093775148 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.077486329 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.097407349 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.087725255 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.096917428 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077367725 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.07429923 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.101773337 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.075740411 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.099305209 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.076860356 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.097074421 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084313684 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.07929808 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.0990575 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.078936701 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111593527 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091020336 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102434324 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.083530695 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.105632459 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08207246 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.097595843 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.08221806 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101367196 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.08320597 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.103318257 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.083050551 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100312264 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.080539857 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.073984721 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101209359 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085789304 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.094453066 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.078890179 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.093975185 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.081929434 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.102099593 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.083120695 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.082677982 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097094034 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.078051397 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104644549 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.080086665 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099673674 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.076600236 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.09959856 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.087649885 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.10063434 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084922847 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.104233622 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081575483 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.075955098 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105547899 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079448542 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.102122217 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.076796892 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.093114937 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.076883106 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101599177 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081686956 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.080649511 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.089817745 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085510547 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104070066 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.077954807 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.094365047 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.082674952 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.104472403 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.079936183 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.081478119 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.099475713 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.083339054 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109784681 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.077103451 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.098893617 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.087717456 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100766618 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.072195913 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.102300804 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.080516735 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.095140922 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081472225 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080002782 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098851785 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08454486 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.100753424 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.072734934 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.098311404 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.080086878 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.076207462 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.094922748 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.085053616 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.099558873 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.079777848 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.105370715 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085055574 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102384344 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081667408 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.099775284 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.083670094 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.102069512 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.081720696 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101420342 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.080691869 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.076833014 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.098814707 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.077109937 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.097373974 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.082407167 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101656095 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.078587428 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101896201 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082346846 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.077902081 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.098286391 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.08419503 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09712192 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.079286347 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.096100927 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08171647 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095976708 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.079225413 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.080454233 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094682554 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.085307736 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.100276562 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085986242 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.096545807 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.075769337 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100727421 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.081614538 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.084119081 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101760521 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.084367767 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.097306488 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.082158133 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.099852632 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08719541 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.094732193 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.08888871 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102375082 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.079202451 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.098734246 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.078737453 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.079487392 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.096338261 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.080502452 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102099254 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.079282956 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.099666617 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.084486472 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.098656978 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.078802065 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080268695 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102856336 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.078537723 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10307191 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.073273596 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.095249396 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.078262921 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.084472032 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103903014 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.083803862 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.09960341 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.080455614 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103620114 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08136772 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.093307015 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.096574961 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103436943 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.08418482 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10470036 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.077949958 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.079475916 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.106661245 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.072561442 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.098614938 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.07985586 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.09383402 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087192501 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101906151 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.087669664 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.077548605 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.095720988 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.075451442 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102470536 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.081532163 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.090641309 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.079675234 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08179475 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.09907582 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081790542 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101921401 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.081220715 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102872329 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086894992 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099682956 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.081169267 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101205407 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.075903235 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.076745762 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.096474986 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.081543806 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102577914 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.07719907 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.075867626 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101446663 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.080460243 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.098420222 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.082992559 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.098659191 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086962315 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100754583 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.082752276 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106659105 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.073929468 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.081649396 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101282919 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.083456323 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.096593372 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.083790251 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.101052519 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085886229 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.104838039 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084298898 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097205083 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083432842 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080711529 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101352918 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.08261432 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.103127022 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.078151356 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103454497 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087305932 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.09837927 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.081180176 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.077909031 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.097947259 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.08308469 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102819478 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.081389063 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104198733 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.082325818 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.098588242 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.085587906 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101181843 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083139811 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102809045 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.08112173 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.084373396 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.096111992 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.087868217 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.097386584 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.085132153 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.099059477 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.076886645 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100437285 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.082776205 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08196209 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.102545195 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084653221 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.097045104 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.078209093 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.098069926 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.081794796 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106428997 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087279884 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.099168122 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.082214107 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.077305592 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.094551985 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084851098 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.095032451 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.080461575 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.099118913 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085654834 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.09882471 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.080077751 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.08186306 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.10590271 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.084734922 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.102271984 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.077781368 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.102377824 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084993681 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.099426467 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.080212017 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.097045926 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08557148 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.08399902 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.099411704 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.077628832 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.106431147 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.082962112 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103609405 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.080067684 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.097357283 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.079486598 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.076848469 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.104036941 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.080819301 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104226764 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.080883595 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101952864 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.089470227 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.09750242 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.079200663 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107442293 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082333846 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.104571284 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.077340386 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.097280094 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085935459 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085556164 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.096887632 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.077607994 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.095362208 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.08187386 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.096253471 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.07755534 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106958584 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.087589464 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.099414283 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082123162 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081325938 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097052226 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.077475821 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.096318899 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085574919 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.098985174 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.089118704 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.0781559 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.097148773 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.077527488 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101696613 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082001438 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.101480783 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.076684039 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.076834078 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.096586081 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.082165616 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.105370208 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082094808 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102246661 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.082554756 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.100103231 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080943984 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108123921 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.075952736 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.082887852 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.109655762 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085184881 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098421119 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.084408292 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105954969 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084947904 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.096831065 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.085568578 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.100737033 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.078847106 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103815999 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.085694034 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113192352 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082817939 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.097021478 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082802092 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.081522475 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.097851724 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.086782681 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104373591 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084717839 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.103554735 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.080836664 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105384746 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082281097 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103926712 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.082152135 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.100529751 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.082445558 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.078871508 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100579579 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.078083802 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104553788 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.084981997 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102109609 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.086696334 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.078109647 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.109228542 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.105924376 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.084507249 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.07592089 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.097760839 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.078814868 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.097225626 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.08567896 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.077440698 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100511957 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.080605324 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.10170085 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.079824351 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.103950154 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.081236125 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103780918 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.084085942 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.073065502 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.100416049 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.081796859 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099756832 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.079105972 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102851634 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.085308158 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.103800213 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089882818 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.079422036 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.099725481 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.080769729 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099647778 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.078778318 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.105147696 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082096559 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.081915133 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.097977451 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083418315 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104557007 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08271974 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10503093 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086067121 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.101239315 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.088210877 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107049617 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.076516236 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.076506852 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.104824316 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.080286617 seconds)
  done (took 54.548338285 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124126308 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105330043 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074239543 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094791272 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12004187 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079336493 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074428974 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099179791 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.07909533 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107471969 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.074237074 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09421699 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115269558 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.100845233 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119135361 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108657158 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07486736 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099200614 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074455266 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097989039 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.094377708 seconds)
  done (took 2.836422948 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.101617677 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11279919 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091036755 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.116295221 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106410613 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092846023 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110187254 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112687505 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095658729 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105950217 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116653188 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092334319 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.106750571 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.106639846 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087212855 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110702438 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.095989577 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104574406 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.113630335 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090446483 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109892705 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.109887849 seconds)
  done (took 3.115823641 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.08858347 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.081802162 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.103420503 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.074082562 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.1019231 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.074358047 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.107881927 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.077233823 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086892753 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.096843204 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.077572071 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.096840424 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.083460875 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.073898154 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.097770745 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.076850753 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.149280709 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107923714 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082749208 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105113906 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077173738 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.101005397 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.077538062 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.077763672 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.097352389 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.092279516 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105073741 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.083709302 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.1032537 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.078253521 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.082945496 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.097574082 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.080119886 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.099984183 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.078215309 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.078226798 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.103081072 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.082331211 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.097448528 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.080211174 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.099126135 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.078189605 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08339192 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.100623844 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.079053395 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.096735786 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.080670932 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102026964 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.074522217 seconds)
  done (took 5.237107787 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.114017088 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.132338909 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102678313 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144085588 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.118175823 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.091847845 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.104198915 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141205512 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.077058028 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.080639979 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.12112752 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.118462726 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102271113 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089197524 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.105667146 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.082823774 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10583225 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.078169415 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108572045 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.078861508 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108990654 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.086778097 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.117224815 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.11534954 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.08703252 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101634805 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.079204015 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108517571 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.11377686 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.088460016 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109850964 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089609677 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.117276441 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.101628153 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.078804663 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.10557173 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.100558953 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104722084 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.0852652 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.098365375 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.085194878 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109056478 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.086540443 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.119236827 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104298818 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.084465978 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103583778 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.076762615 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.114983754 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.08569658 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114364926 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.116062036 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087499669 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103954708 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.08909356 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.118027705 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.103526109 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.082967422 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.107430744 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.093394241 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.097666039 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088516032 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.116583059 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105834186 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.092448174 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.116673166 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.105060367 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08813045 seconds)
  done (took 7.862001109 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113421061 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.108999615 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099877264 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119581081 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109537001 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.088922045 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109414822 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.087437946 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109871766 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115034495 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088630737 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.156696233 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085260092 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116155157 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.109006875 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.087988067 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108876907 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087680724 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108946079 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088144476 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.108990891 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.1198152 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087755887 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120109228 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12132514 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086091345 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109467226 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.088326987 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120740633 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109137496 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100552851 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.108880911 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.087963723 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120008398 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.121158617 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.108235055 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082807635 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088801255 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.109129797 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.108458993 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.086100511 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120278531 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08873447 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106350123 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08903186 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.109340892 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120089482 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.100502841 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11538478 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115560522 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.088676163 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120309429 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109294498 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089144399 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120533219 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.128554559 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099908837 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119607962 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108798326 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099219273 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119578396 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128107845 seconds)
  done (took 7.430541707 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111871204 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116135675 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.121106922 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.075342176 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.098725454 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087388599 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098676375 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.078048983 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113930115 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094146266 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117575836 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107765723 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091571856 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117188616 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107029036 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091248927 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108418451 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087144773 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115284323 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107647154 seconds)
  done (took 2.885619538 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.089408596 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.121832093 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.080832902 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107975374 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.082435608 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.108819604 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.082726311 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103404461 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081068001 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103378216 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094087279 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.113839256 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080671009 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108520722 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.113470418 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.086918775 seconds)
  done (took 2.399293069 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.10123855 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.121960183 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.103523115 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.106313263 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.077368612 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.105152474 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.083619788 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.097590178 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.076138647 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.117294501 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08599363 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107355044 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.083472631 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.098921566 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.081613694 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.109500675 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.077056382 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.084346977 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104366752 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.103959106 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105790888 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.10323218 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.084533014 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.081970622 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104415887 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.106606042 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.087274665 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.077654986 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.099714971 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.083710817 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.10356838 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.088069438 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.097861824 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084860262 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.099442139 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.077688921 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104236981 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084037947 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107137639 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.083338993 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.09908648 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.083353846 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.083245497 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.102059419 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.075876489 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104944209 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.076245362 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.10775004 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.081715838 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103922178 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.083536538 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.110083064 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.087255346 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.112481458 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.09033863 seconds)
  done (took 6.040274653 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095288097 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105553088 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075506041 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.077862049 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105557586 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.082973584 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.106277483 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.083779912 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104112849 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.078321785 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104095863 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.084947094 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103716773 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085238178 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104367858 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085357086 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075485018 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103116078 seconds)
  done (took 2.511023276 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086355851 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079985884 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.109247092 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08015465 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101989082 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082294446 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097881937 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.0787096 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078887688 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102227472 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080447401 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103612167 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079493311 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.103142629 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080772745 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101325255 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.082831811 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07841597 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101224636 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07671248 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104316943 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079403083 seconds)
  done (took 2.820095797 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.11689903 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.121121459 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.0883866 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.208077142 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.121994133 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.106317206 seconds)
  done (took 1.614777749 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105459251 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139339118 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080889252 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104795935 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09468651 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10753588 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085575196 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106188561 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119850246 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09748204 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107195398 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120415579 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098734846 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117321137 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115096961 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095538544 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106492015 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105634339 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082316906 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129205554 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085290047 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120477719 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106395748 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08525994 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106298396 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096817639 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120229413 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119023101 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084653112 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120344644 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11621556 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085093861 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119392472 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119557057 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082960116 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120887623 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106375862 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108032081 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115444657 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117874792 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082831233 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116077874 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119309566 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092535035 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120297506 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085261586 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11348085 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106629145 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08569743 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134408037 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115493399 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11805795 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094073671 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121008749 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119667709 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134087615 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099314741 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117458046 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116015359 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120050773 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097158087 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115593787 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117435835 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098991484 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116229968 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117295303 seconds)
  done (took 7.982391463 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120681012 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103871686 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085125558 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121126201 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117919109 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085385442 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10731067 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085824607 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106440615 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08261568 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15298848 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10676807 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11841943 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096501057 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106989289 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106754882 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085606894 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118095751 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08251077 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134545762 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107792053 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096467139 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117613566 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118181771 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119251518 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09414239 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107286132 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086398842 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10728959 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106864283 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092405831 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107089697 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096521942 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103167285 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118189759 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086337276 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107560156 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093686544 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1074991 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115201531 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097146979 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129633611 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10657163 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085984276 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120639603 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107551118 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086557954 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103464418 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085970455 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10324713 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099102188 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120742136 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120292176 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118494986 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085885229 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106941887 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086453924 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107444583 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085647323 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11598281 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117834306 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086324986 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134970134 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107117624 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08557011 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119215443 seconds)
  done (took 7.791887552 seconds)
done (took 148.725393113 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.096714844 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135207934 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094389369 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.172232151 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.081739015 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.116125906 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.135767873 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.09531994 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.102524156 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.080618716 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.102684101 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.082919905 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.158430035 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.102245612 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.081196406 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.104558419 seconds)
  done (took 2.593123854 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.176194186 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.28911929 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098370419 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.101201613 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.085175567 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.081120433 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.102133779 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.088459813 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.103701085 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.080336028 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.102002558 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.082334304 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.080294108 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.103720557 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.082072307 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.102406194 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.080697038 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.081187458 seconds)
  done (took 2.780660397 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.108363114 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.201565287 seconds)
  done (took 1.175657982 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.116618531 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.172594392 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.26866978 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.149955206 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.1313458 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094780812 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.151850062 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.122713581 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.201094019 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.126103318 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.103920468 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.109542883 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.134334795 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.091421658 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.111156422 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.087690907 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.13688078 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.088296999 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.111290892 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.088267957 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.134748227 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.079798313 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.112654121 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.087830983 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.183944672 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.123622772 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.102586754 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.080950249 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.088291381 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.111369912 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.087021793 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.11565361 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.123869484 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.14599472 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.093179528 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.167196553 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.088852896 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.107940997 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.089647757 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.10797678 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.093562377 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.113819115 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.094699832 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.110581023 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.080897869 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.1096714 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.080980136 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.080390168 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.111498681 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.089179894 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.111560129 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.086538387 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.164570234 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.320918047 seconds)
  done (took 7.343992059 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.795179886 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.148311684 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086199681 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.868941249 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134342664 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122278336 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.769923569 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.131705427 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227472883 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.806999762 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101357595 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121478923 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.222107659 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.223040081 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.920469322 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.302806036 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.680891997 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.123086235 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.11336635 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.145751224 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116782614 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135296719 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.104960527 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.423879903 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.110267765 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086841059 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.114232518 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.094785502 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.154802545 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.110619301 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.088304945 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.192562898 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.237969861 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.177399472 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110080974 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084850723 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108092002 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.160653798 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.238833971 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.210905251 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.17315481 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.082003795 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.108183954 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.095423853 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.127644588 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.08268394 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.17949538 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.16516029 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.164367121 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.089050048 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117629316 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.116308819 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.094201512 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.15650549 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.106991669 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.303240287 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.289494536 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108675355 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094009054 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.124306326 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.25727016 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084781288 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.21985203 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111673387 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.209141329 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.085384522 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.772366941 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.159392333 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.108746908 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.092433275 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.114693498 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.090273547 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.118106209 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161359755 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.401405475 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.097536052 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.112216175 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085050714 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.224372101 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086152373 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.085554769 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.178898873 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.08730466 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115944026 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098627775 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119859263 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.163299683 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.220746407 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120928866 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093682553 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113904541 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.096704963 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.109752222 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.20933711 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21569224 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.153317479 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.208128008 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.11836302 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.157955012 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.159705902 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117490829 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.163186224 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09200481 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123717663 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117897034 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.189042197 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.137126922 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.108181785 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.089761315 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.115602519 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.118077194 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.111468178 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.092652223 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.183361798 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.455681674 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.160445083 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.08265461 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.1124172 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094479796 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.177053898 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092294573 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.25920139 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094318059 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.160422259 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.114348761 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.082703026 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.115976716 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.156363087 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120253978 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.093210551 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120075015 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116048932 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.223240324 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.190759627 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120996664 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.215289808 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.175437954 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.115975832 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.166578272 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11592755 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.163693722 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.094162194 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118350986 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.087262024 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.766874609 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120915247 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.092654284 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113706583 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.157808026 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.108915187 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086602898 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.109417257 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.082512131 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.796978438 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087978047 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.107158816 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086137115 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115256475 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.09282095 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.114536276 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.090815216 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.155586922 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226060683 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119177464 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.091704072 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.109521291 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.155657995 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.086486237 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.109335073 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.086186403 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.109377667 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.09374496 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11277382 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087000471 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.164898172 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.15292243 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.216722165 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.584206103 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.086046284 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.086276428 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.223694233 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108661444 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.257272375 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11655147 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.22116157 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.159471762 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082892975 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.309487468 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.162080687 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.181935716 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.088801517 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.164458359 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10563538 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.091612041 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.177693885 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.085499188 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115662003 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.152620887 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.098890622 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120309936 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.918950926 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085491982 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.221951769 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.105948545 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.16211287 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.087447459 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118393151 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.284694256 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085869423 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125409143 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.155836401 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.089633982 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.109653227 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.8440401 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.109923287 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.095293757 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115925364 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.193542208 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.181248522 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092860647 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.116218649 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095419357 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.154786975 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.228857143 seconds)
  done (took 42.109123008 seconds)
done (took 56.856823658 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.278364818 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.209534406 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.261345501 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.16298281 seconds)
  done (took 1.880597755 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171554607 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.12117372 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.140933959 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.080542578 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.152189298 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.10288678 seconds)
  done (took 1.656752491 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.358087033 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.264649737 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.2112847 seconds)
  done (took 1.724701099 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.243240627 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.26441552 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.321044182 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.38536344 seconds)
  done (took 2.204946807 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.198866254 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.097164146 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.119419346 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.111891318 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.163370166 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.19901549 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.137502844 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.145171401 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.104417688 seconds)
  done (took 2.21417264 seconds)
done (took 10.577301942 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.152923088 seconds)
    (2/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.206303867 seconds)
    (3/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.311254039 seconds)
    (4/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.170245768 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.188238499 seconds)
    (6/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.150760804 seconds)
    (7/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.241239094 seconds)
    (8/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.11071075 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.11160282 seconds)
    (10/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.161660359 seconds)
    (11/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.196053033 seconds)
    (12/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.143673571 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.119842515 seconds)
    (14/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.188038074 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.113724769 seconds)
    (16/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.170578114 seconds)
    (17/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.125579467 seconds)
    (18/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.124335044 seconds)
    (19/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.088025718 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.129844403 seconds)
    (21/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.110887283 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.132085985 seconds)
    (23/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.119558081 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.120985223 seconds)
    (25/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.238794568 seconds)
    (26/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.249804533 seconds)
    (27/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.113560653 seconds)
    (28/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.102364475 seconds)
    (29/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.118198178 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.081140691 seconds)
    (31/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.187609908 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 0.227192768 seconds)
    (33/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.174929025 seconds)
    (34/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.121033534 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.091117132 seconds)
    (36/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.114470326 seconds)
    (37/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.098867307 seconds)
    (38/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.145103229 seconds)
    (39/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.097238233 seconds)
    (40/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.10602071 seconds)
    (41/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.088727872 seconds)
    (42/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.268693259 seconds)
    (43/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.153956817 seconds)
    (44/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.199008237 seconds)
    (45/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.2064322 seconds)
    (46/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.087285145 seconds)
    (47/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.134825602 seconds)
    (48/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.088058506 seconds)
    (49/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.211879675 seconds)
    (50/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.193519453 seconds)
    (51/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.092593008 seconds)
    (52/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.205757581 seconds)
    (53/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.093204568 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.112205686 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.130116411 seconds)
    (56/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.158676984 seconds)
    (57/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.148946163 seconds)
    (58/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.084599532 seconds)
    (59/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.10898776 seconds)
    (60/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.0925644 seconds)
    (61/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.160641627 seconds)
    (62/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.079082736 seconds)
    (63/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.188150306 seconds)
    (64/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.08333731 seconds)
    (65/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.211946389 seconds)
    (66/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.217757837 seconds)
    (67/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.199210469 seconds)
    (68/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.082403036 seconds)
    (69/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.093582375 seconds)
    (70/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.214223821 seconds)
    (71/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.192031199 seconds)
    (72/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.18476568 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.080671635 seconds)
    (74/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.094059777 seconds)
    (75/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.091533269 seconds)
    (76/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.110654373 seconds)
    (77/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.151544806 seconds)
    (78/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.131949488 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 0.081161629 seconds)
    (80/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.178452704 seconds)
    (81/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.091932011 seconds)
    (82/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.161253049 seconds)
    (83/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.097999492 seconds)
    (84/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.187872137 seconds)
    (85/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.094212634 seconds)
    (86/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.085030678 seconds)
    (87/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.188928248 seconds)
    (88/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.096411569 seconds)
    (89/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.107364899 seconds)
    (90/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.137239445 seconds)
    (91/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.156565162 seconds)
    (92/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.072325541 seconds)
    (93/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.110792201 seconds)
    (94/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.069233505 seconds)
    (95/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.089422488 seconds)
    (96/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.115867776 seconds)
    (97/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.068594811 seconds)
    (98/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.097306153 seconds)
    (99/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.070258562 seconds)
    (100/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.092110541 seconds)
    (101/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.102608896 seconds)
    (102/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.202028498 seconds)
    (103/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.073157352 seconds)
    (104/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.185684539 seconds)
    (105/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.149255058 seconds)
    (106/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.094226267 seconds)
    (107/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.186879907 seconds)
    (108/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.093347823 seconds)
    (109/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.091877584 seconds)
    (110/286) benchmarking ("sort", Bool, false)...
    done (took 0.184262256 seconds)
    (111/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.116043082 seconds)
    (112/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.089047805 seconds)
    (113/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.114959543 seconds)
    (114/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.101405604 seconds)
    (115/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.111666396 seconds)
    (116/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.14165444 seconds)
    (117/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.119208396 seconds)
    (118/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.087348122 seconds)
    (119/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.108903373 seconds)
    (120/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.072188402 seconds)
    (121/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.088709274 seconds)
    (122/286) benchmarking ("sort", BigInt, false)...
    done (took 0.246419716 seconds)
    (123/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.102997407 seconds)
    (124/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.118601732 seconds)
    (125/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.070550887 seconds)
    (126/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.177045368 seconds)
    (127/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.089917684 seconds)
    (128/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.079942701 seconds)
    (129/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.118508628 seconds)
    (130/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.177202185 seconds)
    (131/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.082332629 seconds)
    (132/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.082238909 seconds)
    (133/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.182496305 seconds)
    (134/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.107979273 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.081562571 seconds)
    (136/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.089317561 seconds)
    (137/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.111097559 seconds)
    (138/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.17829382 seconds)
    (139/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.084661448 seconds)
    (140/286) benchmarking ("sort", Int8, true)...
    done (took 0.224950707 seconds)
    (141/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.083772222 seconds)
    (142/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.096801315 seconds)
    (143/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.092254409 seconds)
    (144/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.087946529 seconds)
    (145/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.102464213 seconds)
    (146/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.08948562 seconds)
    (147/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.108202695 seconds)
    (148/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.08887891 seconds)
    (149/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.06970441 seconds)
    (150/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.188137992 seconds)
    (151/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.132428717 seconds)
    (152/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.107658047 seconds)
    (153/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.16676279 seconds)
    (154/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.149154091 seconds)
    (155/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.123872106 seconds)
    (156/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.097711971 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.081679812 seconds)
    (158/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.072613394 seconds)
    (159/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.101891315 seconds)
    (160/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.106215264 seconds)
    (161/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.132820968 seconds)
    (162/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.08305103 seconds)
    (163/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.106263639 seconds)
    (164/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.084354557 seconds)
    (165/286) benchmarking ("sort", Float32, true)...
    done (took 0.23490247 seconds)
    (166/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.081973699 seconds)
    (167/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.112695982 seconds)
    (168/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.074263876 seconds)
    (169/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.107342177 seconds)
    (170/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.088735727 seconds)
    (171/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.093005127 seconds)
    (172/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.105859373 seconds)
    (173/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.06958094 seconds)
    (174/286) benchmarking ("sort", Float32, false)...
    done (took 0.178225673 seconds)
    (175/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.16728185 seconds)
    (176/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.083445636 seconds)
    (177/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.084847343 seconds)
    (178/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.104273919 seconds)
    (179/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.069869487 seconds)
    (180/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.168395938 seconds)
    (181/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.089137345 seconds)
    (182/286) benchmarking ("sort", Bool, true)...
    done (took 0.225354117 seconds)
    (183/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.105314101 seconds)
    (184/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.1638794 seconds)
    (185/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.10641938 seconds)
    (186/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.105575977 seconds)
    (187/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.117112869 seconds)
    (188/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.08963977 seconds)
    (189/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.069178455 seconds)
    (190/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.200242837 seconds)
    (191/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.17535167 seconds)
    (192/286) benchmarking ("sort", BigInt, true)...
    done (took 0.241521784 seconds)
    (193/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.106929214 seconds)
    (194/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.095077338 seconds)
    (195/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.071435778 seconds)
    (196/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.105117085 seconds)
    (197/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.083719285 seconds)
    (198/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.137378416 seconds)
    (199/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.081405112 seconds)
    (200/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.072659375 seconds)
    (201/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.105978732 seconds)
    (202/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.072705707 seconds)
    (203/286) benchmarking ("sort", Int8, false)...
    done (took 0.191669991 seconds)
    (204/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.153912438 seconds)
    (205/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.089810161 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.106983368 seconds)
    (207/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.088723661 seconds)
    (208/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.08255799 seconds)
    (209/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.095045925 seconds)
    (210/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.071324835 seconds)
    (211/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.06978576 seconds)
    (212/286) benchmarking ("sort", Float64, false)...
    done (took 0.175685542 seconds)
    (213/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.113219215 seconds)
    (214/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.143851276 seconds)
    (215/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.200618017 seconds)
    (216/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.070893908 seconds)
    (217/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.105486027 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.08163555 seconds)
    (219/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.107854344 seconds)
    (220/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.089182666 seconds)
    (221/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.190847871 seconds)
    (222/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.081417879 seconds)
    (223/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.094306628 seconds)
    (224/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.081868091 seconds)
    (225/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.082114903 seconds)
    (226/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.159332539 seconds)
    (227/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.131562762 seconds)
    (228/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.069983713 seconds)
    (229/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.083759799 seconds)
    (230/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.114312956 seconds)
    (231/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.080822218 seconds)
    (232/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.072541591 seconds)
    (233/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.114899891 seconds)
    (234/286) benchmarking ("sort", Float64, true)...
    done (took 0.236428207 seconds)
    (235/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.081990557 seconds)
    (236/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.096259576 seconds)
    (237/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.088481022 seconds)
    (238/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.070094 seconds)
    (239/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.109672462 seconds)
    (240/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.07213064 seconds)
    (241/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.121408282 seconds)
    (242/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.088275235 seconds)
    (243/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.08169709 seconds)
    (244/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.111652718 seconds)
    (245/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.072346344 seconds)
    (246/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.118079815 seconds)
    (247/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.070972416 seconds)
    (248/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.092428492 seconds)
    (249/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.132039601 seconds)
    (250/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.073144162 seconds)
    (251/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.094825138 seconds)
    (252/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.081896269 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.105713092 seconds)
    (254/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.090092425 seconds)
    (255/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.081952777 seconds)
    (256/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.105753245 seconds)
    (257/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.080359745 seconds)
    (258/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.078466964 seconds)
    (259/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.105851517 seconds)
    (260/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.083295637 seconds)
    (261/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.11469238 seconds)
    (262/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.072029623 seconds)
    (263/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.071036041 seconds)
    (264/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.095076729 seconds)
    (265/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.084352055 seconds)
    (266/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.094078733 seconds)
    (267/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.072385349 seconds)
    (268/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.070340794 seconds)
    (269/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.10789696 seconds)
    (270/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.080736889 seconds)
    (271/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.070367466 seconds)
    (272/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.096576476 seconds)
    (273/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.081014513 seconds)
    (274/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.09447831 seconds)
    (275/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.096219942 seconds)
    (276/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.072760832 seconds)
    (277/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.098336359 seconds)
    (278/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.080668328 seconds)
    (279/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.09964669 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.080238741 seconds)
    (281/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.082527189 seconds)
    (282/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.107093857 seconds)
    (283/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.081058438 seconds)
    (284/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.106802845 seconds)
    (285/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.083340575 seconds)
    (286/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.079920967 seconds)
  done (took 35.340781763 seconds)
done (took 36.243979701 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.095863952 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.14755363 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.091697418 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135313029 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.094945241 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.120894868 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.090159339 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.094434715 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.118892224 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.096284041 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.117732778 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072250564 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.118100762 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.093215046 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.117825209 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113472899 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.120305725 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.088928651 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.109603339 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.081066473 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.08513389 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.106416862 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.083687868 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.09699221 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.093691983 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.090262024 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.112634518 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.093347469 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.107549771 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.082305228 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.105834363 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.090108875 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.081914831 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.120682575 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.088215966 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.112560037 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.0938893 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.116468217 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.083570847 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.082369805 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.115520098 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.082862464 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.114540161 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.089057254 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.08343651 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.10630986 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.085609418 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.120511058 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113291315 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112201585 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.090156416 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.118144138 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.091833545 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.089308561 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.105702616 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.08494573 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.106071663 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113350673 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.110527222 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087357357 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.089904616 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.1145456 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.080985746 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.110650698 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.085704649 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.117508764 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.093235552 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.081108028 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.116662536 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.087859699 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.107065463 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.085721772 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.106231249 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.081913259 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.091679595 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.117783545 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.080808715 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.10916534 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.089079212 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.0874695 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.10630083 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084693666 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.108874439 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.083694312 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.084767295 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.097105919 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.08098785 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.113221385 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.081691188 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.086241994 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.11436148 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.088924157 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.109202368 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.093024879 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.10612018 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.082097549 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.082760834 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.107119119 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.083563492 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.081627279 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.106359212 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08498323 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.11550086 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.083252552 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.083864957 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.118670946 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.082689008 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.113841119 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.080764507 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.106021848 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.097805696 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.116342689 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.082434241 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087600949 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.105826236 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.084094962 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.081724419 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.106405892 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.082603464 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.107241831 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.083314795 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.082628742 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109711959 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.08379788 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.121314122 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.082038676 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.081655686 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.108984813 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.082429277 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.112536259 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.082372505 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.082655477 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.108942183 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080081059 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110260239 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.081968888 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.084681068 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109544805 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.086591241 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.10983483 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.086061726 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.111686202 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.08450663 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.082202878 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.106892821 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.077208811 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112168731 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.084862416 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.08483565 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.10724692 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.083978254 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.082067656 seconds)
done (took 15.748663952 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.083187439 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.180093232 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.143855189 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.11610554 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.128630227 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.08256386 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117991759 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.11350781 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.109613302 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.138763248 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.104914106 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.127570657 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.120811058 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.106643516 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.082033971 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.086729611 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.10899282 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.097852636 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.14596696 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.128605366 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.117553341 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.106724521 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.112641399 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.131169748 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.092026525 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.134458955 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.083138008 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.111423922 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.086639569 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.123557911 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.103201867 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.111467906 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.082892817 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.130105811 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.099500414 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.11474786 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.0827112 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.089262191 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.10809448 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.082971771 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.131256209 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.129358312 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.08783897 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.088997615 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.111721552 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.085819891 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.109178687 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.091509385 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.11802075 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.087670634 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.122463743 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.112390376 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.110917899 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.091594256 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.10628261 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.093454286 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.117508424 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.084695108 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.126512129 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.085537917 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.082573255 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.111826089 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.097898801 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.133065825 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.086744075 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.116046778 seconds)
  done (took 8.099948904 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.100105431 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137482579 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.100255735 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.125569671 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.08226981 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.107778883 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.08405786 seconds)
  done (took 1.701401882 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.084216556 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.108960482 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.134620601 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.109396424 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131857463 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.13516269 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08884101 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.083510597 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.128724388 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.084811502 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134566751 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.124894128 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.110556317 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.091491254 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137702899 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.08393869 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.135909808 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.08350995 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.112388629 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111397902 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.111471786 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.10165524 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.111983975 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.083747932 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101303062 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.109700815 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.158021334 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088794493 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.082062384 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.112553174 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.08227875 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.148356698 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101562279 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116914105 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.084044096 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129101679 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.102199845 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.107397426 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.099733421 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.114129107 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.101161117 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.084503778 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.11018814 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.081604985 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.114613842 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.098086717 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.112923535 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.084994297 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.086870748 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133655768 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.085465042 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126904353 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.083986725 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.113008604 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.08597807 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.087726731 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.119325367 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.084877383 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133384857 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.081932557 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.129662966 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104310675 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.127745929 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.103544133 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.112118247 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.101978843 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.126780095 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.087172234 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085443201 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.113623167 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.102955786 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.107781799 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.086854439 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.123705049 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.086131816 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.111055811 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.135639978 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085431646 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.120332352 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.084527966 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.110623757 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.084335888 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.136598088 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.088029847 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.08403342 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113011942 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.087098729 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.108011892 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.08285464 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.115426005 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.083406344 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.086382368 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.115226483 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.084392165 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.114747164 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.107212517 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.08559147 seconds)
  done (took 11.167385607 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.085282559 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.086016824 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.113424115 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.086334231 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.110856436 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.08549988 seconds)
  done (took 1.54578668 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113566184 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.111654735 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.098201371 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.114060437 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.126687161 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.134594525 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.109432599 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.119460226 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.101807082 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.121908711 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.109327045 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.136998101 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.13945136 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.090155894 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.134282284 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.089346511 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.134826624 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.090885128 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.095291704 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115618282 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.102016837 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.115434441 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089878984 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.129512823 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.094704452 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.115247557 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.090914084 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.121900625 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.095427957 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.120026849 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.089593453 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119809091 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.090623541 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.119591012 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.109776243 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.11613006 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089674468 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.122280171 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.091552051 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.121070074 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.110944639 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115689283 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.095465977 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122024556 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.093525608 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.116787274 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.096277052 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.116423544 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.109483459 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121765708 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.096454871 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.114509201 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.094523459 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121617118 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.090291265 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119224877 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.096106225 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.135662179 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.090030128 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.116768582 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.086945328 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.12101295 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.094034595 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121161091 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.093324459 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121808733 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.090552085 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.116508679 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.091306171 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.115228337 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.096366195 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.112511543 seconds)
  done (took 8.846166306 seconds)
done (took 32.319020674 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.69564935 seconds)
  done (took 1.666569263 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.822428471 seconds)
  done (took 1.795687963 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.316136931 seconds)
  done (took 18.31777315 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.460399137 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.550084891 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.952392112 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.161498897 seconds)
  done (took 3.098164997 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.959142124 seconds)
  done (took 1.952382807 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.278851488 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230927353 seconds)
  done (took 1.49049599 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.894177425 seconds)
  done (took 1.883876979 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.440945979 seconds)
  done (took 2.429835277 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.320790943 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.155961706 seconds)
  done (took 1.473947368 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.558811058 seconds)
  done (took 1.55189002 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.508239958 seconds)
  done (took 11.500104264 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.23825997 seconds)
  done (took 1.238047112 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.289976146 seconds)
  done (took 1.279421789 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.667016729 seconds)
  done (took 4.655717958 seconds)
done (took 55.310195591 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.094890565 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.09724286 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.124838549 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.094522075 seconds)
  done (took 1.397946141 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100212286 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.0906899 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.12539491 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.090179802 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126144169 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.090486119 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.120057392 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.165941158 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.090738677 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.092774069 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.117713289 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.090000373 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.120396996 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.093428813 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115440097 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.093961663 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.125616479 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.091505448 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.122811545 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.092178185 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.114653176 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.094154521 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121170389 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.090665928 seconds)
  done (took 3.576306519 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.096105412 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.089418542 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.118842271 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.089082952 seconds)
  done (took 1.395455536 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.096321618 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.102336642 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.127224868 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.094950952 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.12919282 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.101256409 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.114438712 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.087665597 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.115657871 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.095741798 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.112067133 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.109241406 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128630466 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.094958877 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.123384451 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088092805 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.086730766 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.130184228 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.09630366 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.122246667 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.088544001 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.121967757 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.087213653 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.129313465 seconds)
  done (took 3.586886914 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.165382872 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.123762342 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.108478254 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.118340818 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.129407842 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.137494995 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.083056982 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.137801412 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.083484819 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.126153895 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.088149704 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.161983474 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.096914369 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.110397805 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.083861838 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.082784793 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.12228815 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.096498271 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.113189786 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097450679 seconds)
  done (took 3.267702651 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.093905633 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.088052751 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.110729887 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.087012066 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120817023 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.091421291 seconds)
  done (took 1.600716337 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092590467 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.085553997 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.115343737 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.086351747 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.116888964 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.084581777 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.08343459 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.112303671 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.085273047 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.110302002 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.087433315 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.084278872 seconds)
  done (took 2.153307465 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.502347123 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.114241756 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.087755023 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.11027001 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.095893029 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.11101547 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.101525922 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.08685792 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.139852412 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.083176946 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.112498883 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.087298231 seconds)
  done (took 2.642650759 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205176981 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094855946 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258270248 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.348431736 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15558205 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162642659 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279834546 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160724051 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.181276932 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135585919 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191209935 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127716754 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151684354 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175378714 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138382426 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.125562906 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171564609 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222751673 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119200834 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200026696 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157577928 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164979994 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176526504 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149430447 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135458277 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128202058 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.11894225 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12552319 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170469411 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139546252 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197372243 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118909967 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137210271 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194156714 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230658653 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175046247 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278181782 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104395293 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.176556283 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.1636636 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220333908 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138101005 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189013765 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152133008 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126449377 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177206664 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125705372 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176059105 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.128414356 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137912136 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176940442 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172817048 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.175546158 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133066188 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29589367 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146822719 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116682845 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178706069 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180019219 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185875709 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163435437 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.116293001 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179183031 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178147388 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174174682 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141150228 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.161375248 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095251864 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169340853 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18931765 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17150247 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159047871 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.208075403 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104673677 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15997583 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164273435 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149622586 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17366217 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154911426 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.091373613 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145962183 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107640109 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125926663 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.191163791 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094176984 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19787412 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132659759 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.169211645 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198442687 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152254768 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1288829 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159052783 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160209319 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143232442 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.086473571 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142746748 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.148405975 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152105855 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102141062 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152979217 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140061445 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.097898635 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149236377 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.092376051 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156382123 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.124755027 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160471456 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158387837 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.095651788 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161129148 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145400097 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.11938005 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164283795 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180923068 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129525707 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101780809 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188972408 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153965386 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.131317555 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169989929 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181223063 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.151393017 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107147193 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163277062 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187295083 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138871466 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18388226 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138139692 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103096714 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.137876666 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157246248 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151945249 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.126364432 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12802734 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.150324656 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185639901 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.09318369 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134121773 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171686865 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097029002 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127197987 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138927781 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105026741 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.133720732 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.110492421 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134206473 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152650369 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15766238 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122693426 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149622003 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139693258 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184748145 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130731793 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.12078952 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144380492 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.117300257 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.174815525 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179398661 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100627444 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191240661 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.163263974 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218128472 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15927954 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101755562 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174000848 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125758084 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.089845686 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161378479 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157082933 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15846282 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.177423073 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18833278 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.163324313 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.149699355 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117602922 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159018481 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.161976119 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152054617 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.133970028 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129586336 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154310057 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.119557172 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093907735 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.126033039 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111364684 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128349208 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129137756 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177875024 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160003765 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182455159 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157015039 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111573681 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17701981 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.123701491 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161096301 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.167464608 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107297103 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.178600348 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175631433 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162658877 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139872651 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169027893 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.088634517 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121234727 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.130542967 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13234295 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129613038 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129965664 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11246826 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17780574 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166645885 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14724055 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19765256 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161240645 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186268882 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.118337408 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.136129898 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163850597 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154170104 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.17317909 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105455086 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.146792789 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172772875 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137960913 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184814641 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157758522 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135484698 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217886998 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.119331173 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127536077 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145694699 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160986315 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109078858 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161920277 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141213598 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105721983 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147159257 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.123863568 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095138012 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16849011 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14138627 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171940101 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.143643433 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164464555 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09610589 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140950261 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157327358 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142588543 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.085284932 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161772794 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180785172 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141193113 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152746699 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16728788 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100304371 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.305111721 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184140615 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17801733 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134216868 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140612481 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130033883 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155780983 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157619916 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175493943 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144764137 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174783321 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126722015 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.132810758 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133135504 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115595051 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14730777 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.137682077 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.100906289 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.151205773 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.132568369 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17331378 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11040575 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158760223 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160226236 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.146315205 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.112973574 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140508533 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195941555 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155537158 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174280996 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.118450116 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.161579804 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22171517 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094330003 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125445346 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.097009075 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176338076 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101271315 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157205721 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.180687979 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220259302 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157450641 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161213692 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107777357 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.115572099 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126738409 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146519171 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193884185 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139494337 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.133822695 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182873131 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.112057238 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129235567 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16061873 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279754306 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115397912 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16784008 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.111511899 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.271656101 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096016299 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128738909 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157287383 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16737579 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.106349385 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.171674069 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16088976 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112853214 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157564645 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133958751 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182871946 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200350867 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165296572 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169080255 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.129623652 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126457953 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158025496 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171454701 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141120879 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.134258196 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131240804 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178397496 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.182857102 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.131096452 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159268215 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159090758 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126979459 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193401814 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103081613 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193382753 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130000116 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161434095 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136875302 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093406783 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154919906 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.180721908 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130926879 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166396859 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125639699 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130706039 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095260249 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148224271 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155172081 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138631151 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.094440844 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167378796 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.120893566 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13081577 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175946373 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128399635 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150150605 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113472779 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135561003 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141211325 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114656193 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133392729 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.136326045 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173984295 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.12679067 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171053814 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170902029 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159219365 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155889264 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112165397 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.666062291 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.126422912 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176405284 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11548372 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180020317 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145244057 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162829911 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156699417 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117464884 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1628314 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146722946 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.229226282 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162409322 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.155581454 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099906363 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143241922 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140282197 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.099845169 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148433961 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158842516 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109557195 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.13583764 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.154993056 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140559558 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.101811171 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136878908 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178457904 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114908461 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170581745 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177115949 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13499768 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163591745 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166188751 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09867037 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.156179887 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167691911 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140190505 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147085561 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.100509009 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.132283215 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17573089 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.092265544 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158187934 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157648361 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156002247 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132045032 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.13049426 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155838469 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139703861 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128792088 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128607496 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.149500574 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152497334 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100126244 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.125260174 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122729985 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150559754 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.147443693 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094279155 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.162693152 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177916673 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.091941705 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13039511 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279485191 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155105966 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186279639 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.109992884 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132926647 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111166664 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143669707 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.150743601 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156453367 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.097863998 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130656081 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.097793487 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.165142309 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.140814132 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125447707 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181178077 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153784603 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193275367 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135571808 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279718274 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106882667 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153637433 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.091019645 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.127601824 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14103752 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102492042 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140361067 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185940038 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178271448 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.142543437 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.102495407 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123874406 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.092697711 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131996696 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157191858 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122064543 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155929373 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140068436 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.083470049 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142114551 seconds)
  done (took 73.215420237 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19714546 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.205436081 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.161561486 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.214463802 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.218645217 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268313466 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.257814462 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252146206 seconds)
  done (took 2.867302065 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.089327225 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.140473322 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.12455642 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132483065 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.113434174 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.088178674 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.322759181 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.130170974 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.086899528 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.143242687 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.129455039 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.115568959 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.486928747 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.115241183 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.113272315 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.080459443 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.113643299 seconds)
  done (took 3.614654631 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.376903719 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.488488861 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.324711887 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.194234201 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.177558446 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.090956516 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.73390885 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.09038928 seconds)
  done (took 12.570197808 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.114888038 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.108362525 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.158240061 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.156357191 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.112393353 seconds)
  done (took 1.752545216 seconds)
done (took 114.627177401 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.093870781 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.095032664 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.122226123 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.097173021 seconds)
  done (took 1.490504105 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.09997705 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.073010316 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.104202763 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.077101283 seconds)
  done (took 1.449540757 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.189427004 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.164325218 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.401332565 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.074668134 seconds)
  done (took 1.600419712 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.109201489 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.128245405 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.100395279 seconds)
  done (took 1.443091447 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.103038709 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.097045215 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.126900923 seconds)
  done (took 1.430108946 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.100607959 seconds)
  done (took 1.198899151 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.1063653 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135760329 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108394266 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.134837093 seconds)
  done (took 1.589051484 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.093360405 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.094398413 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.136744513 seconds)
  done (took 1.424507415 seconds)
done (took 13.075606416 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102770729 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.424502534 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.38642827 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133804732 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.694290845 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.407280589 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.003457676 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.143746147 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165983542 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.08809332 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132980248 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.669050845 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.02241634 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.344208418 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.007591476 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.344959922 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.669342777 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117084775 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.08759956 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.116405467 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.987233995 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116390669 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.088528479 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.087562691 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.69855702 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.392402503 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.118279383 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.343248212 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116360138 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09670766 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.374764645 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116976012 seconds)
  done (took 16.688096903 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.09476074 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175830619 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099291607 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11897739 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.095917884 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.089023157 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12131593 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089070617 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181120138 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117904939 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105475849 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.116703538 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.09292748 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.088409293 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137450795 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.087502107 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.119086887 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.088519953 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117789739 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.088477949 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135043917 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.089107852 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.087830446 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117596952 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.088856762 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130179594 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089000237 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.11659114 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.089242918 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096251981 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11991139 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.088748742 seconds)
  done (took 4.579213139 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140036304 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184821435 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099939181 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.152769876 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.1702663 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09100548 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.196856276 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144237965 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182898018 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.089235467 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.104850105 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.117591482 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.122437092 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.118739395 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.108334013 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.118065014 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.0886035 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11790805 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.088945983 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.117618154 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.108387568 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116089998 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089256515 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.088624088 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.118360595 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.103106385 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.118772078 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.08810812 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117740814 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097246178 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.091398063 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117880574 seconds)
  done (took 4.919081559 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.092290037 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.093400352 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133961042 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.104523193 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.119683842 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.091799157 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.122238565 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.090821059 seconds)
  done (took 1.95802068 seconds)
done (took 29.243531215 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.106172391 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.09409016 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.131743625 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.101071171 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.128078895 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.101674626 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.116064917 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.10024733 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.100356049 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.127644734 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.105079981 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.117128377 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.089755871 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.117319828 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.102063229 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.093835272 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.131647391 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.097724974 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.13233276 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.101674187 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.119593931 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.100331831 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.12743432 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.102994131 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.131936736 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.103799594 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.103924641 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.124744958 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.08869898 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.119856162 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.100787446 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.138249996 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.090666635 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.133289982 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.093544532 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.092128867 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.11962342 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.092387611 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131290977 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.099581134 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.125176182 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.099560636 seconds)
  done (took 5.73332363 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.114200825 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.146773879 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.109502399 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.112744817 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.090618634 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082934913 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.144203651 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.081257966 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.114866856 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.112920824 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.106382766 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080293771 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.081035145 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.105230541 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079595424 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.077876083 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.111875939 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077883986 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.108757834 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.081004321 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.081816469 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.105580149 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081637753 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.081452556 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.107113715 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.08344075 seconds)
  done (took 3.678421728 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.095461 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.102786005 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.139525317 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.172707094 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.123053897 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.126539486 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.098029506 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.135744953 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.106163568 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.087934349 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.120701305 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.116285447 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135816131 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.09537765 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.121436595 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.103062863 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.132062839 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.090580478 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.093158016 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.1385926 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.104999406 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.129306706 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.100061922 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.129854036 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.088502987 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092577972 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.122582262 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.097735172 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.12582971 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.096198363 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.12451587 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.09151821 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.118965237 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.100809354 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.093251254 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.119965183 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.107332035 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127618199 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.097106091 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.119755353 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.096057431 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.090303167 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.139870809 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.158317516 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.089654348 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.095011583 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.121381002 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.097262291 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.119872924 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.106196496 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127146195 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.088442144 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.090697816 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.11975942 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.09070192 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13467976 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.089711 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.119664608 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.101323307 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.093807666 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.13077224 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.092860004 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133378718 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.089374208 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.124817629 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.090879634 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.088503158 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.117531602 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.110817748 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12476428 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.12824939 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.119883163 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.089845905 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.126808992 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.094977977 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09506424 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.119372213 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102844556 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128116585 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.091736918 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.129209584 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.09105687 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.091214979 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.136748562 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.09096516 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.120287147 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.089085758 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.124455266 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.090821329 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.089204142 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132583356 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.088322389 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.122242783 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.102123711 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.117891831 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.09120552 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.094814818 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.123600975 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.087631122 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.132162721 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.094419704 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.119660568 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.098888678 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.118979731 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.092320779 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.097791931 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.122925761 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.088193522 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.123046539 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.094531121 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.118939594 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.092507667 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.090928773 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.120950268 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.097942379 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.125694999 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.091763737 seconds)
  done (took 13.95167114 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.225764968 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214106118 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.184973919 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.261056955 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.131329083 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115785091 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.208911232 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.154929869 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.090509706 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.156383904 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.167361822 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181486817 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.169161373 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.178232296 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.168250792 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.087991691 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.137949333 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.13348225 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.212275503 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.28823494 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.108717741 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.128932306 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.15801073 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.12551842 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.133367305 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.097933694 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.136869479 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.100424698 seconds)
  done (took 5.588201635 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.105061238 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.151427836 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.094555397 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.141595192 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.11523186 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.12006874 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.09294638 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.120778759 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.10265011 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133408285 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.089020419 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124419796 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.096918641 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.097906755 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.120819993 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.097964238 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.129160669 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.090635847 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.121946162 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.092620437 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.099502035 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.136571725 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.123221769 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.088327216 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.097375349 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118358919 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.089464919 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139958498 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.119076615 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.112428984 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.086355539 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.127554156 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.102936063 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.120740722 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.088762205 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.090865813 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.121632465 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.090905527 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.121237605 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.088177755 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.087228654 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.110698822 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.088414423 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134896513 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.095471332 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.114113484 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.09441741 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.124648485 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.089887005 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.085781841 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.123153202 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.091837727 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.122195945 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.096626999 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.09095769 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.120102418 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.092926258 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.119673688 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.095326083 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.090949815 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.118171048 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.087726187 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.124063494 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.091894408 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.128178735 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.093989321 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.116762605 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.091395723 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.093331162 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.126813641 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.091438866 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.125279674 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.087098703 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.090701183 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.122799493 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.094101594 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.122896647 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.08851407 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.088617394 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.120209616 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.077567539 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.119605426 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.077560185 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.091923532 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.118502713 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.087398193 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.121036759 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.095669888 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135563012 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.09017521 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.126256916 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.090697453 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.088992829 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.123022114 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.086072842 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.121830991 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.105684079 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.138950174 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.088796646 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.117403565 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.104032212 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.091528384 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.119929094 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.078887538 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.128309202 seconds)
  done (took 12.341084431 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.127757571 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.150029097 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.091092921 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.137442815 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.122325161 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.155511392 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.095892011 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.128223153 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.090310712 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.138876112 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.08959787 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.097990973 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.120108742 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.103487927 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155380516 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.099821558 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122240966 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.104632897 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.124759458 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.136500298 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.138064877 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.107598359 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.138241997 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.089738972 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.126060324 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.105384271 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.158915686 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.103179358 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.133521095 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.107883409 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.134946287 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.126991532 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.140405562 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.093500889 seconds)
  done (took 5.240194596 seconds)
done (took 47.642028273 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.212607823 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.429011596 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.201418849 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.089510701 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.229983805 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.218501613 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.211940178 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.200078622 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.358384355 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.200890346 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.426732687 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.859096956 seconds)
done (took 58.770750587 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.292098295 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.367877864 seconds)
    (2/2) benchmarking "String"...
    done (took 1.527943784 seconds)
  done (took 4.044142707 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.794255833 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.189495814 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.46312303 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.209291284 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.214018577 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.520387674 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.023632809 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.632590244 seconds)
  done (took 28.382971586 seconds)
done (took 42.649269691 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.216633521 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.20407884 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.21388436 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.18805342 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.31740456 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.220861861 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.449600986 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.301818638 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.218825503 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.189761931 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.222434742 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.200755384 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.204202709 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.314824664 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.205604476 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.200702203 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.303139763 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.863063984 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.622765227 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.203014035 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.213055749 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.234350993 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.212810187 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.205611189 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.252612465 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.201529763 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.201444917 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.215400307 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.064802679 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.204533626 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.234722107 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.537101798 seconds)
  done (took 190.770642509 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.202747214 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.2120224 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.308543648 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.253441182 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.881626054 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.411759048 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.357169682 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.937675597 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.219757246 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.229586391 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.410403529 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.202783936 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.487242093 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.240236811 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.233001131 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.275539151 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.436112243 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.506137069 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.240200163 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.359381097 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.230949546 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.30815207 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.216644184 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.390275793 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.211837287 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.275345611 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.242057585 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.206534305 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.406473045 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.375294411 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.232647815 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.252617699 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.869971216 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.060381707 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.228559086 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.227873835 seconds)
  done (took 150.273492243 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.204253637 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.203295885 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.203413563 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.238812705 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.203141192 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.831494637 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.829944501 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.768745364 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.775531255 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.807151295 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.205967095 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.569046203 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.205664523 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300494272 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.218901105 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.208290237 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.220651478 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.231644014 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.206648991 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.205162947 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.834364135 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.218985564 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.654677905 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.38847038 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.222163209 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.239104943 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.603902838 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.20465217 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.238836589 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.546376547 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.258133151 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.204983071 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.649034073 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.169321728 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.32195637 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.208298391 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.241550237 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.20613406 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.491769449 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.207273523 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.207097281 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.210470522 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.94989988 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.207889667 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.836157194 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.208501391 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.271412826 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.208520316 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.206839638 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.581478728 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.078660806 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.207915551 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.206889819 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.206484507 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.209721901 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.207231243 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.207631964 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.242086375 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.593859111 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.312499341 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.209229695 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.211265447 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.241454896 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.207702119 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.262362331 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.207720665 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.626752525 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.266969432 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.324420241 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.836361389 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.209162411 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.309363856 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.331710249 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.207925401 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.207915897 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.208596076 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.207614375 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.322054039 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.208691219 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.662146147 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.207673245 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.391103793 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.226773768 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.209126575 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.809135086 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.308827734 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.209802427 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.696952326 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.21039332 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.208475935 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.058995827 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.307856229 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.209480757 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.209112303 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.208261028 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.663006932 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.836915936 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.599930072 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.21000233 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.913437784 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.215064787 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.674630046 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.806853846 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.963661544 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.211606544 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.324113304 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.392279292 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.228498667 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.209864641 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.802267789 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.210450915 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.266513634 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.21111787 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.609086001 seconds)
  done (took 370.339940189 seconds)
done (took 712.518601465 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.820271077 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.816053196 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.93073585 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.803537671 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.768392299 seconds)
  done (took 10.278622448 seconds)
done (took 11.420620918 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.416584669 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.416445365 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.275397395 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.415709413 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.246250265 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.430692029 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.392749992 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.23425236 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.319417983 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.298951592 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.319559267 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.268086603 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.247319283 seconds)
  done (took 18.421013532 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.547121164 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.529528701 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.276131064 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.540369418 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.251901814 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.532788656 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.420577307 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.423803907 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.431459059 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.227303598 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.22507958 seconds)
  done (took 16.547459956 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.540434123 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.547537746 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.279573877 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.545591252 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.253920276 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.548571188 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.41889053 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.435730888 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.429218111 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.227469276 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.225257225 seconds)
  done (took 16.593550951 seconds)
done (took 52.705587432 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.236886587 seconds)
  done (took 2.37955792 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.264217062 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.430342905 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.244485035 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.231209244 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.223909106 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.232420399 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.231184114 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.226320495 seconds)
  done (took 11.228129159 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.218614537 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.22176653 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.218574007 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.221638675 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.218416026 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.218662057 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.219568118 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.218286729 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.221721018 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.222356701 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.221407581 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.222259041 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.221747492 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.219517604 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.222320361 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.21860556 seconds)
  done (took 20.669454554 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.221796038 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.21953639 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.218503744 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.219883707 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.219519987 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.220469152 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.220854787 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.219760883 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.219298752 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.22109323 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.221941259 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.219611129 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.220909303 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.219172773 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.220020261 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.221219665 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.219501306 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.220389265 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.225216661 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.220201797 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.220558721 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.220433066 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.22053781 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.221277326 seconds)
  done (took 30.438006951 seconds)
done (took 65.860127303 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.890703286 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.951693959 seconds)
  done (took 6.987206839 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.281444254 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.283275163 seconds)
  done (took 3.711955604 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.224984504 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.223428625 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.224735147 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.223764259 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.224699452 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.224301574 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.225154402 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.224181574 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.223775319 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.22480642 seconds)
  done (took 13.389488063 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.225246743 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.224048939 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.222356456 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.225325923 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.225090871 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.221600527 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.224302523 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.224416855 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.22466633 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.222448379 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.225298275 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.223454408 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.225762351 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.223568701 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.22469143 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.223355404 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.223793407 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.223945531 seconds)
  done (took 23.180893882 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.238396282 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.246885544 seconds)
  done (took 3.632043168 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.35206071 seconds)
    (2/7) benchmarking "second"...
    done (took 1.264005653 seconds)
    (3/7) benchmarking "month"...
    done (took 1.333278176 seconds)
    (4/7) benchmarking "year"...
    done (took 1.320701322 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.264690797 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.727180721 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.265478948 seconds)
  done (took 10.674872584 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.226708062 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.409830103 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.516954855 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.810750133 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.227048958 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.230502 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.10422725 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.231116876 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.232511498 seconds)
  done (took 14.137763214 seconds)
done (took 76.862255453 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.244969246 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.219098532 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.621989866 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.240354405 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.23637894 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.518480512 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.27155281 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.340968862 seconds)
done (took 37.844963519 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.22119936 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.216311563 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.080651759 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.236947386 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.377086443 seconds)
  done (took 19.059394968 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.30947846 seconds)
    (2/2) benchmarking "read"...
    done (took 1.557384556 seconds)
  done (took 5.016062468 seconds)
done (took 31.446551182 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228283843 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.227070686 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.224465419 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.226906852 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.225035223 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.224668311 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.225036155 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.226890484 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.227931785 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.227074594 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.224069068 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.22722049 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.228298976 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226824097 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22558901 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225355577 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227203899 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.225363615 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225641871 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225771494 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.227066507 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.225908636 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.225136932 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.228171573 seconds)
  done (took 30.581264853 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.229237951 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.22629222 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.227619187 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.22878837 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.225805296 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.22862182 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.228643412 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.225699421 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.228167126 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.228466649 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22677951 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.225714654 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.228961309 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.227230037 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229573198 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.226156987 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.228328532 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227574901 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229167024 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.226549003 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.229382485 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22745983 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.227178711 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230012656 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.226779029 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.227841561 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.230298629 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.22744032 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.230685815 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.22708018 seconds)
  done (took 37.98811761 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.236287035 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.238862901 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.230819243 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.230610575 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.231530722 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.230668919 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.230647416 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.230336101 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.230362657 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.230259152 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.231474368 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.230711666 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.230821645 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.231315832 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.231696389 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.230705444 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.232118184 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.237769859 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.232196182 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.231717728 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.231614444 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.231117466 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.22995365 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.232171109 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.231883797 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.232035856 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.232456989 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.23085909 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.232448676 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.232206853 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.232417089 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.232035654 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.232187195 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.23209403 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.231781249 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.231799171 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.237950302 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.240894041 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.232018347 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.233150697 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.231189274 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.232972094 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.232113964 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.232795033 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.232318264 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.232299319 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.231356524 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.233508609 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.232390984 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.233152715 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.233748616 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.233488719 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.233363347 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.231901463 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.232924925 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.233761245 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.233734599 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.233375546 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.233133801 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.233639155 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.234102079 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.233002468 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.232180525 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.233419965 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.233960995 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.234203568 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.234055917 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.233969662 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.233793688 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.235348818 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.234765644 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.2344084 seconds)
  done (took 89.912103335 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.234307567 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.232665094 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.231648455 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.232482077 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232468709 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.234751143 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.232627615 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235290201 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232446365 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.235501011 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233581353 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.234247003 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231671616 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.235490795 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.235647894 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.23329356 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.235204266 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.23228036 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.235367653 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.235783223 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.236146628 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.233035838 seconds)
  done (took 28.302639325 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236430638 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.238285894 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.233286746 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.237482871 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.235453847 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.237660456 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.236692279 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.238131277 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236977781 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234168062 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2342222 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236335749 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.235579482 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235964071 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.234024098 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.236108676 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237576488 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.23628934 seconds)
  done (took 23.408650876 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.235447233 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.235299579 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.237956898 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.234709485 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.235405432 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.238213422 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235425191 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.238632497 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.237451531 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.235463045 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.238034009 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239059975 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.238385708 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235037066 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237791235 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.235211157 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.237431486 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234465271 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237186336 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.236195264 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.235658062 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.239050944 seconds)
  done (took 28.366407464 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237820798 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.238991623 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.23613523 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.235698527 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.23589452 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.237661419 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.239230782 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.236208179 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.239477808 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.239226262 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.2355116 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.238061649 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.237600137 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.237772668 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.236889052 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23696839 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.239815657 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.237653988 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.239597237 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.235612165 seconds)
  done (took 25.912078726 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.240801432 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.241793009 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.242017519 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.241668612 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.241579717 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.241712421 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.24263212 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.241979835 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.242940326 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.242573662 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.241967647 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.242957799 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.242591804 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.241938341 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.243082316 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.243015676 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.24237975 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.242490484 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.243185935 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.242351818 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.244167964 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.243611247 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.243537953 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.243189756 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.243650089 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.243485516 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.24393259 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.243511769 seconds)
  done (took 35.956735276 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.242317366 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.241887637 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.240474182 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.239754518 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.239589291 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.239146639 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.239806083 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.239933287 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.24277326 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.238915064 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.242680683 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.242200994 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.243884391 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.243417292 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.243838046 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.243037873 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243415976 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.241062064 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.240686209 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24025049 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.243010994 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244181095 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.243226984 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.240039803 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.240274537 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.243734037 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.241091531 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.240987439 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.244238836 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.240730596 seconds)
  done (took 38.415417147 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.288430809 seconds)
    (2/2) benchmarking "in"...
    done (took 1.287390458 seconds)
  done (took 3.739648701 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.241748076 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.244306519 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.243676896 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.24152969 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.241790655 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.244202258 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.244318531 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.241450376 seconds)
  done (took 11.107462403 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.244271074 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.244227641 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.245156364 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.24442952 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.244808518 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.244602422 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252922294 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.265444141 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.245469831 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.246061388 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.25255755 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.253049359 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.247510299 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.244521742 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.245597669 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.247150478 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.246408689 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.247314109 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.24729779 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.246540707 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.246616551 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.248776477 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.248632453 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.244322777 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.250359074 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.25827258 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.250785749 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.246991098 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.246694079 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.250535722 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.246451636 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.244302516 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.24846454 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.248687615 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.247772481 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.247823469 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.255578319 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.269398467 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.253435923 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.248080078 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.247846207 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.245547668 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.248475482 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.248269579 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.248682871 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.248501312 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.247988948 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.245255825 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.247052856 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.252061448 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.254082757 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246701064 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.245592681 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250859979 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.249125717 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255066067 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.269901557 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.252317522 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.259378636 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.259796457 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.261855899 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.25747462 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.249852565 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.249393854 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25905081 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.275302591 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.256258757 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.266688949 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.246688912 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.2490178 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.256289921 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262708874 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.277067383 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.250542342 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.250298596 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.249670743 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250391395 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.249358243 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.259038634 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.275779605 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.255021654 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.256399159 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.264090912 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.278551105 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.254148912 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.255214129 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.256098874 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.255770048 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.255841772 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.265672222 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.27455094 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.252561464 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.251592499 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.250386339 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.252541316 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.252546507 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.249051932 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.251942996 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.248183818 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.251806418 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.251636836 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.255787629 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.260710945 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.252087849 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.252271496 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.258309301 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.251606436 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.251267993 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.257575117 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.252092732 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.253367497 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.254899525 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.258327394 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.249378906 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256312466 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.26114153 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.253574737 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.253936299 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.252883472 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.252755201 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.263804813 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.280670292 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.253330002 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.253622649 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.25744966 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.26657997 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.254666896 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.255281178 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.254147065 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.249957155 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.251199257 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.25394333 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.25395085 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.254604753 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.254348936 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.254338816 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.251199204 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.253127275 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.254209377 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.254407039 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.254248415 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.253334445 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.25415811 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.25528389 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.254943627 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.2552004 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.2614553 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.254405449 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.255059125 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.254669647 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.251268812 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.254981246 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.255073266 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.256089564 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.25450709 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.255473732 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.254142322 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.255860951 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.255462982 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.255324752 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.255084076 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.25566685 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.259128183 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.255842898 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.259143404 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.254823015 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.252322215 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.255457363 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.255505105 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.255054614 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.256423226 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.254354099 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.259601453 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.265828858 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.25533669 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.256583598 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.257892762 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.257822997 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.257431347 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.257017766 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.260384658 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.267127758 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.256929131 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.263511097 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.2581427 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.258315659 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.258986679 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.257430033 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.256585973 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.25872684 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.261424801 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.267694263 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.271155581 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.284164563 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.258117128 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.261951737 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.259817703 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.26310075 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.260759637 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.258822357 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.258217027 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.259351387 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258850747 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.258583193 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.259891389 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.259105774 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.257118365 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.258997239 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.259360349 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.257974127 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.258828378 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.25965468 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.257823845 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.255870397 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.259278949 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.258480364 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.25827283 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.256439977 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.257695319 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.257946243 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.258879747 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.260266694 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.265281949 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.25684305 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260796063 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.26053046 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.258987358 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.257740369 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.260102612 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260992358 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.258799387 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.267092828 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.278901649 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.259963155 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.266738619 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.280847118 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.259590396 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.262651924 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.260495552 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.257775689 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.26417632 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.268056225 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.260967361 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.261591948 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.261578052 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260329132 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.261298997 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.267311076 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.258026908 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.259438523 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.260393488 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.261202416 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.257636708 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.261712148 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.261685442 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.261283057 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.262515747 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.262307025 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.261281876 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.262590008 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.262533075 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.263002745 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.262322367 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.26592295 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.270984464 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.266740235 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.261666167 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.263190938 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.263267047 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.266891311 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.262606859 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.262811349 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.261454862 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.275455975 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.291466179 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.269921765 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.263911283 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.26350962 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.268831863 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.264064327 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.266791179 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.262699253 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.262946498 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.26262277 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.263290089 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.260392053 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.261673768 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.263577544 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.263696973 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.265102614 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.268035029 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.262275754 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.263100328 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.263777534 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.265253408 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.264748378 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.263077543 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.263935533 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.265559693 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.265564566 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.262873189 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.264525444 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.271501384 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.284076563 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.264249786 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.263798664 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.264135756 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.263439524 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.264951721 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.265695144 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.269657655 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.274386665 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.268657663 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.273608099 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.266527336 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.273607805 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.265922839 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.268869298 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.274564043 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.262260624 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.26368503 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.265645975 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.266134874 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.273066505 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.286602498 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.268166052 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.270645397 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.267281716 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.267339032 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.26550109 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.266730068 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266387091 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.267855817 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.274662857 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.290824523 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.270428844 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.268000856 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.263777268 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.268085676 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.267012013 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.264936003 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.269497478 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.267661155 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.267205871 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.266799417 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.266440415 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.26768116 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.267831809 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.267893315 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.265101579 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.267200604 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.274107473 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.291068303 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.272679556 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.269647569 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.274464757 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.268908113 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.275810366 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.289276108 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.268444019 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.272214528 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.269103009 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.269361597 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.268408504 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.268399271 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.268759221 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.269922602 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.271924592 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.269053297 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.27016592 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.269048978 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.269822322 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.268287486 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.279320095 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.294392033 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.27075199 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.275055435 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.26582116 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.270744788 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.275494067 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.271007606 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.267520747 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.272096771 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.281542869 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.277584445 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.269367701 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.269962238 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.270631836 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271008608 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.269980422 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.270086792 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.270549544 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.270758881 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.270071422 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.270859356 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271875952 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.270058222 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.270087342 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.270463022 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.270938798 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.279624984 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.271886984 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.271814013 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271518736 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.271964819 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.271150496 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.271223355 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.272242638 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.271226019 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.271874483 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.273820477 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.279775553 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.278987961 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.273853155 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.271988238 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.272124586 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.272271981 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.27276367 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.273601742 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.27329194 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.272840151 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.272815573 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.27291562 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.272673233 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.270684989 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.272271169 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.272929152 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.272982708 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.276118638 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.280375115 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.27272977 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.269418155 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.273284783 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.272753546 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.271788362 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.272676696 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.28058955 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277261356 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.285486228 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.284591645 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.278467525 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.273733509 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277024557 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.282917242 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.272707115 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.27452468 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.274764963 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.2736679 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.274557721 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.278051345 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.273883619 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.280288295 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.273701667 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.273344408 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.282074959 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.297743774 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.274169225 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.278326154 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.279286724 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.273250769 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.272031624 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.276331355 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.274893612 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.282106056 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.295069638 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.275515197 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.276957298 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.273706008 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.277330666 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.280156564 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.275654624 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.275979779 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.272505113 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.275437945 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.27601928 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.276284518 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.273066131 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.275326245 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.27495025 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.279803646 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.282614061 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.27348962 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.277332789 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.275282526 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.275836828 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.277293648 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.276542004 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.273983392 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.273197225 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.275804557 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.27674618 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.276488167 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.279055495 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.275947331 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.278167453 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.278928886 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.277683672 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.28065478 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.288698399 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.285790376 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.275008847 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.277412606 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.276152439 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.278876163 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.277984038 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.277927665 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.277875794 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.27797621 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.279045503 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.278103466 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.277929959 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.281374341 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.294428423 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.301441195 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.277659991 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.277853075 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279961501 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.277772467 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.275304516 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.278366093 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.280083906 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.28161618 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.287033794 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.279121787 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284624847 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.298261166 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.280864873 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.28389486 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.28219802 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.287116271 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.280833406 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.278784389 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.279942347 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.284490785 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.29694172 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.280019932 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.290022534 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.31233442 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.299256383 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.279896674 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.281224203 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.279186239 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.280257698 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.281013854 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.280603487 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.28223559 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.279474392 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.281227388 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.281834697 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.285817006 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.281224214 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.282921169 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.27983927 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.279790468 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.280724501 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.277647795 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.281374659 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.280800509 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.282672581 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.282618159 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.283249975 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.28182557 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.294491579 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.309172968 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.281640538 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.281465556 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.278850576 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.28522138 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.285213347 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.294086969 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.290402721 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.282120057 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.282514228 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.283326097 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.283608757 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.281020614 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.281433387 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.281889453 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.281024829 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.279203595 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.295694108 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.293454304 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.286795056 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.281958446 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.283109132 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.283184748 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.282211383 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.284373369 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.285198863 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.283910562 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.285722396 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.288940492 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.282526521 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.284167008 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.287786833 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.291757225 seconds)
  done (took 756.303987627 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.282001671 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280213031 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.28032407 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.280812141 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280730808 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281321628 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280832635 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.281929965 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.281181941 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.281115878 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.280762098 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280992722 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.281150317 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.282221992 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281292384 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.280813573 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281457245 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.281311624 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.280932377 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281262165 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.281462215 seconds)
  done (took 28.106000936 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.285329434 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.281475186 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.281474286 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.285103693 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.282663694 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.285731835 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.282124697 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285832216 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.285457631 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282982802 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.286333235 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285133788 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.282727703 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.283173418 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283172322 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.285089296 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.28600573 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.283635791 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.285744179 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.283149742 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.285138507 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.283269664 seconds)
  done (took 29.453336727 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.288332983 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.288045756 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.28656898 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.283721036 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.287311896 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.283941544 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.288288592 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.287529454 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.287240131 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.287360735 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.285601331 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.289523273 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.296903172 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.293958238 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.288366101 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.287678825 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.430805003 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.28823485 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.288550592 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.289114999 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.28526653 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.294324104 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.285285003 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.285097757 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.286954097 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.288793068 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.288801598 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.289398392 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.289069641 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.289756844 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.294378664 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.287954304 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.28915242 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.290021651 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.288975161 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.291188516 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.292989977 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.289096604 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.286550164 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.288308896 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.300758835 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.313355546 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.290142862 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.295238285 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.289141418 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.290332306 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.293681123 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.298318564 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.287883209 seconds)
  done (took 64.552321157 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.289798296 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.28885175 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.286480122 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.289996258 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.289244623 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.289395253 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.289622881 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.289931317 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.28724241 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.288280753 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.289760196 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.287372857 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.286485203 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.290286099 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.28950995 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.287619177 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.288018498 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.288059142 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.288330717 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.288088936 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.287755488 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.290423475 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.290719016 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.289242128 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.28983773 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.288066405 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.288133549 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.291044535 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.28999584 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.2905579 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.290926411 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.291046991 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.292426438 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.289044262 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.288258942 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.291858147 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.290963532 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.28864249 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.292501657 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.28929373 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.292060724 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.291633351 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.291095153 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.292299993 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.2898796 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.290015702 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.289539567 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.290250038 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.289995769 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.292720698 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.293462037 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.290303909 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.293150497 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.290629023 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.293328578 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.293195551 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.290828342 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.290577994 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.293660112 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.290219906 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.290505313 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.293830842 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.291349371 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.292845143 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.293454714 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.290808788 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.2899209 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.292360387 seconds)
  done (took 88.947178001 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.2937407 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.294208686 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.294535541 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.29549469 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.295500449 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.294952339 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.29432528 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.294933601 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.294717861 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.295149693 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.294724098 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.294460161 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.296201585 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.294591804 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.294270701 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.295286647 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.295878053 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.296059294 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.294906178 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.294913638 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.296151074 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.296079833 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.296055839 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.296014405 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.296183652 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.295816552 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.295681699 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.295911346 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.297069378 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.295731501 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.296215208 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.295947769 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.296183741 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.296476692 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.297469412 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.295951243 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.296786158 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.296170199 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.296653843 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.29578857 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.29648812 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.297134072 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.298027072 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.296809933 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.297288961 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.297358318 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.2981752 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.297916004 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.296679305 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.298188511 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.298634988 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.297940366 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.298183328 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.298534254 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.297915991 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.298182319 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.297825214 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.298317299 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.297622475 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.298063232 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.298381644 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.2981328 seconds)
  done (took 81.587828635 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.298526627 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.298101673 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.296476135 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.29601841 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.297937246 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.296277061 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.297862695 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.297703693 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.298003979 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.298524354 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298934647 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.296354579 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.297559926 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299086809 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.296926153 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297978776 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.297478094 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.296786592 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.299005619 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.297790254 seconds)
  done (took 27.167892044 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.296316879 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.299058114 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.296813801 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.295926821 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.299828697 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.296594945 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.300329119 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299254998 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.297092184 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.300504397 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.300185552 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.299868995 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297459899 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.297625272 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.299290253 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.297804928 seconds)
  done (took 21.98986354 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.298254432 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.301757407 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.301549387 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.301859001 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.298704158 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.299680266 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.301728225 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.298938789 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.298481225 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.301487152 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.303541903 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.301390318 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.301437396 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.302495646 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.300179609 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.302734841 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.299582545 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.29970367 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.302029757 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.303169449 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.301067628 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.299136166 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.303515116 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.303454675 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.299988371 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.301245177 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.301358622 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.300197163 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.301096912 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.303645103 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.300648017 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.301652417 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.300435896 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.301351842 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.304130559 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.30123071 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.302973999 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.302970767 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.30390046 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.304294879 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.302656886 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.302276705 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.304716334 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.304302792 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.302319631 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.306159305 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.301678468 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.302587891 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.302336523 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.302556219 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.305058439 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.305681212 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.304891267 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.305590812 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.305027004 seconds)
  done (took 72.83234373 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.305525358 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.304558293 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.303227219 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.304384928 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.305594558 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.302373418 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.305155754 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.304526169 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.303642592 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.306047196 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.30365552 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.306992624 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.301534265 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.304666862 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.301914344 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.305229667 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.302253456 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.303288474 seconds)
  done (took 24.696413859 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.301948793 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.303578423 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.305756399 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.302643821 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.303410343 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.306171169 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.303439459 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.306163185 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305375882 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.304689562 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303793444 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.306274206 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306897321 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.306969645 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.304438152 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304083794 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.306311507 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.307580718 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.305359745 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.304612014 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.306299233 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.306069942 seconds)
  done (took 29.932688332 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.306288439 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.305391504 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.305621704 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.324473029 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.32713265 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.331458178 seconds)
  done (took 9.123573529 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314476472 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306706865 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.30438654 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30760742 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306592253 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303986965 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303400974 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304735819 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307104634 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304716132 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304557428 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30750252 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307090525 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305159136 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308224855 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307094538 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305107724 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305101971 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305528049 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30773064 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305590547 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308168052 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304895264 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305311539 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306176508 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305627852 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307842747 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305065396 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305121095 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308074765 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30907394 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30548745 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309426027 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306940709 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30915959 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308984212 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309068614 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308163438 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308721412 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30701535 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.30913874 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309226517 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308785091 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307061554 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308421627 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306394348 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306230622 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306799643 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306957117 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309770373 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309501883 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307196308 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30883861 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309171976 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310139973 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310569878 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30784622 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307708688 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309816371 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306927912 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307553262 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310659658 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307115001 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306785301 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31022243 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308741195 seconds)
  done (took 87.536689115 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309034273 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.30756273 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309377818 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308647811 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307763852 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309090411 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309572654 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308345733 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309443847 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30924208 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312104936 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309565873 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31052205 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309061839 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309012899 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308611246 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310593134 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310786581 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309856331 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312101204 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309400152 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309050342 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308892071 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309718208 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31008796 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313020406 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31062736 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309448208 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309841702 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309567026 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309252651 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309494343 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30976156 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.309851961 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310318779 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310278014 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310023035 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309990515 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310327237 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311615662 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310463604 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313498554 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310148744 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309231154 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310594983 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310889453 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310868536 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310582291 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312269391 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311289738 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311114665 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312030407 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311441492 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311810734 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310242363 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310451134 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312513669 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311680827 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312075145 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31380747 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312290525 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311597566 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314162552 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312322845 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311835782 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312998184 seconds)
  done (took 87.721577772 seconds)
done (took 1764.794233353 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.478370774 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.433360357 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.313112454 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.34921919 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.312995087 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.332841335 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.323642013 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.313514877 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.313884603 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.313868523 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.313650043 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.508704697 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.340525137 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.314962053 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.31457088 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.408239866 seconds)
  done (took 42.916455494 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.344540175 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.319956796 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.447187832 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.337839114 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.350135376 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.529646436 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.376157164 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.319396403 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.513187254 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.36383773 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.077115359 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.344495078 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.318828807 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.56929307 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.339884274 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.527315335 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.593068622 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.086936355 seconds)
  done (took 30.991327425 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.83501148 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.319897799 seconds)
  done (took 9.387611885 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.341410745 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.319486232 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.320104191 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.318769103 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.31106683 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.311194075 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.319501051 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.311714437 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.61669722 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.462573454 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.322564796 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.329240915 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.341177725 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.321884386 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.317094828 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.35973715 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.496034495 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.318851937 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.317703723 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.326679129 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.320883685 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.415684399 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.366745924 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.319412921 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.467576625 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.634385242 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.326453303 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.328073295 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.455154926 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.319407143 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.320595662 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.321122675 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.322709023 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.243058126 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.834930988 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.327004795 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.349373359 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.329883809 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.318504146 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.471649038 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.321997222 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.327736492 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.31938574 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.820837975 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.463610829 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.447652823 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.721220414 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.3230293 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.323531564 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.388148612 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.323276912 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.324973064 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.367889498 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.14497549 seconds)
  done (took 112.738379811 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.355794418 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.719734068 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.485514747 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.337751889 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.089498118 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.942088234 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.334035833 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.645527312 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.351353796 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.314738179 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.660300468 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.87680926 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.336471768 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.375466583 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.454841355 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.321083094 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.316395643 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.148152273 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.33581407 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.318469601 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.847265691 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.329665159 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.317012868 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.479508633 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.358269735 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.81401752 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.915759632 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.769554072 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.33775101 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.318155975 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.823782601 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.34564175 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.39498397 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.320384778 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.598103041 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.71878694 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.697105274 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.323181646 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.355508942 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.321896142 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.342748264 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.808116769 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.700228271 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.318216582 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.321596936 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.811606309 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.319766917 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.328163151 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.326643217 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.524991719 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.952309724 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.320353125 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.919918151 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.319526362 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.662320138 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.365732385 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.410173965 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.844949796 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.324775601 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.451165994 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.345053075 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.321413923 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.324601294 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.32442606 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.321831994 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.733479333 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.435987325 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.323367395 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.723075534 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.835667652 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.341359696 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.915577823 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.188564329 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.328865588 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.41331609 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.320054113 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.964160466 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.856858444 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.351730269 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.320811233 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.693196708 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.323639811 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.66169806 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.338308713 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.320670074 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.857917013 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.325944064 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.384965523 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.321752021 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.321548598 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.994899135 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.323589661 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.628269676 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.375511452 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.322120215 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.320908844 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.336225084 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.320237626 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.341722124 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.323890664 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.8977521 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.350117861 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.315109998 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.342310078 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.327320578 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.323599227 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.320702533 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.324810747 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.544778529 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.878120371 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.32743044 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.32319902 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.322827259 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.328598376 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.49706919 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.326741313 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.670310987 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.32292911 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.332369114 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.322305251 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.070236887 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.389701608 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.322757294 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.322525326 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.267075784 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.527647775 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.344622979 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.323994612 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.33627821 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.33138759 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.729025433 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.345009755 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.384123391 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.323895686 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.075340582 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.382215957 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.324996762 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.609858496 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.332017046 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.323690874 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.325897694 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.323302801 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.623421972 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.610458409 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.35900768 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.324896268 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.343171548 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.047564968 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.353693192 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.47326866 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.347308466 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.370486847 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.524221671 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.635100035 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.325597332 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.941999971 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.324403185 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.542108462 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.325813123 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.638017721 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.853665826 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.345299059 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.327959041 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.068918218 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.045213276 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.001714645 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.327206229 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.667661829 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.295443633 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.803484809 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.326408974 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.327323075 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.80177619 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.327388046 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.331339245 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.327189992 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.327278489 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.397981395 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.505246961 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.496739078 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.329513 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.819092647 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.380665238 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.327110484 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.329561069 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.327650247 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.676724006 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.329548367 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.329309999 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.357697777 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.329317188 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.331595878 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.838637512 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.200526254 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.329308235 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.482182639 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.003442569 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.346756428 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.328702654 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.033182563 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.011705624 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.880812365 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.377093477 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.677087192 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.335422242 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.36927259 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.00884409 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.420992646 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.843505816 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.333447111 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.328665257 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.96121284 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.34834328 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.68398596 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.329846859 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.330669748 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.919177128 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.348761639 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.331201386 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.744194193 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.350110262 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.599956588 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.330159099 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.372312995 seconds)
  done (took 1111.049318619 seconds)
done (took 1308.314733542 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.330610441 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.330041908 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.318710602 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.326922065 seconds)
  done (took 26.559062746 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.338959993 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.334323049 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.336678663 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.33280971 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.344546394 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.334065416 seconds)
  done (took 9.269646258 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.992195836 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.330309326 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.330948774 seconds)
  done (took 19.901300794 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.566370456 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.741535021 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.709066879 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.805140366 seconds)
  done (took 11.071926968 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.336398949 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.336232645 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.336595889 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.339853807 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.341075819 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.342890214 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.341320224 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.340975875 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.341273958 seconds)
  done (took 13.302738211 seconds)
done (took 81.357865765 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.844934514 seconds)
    (2/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.316270673 seconds)
    (3/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.316783095 seconds)
    (4/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.338559967 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.185506129 seconds)
    (6/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.353199138 seconds)
    (7/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.953494192 seconds)
    (8/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.982655493 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.62948988 seconds)
    (10/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.445219807 seconds)
    (11/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.349274197 seconds)
    (12/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.11190234 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.371423939 seconds)
    (14/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.553331015 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.356392505 seconds)
    (16/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.436756644 seconds)
    (17/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.333188017 seconds)
    (18/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.841048351 seconds)
    (19/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.357222893 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.704430198 seconds)
    (21/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.231876813 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.047458481 seconds)
    (23/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.35577269 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.766161639 seconds)
    (25/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.335718189 seconds)
    (26/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.012637779 seconds)
    (27/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.477621816 seconds)
    (28/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.989559523 seconds)
    (29/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.369450873 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.758980384 seconds)
    (31/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.373634731 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 6.331740746 seconds)
    (33/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.433356098 seconds)
    (34/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.366840578 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.462917951 seconds)
    (36/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.337037425 seconds)
    (37/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.46202905 seconds)
    (38/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.353108707 seconds)
    (39/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.418049486 seconds)
    (40/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.393903013 seconds)
    (41/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.358691043 seconds)
    (42/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.08184166 seconds)
    (43/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.757161423 seconds)
    (44/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.058987512 seconds)
    (45/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.340994937 seconds)
    (46/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.940404012 seconds)
    (47/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.378667135 seconds)
    (48/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.447310168 seconds)
    (49/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.16101211 seconds)
    (50/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.747840089 seconds)
    (51/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.447768116 seconds)
    (52/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.330360292 seconds)
    (53/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.343676935 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.596492769 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.316658917 seconds)
    (56/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.442322887 seconds)
    (57/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.531271233 seconds)
    (58/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.398010989 seconds)
    (59/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.39594605 seconds)
    (60/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.531455061 seconds)
    (61/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.19473444 seconds)
    (62/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.390969773 seconds)
    (63/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.321874216 seconds)
    (64/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.357316655 seconds)
    (65/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.323100848 seconds)
    (66/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.339771263 seconds)
    (67/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.703737861 seconds)
    (68/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.357596017 seconds)
    (69/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.458674256 seconds)
    (70/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.336437232 seconds)
    (71/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.320166254 seconds)
    (72/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.690079109 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.355052581 seconds)
    (74/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.28498316 seconds)
    (75/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.340523528 seconds)
    (76/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.351108329 seconds)
    (77/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.330651588 seconds)
    (78/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.97955182 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 5.643607156 seconds)
    (80/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.321363318 seconds)
    (81/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.461505184 seconds)
    (82/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.334767695 seconds)
    (83/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.105113188 seconds)
    (84/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.348388555 seconds)
    (85/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.628306777 seconds)
    (86/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.361257989 seconds)
    (87/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.062737431 seconds)
    (88/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.08491387 seconds)
    (89/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.356140332 seconds)
    (90/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.875917816 seconds)
    (91/286) benchmarking ("map", identity, BigInt, true)...
    done (took 3.072974156 seconds)
    (92/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.344205079 seconds)
    (93/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.631670103 seconds)
    (94/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.706011763 seconds)
    (95/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.533013455 seconds)
    (96/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.360536085 seconds)
    (97/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.07624879 seconds)
    (98/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.325122716 seconds)
    (99/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.323801451 seconds)
    (100/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.437010714 seconds)
    (101/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.831893355 seconds)
    (102/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.322406815 seconds)
    (103/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.362364971 seconds)
    (104/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.330262951 seconds)
    (105/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.323807129 seconds)
    (106/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.341697269 seconds)
    (107/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.32352634 seconds)
    (108/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.469946388 seconds)
    (109/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.39424258 seconds)
    (110/286) benchmarking ("sort", Bool, false)...
    done (took 1.861859819 seconds)
    (111/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.359806673 seconds)
    (112/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.38728919 seconds)
    (113/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.606700429 seconds)
    (114/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.061062359 seconds)
    (115/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.549934551 seconds)
    (116/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.677175004 seconds)
    (117/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.362031295 seconds)
    (118/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.207467063 seconds)
    (119/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.4243827 seconds)
    (120/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.330014249 seconds)
    (121/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.600164125 seconds)
    (122/286) benchmarking ("sort", BigInt, false)...
    done (took 6.33776077 seconds)
    (123/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.976365841 seconds)
    (124/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.485821452 seconds)
    (125/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.329574288 seconds)
    (126/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.338212382 seconds)
    (127/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.478721737 seconds)
    (128/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.831170708 seconds)
    (129/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.462876768 seconds)
    (130/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.849011053 seconds)
    (131/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.422444017 seconds)
    (132/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.337726236 seconds)
    (133/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.623416516 seconds)
    (134/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.46451448 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.20683697 seconds)
    (136/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.363903483 seconds)
    (137/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.205169972 seconds)
    (138/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.108763923 seconds)
    (139/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.889825217 seconds)
    (140/286) benchmarking ("sort", Int8, true)...
    done (took 6.338438499 seconds)
    (141/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.371554762 seconds)
    (142/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.336252167 seconds)
    (143/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.361372621 seconds)
    (144/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.364137143 seconds)
    (145/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.764663577 seconds)
    (146/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.458718195 seconds)
    (147/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.339761228 seconds)
    (148/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.367576564 seconds)
    (149/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.875056306 seconds)
    (150/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.326503314 seconds)
    (151/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.226702023 seconds)
    (152/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 4.035537412 seconds)
    (153/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.326170703 seconds)
    (154/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.270405985 seconds)
    (155/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.294755304 seconds)
    (156/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.331630875 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.714192873 seconds)
    (158/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.345061229 seconds)
    (159/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.000912575 seconds)
    (160/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.37774213 seconds)
    (161/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.14685131 seconds)
    (162/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.435796859 seconds)
    (163/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.358597638 seconds)
    (164/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.403038208 seconds)
    (165/286) benchmarking ("sort", Float32, true)...
    done (took 6.342766804 seconds)
    (166/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.771405067 seconds)
    (167/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.385305126 seconds)
    (168/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.326560321 seconds)
    (169/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.232961071 seconds)
    (170/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.228385248 seconds)
    (171/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.381819314 seconds)
    (172/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.326883819 seconds)
    (173/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.102667269 seconds)
    (174/286) benchmarking ("sort", Float32, false)...
    done (took 5.403821691 seconds)
    (175/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.366906485 seconds)
    (176/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.451839858 seconds)
    (177/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.402874632 seconds)
    (178/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.354808965 seconds)
    (179/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.327631383 seconds)
    (180/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.221250008 seconds)
    (181/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.441484129 seconds)
    (182/286) benchmarking ("sort", Bool, true)...
    done (took 5.380613739 seconds)
    (183/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.416932381 seconds)
    (184/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.327129091 seconds)
    (185/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.574212872 seconds)
    (186/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.376371618 seconds)
    (187/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.39591924 seconds)
    (188/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.547490741 seconds)
    (189/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.75015883 seconds)
    (190/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.133967301 seconds)
    (191/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.114838717 seconds)
    (192/286) benchmarking ("sort", BigInt, true)...
    done (took 6.34288118 seconds)
    (193/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.340526021 seconds)
    (194/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.278775783 seconds)
    (195/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.350255703 seconds)
    (196/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.364440267 seconds)
    (197/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.35109889 seconds)
    (198/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 6.352429684 seconds)
    (199/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.382966743 seconds)
    (200/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.335943033 seconds)
    (201/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.378395446 seconds)
    (202/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.328855617 seconds)
    (203/286) benchmarking ("sort", Int8, false)...
    done (took 4.437326098 seconds)
    (204/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.07606087 seconds)
    (205/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.372198804 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.156528224 seconds)
    (207/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.368962713 seconds)
    (208/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.342657733 seconds)
    (209/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.154732192 seconds)
    (210/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.612532893 seconds)
    (211/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.567286646 seconds)
    (212/286) benchmarking ("sort", Float64, false)...
    done (took 5.746103704 seconds)
    (213/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.297899608 seconds)
    (214/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.33066066 seconds)
    (215/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.91947596 seconds)
    (216/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.329168157 seconds)
    (217/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.48543563 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.332024732 seconds)
    (219/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.428618386 seconds)
    (220/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.441949911 seconds)
    (221/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.460228185 seconds)
    (222/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 3.080049257 seconds)
    (223/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.425976396 seconds)
    (224/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.341404404 seconds)
    (225/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.577267816 seconds)
    (226/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.758978825 seconds)
    (227/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.372008116 seconds)
    (228/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.293958371 seconds)
    (229/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.357375385 seconds)
    (230/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.372339071 seconds)
    (231/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.426573497 seconds)
    (232/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.429619331 seconds)
    (233/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.757366046 seconds)
    (234/286) benchmarking ("sort", Float64, true)...
    done (took 6.343535481 seconds)
    (235/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.031175535 seconds)
    (236/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.332411327 seconds)
    (237/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.388967382 seconds)
    (238/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.544041374 seconds)
    (239/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.355447236 seconds)
    (240/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.895500971 seconds)
    (241/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.092245699 seconds)
    (242/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.371453106 seconds)
    (243/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.054237705 seconds)
    (244/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.362744949 seconds)
    (245/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.920692696 seconds)
    (246/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.35410562 seconds)
    (247/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.334805228 seconds)
    (248/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.448491845 seconds)
    (249/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.429574399 seconds)
    (250/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.333205725 seconds)
    (251/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.865283405 seconds)
    (252/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.355427692 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.328999386 seconds)
    (254/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.428829673 seconds)
    (255/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.775604847 seconds)
    (256/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.446586703 seconds)
    (257/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.462688441 seconds)
    (258/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.778699632 seconds)
    (259/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.347930156 seconds)
    (260/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.406434998 seconds)
    (261/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.148533939 seconds)
    (262/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.376197833 seconds)
    (263/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.339625623 seconds)
    (264/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.347066322 seconds)
    (265/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.432504072 seconds)
    (266/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.773767236 seconds)
    (267/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.334180341 seconds)
    (268/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.716122195 seconds)
    (269/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.287727463 seconds)
    (270/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.387767394 seconds)
    (271/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.176356714 seconds)
    (272/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.748767464 seconds)
    (273/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.39583309 seconds)
    (274/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.247408453 seconds)
    (275/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.925170158 seconds)
    (276/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.363812805 seconds)
    (277/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.337527637 seconds)
    (278/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.430777817 seconds)
    (279/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.344398557 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.373915352 seconds)
    (281/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.468976307 seconds)
    (282/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.337987574 seconds)
    (283/286) benchmarking ("map", abs, Float64, true)...
    done (took 3.004295205 seconds)
    (284/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.889634417 seconds)
    (285/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.452590055 seconds)
    (286/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.265235454 seconds)
  done (took 958.424766428 seconds)
done (took 959.675681202 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.380697438 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.37675204 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.359625332 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.380058406 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.470282117 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.533429833 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.370504513 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.360584074 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.405709616 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.40824569 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.357439532 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.5338167 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.360990118 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.359063604 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.358782928 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.375061929 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.539133817 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.359861897 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.376691734 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.368494262 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.375651778 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.358101547 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.407754291 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.534360058 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.363722263 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.361565218 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.363465652 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.380205118 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.471428393 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.363452463 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.362176767 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.371327454 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.537867047 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.358942325 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.35527251 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.380463398 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.371339679 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.368904012 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.363706677 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.392865443 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.002543475 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.361619257 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.362636775 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.361286418 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.361334011 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.365392518 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.36283367 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.371679704 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.376293526 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.377155869 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.994733822 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.376631759 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.365624816 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.362791882 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.371422804 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.361873008 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.366783832 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.379509495 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.380909713 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.379940122 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.532322445 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.366105734 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.3654691 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.379313149 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.369677755 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.034907771 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.357457562 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.367118901 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.009039827 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.367438827 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.036727603 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.371784325 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.36487957 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.377610963 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.396389837 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.544999593 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.358489773 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.363060084 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.370703438 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.362197678 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.375134766 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377322891 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.368961596 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.364450979 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.379523317 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.538837787 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.37457606 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.363803294 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.372448649 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.38392335 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.371731382 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.374676075 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.367478329 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.358531485 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.375234698 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.368729766 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.36793079 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.36761418 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.369230748 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.37610701 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.00926003 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.38430222 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.36098917 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.361175581 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.363784067 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.378665251 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.12666846 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.368359294 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.386990674 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.411928075 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.367233051 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.540066576 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.369404299 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.383346026 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.373592642 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.367769629 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.361260997 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.541648208 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.00577947 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.381843106 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.368517677 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.363697102 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.384936966 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.369975352 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.36241569 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.550989967 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.368242972 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.381371699 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.488701342 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.376046771 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.399131048 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.366177966 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.37034368 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.397989869 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.383475683 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.399464846 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.370654055 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.385305504 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.384091314 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.363577996 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.378351224 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.377980015 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.369207352 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.373783782 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.361222069 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.398510382 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.382169604 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.382537351 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.389007078 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.48773566 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.3655783 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.542311898 seconds)
done (took 233.576861166 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.427020066 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.361569224 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.448876702 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.36489178 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.46757242 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.477679326 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.361937256 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.362192331 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.362224975 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.740663345 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.362112742 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.363343385 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.361589216 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.362879188 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.451778516 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.365196245 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.363239909 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.705745597 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.366855882 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.436271137 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.365200575 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.36314962 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.364757715 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.745732663 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.360384467 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.361621263 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.442708521 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.366735144 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.712402386 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.360046178 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.362378893 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.71234838 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.464859285 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.384810233 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.376787033 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.373720105 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.474590536 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.388436442 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.458257405 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.449278388 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.463377707 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.406056637 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.368665645 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.361297913 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.369381497 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.370137486 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.366482705 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.394070298 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.363039427 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.366545057 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.707537807 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.378648718 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.367579519 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.36665106 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.36748267 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.399743308 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.366246299 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.369749965 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.458619891 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.370478091 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.438172993 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.749930703 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.744704445 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.369228342 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.364531411 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.366913019 seconds)
  done (took 150.694644009 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.437366904 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.442794651 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.490106905 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.37063966 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.420270312 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.495050287 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.372200358 seconds)
  done (took 11.308933461 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.37619578 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.371950185 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.420672261 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.419115624 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.36988112 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.548800195 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.370108615 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.382073885 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.367441339 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.422264082 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.375024833 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.371863629 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.376873399 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.364527171 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.419513696 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.382130881 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.486079569 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.371574238 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.372599733 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.522539646 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.368862593 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.376613185 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.422607042 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.382396543 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.375840044 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.377281073 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.203908871 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.372565767 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.368077765 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.371012773 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.368508544 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.448902942 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.373037723 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.371929615 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.368329346 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.486112761 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.37215734 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.371374296 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.372663521 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.370892267 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.37384324 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.372686388 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.375083384 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.369977294 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.372779877 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.396567469 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.373723895 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.375462285 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.374016832 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.374491389 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.424276133 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.375386077 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.37046384 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.370461098 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.42692135 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.379989865 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.373802579 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.373303483 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.376059511 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.3709247 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.52547122 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.424218471 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.373467676 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.422094789 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.375451083 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.374261692 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.373514915 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.374399557 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.429127527 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.373748073 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.42194154 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.372191114 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.553789667 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.397810358 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.375919574 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.377918507 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.376774791 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.375749191 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.371868956 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.380958603 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.371848717 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.375374819 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.380015964 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.373389119 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.372308924 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.545860658 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.481135964 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.373020224 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.387401355 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.381214379 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.372974468 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.429162528 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.375065027 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.37254998 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.427049878 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.490097724 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.42780087 seconds)
  done (took 157.486814026 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.380249123 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.383789843 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.378722747 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.399522039 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.376508502 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.376766613 seconds)
  done (took 9.581704399 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.379025736 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.378757157 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.375402801 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.375476218 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.376811722 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.381532894 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.377942757 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.378637931 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.381758383 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.376538557 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.38042969 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.379934153 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.381945254 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.378419612 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.37904265 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.377902143 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.378820547 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.374780478 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.378133762 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.377861984 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.472089106 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.377960157 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.37962704 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.379023288 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.385858437 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.379307705 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.387454413 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.378118454 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.378151413 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.383037486 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.382101956 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.382956647 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.380591505 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.385100318 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.384300909 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.380863885 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.383353068 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.381294318 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.376753768 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.382914203 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.38123324 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.380774566 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.379828236 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.382201309 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.381998308 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.386561453 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.386843533 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.38718617 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.380399323 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.381126652 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.382805224 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.379831973 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.384338002 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.383273675 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.382689776 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.404805303 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.387403146 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.382625743 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.382004534 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.382354279 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.382399486 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.384655111 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.383204698 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.385603457 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.388150575 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.383417627 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.383753346 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.386798694 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.382378511 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.381446462 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.383282698 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.378994303 seconds)
  done (took 101.863249744 seconds)
done (took 432.21286906 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.61288201 seconds)
  done (took 7.903707187 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.888229254 seconds)
  done (took 8.181027696 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.666938324 seconds)
  done (took 24.966517406 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.443698652 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.408169694 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.388048018 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.380956447 seconds)
  done (took 26.913145202 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.710819572 seconds)
  done (took 8.003630053 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.374204005 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.375153418 seconds)
  done (took 14.04325167 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.711458348 seconds)
  done (took 8.00175495 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.465556775 seconds)
  done (took 7.765976269 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.393268339 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.413801173 seconds)
  done (took 14.113293767 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.38399798 seconds)
  done (took 7.676738274 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.384294809 seconds)
  done (took 12.679185088 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.379914337 seconds)
  done (took 7.674009889 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.400080744 seconds)
  done (took 7.693168671 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.485428386 seconds)
  done (took 10.77795516 seconds)
done (took 167.687201506 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.374753471 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.377408708 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.376281833 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.375996731 seconds)
  done (took 26.796838476 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.415766777 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.417324473 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.418486289 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.427843997 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.420452067 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.416314676 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.408107342 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.408964696 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.427095725 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.420848262 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.419160489 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.419971505 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.417002272 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.409722032 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.419614731 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.419544418 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.428045914 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.419187004 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.409212625 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.42070084 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.384298045 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.428894155 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.420872523 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.384876965 seconds)
  done (took 35.276304557 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.903734128 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.45554863 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.540249215 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.437085439 seconds)
  done (took 7.630435671 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.435498921 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.438134293 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.450616365 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.488780529 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.516145754 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.446861217 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.408606632 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.40663565 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.393030831 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.4395177 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.513254582 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.454005667 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.522090628 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.386167373 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.571601382 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.385892989 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.385254891 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.437393556 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.48941515 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.510076417 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.386626363 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.436960421 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.442696614 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.456707341 seconds)
  done (took 36.09656287 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.38549817 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.404487516 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.384996011 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.383888428 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.393058395 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.384830542 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.385178066 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.386613607 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.386069246 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.394326283 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.386040068 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.399458332 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.387571255 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.38731287 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.394335506 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.389486309 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.394549007 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.388868577 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.387768367 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.394027352 seconds)
  done (took 29.094324073 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.382926957 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.234665991 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.731327508 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.637494764 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.380465526 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.383996801 seconds)
  done (took 28.05015082 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.47156014 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.616559711 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.387428436 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.81184806 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.889248227 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.389193448 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.388837135 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.662835697 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.047167772 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.057903316 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.457615476 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.465183481 seconds)
  done (took 20.94458041 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.401063165 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.384473782 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.394921571 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.40046116 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.454215722 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.393000947 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.396015576 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.380615481 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.456669187 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.458094276 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.392466816 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.455414907 seconds)
  done (took 38.267362636 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471019544 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.433931804 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.490045361 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.446915905 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.139899234 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.595516597 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.384489207 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.177049965 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.387323002 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658532089 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392522423 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473440981 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.642443127 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385766174 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.384053815 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.489868137 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.611191136 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927682292 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386607183 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.897534194 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41045544 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.385805117 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.966483713 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.671229699 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.601202248 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.367521612 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.645192422 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.164234786 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.71656052 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.400317124 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395272435 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385551733 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657653031 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107988369 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502902374 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.648625239 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411223557 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.933952322 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.390728852 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.914636892 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397834911 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.38829819 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396752101 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387829717 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.320622722 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395742477 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171298159 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.391602865 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.097581242 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.387591185 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.697599783 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483092094 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.391015014 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.959894673 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.476683916 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.393695912 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.390425053 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4865316 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960308214 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.208088595 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393681574 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.324670382 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.403747618 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.896744258 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081990033 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.3963615 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.391681904 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.39203268 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333651937 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.900185375 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404119569 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531869782 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.414971648 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.079210142 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.229687752 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.404473496 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.331294632 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998292464 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391019835 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.324542516 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.617812538 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.165384621 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328679722 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.336021975 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.323899142 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.162378248 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398475393 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.917698955 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41129978 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.165918474 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.67979347 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412897918 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412616451 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.613267605 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.274370541 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390350348 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.390243148 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.532754815 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412028704 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.170102656 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35739942 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.394123808 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.648321424 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.601742432 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398205354 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.501596805 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941147491 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432572644 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.406505703 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.408438812 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.659960491 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.061403551 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.407260719 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39094533 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41027677 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.166493336 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.202142131 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395199065 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.395006696 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.407859596 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688406997 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.238701256 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.295571381 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459142586 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396190289 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.392028863 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.926050011 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.24251601 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.288929337 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.649931437 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.433954491 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.404805233 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.394401414 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.391521896 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.391471857 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40893474 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.172629153 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.616961101 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408561342 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670313605 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326975307 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.538655761 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.441456757 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.616957861 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.735114332 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.397599219 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.655015152 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394242645 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.41352191 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.406462336 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411862685 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493428633 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416215505 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.396718348 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.65495534 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.398079829 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.39961753 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.951002556 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.174829134 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397536606 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.399279065 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402512626 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058804895 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386478068 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.402832482 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.288031475 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.40868566 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462711083 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.400026611 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.663975245 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.941759792 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408468303 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.400265373 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.404833424 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621159095 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.405164467 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.927595655 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.474518894 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.9433074 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.081141286 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.408689541 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.330745422 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.107098805 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.089529448 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396989782 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.594240984 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.396503873 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.662649957 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.414280657 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.400175776 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.063183775 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399252706 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.054637864 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.405437997 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.409075512 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.40175701 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397069698 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 4.015892913 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.265742318 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399774695 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.410630413 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540248772 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.410507388 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.331343631 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.914202692 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.40308447 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.398076625 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.175379111 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432379186 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.939395483 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307665824 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.657740299 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.415920037 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.707128038 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.0292407 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.433476326 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.401999254 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399966272 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404584812 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.412024735 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406849835 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.409600533 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.079120049 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.885357822 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966851532 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264383693 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002920408 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.808564445 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.400006613 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.305362826 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.18443461 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357228985 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.05813863 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665657233 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.184109325 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.416254241 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952250311 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.746053893 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.285866165 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.710363876 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.631547266 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.806353476 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.40387154 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.716728079 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.613134023 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435498417 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.409388602 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.343850907 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.927339749 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.04071454 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.426650555 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.481103652 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.1864187 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.429822517 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.179675048 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.42849779 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.274717267 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879947696 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.971210228 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.828753168 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.41957478 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.403378714 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312552029 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.406700556 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.930989363 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098634219 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.412925003 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.957519376 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.365678091 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.672781042 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.418192906 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.406985785 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.373958087 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.415620829 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.664617091 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.712747619 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338685805 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.413646899 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012731062 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.25904568 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.408509548 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403616327 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218521997 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404372531 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.74064532 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.420956536 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 4.047511431 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414575411 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.336890172 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337926369 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.097052141 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.412369455 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391773811 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952308067 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.407037744 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405856532 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420401484 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254676436 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.661739382 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.417078588 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.088070639 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633383999 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40677744 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426716364 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.407372168 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.421480204 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.392091393 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.303983393 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.640242827 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.454508106 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.628973714 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.529835978 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.311497485 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.427374145 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.639538777 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.287207356 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.405586696 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.704883073 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.11921758 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.428864491 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261236205 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430986427 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.406879588 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.454446931 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.409071689 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426537684 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475935268 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.678211571 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.420948703 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.417726222 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885331182 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432104754 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408394367 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.420437172 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499692035 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.417470446 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 4.020717015 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.182847121 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.081323799 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274066947 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.09070505 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.724378974 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.408072484 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414518465 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351496553 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556118653 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.936441192 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680962838 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.534454577 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.409615116 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449870656 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407542733 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414320974 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622879454 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683565437 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.284574282 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415769532 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.07218514 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.289493698 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.41917678 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.61942692 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960069249 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027195173 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531844867 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.41465497 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.201536145 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682330989 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.500380817 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409616438 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.003800389 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.415398051 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.266382427 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.413985655 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422163926 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55598526 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.718720685 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.140060261 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.442511674 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.56929541 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.183528925 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.97995724 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.667952328 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.969749958 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.684175617 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.0874131 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.215058561 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.674992119 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480483113 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.68330586 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.535970033 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.557333484 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.4239948 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.292078947 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410345582 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261442827 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.121491978 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.421458027 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089406189 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.676801998 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.415055223 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.424682513 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433364645 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.422079203 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.636130991 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.201419029 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.636492459 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.422542516 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.420621296 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.403118692 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.088471697 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.731732677 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357409169 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.415895519 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.709224093 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.652155814 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.437982831 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.864986177 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.12330994 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03006516 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.387292579 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435557117 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.431568397 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.223600083 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090528363 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.984960204 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972274968 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.076378384 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420050232 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686534669 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.417502715 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.412759396 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692966753 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.417703086 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.422788137 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.691353929 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.090001116 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.310180104 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.426112673 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.002362078 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.349607463 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.642597853 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.475518906 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.363438508 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.422797525 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.915166524 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.436963552 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.540987438 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.426555369 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.426458351 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429273809 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.150623372 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.736233816 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.420411367 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.430056022 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.401600834 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.453783749 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519070164 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064432628 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441846733 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.091109768 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.771440903 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.673837017 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.422532296 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.405306542 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.419274282 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417617251 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.172412841 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.424981253 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.427990195 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036254261 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.425179988 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.430388663 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.420425757 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.632641216 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628655455 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.420749321 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.692976422 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429382686 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434693121 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.323099681 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.21867829 seconds)
  done (took 1709.575407116 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.451901329 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.435082831 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.432445784 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.529004706 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.472123967 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.531903133 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.460979222 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.532188071 seconds)
  done (took 53.175758416 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.427736954 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.579902127 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.453996582 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.418251978 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.427398863 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.418533502 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.935971529 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.436284889 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.426961806 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.428572186 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.428745032 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.417287856 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.113438151 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.429053102 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.424405476 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.42525932 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.427473559 seconds)
  done (took 66.959050434 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.304588636 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.700042318 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.171583285 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.450545157 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.432543387 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.442611668 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.528337687 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.441584346 seconds)
  done (took 55.804908243 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.436150947 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.437022906 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.436696702 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.436132272 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.438329274 seconds)
  done (took 8.517277337 seconds)
done (took 2117.486205003 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.423122285 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.426049052 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.424777664 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.426962392 seconds)
  done (took 7.033279317 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.405886161 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.151579913 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.407728878 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.421356369 seconds)
  done (took 18.720295731 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.428577041 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.4234717 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.273437392 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.180100459 seconds)
  done (took 5.789443492 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.172242102 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.185206901 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.169224219 seconds)
  done (took 7.863270278 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.420071016 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.427463327 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.426532023 seconds)
  done (took 20.609129958 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.734425206 seconds)
  done (took 3.071186881 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.568746412 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.619591929 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.80091852 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.79460999 seconds)
  done (took 8.119790412 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.811176796 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.810130138 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.617572731 seconds)
  done (took 6.574876456 seconds)
done (took 91.968005623 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.877207973 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.448663083 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.62935765 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.850344495 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.651460715 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.630693505 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.731763547 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.809926154 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.676467215 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.349006901 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.851298449 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.653855822 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.676232332 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.447682669 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.676196299 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.450234568 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.651621016 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.935498007 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.42387711 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.443436221 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.73320069 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.491097661 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.675845413 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.837424865 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.655174215 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.584210611 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.069880786 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.450498621 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.436966308 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.424137545 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.590689944 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.432692093 seconds)
  done (took 202.584227429 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.423527058 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.425824176 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.426213999 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.443545334 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.444035472 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.429423004 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.445834821 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.43400743 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.426701783 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.43685172 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.425798478 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.449290007 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.426233832 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.426238882 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.426706109 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.425189161 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.42586898 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.444087906 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.425660815 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.426352789 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.428869726 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.439623476 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.426098869 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.424917304 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.426375302 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.449321334 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.445964929 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.427128813 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.444255106 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.427365571 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.449876106 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.441958746 seconds)
  done (took 207.208347252 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.427107924 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.429750556 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.428486567 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.428654183 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.447206745 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.449158891 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.448049617 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.429943436 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.439798929 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.441006952 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.427632261 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.428054 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.427632199 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.427842162 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.436078588 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.437236644 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.444213065 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.430335557 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.465757443 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.429138709 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.427259335 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.42769403 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.429578644 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.442470419 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.439314333 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.429705685 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.437212379 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.427857316 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.45416152 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.446277637 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.439201383 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.445532472 seconds)
  done (took 207.310169342 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.631279075 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.435889499 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.437003249 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.371885201 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.437435253 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.435986206 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.428691642 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.633766912 seconds)
  done (took 15.153407552 seconds)
done (took 633.595276847 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.956723709 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.644052673 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.645721053 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.456723122 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.384598125 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.477382095 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.456547148 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.652870761 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.413693726 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.659973953 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.861134261 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.453118946 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.019251323 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.455899464 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.736896577 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.566899596 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.393037595 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.498860537 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.809017282 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.124607455 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.739720158 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.055874678 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.654458343 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.410817838 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.028695221 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.112666715 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.374098089 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.382907617 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.457665178 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.814534186 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.3536388 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.680500862 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.510166432 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.511226206 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.567823776 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.568140665 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.634786198 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.530562685 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.650725294 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.891773026 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.129488101 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.221187292 seconds)
  done (took 99.291757649 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.427680257 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.427829497 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.42789793 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.428072601 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.431419727 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.427654911 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.426963423 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.426783792 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.428881151 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.426911651 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.428150726 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.429342588 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.428489959 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.429498237 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.427510744 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.428294799 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.42905017 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.430487006 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.427941663 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.428638579 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.428703448 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.427241185 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.428861069 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.429289211 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.428409196 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.429396755 seconds)
  done (took 38.485760628 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.440377804 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.707861337 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.900095874 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.447028822 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.440739995 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.445839104 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.533134703 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.44306741 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.44457834 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.445547615 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.609667642 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.445459956 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.479717761 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.954132442 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.448117025 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.442916059 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.442848713 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.442341229 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.718244599 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.450287516 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.557460089 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.442595476 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.533994063 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.449354579 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.466023828 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.443361507 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.447583814 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.026021807 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.444244185 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.609276086 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.416595721 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.531605751 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.996983919 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.917562253 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.416617041 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.445818312 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.442753004 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.613318604 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.442994998 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.442295008 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.535711285 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.443581577 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.92634947 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.166819235 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.466388161 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.443084857 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.050386007 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.611966116 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.736291549 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.449974577 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.959499805 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.448011889 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.445099188 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.442990046 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.736899987 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.448845389 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.443245228 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.088321201 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.467705436 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.535627705 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.444443468 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.443008 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.724362812 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.44298777 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.712008791 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.445115049 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.451887494 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.466512451 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.933942841 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.448880417 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.187652531 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.464075244 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.445104498 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.610766871 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.712817496 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.085535099 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.448679113 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.728347724 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.012650033 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.535599647 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.448640116 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.017393 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.539784333 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.448553821 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.448783854 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.447945808 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.445593507 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.491673148 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.535782784 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.109830294 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.181325647 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.121075354 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.558881521 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.453170096 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.445921624 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.090795502 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.465950945 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.446503963 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.926591572 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.191398801 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.468972221 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.453660391 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.18782935 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.469256029 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.538557406 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.452016762 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.934558452 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.448155885 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.492371409 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.448644546 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.453227398 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.472804263 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.53917054 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.449440252 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.447780778 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.150031381 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.641548859 seconds)
  done (took 191.57325639 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.451968388 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.440746169 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.447281161 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.441954474 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.440662886 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.449568583 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.441484385 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.441001149 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.44677185 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.441012022 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.441861727 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.442237364 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.442454323 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.442734843 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.452527127 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.448257432 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.056503273 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.44300376 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.4418717 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.442443792 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.28852603 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.446317153 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.447696701 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.44139203 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.4434171 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.442678916 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.443643078 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.445287395 seconds)
  done (took 155.247965852 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.449183303 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.121007418 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.451244539 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.605242354 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.473584257 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.447523288 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.603243904 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.516712907 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.449935362 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.447738862 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.447560239 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.810220857 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.450805606 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.062266675 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.682549239 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.604001133 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.062696064 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.471560802 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.448543194 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.447656687 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.608459915 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.464272229 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.810349726 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.123225422 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.452691067 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.123782043 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.440924249 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.452324433 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.449665317 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.126364237 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.449500232 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.811742506 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.540961333 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.520614126 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.127747044 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.087923504 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.089214215 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.635013983 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.45381284 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.448192003 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.449948528 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.440665763 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.127872785 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.454298319 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.452161825 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.121138997 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.472370576 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.454044348 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.457603502 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.450270931 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.520744291 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.525076339 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.820864184 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.134308674 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.54224996 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.464123676 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.619072347 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.864535802 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.455823474 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.070366109 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.44174396 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.133619581 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.47481157 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.441111101 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.452711398 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.457514949 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.63742472 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.62141818 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.074619656 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.473235433 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.070592932 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.657725384 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.454045365 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.451335659 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.454901636 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.134447325 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.071377268 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.656019896 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.61888638 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.690120875 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.445373199 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.453249123 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.444234022 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.546770671 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.452551084 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.135337821 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.092173321 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.474403548 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.457044917 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.456123365 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.454986843 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.668782423 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.138289131 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.54598827 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.066269009 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.840756871 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.820728859 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.457110153 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.524167573 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.474166639 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.823984204 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.457412 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.522524574 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.933778295 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.821377209 seconds)
  done (took 175.500354611 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.74288508 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.819618876 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.555863558 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.618722116 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.118014444 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.088289828 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.832814773 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.611539635 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.578072616 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.745510409 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.764414427 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.545604214 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.69350056 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.541993453 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.224287083 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.534400254 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.559320734 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.615524979 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.612429007 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.577508793 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.171205598 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.785612958 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.668240552 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.490499972 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.558550518 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.356795672 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.075084086 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.039318674 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.648040038 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.921355802 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.032340376 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.659246181 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.549257828 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.219828438 seconds)
  done (took 70.917296589 seconds)
done (took 732.360484301 seconds)
SAVING RESULT...
DONE!
