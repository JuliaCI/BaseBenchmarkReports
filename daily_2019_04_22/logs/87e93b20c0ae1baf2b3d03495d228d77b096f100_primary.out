cset: moving following pidspec: 12521
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.291374949 seconds)
loading group "string"... done (took 0.582279397 seconds)
loading group "linalg"... done (took 7.10773939 seconds)
loading group "parallel"... done (took 0.165102511 seconds)
loading group "find"... done (took 1.128007474 seconds)
loading group "tuple"... done (took 2.004285291 seconds)
loading group "dates"... done (took 1.291170766 seconds)
loading group "micro"... done (took 0.235361492 seconds)
loading group "io"... done (took 0.963356613 seconds)
loading group "scalar"... done (took 39.359018918 seconds)
loading group "sparse"... done (took 12.289754815 seconds)
loading group "broadcast"... done (took 0.970008407 seconds)
loading group "union"... done (took 13.008856635 seconds)
loading group "simd"... done (took 4.419563897 seconds)
loading group "random"... done (took 8.920680629 seconds)
loading group "problem"... done (took 1.941606037 seconds)
loading group "array"... done (took 21.119351626 seconds)
loading group "misc"... done (took 1.915028755 seconds)
loading group "sort"... done (took 3.196331812 seconds)
loading group "collection"... done (took 17.883009424 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.533754047 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141867937 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.117757927 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.139854423 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.185020215 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.133028021 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.145577705 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086047276 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.038940099 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.169358695 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139833985 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.478414327 seconds)
done (took 5.070342092 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.201886895 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087493008 seconds)
    (2/2) benchmarking "String"...
    done (took 0.096935256 seconds)
  done (took 0.88594059 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066781241 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127448188 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081575585 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068914808 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067419333 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.081830673 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067877314 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066498119 seconds)
  done (took 1.272179415 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075092566 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069998947 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.08597831 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069229295 seconds)
  done (took 1.008657156 seconds)
done (took 4.156134192 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.898289162 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.236796354 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190627375 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.452913275 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.149169605 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.188952136 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.657975916 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.308854459 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.210609042 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101347224 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.105113606 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.379450566 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.1078768 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.666030304 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076000015 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.107360815 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.161711528 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.430713173 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082034801 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08344475 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104471724 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14311377 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101534813 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078747978 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.16979261 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070920363 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.148519723 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096241849 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069089668 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.245123069 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190024478 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.679717302 seconds)
  done (took 10.437103366 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101275028 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.117867302 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070169583 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140257518 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101553576 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087164401 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07218709 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083623881 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092278706 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.160101779 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114580644 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.106297482 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082220744 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071478992 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.101654904 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213281315 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.109967133 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085469215 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087961323 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076282228 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12246538 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083863554 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.094240288 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078463296 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.151869656 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.194521469 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111181312 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.111825521 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069647576 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081760104 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.131684785 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141634275 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066613331 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082529702 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.140500223 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.111017579 seconds)
  done (took 4.569827935 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.030052755 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.161748155 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09268169 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.152787556 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086329373 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110798363 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.084027132 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100301777 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.246940304 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.070643748 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.460234991 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129303051 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102301938 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068747101 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084692225 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069594103 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.534918445 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.146215144 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104629756 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104403812 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075119816 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087704497 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.359845757 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069351994 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068183408 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086112007 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061716467 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146499899 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070263562 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.235920256 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.090890987 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088790668 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103387144 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.199251066 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095595989 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124669838 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067567627 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083591885 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.171006321 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07652893 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067087701 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.106589148 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.13119901 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120324343 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.105468592 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.086231472 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070223133 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.18343723 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067906094 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100409082 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.868095229 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.067966387 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.166110655 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078260313 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.082758922 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.268950167 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.103257382 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071753767 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.082434454 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.236072497 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.163592042 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068692544 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067624282 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084185189 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069582927 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.38233302 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083872993 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.658804428 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.073083314 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077389307 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086437611 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06766213 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08948337 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073390157 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102076525 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068238659 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068580531 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083551813 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066570751 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.085332051 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086135478 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.20447815 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083837926 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068284784 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06591137 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103179131 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11114855 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071297501 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066079636 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116803121 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069536042 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084903011 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.102867362 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085750531 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.10039756 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071415659 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129610208 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068150042 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.13212796 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.06761656 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065269742 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.118949945 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.08691929 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101180389 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.093891073 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068936339 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.153294058 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065697307 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083015003 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067760198 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082722415 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070093621 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.06883543 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081896779 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.082083287 seconds)
  done (took 20.906368956 seconds)
done (took 37.65324574 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.291442546 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.092285972 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.092265188 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075726054 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.092116211 seconds)
  done (took 1.431530765 seconds)
done (took 2.194308517 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121195327 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117519266 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064743136 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112997699 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06517946 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.118124295 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114634671 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082588851 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118282298 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065169231 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113134263 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06602609 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064866954 seconds)
  done (took 2.01077956 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083751417 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08557211 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086803396 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082514771 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080160828 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083598664 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081123785 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105016844 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080866654 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089217781 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065916796 seconds)
  done (took 1.681977227 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083724519 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085327838 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086004778 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081925096 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079560889 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082728276 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081362561 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103010808 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082165581 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090464516 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065116873 seconds)
  done (took 1.68112239 seconds)
done (took 6.123679349 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079527309 seconds)
  done (took 0.832227983 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.693900228 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.54866373 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084878874 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.135747394 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.222026772 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.153876496 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.437201547 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.109994261 seconds)
  done (took 10.312771269 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.103433371 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.089985382 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071271866 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.089080643 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070083057 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.087057596 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072677848 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071115362 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.08596251 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07032459 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.08882978 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072701734 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.087911065 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070621302 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070043063 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087842952 seconds)
  done (took 2.109435657 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094412309 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093706333 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.091837129 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076205879 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090465675 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073998199 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.093257748 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075591064 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088125954 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07355355 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092291604 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075524486 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089109651 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067375081 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.092400416 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077474158 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088314395 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076616503 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.092099752 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076735099 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.091328536 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067015258 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088173148 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076017839 seconds)
  done (took 2.865675928 seconds)
done (took 16.879636765 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.131406442 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07699342 seconds)
  done (took 0.968236165 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082149895 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09783948 seconds)
  done (took 0.947036256 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083307894 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081903155 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090753214 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094168518 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067632506 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.082489687 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103063424 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067504556 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082428125 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067729375 seconds)
  done (took 1.58881967 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069568686 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.0938881 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071412496 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097538273 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07501935 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.082044062 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073960538 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085281403 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079105261 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080201559 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073018828 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098489009 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073230316 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.10145694 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073899931 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08485712 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.087519275 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06865184 seconds)
  done (took 2.238973583 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06706673 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068857482 seconds)
  done (took 0.906106595 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06832133 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065260832 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083120304 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067990571 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079319858 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064371327 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080182911 seconds)
  done (took 1.278129986 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.399255956 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109953596 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.241389398 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.089069815 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104241266 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.261380406 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.083904498 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072755542 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089158203 seconds)
  done (took 2.258944122 seconds)
done (took 10.953181504 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080313367 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087899916 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111353367 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.416978587 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107202955 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067333163 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.132548964 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.218269742 seconds)
done (took 1.994957112 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.125188186 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.612288169 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.403228818 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.213297587 seconds)
  done (took 2.007190016 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.378581204 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092933295 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075044623 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067965487 seconds)
  done (took 1.394071058 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067170742 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071166517 seconds)
  done (took 0.916855898 seconds)
done (took 5.219396482 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067568844 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067924603 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.081240745 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067427753 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.065895051 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.08126616 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.087652482 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.085143223 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067428676 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.067343756 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.084031153 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070590338 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084910535 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065194854 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065486328 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082725488 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065759706 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065401174 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080785533 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065783523 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065292273 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083068615 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065120138 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065177765 seconds)
  done (took 2.560615082 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086395429 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084203257 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073723516 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089046317 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071963919 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088890286 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073176965 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068271313 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088914595 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070596299 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087231104 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072380465 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085114422 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072042845 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085669802 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07148743 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.089233244 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067974305 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070738227 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087425536 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.076479313 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083694726 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072125447 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087618749 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072127069 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0876659 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.07011464 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083836649 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073081359 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087228013 seconds)
  done (took 3.159681171 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072300107 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065138681 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08220005 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07207295 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065544504 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082396819 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064753415 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081638824 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066416628 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065287365 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082789587 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064947815 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065881675 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082396727 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066490101 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084618493 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081463888 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065712839 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081197784 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067055768 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068758295 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080918921 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065512394 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081474612 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065313574 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065369371 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081590812 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065060122 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066175402 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.081064385 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068393564 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068910305 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.081221733 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071917405 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084883633 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06565768 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069775863 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080336172 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066518029 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065902563 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080459281 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064989012 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06474208 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.087404428 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065642061 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083616491 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065654106 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066576844 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.082522395 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068639824 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08095669 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065753439 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067154916 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082572103 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069502304 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.065973577 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.081960081 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06482015 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082231999 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065801701 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065053733 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080471176 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067205823 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066132025 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.095801172 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07231195 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.082221002 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067096726 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066954488 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083643988 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067291432 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079218121 seconds)
  done (took 6.038396001 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.118624661 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092507151 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083748475 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067829715 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081151168 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065880936 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069124343 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081629024 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067906755 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087417606 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066109208 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067102265 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083732405 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079238804 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082548827 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06764566 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087069649 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063936655 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065896421 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085459085 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06604117 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085207455 seconds)
  done (took 2.500789475 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.184986362 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089224198 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110076245 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091470731 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085819815 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074599948 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071796544 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087741223 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07212167 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087041976 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070554927 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087444121 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069598158 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086233326 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070313202 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086111952 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07166678 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08591689 seconds)
  done (took 2.366170988 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079301757 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067702635 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106577794 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067670344 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084273018 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071098004 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08941464 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076272599 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.087209246 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068068983 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09190236 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071007362 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.086578621 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067990762 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070202662 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084159078 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.07059308 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084442895 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076493845 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088309525 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073154953 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09192673 seconds)
  done (took 2.538868301 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081616474 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069506486 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.102250895 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087471274 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064671577 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066950698 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090088104 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068887985 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.089556668 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070373757 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068319779 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.0820611 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.0728485 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084363637 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.0725155 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084018767 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069659202 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06806503 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085825226 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063904696 seconds)
  done (took 2.329622639 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088347727 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084890343 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069484595 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093679373 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06902567 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085037363 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076663903 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085205069 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069208881 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.109396619 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069169811 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08496025 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076788888 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090003361 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069263009 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093032151 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07658703 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093306058 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.0695013 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084572824 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109800744 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.178307628 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092817177 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068813885 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084564662 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069186875 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069515532 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089685976 seconds)
  done (took 3.192527636 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067843326 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068072435 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081585282 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066003811 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065781218 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081475528 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066162933 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06511442 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08471838 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06598561 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067605118 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.083492468 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067966509 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.084621508 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068030794 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067980997 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084092292 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065486264 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066341128 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082046486 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068299398 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067512187 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084209625 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066235717 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081559222 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068165479 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065811726 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082005902 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067836954 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065627422 seconds)
  done (took 2.956805571 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077519029 seconds)
    (2/2) benchmarking "in"...
    done (took 0.092634034 seconds)
  done (took 0.964099056 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065721839 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083188193 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081725365 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071445652 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08849946 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069112348 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.093122897 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072292628 seconds)
  done (took 1.415361172 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082320471 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079403197 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086228708 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079698627 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094933412 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084260119 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.153729726 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085743365 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075363447 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082714665 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081950445 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067416323 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.09107495 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06846502 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.089837788 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073536624 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066860193 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089202271 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071868701 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083349262 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070135351 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092850858 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07106815 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065707825 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086242455 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.076696148 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095583739 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069882958 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087958781 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075455944 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073550505 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.07920471 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.069146002 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.085163319 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06684887 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094181708 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083314348 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087360896 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076355001 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069834016 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094576713 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063831186 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.089037156 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074988441 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094567725 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069357128 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069149427 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080210469 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065639573 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086486558 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064025021 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068282726 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079870506 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074952872 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088275023 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078943842 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069432883 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.085272562 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070934447 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087716528 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074356276 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086227085 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070242415 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068429649 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093359373 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072923785 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09298435 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063813654 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063257034 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082770337 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077469468 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106065138 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074243928 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085532098 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070187318 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.08259505 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071898422 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069748244 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090032411 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074664945 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084898664 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073932125 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091501896 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068109908 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070350731 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092261575 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066808037 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087199195 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065922153 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099764658 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067391953 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065322489 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081723483 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078656882 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087446622 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068438951 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082239711 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074791948 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063965063 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084957565 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069676936 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0852912 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079076055 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089719022 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073844333 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.09383866 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075845453 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068911628 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088269176 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065707721 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086165484 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066728665 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075127783 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.07949972 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071099533 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085353284 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068578789 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076440047 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083097257 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.06881283 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091833745 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073988665 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.084484825 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065083856 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071016028 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.08488032 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072604341 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09171088 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06791792 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06385437 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080450161 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071737679 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.08449444 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071663964 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089726799 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071490456 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063716484 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083264431 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072847444 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09328893 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068575152 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068115125 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.090047557 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069417824 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084732549 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075381201 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08677888 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067886192 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073598004 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086006167 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06428475 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08913395 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070636966 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067076848 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088194968 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07117827 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087018578 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069179125 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066325959 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.090122403 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069203142 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083623185 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068376617 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083589849 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07833447 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069652407 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080215442 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066071608 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091680578 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066470528 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06845358 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083879879 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070948812 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.08522372 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066804434 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067755634 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086899591 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07921679 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089366585 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069853473 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089535023 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078846916 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084881437 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070458582 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068126694 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085933193 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068823673 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092935217 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073263203 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090016568 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.07046919 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064926887 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08998678 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075367524 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083634422 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066641324 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067131118 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088848695 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074016209 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088330863 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069570193 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083129681 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069221881 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071553866 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087930338 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068468008 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083468046 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072241722 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067558218 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.090799477 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069226369 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093853005 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071183413 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080866151 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.0718174 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083105314 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074131202 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064207355 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082540667 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067339453 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069237665 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084616804 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071741867 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079322618 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075158454 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091787137 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067608251 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068328653 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085196088 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075110962 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086768624 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071691536 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071186809 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090740898 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078964603 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084358182 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071555359 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095187887 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068011833 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062537951 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090571927 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067072104 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084564906 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067169831 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066777047 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087940107 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077288623 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.0912805 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063164597 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087464678 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066655285 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06768051 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080946382 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072856101 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071079392 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.085518121 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075187518 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086209311 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068425651 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089104501 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06824416 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068720679 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08688689 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07068621 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086171956 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070876943 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06680227 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088101731 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06760617 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082960782 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070160107 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06824703 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084962637 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073529056 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085161842 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068719119 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069795943 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.08512998 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068976393 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085603701 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067426896 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070967141 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085856367 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069616476 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086832439 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063864029 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074374825 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08445021 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075180604 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085515611 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065162577 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.090228188 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070899767 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072699756 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.085762515 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069183051 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.08613341 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068461238 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069572639 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091270279 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066189062 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094768006 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07593616 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08509096 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070493069 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068130858 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.085918242 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067595577 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.0859219 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068608587 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067976875 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085632549 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073559822 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087845083 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069111777 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070025202 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.087170968 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068477508 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086536318 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06358853 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06745211 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084488579 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068830842 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094471833 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069421631 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.083877567 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.0677918 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070032943 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084692753 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06562242 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09241788 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077350875 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.08639175 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074434725 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066676374 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086604049 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077581419 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.080341036 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066463343 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06579184 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.0835071 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074627685 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.0858929 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077299452 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.08410752 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067039128 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066150872 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086204808 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067118592 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062979731 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.083135175 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071867861 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084262609 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067292298 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068648927 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088137309 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069605135 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094118685 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068381001 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085769677 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068624358 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065937572 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084485839 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067891907 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069978038 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.086648337 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06626096 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.083401071 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.0684777 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069287039 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086679341 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068622844 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086513575 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075050394 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068133911 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.087832947 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071808208 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.082876984 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071436842 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068640736 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085486187 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067807228 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088819267 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071478973 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086630422 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077241921 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067960865 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085766698 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069194505 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083604691 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068395662 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067556511 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.085434989 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067177698 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.086857455 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075194486 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065912171 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.08826115 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068134252 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085594315 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074296497 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.08628189 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07079565 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07556152 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086070085 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069792455 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093284437 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072052026 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088093037 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069616033 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069534179 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09100085 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067775997 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091823213 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068616779 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068768599 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.08645953 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06616991 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085214462 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068245507 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067444644 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090821529 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069308377 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084173544 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067263732 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066375339 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.086154807 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071852902 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092574396 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070766059 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088500467 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063390783 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06661989 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087339756 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066465815 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069744359 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.088665444 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073372755 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087812722 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068720036 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.084004916 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077070165 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073305122 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.08873644 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066003229 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089104167 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069141351 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070148784 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086421673 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06874828 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086457929 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072248046 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069575121 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.084722562 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07599553 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089135918 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069630587 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086340942 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068796218 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068192327 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.08141131 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069737553 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087302572 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073526926 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070410443 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085923441 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078226446 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082946077 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069450556 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071457794 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085612318 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072420522 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080957223 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070207366 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08647969 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070466799 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064461727 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085213953 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066779104 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070556845 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.084833936 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063631443 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095848482 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077318894 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088594597 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067553716 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067235703 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.081817609 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064257965 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084722534 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069557472 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069507796 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095321582 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068057822 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084507009 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063906476 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069079622 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088598014 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071541613 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083026302 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063929918 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067741538 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088470378 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07338327 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084244332 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068478436 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071844372 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087394938 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066947127 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089517375 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065852817 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071257965 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098428175 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068846936 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08593892 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074126644 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093344444 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070178399 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063852519 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.086260025 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071150393 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085791009 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069758198 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087089025 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082897719 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088107203 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067398025 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068201144 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.087539404 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068232589 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093103624 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069408882 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070003217 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090480783 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070538092 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094302358 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071170487 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09268774 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071399721 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070547806 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.08596432 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068264967 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084388544 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067376049 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068850963 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.087563142 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073593611 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.093884946 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06804494 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095786641 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077194125 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088184342 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065577636 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067002381 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085258069 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064426585 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069113056 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.084543592 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066483886 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084287887 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.068561107 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068248034 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091043564 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069532844 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087025252 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068636049 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062545091 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.088054224 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070904682 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086420857 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066142198 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068993846 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.087020079 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072428932 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089306754 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067009697 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069302701 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.08816601 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069763674 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081637422 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075201516 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0678366 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088562624 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068086715 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086768042 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069508129 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071222318 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09145983 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069946786 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088005285 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078260155 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088645565 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066529173 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06653307 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090571011 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.0673391 seconds)
  done (took 46.898979841 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108318334 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083433358 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064246704 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081791472 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076428206 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082927055 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064123901 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064778169 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082545563 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067779465 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081132734 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064082224 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090763889 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087560999 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093638715 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068435606 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08205121 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065614482 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081311278 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06540053 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090897466 seconds)
  done (took 2.489080666 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076239465 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.090941131 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074929564 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095579938 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069272238 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091539171 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074685641 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090306317 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09608293 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069212992 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.095992413 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072992042 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.086340528 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069119992 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086760732 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073608996 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.096002397 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070571657 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.090402746 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074464497 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090016155 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074886349 seconds)
  done (took 2.648072613 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069261187 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067529712 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086295087 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063763195 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067184516 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.080915254 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072299436 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083298856 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071770374 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.074051421 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085041296 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066991518 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086774029 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063273105 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067687813 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083439245 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.132269216 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071840304 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067333974 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.087984112 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063639839 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087787262 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064216253 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063129976 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.084015571 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072210998 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086625354 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066408556 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067145841 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084799592 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067910106 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083463526 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069411154 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067904091 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084524083 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067205045 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.0670829 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.08602316 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06393335 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.0832929 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068004973 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064740914 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086512054 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069272927 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065035593 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.084059727 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069575531 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.084824113 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063291307 seconds)
  done (took 4.529207679 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.087551368 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.130138497 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088469335 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091535691 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.102381824 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.093769779 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.07160464 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111223865 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065978399 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085994416 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083785285 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.104414913 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086370767 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073818143 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07100787 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086459557 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068638627 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084716221 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072339365 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085564809 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072873244 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.092441285 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100639498 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081399857 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089416141 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067228486 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085408724 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072499552 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098319555 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072979551 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.089979516 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07460455 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.101358826 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.073113645 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085242104 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070740731 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.103102552 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.068114698 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089101926 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06612627 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088379398 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073195763 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.09272926 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085248629 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087039288 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073255987 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086810621 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065416323 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.098735392 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071175188 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.09460961 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.100626476 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072523002 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.086168363 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073181887 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.100528588 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068089443 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084174916 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070758647 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.097791441 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066526689 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090114423 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082692152 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087569132 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075659721 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100411155 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073243153 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089993046 seconds)
  done (took 6.708349227 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077735596 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092101113 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082565475 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10105877 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093497863 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074663785 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093109674 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074642391 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092403605 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080504644 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093308708 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113380075 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070294886 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094653566 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075331752 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092800007 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074168531 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092640514 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074229169 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092390681 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.09229656 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082268058 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09267411 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.10030842 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104063299 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08702805 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074818725 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.09280679 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082731108 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.093173145 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103855445 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075044625 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.092489653 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100767645 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.086555973 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092132177 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068294532 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091960844 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074751903 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093163975 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070238251 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100656417 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07440616 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.08800616 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073931163 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.092777725 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.100572483 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.086201816 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095520639 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097952407 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074666972 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100679005 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074854795 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09364046 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.099955436 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.108077903 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101284963 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10140213 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075070546 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101176814 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099979372 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.108266711 seconds)
  done (took 6.391821015 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089690131 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095238605 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098143036 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064062804 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066294048 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090620876 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066616982 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084301946 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076658956 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094784046 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079863708 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08987685 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075322485 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098662268 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089443325 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075712543 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089871779 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071598055 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094505776 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072663506 seconds)
  done (took 2.521269622 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077948028 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103905471 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069126061 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073120935 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.090221227 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072726724 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.089555976 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070925971 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087442051 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071668359 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096167111 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078868692 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08722582 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074394988 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.095944452 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074274057 seconds)
  done (took 2.1716047 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.079873795 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.097540825 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082573162 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087146739 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06657145 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083662748 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067992779 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063955919 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.08351382 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083382972 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087593857 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070601349 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.086517408 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066896852 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064678977 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.0898808 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064639474 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.085146764 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069116807 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.100856347 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079531667 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.084565888 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069156514 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068541759 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.087921032 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072710278 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.086948794 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06616661 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085213812 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069162965 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086802802 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076148978 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083585618 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066628803 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.067077609 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083699506 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067927163 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086987859 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071163399 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06728922 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085797484 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068503398 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086337427 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069416256 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083168298 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068497476 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06488481 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092825341 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066112069 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086391051 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068222736 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.088621257 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069621443 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077830695 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090536567 seconds)
  done (took 5.138163723 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0816745 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07115182 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083078609 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06627739 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089255148 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070757795 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070893004 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089635108 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07010802 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084600747 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070752241 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089081349 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069811596 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071097568 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08847855 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071795612 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082607098 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070530449 seconds)
  done (took 2.256819448 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073472166 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068233204 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094450147 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068032889 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086887891 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070986438 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063952603 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086645485 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066703941 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.0862543 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068831101 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069885675 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085331101 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070388101 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086976787 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068419426 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070803191 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085611299 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068773632 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08316224 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071478075 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066772113 seconds)
  done (took 2.527716073 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.074191918 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.095250552 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.163814972 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.108638339 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084974569 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.100893443 seconds)
  done (took 1.495849683 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092196708 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100141976 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069653716 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108227805 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075412121 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089253163 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070365685 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088449809 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07861364 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101661014 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070113098 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097666031 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097506171 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078001117 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094726422 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075241228 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088848415 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069843116 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087901703 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106988512 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071123604 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096750881 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070690015 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087971589 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070354243 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096828587 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078852442 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102052947 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088136276 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078340113 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093762131 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071050838 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097789181 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102314188 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071904667 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096624958 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070273815 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105686673 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07515333 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097149032 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070214393 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094704477 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096746487 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075748057 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096864095 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069963013 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093388007 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069020759 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089523549 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112301108 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075635175 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09705384 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093328098 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078962131 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096995195 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113453447 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082999467 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097135735 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094873047 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084252347 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096810959 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075207356 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097822799 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101708425 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075529377 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097307645 seconds)
  done (took 6.655494037 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086125178 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107037224 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070889328 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10167909 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097533109 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070135303 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088313557 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071271684 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088914497 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070194592 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129872059 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070676783 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097902805 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097231628 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070437342 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08881723 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070464303 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096281932 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069678578 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112494142 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088780731 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078765221 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096759175 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097060201 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082891897 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094995744 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070371245 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088825927 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070335315 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088634728 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075183726 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08899772 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096549551 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069926483 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096583157 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070772363 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089075528 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075280181 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088466573 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077143043 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097485662 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106725739 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070912512 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089037929 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082629105 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08944513 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069123188 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088512565 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069889531 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088249418 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083397408 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103538594 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101880315 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096865128 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070838713 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089104073 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07106617 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088819293 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070905517 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094104307 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078369072 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088867451 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113928814 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071881511 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089014249 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078633872 seconds)
  done (took 6.552291819 seconds)
done (took 129.786451881 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.201763908 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185297022 seconds)
  done (took 1.250882849 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070230226 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09661814 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098988118 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129477217 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087444201 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101938949 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119496799 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080774881 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067925632 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087157657 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068366686 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088592515 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133339332 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068378134 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088289263 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071009622 seconds)
  done (took 2.328785273 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103367804 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.196834533 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110644223 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06735796 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10031277 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079846933 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086264608 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078269543 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094982879 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067373387 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079117257 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096528587 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066481772 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096135894 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076048551 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.099321783 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067334173 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098779506 seconds)
  done (took 2.540002967 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104884288 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142669787 seconds)
  done (took 1.122677707 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.199794156 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.123884183 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.20277737 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.414115871 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.204747126 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.277071229 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.172746765 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.172076637 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.158403463 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.169393573 seconds)
  done (took 2.966196933 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099886749 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170769731 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.309793531 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.138043711 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.086366087 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.116230663 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.138535964 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.090287556 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.101804186 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100565616 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082029621 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098445078 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097871488 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.09568199 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076319626 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098404714 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121634201 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076293431 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078112262 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.097322062 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117952861 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068147718 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076575114 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.095538828 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07845078 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098872648 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066952303 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087380045 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076681564 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095633558 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079974957 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.113894377 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.09790304 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.13021723 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.082798045 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.131717331 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.099086746 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073530449 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.095768577 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074228899 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.098198297 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078069132 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104013116 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078756004 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087168457 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079417779 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.086663258 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068509707 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.100795521 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.078882274 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099596465 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080782943 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.130621143 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.098165172 seconds)
  done (took 6.260422506 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.742760193 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.11242942 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095392052 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.802610935 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090662645 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106181471 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.708092442 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117439792 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.208842713 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.761236559 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.090467994 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099245126 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.180322941 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.213873642 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.900881821 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.282688518 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.631593986 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105078908 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109885951 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.132779611 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.1401086 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.176352774 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.149692893 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.438239259 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.07657839 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093162554 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.13751836 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075374319 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.138619921 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.106524819 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094785256 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.154455422 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.22511539 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.155318162 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.09691806 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071123596 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091423193 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.149544846 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.220222067 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.189525767 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.15782419 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069787113 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091241359 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.139152553 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131121317 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069846501 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139790463 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.152788083 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169648463 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074426962 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075683185 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.162080377 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.139302708 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.143830039 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.101924513 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.263434452 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.281171541 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071954709 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12034843 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105462929 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.216200898 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104816541 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.199386851 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141315621 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.166130829 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091797085 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.732787757 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.147272309 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092845451 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.076322128 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118944558 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074297321 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.158863992 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.123068597 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.380817647 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.162837074 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075242587 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070798932 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.230734064 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084817741 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091801282 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140152031 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.077062196 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121138052 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.142622044 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.16194551 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.146010522 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.206707673 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.14142924 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.138906488 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095307188 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123608044 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.076496322 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.19031959 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.192396091 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.140348514 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.186195745 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.138858581 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162695405 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.146641042 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077100641 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.149918334 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119992423 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100490038 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13855806 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.189690038 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.10233686 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.104730429 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072977625 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.16119827 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.104448713 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107028275 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.13844263 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.147842829 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.478235965 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.148677198 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068816971 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107859292 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139045138 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.141019832 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096362488 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.211833242 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123550517 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.146414172 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121126957 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088673276 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.09974054 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.161747603 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080457519 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123006681 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.137882731 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098259518 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.214789172 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.167043268 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099008789 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.193369776 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.161116956 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095405164 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.148662209 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119381678 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.14575851 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078622086 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136710209 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09734194 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.750110105 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.163474605 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121513988 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07487183 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.1755182 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071138406 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10465746 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.08373861 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.089455494 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.728300642 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107341503 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079451805 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104355448 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074189739 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121510709 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.156895549 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075707485 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139752208 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.198764203 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075959713 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118685507 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.104111178 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.140661598 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.075899944 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.106289272 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.103480221 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.085225602 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122197031 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093440364 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084440344 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.147051777 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.141068606 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.191133794 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.538580068 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093126609 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083155728 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.197806813 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091779423 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.24164377 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136182387 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.196274622 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140215 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.101177752 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.263983446 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.142248123 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.176635445 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106914247 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151592329 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069450911 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.156835853 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.143085352 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071879981 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095452162 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.141871898 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.145027648 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.142244907 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.937468028 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071789641 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.202863978 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.090352925 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.150864402 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075834474 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098909779 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.260741251 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072445574 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.144670198 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.141171607 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095452409 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.083289578 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.70531305 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.084657342 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.159161737 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076515854 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.192345625 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.143804792 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.136964995 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.138033846 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096862777 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.139450897 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.186540945 seconds)
  done (took 40.357610729 seconds)
done (took 57.699548208 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.25738462 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178342958 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.241315009 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.144460053 seconds)
  done (took 1.792402001 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.144022953 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105094569 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.11745356 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.086992193 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.104428366 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087149288 seconds)
  done (took 1.543482876 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.401642462 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.26427673 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.23054268 seconds)
  done (took 1.79901622 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.282009438 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.213193785 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.445417258 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.297187249 seconds)
  done (took 2.243452955 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.176080025 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115263186 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068570076 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.107404805 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.158983112 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.25202283 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.128746932 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.192510798 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080559649 seconds)
  done (took 2.22725793 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.196806935 seconds)
done (took 10.704799897 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.188844626 seconds)
    (2/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.273121742 seconds)
    (3/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.250358254 seconds)
    (4/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.20075222 seconds)
    (5/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.21395305 seconds)
    (6/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.091669142 seconds)
    (7/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.102260861 seconds)
    (8/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120879402 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.105559331 seconds)
    (10/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.21720865 seconds)
    (11/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.216049639 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080215444 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.099561177 seconds)
    (14/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.21158391 seconds)
    (15/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.175315383 seconds)
    (16/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07834493 seconds)
    (17/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.19194929 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.16068201 seconds)
    (19/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.082544631 seconds)
    (20/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.263627951 seconds)
    (21/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054251915 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.097623652 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.123612006 seconds)
    (24/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.097055404 seconds)
    (25/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.078357639 seconds)
    (26/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.179737982 seconds)
    (27/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.07826693 seconds)
    (28/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.19274816 seconds)
    (29/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.159389651 seconds)
    (30/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.162450961 seconds)
    (31/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.124981599 seconds)
    (32/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068603776 seconds)
    (33/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.113028421 seconds)
    (34/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.200577983 seconds)
    (35/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.112188404 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.096888832 seconds)
    (37/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.187789144 seconds)
    (38/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.163703157 seconds)
    (39/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076303573 seconds)
    (40/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.105686409 seconds)
    (41/309) benchmarking ("sort", Float64, false)...
    done (took 0.148780122 seconds)
    (42/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.095576428 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07525439 seconds)
    (44/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.074590473 seconds)
    (45/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.073765041 seconds)
    (46/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.07592281 seconds)
    (47/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072459644 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.156811495 seconds)
    (49/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.100662228 seconds)
    (50/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.074446757 seconds)
    (51/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.182131113 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.068024866 seconds)
    (53/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.053105227 seconds)
    (54/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.139495199 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.131700692 seconds)
    (56/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.170552119 seconds)
    (57/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.077113904 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.096638294 seconds)
    (59/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.159629298 seconds)
    (60/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.098155969 seconds)
    (61/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.104976631 seconds)
    (62/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.210669432 seconds)
    (63/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.098247555 seconds)
    (64/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077481416 seconds)
    (65/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.091776932 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.06785376 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.0752839 seconds)
    (68/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.116021403 seconds)
    (69/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078536244 seconds)
    (70/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.088728908 seconds)
    (71/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075886631 seconds)
    (72/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.114552619 seconds)
    (73/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08791024 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.109903909 seconds)
    (75/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070974175 seconds)
    (76/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.052388618 seconds)
    (77/309) benchmarking ("sort", Float32, false)...
    done (took 0.150339119 seconds)
    (78/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.084281319 seconds)
    (79/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.174379554 seconds)
    (80/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.095858575 seconds)
    (81/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.053735248 seconds)
    (82/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.249463289 seconds)
    (83/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.170336657 seconds)
    (84/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.075477208 seconds)
    (85/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.099796399 seconds)
    (86/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.109516702 seconds)
    (87/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.100073397 seconds)
    (88/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.114237237 seconds)
    (89/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.070439484 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.089017931 seconds)
    (91/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081282893 seconds)
    (92/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.199891365 seconds)
    (93/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.069750339 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.118254886 seconds)
    (95/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.127219119 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091517096 seconds)
    (97/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.103249216 seconds)
    (98/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.077224735 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092504408 seconds)
    (100/309) benchmarking ("sort", Int64, false)...
    done (took 0.08908263 seconds)
    (101/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071829997 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.131958438 seconds)
    (103/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.169026302 seconds)
    (104/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.133202042 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.158178836 seconds)
    (106/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.085271487 seconds)
    (107/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072078502 seconds)
    (108/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.097072906 seconds)
    (109/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.098637712 seconds)
    (110/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.192054369 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.133685717 seconds)
    (112/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072544918 seconds)
    (113/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.20188724 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.192312706 seconds)
    (115/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069113656 seconds)
    (116/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.073155703 seconds)
    (117/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.160574588 seconds)
    (118/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.052825286 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.113401984 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.114844436 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.096631533 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067619675 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.119486595 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.095581261 seconds)
    (125/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.073386486 seconds)
    (126/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.06819979 seconds)
    (127/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.100037791 seconds)
    (128/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.168375218 seconds)
    (129/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.052930579 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.089204337 seconds)
    (131/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.06981089 seconds)
    (132/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.076691352 seconds)
    (133/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.131878122 seconds)
    (134/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.159004506 seconds)
    (135/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.066605195 seconds)
    (136/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.071284789 seconds)
    (137/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.085704543 seconds)
    (138/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067548147 seconds)
    (139/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.123697635 seconds)
    (140/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.05441258 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.067484125 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.116104996 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.156150482 seconds)
    (144/309) benchmarking ("sort", Bool, false)...
    done (took 0.135968789 seconds)
    (145/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.098383076 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075191392 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.109425269 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.139015964 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.076975879 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.073265043 seconds)
    (151/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.076508029 seconds)
    (152/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076176958 seconds)
    (153/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075800969 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.123757646 seconds)
    (155/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.054735185 seconds)
    (156/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068741554 seconds)
    (157/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.097413465 seconds)
    (158/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.16235723 seconds)
    (159/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.069625645 seconds)
    (160/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.053142423 seconds)
    (161/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.074725489 seconds)
    (162/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.149856441 seconds)
    (163/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.196157401 seconds)
    (164/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.071109917 seconds)
    (165/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.088738522 seconds)
    (166/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075943413 seconds)
    (167/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053310117 seconds)
    (168/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.172403077 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.0665734 seconds)
    (170/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.085957893 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.094377939 seconds)
    (172/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.083234773 seconds)
    (173/309) benchmarking ("sort", Int8, false)...
    done (took 0.142789206 seconds)
    (174/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.091850694 seconds)
    (175/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.055458418 seconds)
    (176/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.09701397 seconds)
    (177/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.08075594 seconds)
    (178/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.055406955 seconds)
    (179/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.094277039 seconds)
    (180/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.053695577 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090557397 seconds)
    (182/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.076591467 seconds)
    (183/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075088481 seconds)
    (184/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.057467593 seconds)
    (185/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.077945076 seconds)
    (186/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.139220667 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.200856667 seconds)
    (188/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.095599325 seconds)
    (189/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055814563 seconds)
    (190/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.053814165 seconds)
    (191/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.090768121 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.093671379 seconds)
    (193/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.196064873 seconds)
    (194/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.111747783 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.120248081 seconds)
    (196/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078945152 seconds)
    (197/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.095740065 seconds)
    (198/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.150265139 seconds)
    (199/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.096990146 seconds)
    (200/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.075002688 seconds)
    (201/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.193703192 seconds)
    (202/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.054778303 seconds)
    (203/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.172108579 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067891011 seconds)
    (205/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.055444003 seconds)
    (206/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.099868244 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.175066384 seconds)
    (208/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.290635021 seconds)
    (209/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.159224045 seconds)
    (210/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.054706162 seconds)
    (211/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067932572 seconds)
    (212/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.088951836 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.114535786 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.088992021 seconds)
    (215/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.170989748 seconds)
    (216/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080463123 seconds)
    (217/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08381927 seconds)
    (218/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.0748762 seconds)
    (219/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.06802083 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076693387 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.097778722 seconds)
    (222/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.136924747 seconds)
    (223/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.076193255 seconds)
    (224/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.071700658 seconds)
    (225/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.054070677 seconds)
    (226/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.087955724 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.125942891 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.112739011 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073860845 seconds)
    (230/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.053986453 seconds)
    (231/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.088856786 seconds)
    (232/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074978704 seconds)
    (233/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074929965 seconds)
    (234/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.095246235 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067192123 seconds)
    (236/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.06404156 seconds)
    (237/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.114197969 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.157833825 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088181519 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.163396651 seconds)
    (241/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.052929117 seconds)
    (242/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.053184632 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.088963951 seconds)
    (244/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.054148461 seconds)
    (245/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.101065583 seconds)
    (246/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066925926 seconds)
    (247/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070684003 seconds)
    (248/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.092755436 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067544033 seconds)
    (250/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.138842122 seconds)
    (251/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.05349532 seconds)
    (252/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.11365726 seconds)
    (253/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.053595708 seconds)
    (254/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090599549 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.092225189 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067491684 seconds)
    (257/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.053753379 seconds)
    (258/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.076539908 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067365119 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072943125 seconds)
    (261/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.074757287 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093223574 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.096971657 seconds)
    (264/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070722628 seconds)
    (265/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.052711541 seconds)
    (266/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.085015757 seconds)
    (267/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.052780596 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094263481 seconds)
    (269/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.076292289 seconds)
    (270/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.054271966 seconds)
    (271/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.053415613 seconds)
    (272/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.089758962 seconds)
    (273/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075690559 seconds)
    (274/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.055801421 seconds)
    (275/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.074834324 seconds)
    (276/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.169606878 seconds)
    (277/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.091225287 seconds)
    (278/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074095568 seconds)
    (279/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.053070262 seconds)
    (280/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.157915863 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.076036765 seconds)
    (282/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.093405812 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066928276 seconds)
    (284/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.108838192 seconds)
    (285/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.096514102 seconds)
    (286/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.05486801 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066020125 seconds)
    (288/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.07494024 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075736891 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.088872574 seconds)
    (291/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068617928 seconds)
    (292/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.169414074 seconds)
    (293/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070398359 seconds)
    (294/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.052872091 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.094712438 seconds)
    (296/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.055821596 seconds)
    (297/309) benchmarking ("sort", BigInt, false)...
    done (took 0.210624859 seconds)
    (298/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.063460291 seconds)
    (299/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.097887246 seconds)
    (300/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053131843 seconds)
    (301/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.05550002 seconds)
    (302/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.091333765 seconds)
    (303/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.053866386 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.144128001 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073373458 seconds)
    (306/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072606112 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.138397495 seconds)
    (308/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.069333442 seconds)
    (309/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.112144843 seconds)
  done (took 33.421519363 seconds)
done (took 34.333321765 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082522457 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116735267 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076361405 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.118130161 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081903539 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102410543 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075088046 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.101916458 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082370681 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.10557326 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080167204 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056005286 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098173421 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077181305 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098370032 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093434812 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.102097653 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074846298 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.097777161 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066974177 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075999357 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088710273 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069614662 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056605452 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.103184144 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075384502 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.096819494 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076747525 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067197212 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.089407008 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07079967 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074527953 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.089093741 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081371834 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095763594 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076292598 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.098374932 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078236947 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.07062108 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089106539 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075371057 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067234672 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096778176 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075892599 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.094938093 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073080677 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075914137 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.103007675 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092158018 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09169805 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075638434 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.09983394 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078518323 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073993668 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093187019 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075602166 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.094209559 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092607478 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.097479469 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069359311 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07555489 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.097975375 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072590157 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.09704728 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074987239 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076637122 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099866819 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073405679 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098061188 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072535535 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067717329 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.09720578 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071455478 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.088814909 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077113637 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079027461 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.088643588 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07363817 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073725483 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.09521129 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067292916 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091025686 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069139022 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073816637 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091649301 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056895804 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071815954 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095417148 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067598623 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075430979 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.09522857 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074179963 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.090479817 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078383072 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067651467 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.09502085 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068235652 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067153631 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.091256125 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072312149 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.088886382 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06958623 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.0772229 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.090793944 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073497167 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081487815 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089785448 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073913728 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.08907371 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067171905 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083693101 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099846566 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067565524 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091450344 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066939124 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075735398 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.089021082 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067304639 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067220862 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.089381958 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07354249 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067374169 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091909261 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.074864371 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.102713935 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067366492 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071679613 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09194484 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06795523 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073151328 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.08942313 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067613422 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.091262218 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.064701801 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069968903 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.08974245 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07532566 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070030723 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.097516132 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06996509 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097861652 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071690606 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073576746 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.09510429 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.0670861 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060985437 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091403678 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069599139 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069585726 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.089400425 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069609295 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066803021 seconds)
done (took 13.372260115 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068215594 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.169510704 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.126571285 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098047904 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.111933421 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067870913 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.100842726 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.104720651 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.092272313 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.127915011 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089025301 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109752013 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.116360703 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.090165275 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068481101 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.07194466 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.091672854 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.090347212 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.125725669 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.110755563 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.117832906 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.089684135 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.121575929 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091686229 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.112723594 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.095216959 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.09037957 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072012819 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.093452738 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103662435 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110202516 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.07089154 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068337081 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124001238 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.118894864 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086770253 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.089843265 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086723651 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.089791026 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067960941 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.115421479 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101106907 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106208086 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.08296225 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.096746799 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070738306 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.091085309 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087485782 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.114136321 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082330089 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.111970935 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.135111749 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071204528 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.106561991 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067877524 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.11146323 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.106478761 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070510972 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068250363 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.093344505 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067704466 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071454695 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.111854657 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.116523367 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072108034 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106774929 seconds)
  done (took 7.330968586 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085119891 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.117959923 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084889218 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108413219 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06806676 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068271998 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.090805881 seconds)
  done (took 1.593041634 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068558983 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090002509 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113427137 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091047161 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.110017729 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088753208 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.10140377 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068484398 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109192568 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069593247 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089425053 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129028532 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069693536 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.098157135 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09252374 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.09101442 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092069266 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091565278 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072807795 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.115139608 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072122136 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.111953746 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070437344 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069359502 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10573862 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068851355 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.139309893 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074093984 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092608213 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071872348 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067682108 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.14063063 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105725846 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079023696 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068747268 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106402799 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084187297 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08977994 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084719398 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.096704535 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083190044 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069509724 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.092856733 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067462849 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073638242 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.102150434 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070478607 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.09179149 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072046681 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088977949 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.09250888 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08265529 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.092204936 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073485856 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070392599 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097805466 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079264035 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.092077777 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089866661 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070755887 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.10830187 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085614641 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.106117021 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085423141 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094893828 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084118945 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.106032782 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071763715 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070796604 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.095694918 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085312272 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.089593244 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070983989 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079696067 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.093114972 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091620822 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.11433948 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071078054 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.102191321 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06916542 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069183852 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092527319 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091992011 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095189206 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06973259 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07328299 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094802598 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06732376 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068390182 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.095436862 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067456213 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.09252759 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071821463 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.07048205 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094228888 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085883714 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069559413 seconds)
  done (took 9.423783363 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069703559 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069823021 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093476292 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069337887 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069706105 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092472785 seconds)
  done (took 1.449383264 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.099244968 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.094133204 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08323095 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.097826231 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107815093 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.106199852 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.084023974 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.106168372 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086887764 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.104577646 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084077508 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.106952013 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.089977046 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.098219992 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084059821 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.09816809 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08414457 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.1018329 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081062967 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099675203 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08989616 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.098492445 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07584218 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.084302783 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.095798975 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074940507 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101344898 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081909497 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.104467716 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.084323027 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097774674 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073578305 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096696959 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.084213184 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.106650531 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073951578 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0974771 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074455645 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102497824 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072370971 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.108394229 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075125494 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.080078841 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.097421177 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.10701124 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073945149 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073914964 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101006672 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083608221 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096636888 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074212454 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.097244995 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.072519678 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096831713 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074123253 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.106873578 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074119549 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.107646683 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075349965 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073617408 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.095131211 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.073055026 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.106643868 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.073262426 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105368798 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073635091 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096150669 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075549817 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098635631 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.074424724 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074226578 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.094723641 seconds)
  done (took 7.442104869 seconds)
done (took 28.206962687 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.648501159 seconds)
  done (took 1.628320986 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.763619948 seconds)
  done (took 1.745481724 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.736215032 seconds)
  done (took 15.722461973 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.613114675 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.748734797 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.807862935 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.160865733 seconds)
  done (took 3.311134672 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.883958628 seconds)
  done (took 1.885098267 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234217883 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224315903 seconds)
  done (took 1.44723188 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.727855898 seconds)
  done (took 1.724678405 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.295690029 seconds)
  done (took 2.281831908 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.319531615 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181659786 seconds)
  done (took 1.495857373 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.522623412 seconds)
  done (took 1.518666506 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.880393266 seconds)
  done (took 7.880755423 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.228593086 seconds)
  done (took 1.237965797 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.267637849 seconds)
  done (took 1.266336878 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.088346906 seconds)
  done (took 4.089207528 seconds)
done (took 48.223038418 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078830223 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083725686 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10521071 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080431141 seconds)
  done (took 1.343020911 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078876869 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07608754 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101334723 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07460239 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102614324 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075820681 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100138064 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079055513 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074953711 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.098410798 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075632432 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.097539986 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077832732 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100168044 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072231414 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077880252 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.101962887 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076125994 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.101538651 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075383808 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072666253 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099052482 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078020276 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.096285194 seconds)
  done (took 3.070888078 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078783515 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074653747 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098673825 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073478676 seconds)
  done (took 1.328844834 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079236626 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.116793409 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.09070747 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079465729 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.117775775 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.111431029 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072120969 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072513318 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097027931 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07893542 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.092901426 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.101278616 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.11242865 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079318722 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.104157721 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068412167 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.0712986 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.11131602 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079315264 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102794548 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072716206 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081847277 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.093118989 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092175912 seconds)
  done (took 3.187979683 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078283326 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105233742 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.103591874 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091529393 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.116816052 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067957202 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.101082658 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093119902 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.150003405 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067891903 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.096194943 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067923872 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.098073444 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066977927 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078991572 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.133779753 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113976613 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.09333115 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099383091 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.091133135 seconds)
  done (took 2.929509716 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075609155 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072205467 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090234105 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070453876 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078998118 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097695023 seconds)
  done (took 1.494632699 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06981921 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069112363 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092249398 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068640234 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073574328 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.091387591 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068146032 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069136476 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092005012 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069022717 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068278687 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.090304679 seconds)
  done (took 1.932165945 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.382008751 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093394385 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070953438 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090081614 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073217214 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091572679 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081881382 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069864816 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.115259278 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069039162 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.092550972 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070507598 seconds)
  done (took 2.314165669 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262261756 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079530579 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.32412187 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169214122 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14136803 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156917326 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106565543 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140537216 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.200532992 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139190527 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2021104 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225619905 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134844609 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168899907 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117492538 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.108253937 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211263788 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222202093 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108238176 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225400898 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206905691 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156887501 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181329086 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129695677 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136197107 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151639689 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074394406 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107179881 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232978152 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162235805 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202869242 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138930921 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099003818 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2316604 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225086482 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196659908 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163575227 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086355283 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.156906715 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.166146169 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255575598 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115336866 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194709348 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135087675 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10783449 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173969286 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1470082 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.146211466 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.136762496 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11701914 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174427905 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241016308 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.166425162 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113529297 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137800559 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142465619 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145197367 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104536971 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24199879 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218317134 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159289915 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097691574 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099526152 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212551841 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161030031 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.143365835 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.154482731 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121214666 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169296905 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.212145676 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146905746 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176005878 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182107976 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091681607 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147663191 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196445027 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156458838 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204320332 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179432615 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.075730898 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153497483 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130913863 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084717171 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.171186706 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102652813 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209094692 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12655734 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.140281519 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139982814 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137585159 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114112661 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22024605 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203013759 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10599355 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.092605793 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132274122 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.150594616 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177190492 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115336205 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136227549 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148698833 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.08095788 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192993403 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077385308 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153519613 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.105941609 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152674137 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163292794 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078341961 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155893513 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129104138 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.129787168 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165534537 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220800503 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093515564 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109183665 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201953777 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180425233 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.132319697 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176617896 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188796126 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.127597113 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130536101 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205130772 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241948448 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091621013 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222174796 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135511865 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08594213 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.11506381 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15565105 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140077444 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150121262 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084632052 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.179001618 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200752997 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.101162369 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098333246 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19112474 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084556537 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109141182 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140958779 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130005996 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.097790074 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.128500375 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135244738 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17135886 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154996026 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135205492 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154126482 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126367148 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225582393 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11683529 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.13278517 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1068526 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.09819843 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.166783095 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217704214 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082635896 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226219035 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.155952112 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132994047 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149588019 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085220069 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170629575 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105396061 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073347192 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200037335 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139584063 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112520406 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.21074109 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13141128 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.156172813 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.152969051 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164025115 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160640483 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.188433015 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109053964 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.1145931 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141392801 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154863548 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.100660846 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.096186274 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.109473555 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131689985 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123652462 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085479927 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171367968 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181076208 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100846177 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140891393 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125582501 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179828577 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.103609435 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15913193 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.148716359 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122918531 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.186661616 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213250282 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165794091 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128631559 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177271793 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.097834394 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07687418 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.118040377 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156873497 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110687613 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086201706 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146331373 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205126242 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158235266 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168293871 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138915518 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150404098 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189272989 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.098383746 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119422307 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205429752 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154870577 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.155861948 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09278193 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.126249783 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175948027 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136402076 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244854737 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143737902 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152337787 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208335977 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.131869024 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083174073 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134336516 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167327962 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134953133 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.207793253 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128637195 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091223691 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137915241 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.108947942 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132387461 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157514079 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149792157 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163370014 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.145115834 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187963954 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080025647 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14566336 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152274724 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152364195 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.091290781 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149929329 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223212467 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097844231 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147386866 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21237565 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081989547 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.15270873 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237002093 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199494644 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088007231 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138932798 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150526185 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164020705 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148088195 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195892466 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141293286 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164831921 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139754049 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08822873 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116378967 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100758025 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134059804 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.12347074 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.140906955 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.146255916 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.121500366 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162359224 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14043696 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138923661 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148286613 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.100474361 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.119198386 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12552003 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208762555 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149996273 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231836898 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.128647633 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.207157724 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227777977 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077990888 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081983292 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.107983397 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171876671 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112606687 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163529252 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.123995127 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108169996 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155608262 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199118088 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124544801 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.071238676 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138625749 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166294916 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139417852 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126825231 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134559096 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1963533 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.131884005 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081681821 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154299423 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132540245 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131897668 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23561602 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063648815 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124581795 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080692521 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108923858 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159757419 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21406533 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084885873 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.1536263 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148204953 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150238884 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159008817 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130150331 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126488471 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114854245 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206773881 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158298418 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.117776724 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141694591 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159866405 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215374975 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108406613 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.123677758 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23235177 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186724869 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.221264439 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.117053428 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145748472 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144919858 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138089372 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172897705 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111050455 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200486881 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110924409 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166304877 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132905985 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120868129 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159064315 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.124539143 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134047277 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180891105 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150119435 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110223356 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082231091 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147614247 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152056007 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13408704 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.102454366 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1697889 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.101392756 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168520466 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229058712 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084161845 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135712208 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123828829 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08413774 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136834562 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131342481 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114718503 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.121655735 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22950743 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.119057259 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183570412 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197533534 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143715576 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16803236 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129090856 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664923646 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.106718446 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186681378 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150035139 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237551546 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126180267 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149220279 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139522288 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152528186 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17471046 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133372158 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.205650501 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161808722 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.150037837 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107654752 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130957724 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140857286 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.094064655 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135402755 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144264911 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145415611 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.129775582 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.150954053 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156966673 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.109644136 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124267728 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191097289 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146993562 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199664352 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171829121 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087550465 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148672275 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196256539 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107520401 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.153470864 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187763403 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136127713 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12786011 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.109546292 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.134704667 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206413922 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.100747358 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194504881 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178141026 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113256878 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143131077 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.174283779 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164929174 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138722919 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155320411 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124400787 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.142415531 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145977472 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087450857 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.106499095 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134998943 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142915126 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.102863494 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130223712 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.145527263 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183817767 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.099665888 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099936324 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131328669 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203092232 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239395471 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.09185462 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111525606 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149292591 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142652544 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.146788897 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155706913 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.084219003 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110947658 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.110349224 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.115172421 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137126463 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143313693 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132292053 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140874311 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201556394 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.112941245 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.25422612 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098656331 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135239809 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.07109158 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.10739871 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125179226 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126624093 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111366064 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126377156 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234172983 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.09919619 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.11846983 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12142722 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075975409 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111566204 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160622378 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139069245 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150927891 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126327943 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065199846 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138340645 seconds)
  done (took 71.783822009 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.132314853 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.104554645 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.117780692 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.173750498 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.146030247 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.238215669 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.180870703 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.222988366 seconds)
  done (took 2.410381048 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07010116 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.117401684 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103981821 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.116018553 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090700019 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069647733 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.29408442 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.11179825 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068819869 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.11482575 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.120677827 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092166279 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.46964652 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066720907 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.096190178 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.085919183 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068887748 seconds)
  done (took 3.242885755 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.427258263 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.631729612 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.450422054 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074783068 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.911675856 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.108271991 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.384295833 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.162873573 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.092155735 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.430314616 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.726749422 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.15270138 seconds)
  done (took 17.643969786 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076162669 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070329554 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.110644706 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084779603 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.099814297 seconds)
  done (took 1.535755977 seconds)
done (took 115.216905327 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080891945 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.341405023 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054488092 seconds)
  done (took 1.523547059 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084290354 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085650399 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110978447 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084546236 seconds)
  done (took 1.466519962 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075562482 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078169101 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.11065418 seconds)
  done (took 1.363869464 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.278137988 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166610877 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.090327006 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084722481 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079792359 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105296284 seconds)
  done (took 1.370835191 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073865027 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077703766 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100718567 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078056729 seconds)
  done (took 1.425220692 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077195698 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053868697 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056876507 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.083331027 seconds)
  done (took 1.371728082 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091260923 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.107088656 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082218722 seconds)
  done (took 1.378806266 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107920931 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.113667748 seconds)
  done (took 1.32258434 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083159559 seconds)
  done (took 1.180501848 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093840555 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.141359127 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.156881879 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.137337947 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.168123595 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.137383759 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087783784 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.11591946 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.105282471 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08983703 seconds)
  done (took 2.335260248 seconds)
done (took 16.446264699 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079116415 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.488836028 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362201327 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118171274 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669487756 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358403544 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.006938 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120554857 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121029168 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095113631 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084875398 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676352669 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.971263857 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.445902289 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.958569169 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326463926 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.678099701 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069322132 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069348171 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095142091 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.966213063 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094819165 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06918913 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069652596 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.676382181 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372618398 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.0952768 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324389511 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069503202 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096767445 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356268855 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095950549 seconds)
  done (took 16.175101321 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07125206 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.144930235 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075336973 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084756359 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.09754756 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070914239 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099172131 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071101949 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154096363 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069148605 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111958015 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069669805 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099622273 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069806943 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08908456 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095520856 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070426178 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069848402 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094918392 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069785343 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113677575 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06895397 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070206423 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095787018 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070249771 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10715343 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069812703 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069214711 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095308376 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07217816 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098262239 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069769674 seconds)
  done (took 3.881267954 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116091883 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.153104263 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075211373 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129837265 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114512826 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098361288 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.171647107 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094100533 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156060955 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070144419 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111734105 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070156357 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128016358 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071012016 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115339289 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070286541 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071060474 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095940043 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070140165 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096396634 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088758885 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069892099 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095429186 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070045346 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096220038 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082655401 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095425451 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069981906 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070458693 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097272831 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073661967 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070269899 seconds)
  done (took 4.170066475 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073719548 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.0772504 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110053932 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084818441 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097967058 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073470983 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075633326 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.09789344 seconds)
  done (took 1.803229093 seconds)
done (took 27.133623175 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080207678 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072212456 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.100420635 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083142621 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101244931 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080215305 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069864757 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.102609155 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078342886 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07536803 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103713443 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069314731 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.098805375 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068905646 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076679052 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.095749037 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080920801 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.099694335 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080418281 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080963525 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.097727332 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079158134 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102026821 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080942621 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.1068213 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080396227 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.084879483 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.10145033 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071446352 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.09835605 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078218383 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.112277724 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069890663 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080917114 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.096658556 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069919851 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069700041 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094979702 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081580083 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.101373453 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072357012 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.101993115 seconds)
  done (took 4.733275649 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090470957 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092727954 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.112600834 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.066375266 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098439568 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.067069845 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.115991356 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.065603601 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.061029436 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.115875105 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057646192 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.06112836 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.09095232 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055609401 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060700278 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058632998 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.089483422 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.057918639 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061050297 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.087657191 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.059552097 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056435666 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088514326 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064755711 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057721626 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064070458 seconds)
  done (took 3.06853871 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07639169 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085652292 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.116247918 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131895891 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.134134817 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079003446 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.10604926 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089646608 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114003597 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.0695936 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072868674 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.125186276 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088925843 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.102483616 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06906508 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.115383209 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083817747 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070897248 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.102432659 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091825988 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.11251982 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081161659 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120304669 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082199246 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068762371 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098712329 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.07383412 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.109348041 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074693073 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078114686 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.100292296 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072483327 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.097970473 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080343469 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073422713 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.09781134 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092022928 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105671391 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079881872 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069683386 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.099756864 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070951106 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.116057058 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.113490457 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.095652308 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076846241 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.077212643 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.105168685 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.07012636 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.11463143 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078860444 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069183613 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.099879155 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068444389 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.09623194 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082399445 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071280284 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.099274007 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078819184 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.098871452 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.081882709 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073571782 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110935432 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069113664 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103793342 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068267491 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06988263 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095614315 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092020324 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070191884 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.136434749 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069978561 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.09721313 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07823418 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.1034235 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07503661 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069201532 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.11026605 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078917806 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.099308408 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077668073 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072631957 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.098667162 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.089089707 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.098917434 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071155739 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070557002 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102177516 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071745462 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.096834644 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081942978 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069045745 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.099741347 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086459419 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.095821231 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071381774 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075582817 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.101384569 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069157538 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108017981 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074254798 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069922875 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.104926301 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069287372 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.099493707 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078687253 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073294629 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.095257916 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074454557 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102430153 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070670384 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071100022 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.099572857 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.07067088 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078574109 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.101833768 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073496363 seconds)
  done (took 11.468837163 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.193822249 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.187974314 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071412904 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.179990594 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.0779966 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.108521834 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.179983937 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.107437544 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097854856 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069606681 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070105658 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.130321934 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.125876982 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.106797796 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.106806818 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070174683 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.115209572 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.106535445 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.183057394 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.178521305 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.116860193 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07760854 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071627997 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.098736139 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07189395 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.106711275 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086357001 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.104658286 seconds)
  done (took 4.335011559 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083077341 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.130687945 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07594709 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090328373 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.120978833 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070035656 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.102953681 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071326737 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109848648 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080775787 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.098179831 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074742023 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076088647 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.107713882 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070758231 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.107192433 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079860798 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071296397 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.100594623 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074774258 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.10638954 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081525607 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.101159922 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068570954 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075762171 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.096287184 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065855165 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.115100605 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069408907 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.119426742 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068558896 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076029573 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.110733144 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070271811 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.096965755 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073041287 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072465478 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.100798138 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071730437 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068067123 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.095989389 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059410853 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068090164 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.10959769 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075806466 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.088940493 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075180967 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074778816 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.101632044 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067826523 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099998564 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071559935 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072751694 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.106169281 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073794954 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074828878 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.101625291 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.067331491 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.10537138 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.07331822 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066090451 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.096674759 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074720674 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068149738 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.105234537 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074154487 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09620915 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073258696 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.075257709 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.104851233 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072769641 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073105505 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.094730012 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071462506 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.103099005 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073858129 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073874288 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.096061926 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070342307 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069560262 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.085110118 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069469869 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055411348 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.100056997 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068546599 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067407945 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.099508897 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075184388 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.110206733 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070971346 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.103528767 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070445263 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068430135 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.100048177 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065764532 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07276593 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.112769684 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.112564915 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068951813 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067846295 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.111714896 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074401163 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068381725 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.086139228 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075701975 seconds)
  done (took 9.994930319 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096381863 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094634592 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.098721645 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084136821 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.125224289 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.094221596 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.1050656 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075292514 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071234138 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.113391898 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069468375 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.105705464 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068867234 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078545802 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.124542554 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077491444 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099219795 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077941244 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073698328 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.137138714 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084143018 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.11190098 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.082638302 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.09793138 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074447023 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081342664 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.12550952 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081136634 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.10799844 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.087394235 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.081581379 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.124552667 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.087279218 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.10125489 seconds)
  done (took 4.342782707 seconds)
done (took 39.048596761 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.206721076 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.398636832 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.183681943 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.081943804 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.222923754 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.205443984 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.201478485 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.189656738 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.352581564 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.191294664 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.452079998 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.814916599 seconds)
done (took 58.634971877 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.285642554 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.326519403 seconds)
    (2/2) benchmarking "String"...
    done (took 1.45489622 seconds)
  done (took 3.909870576 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.540132149 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.139614229 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.47020302 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.184745309 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.184427209 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.630174755 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.753999588 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.010145106 seconds)
  done (took 27.502303071 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.18553171 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.54851432 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.489473624 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.486781353 seconds)
  done (took 17.841137517 seconds)
done (took 59.210059228 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.215385588 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.20860144 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.185196142 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.171341704 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.293302888 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.219230931 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.436372301 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.424138505 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.185595108 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.178187391 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.206334688 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.187700607 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.200946849 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.434834474 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.186435099 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.185641636 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.259726291 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.638598285 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.559410387 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.199614616 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.199169874 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.220957778 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.187339892 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.196967839 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.191744705 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.187627945 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.196219311 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.210104814 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.363079607 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.18619404 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.276046789 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.609208485 seconds)
  done (took 190.732866325 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.185996333 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.293293172 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.358540931 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.239148715 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.807136947 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.383839644 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.321592887 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.84531198 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.199324819 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.199490424 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.498463757 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.187665787 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.563118392 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.148881162 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.195244838 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.294718558 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.509010366 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.522048794 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.202259157 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.455897239 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.206709139 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.52110004 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.447911182 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.422833178 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.223644511 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.270030561 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.193976745 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.220190436 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.376281663 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.442600554 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.194966554 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.205391466 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.748935997 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.048804821 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.207826475 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.205762948 seconds)
  done (took 150.48122549 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.440610838 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.186807718 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.187258692 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.188236359 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.216838675 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.187342385 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.707694418 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.712420177 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.688763069 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.285949433 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.250455139 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.376437571 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.187648634 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.279227434 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.201012332 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.188868893 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.203542634 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.214601645 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.190623193 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.188107 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.710033901 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.203992033 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.230142535 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.19472098 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.186177918 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.216086907 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.580665953 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.18695795 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.216370036 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.501773332 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.22936785 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.186709011 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.463551793 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.482145755 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.294140398 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.188681988 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.215896648 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.186780545 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.454712944 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.187643023 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.187914986 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.191189097 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.185947544 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.743649271 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.188578314 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.708460591 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.191881428 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.062510683 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.187661269 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.187518429 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.537846162 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.191850596 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.599779091 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.188209343 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.187196502 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.190595514 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.188254586 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.187734944 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.21852248 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.52319503 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.288291948 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.189309694 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.19056773 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.21713885 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.188504378 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.19057648 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.193994697 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.582982133 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.249712914 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.294427675 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.712545917 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.193393502 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.279877233 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305863408 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.189424824 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.18853084 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.188595071 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.188564251 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.294520743 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.18829507 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.57710424 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.195718121 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.190483714 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.248024476 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.281649664 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.189172766 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.479708485 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.19430467 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.189814561 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.87191913 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.28127148 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.190063242 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.189736798 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.189618096 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.579569375 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.714692201 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.370979826 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.194329778 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.534147663 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.194331259 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.19013487 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.591694992 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.692513569 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.756171803 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.190641658 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.295787168 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.193971626 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.192399542 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.191226213 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.220196761 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.19110022 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.249744135 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.191291922 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.190824613 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.58640572 seconds)
  done (took 342.844628719 seconds)
done (took 686.631386435 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.855267549 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.846119657 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.954798299 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.84577875 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.825790145 seconds)
  done (took 10.464515606 seconds)
done (took 11.601027718 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.367999987 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.368333274 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.248514329 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.369491561 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.219123756 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.384615555 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.347619265 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.211418353 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.289235391 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.264159943 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.286908034 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.238474245 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.217009909 seconds)
  done (took 17.948765678 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.49744813 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.483489607 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.25690637 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.48213098 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.235163727 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.489004374 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.381099933 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.387528346 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.378871546 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.206038966 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.205585426 seconds)
  done (took 16.14042998 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.494051217 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.481592856 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.260648465 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.492209681 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237583823 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.490371969 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.382743719 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.391251215 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.37907486 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.207006721 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.205913403 seconds)
  done (took 16.160556759 seconds)
done (took 51.388155806 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.201064384 seconds)
  done (took 2.338915883 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.234827578 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.39435323 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.215294128 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.204751789 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.202570047 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.202505795 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.20484198 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.202697842 seconds)
  done (took 11.000712417 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.201618992 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.200805551 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.198000566 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.200404745 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.198796961 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.199681316 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.20091686 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.198723548 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.198309346 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.198405944 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.202363702 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.200270314 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.201421815 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.19938513 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.198415419 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.201574267 seconds)
  done (took 20.338669704 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.200266234 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.197346113 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.198146367 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.198841375 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.198330828 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.19936141 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.198188176 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.194834949 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.195601392 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.19674534 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.198486221 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.196494259 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.197525286 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.197457042 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.196544845 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.196670405 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.197027936 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.196732536 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.201180608 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.196687372 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.197356567 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.196883442 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.197225824 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.197046083 seconds)
  done (took 29.881901249 seconds)
done (took 64.698539193 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.208334365 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.791210291 seconds)
  done (took 9.135811717 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.198671626 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.198809428 seconds)
  done (took 3.537108515 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.198089137 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.198200557 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.198957962 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.198360327 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.198211697 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.197700514 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.197865621 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.198240156 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.198941111 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.198608106 seconds)
  done (took 13.119750261 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.19783584 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.198798844 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.195556034 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.198977132 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.198796658 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.196835727 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.198204906 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.198449271 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.19828961 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.196058233 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.197621177 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.196119227 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.198031405 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.19503746 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.197171884 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.194896952 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.195090447 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.195869157 seconds)
  done (took 22.684299636 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.198523778 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.19806775 seconds)
  done (took 3.53243785 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.195964302 seconds)
    (2/7) benchmarking "second"...
    done (took 1.196652766 seconds)
    (3/7) benchmarking "month"...
    done (took 1.197207734 seconds)
    (4/7) benchmarking "year"...
    done (took 1.196018581 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.196432779 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.196651209 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.196099277 seconds)
  done (took 9.511423379 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.199119444 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.379571724 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.458553335 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.78258545 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.200095389 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.201967458 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.008373262 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.202805001 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.204373051 seconds)
  done (took 13.774671253 seconds)
done (took 76.431802817 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.174755194 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.191638203 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.03760959 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.208878884 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.208375142 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.535450421 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.200656982 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.329274877 seconds)
done (took 37.022909668 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.196810825 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.885802647 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.926805185 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.197918248 seconds)
  done (took 11.148491599 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.189124543 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.109922736 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.192534632 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.189004071 seconds)
  done (took 17.819270884 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.777662163 seconds)
    (2/2) benchmarking "read"...
    done (took 1.524486 seconds)
  done (took 4.441912233 seconds)
done (took 40.744392256 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.200604973 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.201268837 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.197849862 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.201473597 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.198271776 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.197756034 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.200120667 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.200768483 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.201519632 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.201926934 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.201315212 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.201973646 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.201653071 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.198354251 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.198964535 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.200859131 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.198978685 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.199373768 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.199044874 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.199337341 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.198835629 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.201169246 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.19920627 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.199495358 seconds)
  done (took 29.938889047 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.201948259 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.198835427 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.201020745 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.200338161 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.198986148 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.201372129 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.201336581 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.198463399 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.201351563 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.201638326 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.199056203 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.199857007 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.201434289 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.200297182 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.201298087 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.199569961 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.202110677 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.199146743 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.201227092 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.198999119 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.201620838 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.19968351 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.199867831 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.200977304 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.199276331 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.199337545 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.20148748 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.199426907 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.202195132 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.198680054 seconds)
  done (took 37.151628323 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.206062361 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.208473669 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.201772279 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.202702802 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.20070544 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.201045007 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.202040731 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.201358965 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.20192021 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.201197439 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.202454027 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.202232449 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.201132402 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.201100846 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.201335779 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.201126618 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.201301294 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.202012295 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.201776108 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.202573029 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.20135736 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.202155648 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.201438452 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.202715951 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.20257423 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.201751554 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.20179653 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.200723467 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.202949406 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.202012049 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.201154247 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.201401353 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.20218369 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.201988287 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.201597775 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.201676239 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.206427792 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.208258025 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.202024913 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.202043398 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.203032952 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.20168722 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.202970723 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.202782254 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.203221046 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.202300183 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.202201634 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.20203954 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.202487253 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.201616572 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.201396476 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.202163304 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.202733544 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.202666009 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.203609479 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.202589827 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.202606324 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.202377651 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.202865507 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.201854339 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.202494891 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.204132222 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.201867839 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.202641511 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.203632103 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.202480678 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.204313078 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.201943008 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.202788399 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.203649018 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.202277038 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.20351994 seconds)
  done (took 87.719500832 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.20223268 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.201689308 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.201675922 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.20267087 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.202213002 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.2048989 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.202038994 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.204378586 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.201923043 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.205273489 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.20532439 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.202015927 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.202741871 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.20600095 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.205322806 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.202574129 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.204715099 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.201862918 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.205453365 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.205183262 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.205276476 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.203986405 seconds)
  done (took 27.620794434 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.205686063 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.205205233 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.203536617 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.205923692 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.203428179 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.20613248 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.206234873 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.206693051 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.205730204 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.204424563 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20247122 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.20634539 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.203288062 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.203223317 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.203240284 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.204017348 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.205235843 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.203042471 seconds)
  done (took 22.828117264 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.204073064 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.203338419 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.205946889 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.202769336 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.204070219 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.206703365 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.202645122 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.206142188 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.206688658 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.204943236 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.205134205 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.206472344 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.206196175 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.203864898 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2054236 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.204135843 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.205590026 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.202518518 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.206250071 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.204220125 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.204077606 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.206408807 seconds)
  done (took 27.652240682 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.205304894 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.205792955 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.202938294 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.203614692 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.202106524 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.205675078 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.205777221 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.20153102 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.205736076 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.205512143 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.20329738 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.206106904 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.202983597 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.20347136 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.20330144 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.204203371 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.204483306 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.202921547 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.204742321 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.202459997 seconds)
  done (took 25.225631022 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.206191214 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.207078002 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.207189263 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.207333175 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.208196548 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.208189725 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.206697072 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.207534603 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.206242083 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.209216061 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.207737839 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.208459278 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.208310283 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.20722494 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.207590847 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.207801664 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.207407822 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.208678049 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.207597073 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.209687599 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.207493819 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.20761755 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.207205754 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.206358534 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.207984022 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.208985347 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.208440788 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.209994257 seconds)
  done (took 34.96208898 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.206259139 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.206282946 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.203582037 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.205021992 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.204264693 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.204590273 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.204589566 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.205069995 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.20755205 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.204785257 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.206829094 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.207746741 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.208216656 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.207016327 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.208360569 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.206253599 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208394153 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.204026156 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.205065473 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20576799 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.208163771 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.206505473 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.206988655 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.20597176 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204202777 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.209430083 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.205645688 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.205543996 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.208519419 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.206865575 seconds)
  done (took 37.3336612 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.228306446 seconds)
    (2/2) benchmarking "in"...
    done (took 1.22602434 seconds)
  done (took 3.602014145 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.204246333 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.207358574 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.206241335 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.206421657 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.204988471 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.208504338 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.20819668 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.206277826 seconds)
  done (took 10.799679179 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.20804105 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.209021557 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.209026072 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.209211634 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.209138315 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.210507968 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.217463437 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.227276239 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.209840612 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.20901497 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.214144532 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.217209571 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.215079812 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.209394453 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.2097299 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.211522304 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.208747408 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.209182035 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.210474737 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.21001581 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.209535722 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.212213989 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.212355298 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.206384118 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.210711248 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.222434744 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.215344456 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.209756808 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.210277376 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.215361127 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.209326884 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.205934854 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.210594086 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.210439625 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.209303723 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.210616369 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.221075431 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.225029692 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.219063553 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.211382704 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.209888523 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.207290636 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.212927564 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.212884256 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.2130391 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.211412544 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.210583385 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.206774663 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.209974433 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.213353997 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.213937633 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.210174983 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.207702464 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.218704706 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.213344079 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.218606649 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.226339204 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.21234585 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.218467894 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.223768113 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.225455959 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.218475117 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.213781496 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.211975621 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.220632206 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.231916028 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.219517965 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.22227591 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.207803144 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.211330695 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.221194558 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.226005263 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.221662472 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.211528993 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.211594568 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.211321706 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.211536417 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.210941696 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.221288487 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.229749491 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.212698763 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.210346141 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.2203957 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.23111921 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.21012174 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.211684271 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.21145835 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.213961907 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.211362738 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.223913584 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.225626363 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.211392167 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.21146175 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.211489557 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.214568004 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.21245588 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.210900042 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.211320193 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.208231672 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.211075788 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.211093071 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.214373421 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.220290199 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.211958634 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.211345042 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.2208026 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.212622032 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.211182599 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.222502901 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.210684675 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.212089133 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.212740796 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.220255941 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.208647178 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.216575317 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.219718041 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.213020934 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.213584854 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.212101219 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.212623361 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.222409669 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.236897963 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.211450235 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.213594774 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.215211221 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.223233916 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.21203802 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.217814607 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.212289682 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.209841411 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.210188995 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.214427462 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.212534771 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.215451387 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.214168422 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.214247113 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.211783548 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.211721835 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.212853614 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.213938188 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.214767019 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.212289311 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.214074204 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.216090089 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.213189912 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.215434352 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.221123235 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.212653052 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.214965623 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.214175569 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.210253696 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.211801128 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.213772032 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.214354912 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.21417671 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.212676582 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.211400034 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.212456985 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.211982383 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.212538783 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.212642781 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.212911847 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.215793675 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.213279912 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.218923196 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.211598515 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.209604915 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.21176273 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.21315084 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.213302154 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.212102147 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.211176726 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.213831593 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.21925915 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.212414532 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.212853915 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.217002473 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.212270476 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.214028852 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.214149495 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.214916792 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.219000344 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.213368102 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.22207802 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.214746173 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.213086188 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.213053444 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.213031276 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.212179315 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.212656245 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.215730617 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.217954202 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.22666826 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.221076669 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.215135344 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.215334176 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.213923076 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.216412834 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.220389677 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.213796363 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.213260216 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.214658118 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.214509668 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.214734026 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.217434009 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.214116287 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.213830206 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.213733037 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.213352995 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.214533611 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.212973289 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.216263672 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.216538856 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.210995636 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.214188894 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.214524082 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.213936975 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.211954328 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.213997587 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.214712747 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.214414387 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.214670485 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.226218405 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.211950272 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.216904606 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.215070985 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.21513895 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.213906965 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.214417346 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.219661329 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.216186467 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.223614813 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.230335246 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.216626448 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.224541163 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.229879085 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.214399602 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.219277688 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.214993398 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.212893241 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.217035138 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.221706499 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.214848576 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.216339542 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.216064126 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.215259388 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.215654367 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.225862109 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.213061007 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.215578258 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.214953364 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.218604073 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.212702968 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.217421688 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.216432442 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.216243783 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.220344747 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.215941778 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.216206818 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.218227184 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.216376922 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.218178784 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.216700651 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.217645244 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.223442424 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.222834538 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.217931548 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.220794873 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.217504284 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.21873665 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.218131058 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.217427085 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.21714249 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.231297938 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.224520093 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.225516645 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.220285245 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.218056572 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.225338774 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.218778957 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.221479651 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.217783656 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.218252809 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.218129888 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.217249377 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.214289807 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.219818777 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.218303474 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.219734048 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.218798918 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.220151796 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.218719896 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.217332132 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.219274497 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.218906054 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.21896308 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.218225489 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.217879327 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.223201169 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.221025534 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.218059172 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.218649531 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.228253373 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.235086509 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.221285563 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.219340478 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.219653252 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.219905922 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.222011616 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.22124258 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.222897884 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.226090059 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.220968168 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.227782672 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.219970103 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.229275283 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.220557731 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.22229968 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.22588353 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.218307556 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.219847467 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.221257832 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.220365368 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.228836061 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.235161604 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.22035009 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.223856955 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.22096433 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.221421709 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.219409503 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.220688554 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.220815909 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.220761539 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.232319827 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.236047533 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.223151808 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.223593899 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.21881949 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.223922542 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.220739979 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.220265922 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.226950369 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.22183688 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.223214651 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.22050301 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.221873249 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.22012302 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.22149002 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.220906863 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.219062655 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.22107925 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.231361211 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.235981333 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.22411708 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.222179845 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.233926118 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.222047723 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.230747366 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.237038584 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.223038257 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.223552201 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.221461852 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.224374915 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.224282608 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.223002538 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.222933095 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.222868663 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.22463734 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.222149002 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.225923837 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.22265543 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.222487531 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.222945414 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.231015732 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.242036921 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.223879258 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.226418525 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.219526026 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.223950688 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.226521589 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.223366182 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.22323271 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.224889809 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.231222075 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.228538045 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.223402143 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.224912498 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.22473765 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.224304776 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.223053556 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.223159259 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.224280262 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.22384942 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.22642444 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.223721572 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.230229397 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.223452994 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.225864996 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.22651194 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.225420558 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.236846596 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.225644211 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.226418041 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.224825163 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.224131368 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.224691922 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.225524521 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.22596767 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.226088753 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.223760209 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.225862541 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.22955652 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.23023338 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.229194748 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.224177625 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.225009076 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.22600912 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.226933058 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.225972689 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.225553982 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.225613497 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.227481159 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.226056888 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.227663193 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.22498488 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.225189243 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.227010614 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.225521133 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.227866434 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.231326579 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.225736004 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.223233318 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.225286815 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.226128113 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.22503849 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.227557321 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.239178405 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.227972029 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.234324712 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.232309323 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.229766438 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.227647395 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.227694148 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.233850323 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.225754605 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.228375831 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.226701415 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.228942156 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.228444021 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.230030764 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.226305718 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.23661305 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.228276703 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.228225155 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.23791115 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.243439721 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.228160776 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.229726959 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.230900106 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.227681103 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.223982636 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.22808286 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.227408364 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.238138164 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.245597891 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.228775307 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.230532495 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.227142846 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.229708034 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.231127245 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.227967329 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.228921138 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.225175835 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.229270511 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.228876148 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.227578342 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.22579184 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.230222591 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.228737737 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.230291754 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.234241219 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.224182306 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.231931285 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.228370411 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.229165537 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.229555581 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.228094906 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.224661033 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.224950103 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.227765766 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.229990501 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.230360191 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.232313679 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.229227822 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.229280487 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.229330567 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.229529065 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.230311512 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.236255537 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.235007863 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.226737557 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.228380552 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.230420715 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.233869341 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.230116828 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.230461697 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.231876368 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.232009286 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.230264451 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.230577336 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.229841695 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.231246141 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.246108376 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.245758691 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.231722042 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.230743292 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.237624324 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.229488105 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.229128156 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.231873243 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.234510053 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.234002991 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.238620183 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.231590018 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.238937022 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.247867709 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.233454813 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.235127907 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.234129581 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.239711573 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.235745869 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.232496971 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.233488012 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.236182663 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.246952557 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.232705736 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.240035601 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.260696086 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.24975169 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.235083609 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.233727191 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.230576932 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.23307419 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.236615698 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.234592401 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.233561638 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.233561354 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.233402793 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.23349541 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.235902878 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.235829925 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.233401011 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.234394654 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.234364993 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.237032917 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.23276971 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.233972729 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.233691862 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.233677887 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.235231367 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.23551321 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.235764232 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.248230209 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.243279561 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.234762204 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.236485037 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.232347097 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.239166189 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.236800364 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.243600854 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.24040145 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.234113782 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.235830052 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.236620396 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.235193177 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.232108015 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.236317581 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.235709884 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.234261382 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.232327378 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.248587161 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.243421034 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.241836103 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.235667109 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.235248993 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.236081766 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.238056123 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.234747886 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.236289272 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.238122759 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.234979292 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.240779482 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.235610023 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.235677318 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.237857021 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.242182324 seconds)
  done (took 729.780173819 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.234277347 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.233938732 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.234599634 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.233327549 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.233328848 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.234832587 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.234762315 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.233529766 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.234986615 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.233626818 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.233539874 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.234074074 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.233627793 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.234273722 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.234680772 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.234746108 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.23384966 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.233372991 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.234126862 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.233273781 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.233558739 seconds)
  done (took 27.089925113 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.237140917 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.236108931 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.235252961 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.235669599 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.234185665 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.235909023 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.233812075 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236549293 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.238062746 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234777645 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.236757783 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237101222 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.234622468 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.233170355 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234905207 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237713102 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.236573327 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.234983992 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.239037201 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.236359408 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.238562025 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.234623623 seconds)
  done (took 28.36698335 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.237507701 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.238702288 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.236956554 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.23361142 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.238010342 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.234375099 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.237805546 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.236550459 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.237440655 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.240039726 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.238018391 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.238935469 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.242989615 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.242518809 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.243125862 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.239625154 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.384609245 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.238555792 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.239670236 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.239232598 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.23580628 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.246260557 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.236799073 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.237536353 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.237436487 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.238737984 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.237644587 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.239059082 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.240289279 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.240616282 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.243829718 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.237704201 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.238451481 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.24170499 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.240268725 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.241676974 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.242031717 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.240047663 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.236276428 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.240030961 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.248667413 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.256036443 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.242729533 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.248828811 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.24085412 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.239497567 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.242496359 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.247811718 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.238470623 seconds)
  done (took 62.094071641 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.239827135 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.238913144 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.236769225 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.239799045 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.241414997 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.240493674 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.241017692 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.240425833 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.237945075 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.237740401 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.241353643 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.238155619 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.238791989 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.241918996 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.241529651 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.239795096 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.238775558 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.238692502 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.239451067 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.238100837 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.238671537 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.242032443 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.242153321 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.238521874 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.240948843 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.239501154 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.240481293 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.242868645 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.238775595 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.239446803 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.241427657 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.241490112 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.242011496 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.239929036 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.239756924 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.242355722 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.242080413 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.238160461 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.24214084 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.239555816 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.241113465 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.242298464 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.243024527 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.242167469 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.240287446 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.239098934 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.240443394 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.23982339 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.23951482 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.24318003 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.243007049 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.2399828 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.241764155 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.240188195 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.243781683 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.243513372 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.240698876 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.241572913 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.241876298 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.240559379 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.240136596 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.243235011 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.241389067 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.242480957 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.243663601 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.241184563 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.241699786 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.244404989 seconds)
  done (took 85.549754141 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.243482597 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.244261092 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.245343979 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.244789517 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.243820833 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.243794314 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.243104628 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.245000971 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.243982852 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.244558135 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.243540823 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.245214044 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.24425703 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.242231565 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.24565066 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.245180128 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.245507327 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.246280971 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.246537537 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.246058472 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.24507649 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.245740564 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.246807274 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.246746482 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.246274441 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.246436848 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.245105952 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.246639308 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.2448227 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.245904736 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.247732427 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.246046713 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.247286291 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.246644446 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.246395069 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.245661955 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.246123134 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.248406428 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.245926025 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.246237273 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.246326175 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.246730298 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.248094492 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.247093678 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.247969582 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.244656159 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.246880844 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.247034988 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.246407095 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.247456182 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.247354993 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.246149597 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.24748414 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.246355676 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.247276578 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.246035844 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.247979321 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.247748913 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.246491158 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.247673963 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.246550063 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.245674231 seconds)
  done (took 78.435651587 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.247184751 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.245691902 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.24482853 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.245106031 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.247073521 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.244339903 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.247606707 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.247094266 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.246979418 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.246239035 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245033926 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.2435713 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243928265 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248390955 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.243263489 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243419192 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244216597 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.245701866 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.24739179 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.245045325 seconds)
  done (took 26.097988354 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.245908348 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.247823657 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.244774274 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.244181612 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.248125934 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.243730873 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.24719974 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247583019 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245441485 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248410359 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.249078311 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.247246344 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245245359 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.245999704 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.24802498 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.245148644 seconds)
  done (took 21.129284309 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.247355366 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.247955001 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.247470894 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.249607345 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.245985418 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.244919898 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.24999012 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.245957977 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.24705835 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.249506432 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.248599197 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.249346003 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.248759875 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.249455485 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.246417934 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.249723396 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.246056347 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.246419704 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.249367455 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.250324282 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.245608144 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.246931708 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.250967452 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.248873477 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.248237851 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.247102921 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.245808587 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.245803803 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.247134849 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.249842325 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.24695021 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.247015732 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.246931059 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.247708092 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.250713119 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.246542671 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.249594177 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.25019116 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.250349103 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.249862134 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.249090047 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.248362056 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.24989232 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.250353833 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.246280586 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.249424944 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.247534743 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.248449647 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.249202901 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.248374073 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.250843324 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.252142324 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.250105968 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.250734032 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.251691219 seconds)
  done (took 69.8531583 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.250657365 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.251464845 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.248395372 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.249383364 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.251207036 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.249043102 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.250580744 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.248315935 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.24998614 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.251254174 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.25086291 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.252183997 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.249182407 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.25154114 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.250380592 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.252181821 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.249149041 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.249244943 seconds)
  done (took 23.694590308 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.2491026 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.249245229 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.250441513 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.248852972 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.249809292 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.252407706 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.249513005 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.250253156 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.251908261 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.249373788 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24949479 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.25217793 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252314886 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.25310454 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.250963755 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24787805 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.251844389 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252004596 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.251344531 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.248337264 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.251799216 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.252983084 seconds)
  done (took 28.705313984 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.253305662 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.252971206 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.269204046 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.292217038 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.280976014 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.251280898 seconds)
  done (took 8.790240111 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.252691285 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.253341094 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.250529737 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254843821 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254192804 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.251701544 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.251736004 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.250610996 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.253817078 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.251238838 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.251907167 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.253944472 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254482239 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252567492 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254268876 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.253902289 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.251855389 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253524072 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.253541934 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254331063 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253365127 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254621587 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.252158923 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.252397977 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.252075816 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.251493769 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254329102 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252867175 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.252313098 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.253942206 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254447769 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253050811 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255361581 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25348011 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255900327 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255774912 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.252455733 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255951057 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256210547 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253367096 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.254992413 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254973493 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255825354 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253574292 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256261357 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254212467 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254090711 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254390812 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253317077 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256750205 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255321006 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254001348 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256112873 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256322312 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256867233 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257356413 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25326409 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253322828 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257438478 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255438018 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254065642 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.257480439 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254859709 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257211851 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257448136 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255862884 seconds)
  done (took 83.968222231 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25663113 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.254986185 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255676449 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256658209 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255045107 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25514292 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255846982 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255815603 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254956986 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255345391 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254909505 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.249103313 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.248848939 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.249704869 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.250276801 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.249109074 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.248686081 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.248337841 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.243988461 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.244410547 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.242383544 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.239536703 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.239902278 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.24112815 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.240698502 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.24281159 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.238440558 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234204993 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235093419 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234029446 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2306945 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233850323 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.230916012 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.232468395 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229787501 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231790158 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.23098922 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231591665 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229246757 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.235133746 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232527069 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234230353 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233509363 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227712727 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225650678 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225107387 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224293568 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224864027 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.226892587 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225565158 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225488932 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223727744 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224933476 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.222500507 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225334754 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223792635 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222988249 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225313426 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225122555 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228311753 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22605555 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224838685 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227913964 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224678137 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224766045 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223882004 seconds)
  done (took 82.825695854 seconds)
done (took 1702.352780324 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.254254964 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.303540715 seconds)
  done (took 13.723012311 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.388307052 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.336508865 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.225336983 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.226237091 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.224481117 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.219792808 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.246042227 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.225185188 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.22497079 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.225254447 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.227565327 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.410096759 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.277132122 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.226837287 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.223630016 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.317464128 seconds)
  done (took 41.392339342 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.249237239 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.23866393 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.32908193 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.246999169 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.255786942 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.395568074 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.285968181 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.238658803 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.380315562 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.270247066 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.602476925 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.25929302 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.237351023 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.208201998 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.25123339 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.395199885 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.448897007 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.611580131 seconds)
  done (took 28.071477262 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.610197572 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.257212675 seconds)
  done (took 9.037107857 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.266589376 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.275023773 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.248921309 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.242093854 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.257864554 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.294145171 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.237281603 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.235729838 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.230638212 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.266359892 seconds)
  done (took 63.722877957 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.241907901 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.226964432 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.226196384 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.221182334 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.213677896 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.226840273 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.214452709 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.215701061 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.267748238 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.323412645 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.229498102 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.219937472 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.217978751 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.217927012 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.21037324 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.248225114 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.340011589 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.21331923 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.211572755 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.218686308 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.21424547 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.336722384 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.250674402 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.216014072 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.32059384 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.283729836 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.218132777 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.224043823 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.332488516 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.212857718 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.213732566 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.218244159 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.217165963 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.760473622 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.69394357 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.223024193 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.250199371 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.226279408 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.213433688 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.39353967 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.216171406 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.22257622 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.209478944 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.670935204 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.366516827 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.314107633 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.323036767 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.219394889 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.218658915 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.273967372 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.21937652 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.217902486 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.245032469 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.92703078 seconds)
  done (took 103.530830929 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.264772562 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.69805882 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.378037104 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.231957009 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.958123643 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.870727918 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.212270847 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.455186235 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.211425509 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.207778881 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.539917996 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.668110448 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.211466681 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.215058937 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.342675036 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.305243014 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.211963906 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.955807222 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.211164354 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.210694775 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.608945109 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.23065642 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.209116499 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.245003887 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.244585366 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.631333001 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.469284883 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.612936634 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.213293978 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.20949566 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.631157265 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.209977876 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.281902604 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.199186418 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.452333516 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.506995488 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.488376309 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.198352563 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.206512298 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.196820634 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.231364281 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.611183293 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.496601138 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.195032306 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.196251638 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.617840913 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.195456168 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.197902596 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.201906498 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.389879403 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.197025065 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.195449308 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.474717667 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.197559572 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.538109106 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.290876076 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.232789437 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.643500482 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.19613701 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.248131686 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.201311332 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.19638447 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.201639452 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.196473186 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.198746902 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.50247226 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.584496386 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.196610666 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.502076901 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.609753804 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.195888678 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.672145621 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.021294746 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.217782867 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.246399965 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.197626499 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.732327739 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.648015025 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.254504438 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.197764021 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.491331759 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.198982064 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.49814754 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.211642653 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.199162832 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.604469481 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.215655728 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.220982043 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.197532394 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.19663125 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.815808094 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.198112818 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.443658023 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.216969872 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.196983996 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.198804848 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.228125801 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.196796373 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.200918925 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.198901062 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.67490624 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.201650232 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.473803235 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.215647205 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.198003279 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.199142578 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.198272637 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.199849536 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.409870044 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.597041917 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.204360095 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.199203728 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.197734875 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.200565954 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.499263075 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.197486139 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.46727799 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.201434744 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.197922556 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.201206704 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.878734141 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.21090926 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.203432254 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.201812928 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.034328499 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.407183598 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.214552138 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.212359589 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.199129262 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.21167661 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.421311721 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.201877885 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.237807447 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.204939007 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.858844877 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.227629726 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.225780825 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.85417132 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.207976008 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.045323544 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.215679527 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.20100201 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.493550291 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.457415897 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.501128928 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.201478314 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.200099716 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.837392022 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.209187671 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.33042408 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.214640457 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.205236934 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.396804883 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.498038132 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.200583013 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.773726178 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.200135299 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.406670023 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.201252458 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.522166616 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.644592938 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.202463902 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.208931974 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.857634264 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.863361847 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.817022442 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.201233516 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.513061578 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.191543035 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.660219272 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.201038923 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.202051082 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.627728854 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.204965713 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.20520142 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.201958825 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.201531869 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.272838794 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.373715323 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.403746195 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.202543477 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.624322473 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.20792689 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.202578842 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.216132365 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.203909362 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.555259733 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.25683258 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.201438913 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.240709241 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.201294113 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.203592889 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.638073055 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.071885384 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.203964614 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.3525599 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.785911248 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.203388288 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.203399972 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.796129708 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.507159156 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.674063844 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.227919357 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.473249533 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.209415391 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.239864286 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.886927446 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.208871224 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.634647255 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.207340037 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.201990926 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.749327705 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.204337912 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.300779778 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.203239663 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.204837789 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.688519717 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.204954661 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.204258218 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.435521678 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.205941881 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.447356979 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.204155863 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.207590157 seconds)
  done (took 1078.639799061 seconds)
done (took 1339.284491579 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.204115442 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.206984025 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.192203372 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.205875036 seconds)
  done (took 25.957813207 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.213516118 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.210643167 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.211006328 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.209698269 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.212980485 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.210637212 seconds)
  done (took 8.418788492 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.262381699 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.206724075 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.207291561 seconds)
  done (took 18.825419848 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.40659512 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.350285176 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.537355901 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.133331683 seconds)
  done (took 9.578864683 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.212432506 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.211530379 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.211706102 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.214600797 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.215271983 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.216541365 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.214353402 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.216020571 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.216230381 seconds)
  done (took 12.0790051 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.683697703 seconds)
done (took 80.691723848 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.982720262 seconds)
    (2/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.193213074 seconds)
    (3/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.21849386 seconds)
    (4/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.413896575 seconds)
    (5/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.426668701 seconds)
    (6/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.271741298 seconds)
    (7/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.312863913 seconds)
    (8/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.207851916 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.465642096 seconds)
    (10/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.00386788 seconds)
    (11/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.211207137 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.248288596 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.232833195 seconds)
    (14/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.896785164 seconds)
    (15/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.541463939 seconds)
    (16/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.328161826 seconds)
    (17/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.460024068 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.294238492 seconds)
    (19/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.205692142 seconds)
    (20/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.202753681 seconds)
    (21/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.198080504 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.739581873 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.651488027 seconds)
    (24/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.234620277 seconds)
    (25/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.233203531 seconds)
    (26/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.304105535 seconds)
    (27/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.293806453 seconds)
    (28/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.554250628 seconds)
    (29/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.354254568 seconds)
    (30/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.576015701 seconds)
    (31/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.741418447 seconds)
    (32/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.327960163 seconds)
    (33/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.224076896 seconds)
    (34/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.208254067 seconds)
    (35/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.320371 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.602474469 seconds)
    (37/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.797993961 seconds)
    (38/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.209943519 seconds)
    (39/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.235116329 seconds)
    (40/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.53872978 seconds)
    (41/309) benchmarking ("sort", Float64, false)...
    done (took 5.447892753 seconds)
    (42/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.291589969 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.313511375 seconds)
    (44/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.175174014 seconds)
    (45/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.677727839 seconds)
    (46/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.294796482 seconds)
    (47/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.234100847 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.316151369 seconds)
    (49/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.208960065 seconds)
    (50/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.963952823 seconds)
    (51/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.535366658 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.724901989 seconds)
    (53/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.388739136 seconds)
    (54/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.387338591 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.526421493 seconds)
    (56/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.762749351 seconds)
    (57/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.29622941 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.025180001 seconds)
    (59/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.337974852 seconds)
    (60/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.215622844 seconds)
    (61/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.68642847 seconds)
    (62/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.01006278 seconds)
    (63/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.22013587 seconds)
    (64/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.210445535 seconds)
    (65/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.211949159 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.568813089 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.332696019 seconds)
    (68/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.463935086 seconds)
    (69/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.234212251 seconds)
    (70/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.209018998 seconds)
    (71/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.238154746 seconds)
    (72/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.291545032 seconds)
    (73/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.337818331 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.534332499 seconds)
    (75/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.284023392 seconds)
    (76/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.963768021 seconds)
    (77/309) benchmarking ("sort", Float32, false)...
    done (took 5.173532987 seconds)
    (78/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.365497626 seconds)
    (79/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.415351553 seconds)
    (80/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.250143689 seconds)
    (81/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.417688603 seconds)
    (82/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.496493009 seconds)
    (83/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.51092616 seconds)
    (84/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.310910323 seconds)
    (85/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.223326323 seconds)
    (86/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.346452579 seconds)
    (87/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.221809399 seconds)
    (88/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.230123177 seconds)
    (89/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.678671552 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.798354801 seconds)
    (91/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.188496595 seconds)
    (92/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.601125744 seconds)
    (93/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.351110096 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.059900302 seconds)
    (95/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.210719505 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.905833556 seconds)
    (97/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.897327893 seconds)
    (98/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.323262124 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.347959023 seconds)
    (100/309) benchmarking ("sort", Int64, false)...
    done (took 5.33806209 seconds)
    (101/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.276134283 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.196210318 seconds)
    (103/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.198731398 seconds)
    (104/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.396368248 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.216687123 seconds)
    (106/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.464277511 seconds)
    (107/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.884989829 seconds)
    (108/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.223694857 seconds)
    (109/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.232444494 seconds)
    (110/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.206612605 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.200576012 seconds)
    (112/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.460888763 seconds)
    (113/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.223896356 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.2155617 seconds)
    (115/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.228916106 seconds)
    (116/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.467852974 seconds)
    (117/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.889109523 seconds)
    (118/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.560679889 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.199194402 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.287997097 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.416319599 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.808766066 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.829948259 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.322226172 seconds)
    (125/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.717709978 seconds)
    (126/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.213642801 seconds)
    (127/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.754974231 seconds)
    (128/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.214622242 seconds)
    (129/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.604955879 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.734129732 seconds)
    (131/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.271255503 seconds)
    (132/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.243884797 seconds)
    (133/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.50619576 seconds)
    (134/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.532536069 seconds)
    (135/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.297835815 seconds)
    (136/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.656167203 seconds)
    (137/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.965258535 seconds)
    (138/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.224875239 seconds)
    (139/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.215467531 seconds)
    (140/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.223007845 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.055951874 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.32040254 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.321551498 seconds)
    (144/309) benchmarking ("sort", Bool, false)...
    done (took 1.711914988 seconds)
    (145/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.236740646 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.46912802 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.446468393 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.201120093 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.65199696 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.897178961 seconds)
    (151/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.797008293 seconds)
    (152/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.489750006 seconds)
    (153/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.247957252 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.265542692 seconds)
    (155/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.418684467 seconds)
    (156/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.215847847 seconds)
    (157/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.355021142 seconds)
    (158/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.782956286 seconds)
    (159/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.264293395 seconds)
    (160/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.435569014 seconds)
    (161/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.431163411 seconds)
    (162/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.216337918 seconds)
    (163/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.216228983 seconds)
    (164/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.207321919 seconds)
    (165/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.900569149 seconds)
    (166/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.241955767 seconds)
    (167/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.608030814 seconds)
    (168/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.787852463 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.065859843 seconds)
    (170/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.899891378 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.260701318 seconds)
    (172/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.541479714 seconds)
    (173/309) benchmarking ("sort", Int8, false)...
    done (took 4.259655004 seconds)
    (174/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.317126671 seconds)
    (175/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.499098464 seconds)
    (176/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.23851432 seconds)
    (177/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.299396889 seconds)
    (178/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.663897844 seconds)
    (179/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.298504113 seconds)
    (180/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.981343543 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.46158727 seconds)
    (182/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.218652526 seconds)
    (183/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.25373934 seconds)
    (184/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.200411663 seconds)
    (185/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.637720635 seconds)
    (186/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.346595716 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.216363439 seconds)
    (188/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.616484722 seconds)
    (189/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.222269278 seconds)
    (190/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.714961461 seconds)
    (191/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.217349846 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.444486432 seconds)
    (193/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.217686321 seconds)
    (194/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.943738139 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.266258227 seconds)
    (196/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.225240211 seconds)
    (197/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.926564944 seconds)
    (198/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.217668163 seconds)
    (199/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.256510405 seconds)
    (200/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.888468097 seconds)
    (201/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.278814014 seconds)
    (202/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.408292245 seconds)
    (203/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.391937869 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.622818176 seconds)
    (205/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.234085749 seconds)
    (206/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.260930032 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.238271484 seconds)
    (208/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.301595874 seconds)
    (209/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.709681827 seconds)
    (210/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.218642662 seconds)
    (211/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.982166368 seconds)
    (212/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.484464689 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.204407172 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.27618136 seconds)
    (215/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.516213229 seconds)
    (216/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.22266327 seconds)
    (217/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.359709553 seconds)
    (218/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.983686064 seconds)
    (219/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.985748693 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.753279452 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.419310847 seconds)
    (222/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.367132345 seconds)
    (223/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.51713811 seconds)
    (224/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.762148749 seconds)
    (225/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.750693756 seconds)
    (226/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.342423634 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.293124585 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.923276918 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.241421126 seconds)
    (230/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.777985367 seconds)
    (231/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.899782741 seconds)
    (232/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.245186954 seconds)
    (233/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.226321899 seconds)
    (234/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.30301557 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.258749939 seconds)
    (236/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.20383009 seconds)
    (237/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.248105778 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.326248788 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.445312787 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.220377748 seconds)
    (241/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.493366819 seconds)
    (242/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.55762618 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.058517534 seconds)
    (244/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.754777108 seconds)
    (245/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.897587378 seconds)
    (246/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.462938509 seconds)
    (247/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.330943725 seconds)
    (248/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.228455008 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.01956203 seconds)
    (250/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.865893266 seconds)
    (251/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.478180245 seconds)
    (252/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.22080836 seconds)
    (253/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.717299997 seconds)
    (254/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.234610356 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.220692494 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.414423219 seconds)
    (257/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.241991467 seconds)
    (258/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.753310249 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.566251105 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.25813674 seconds)
    (261/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.674910796 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.588607929 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.600103661 seconds)
    (264/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.282648921 seconds)
    (265/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.372984709 seconds)
    (266/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.360645491 seconds)
    (267/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.207215911 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.044957273 seconds)
    (269/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.203667399 seconds)
    (270/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.388632995 seconds)
    (271/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.416769947 seconds)
    (272/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.66069273 seconds)
    (273/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.245039073 seconds)
    (274/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.202829615 seconds)
    (275/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.368826892 seconds)
    (276/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.013358728 seconds)
    (277/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.327670394 seconds)
    (278/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.243739852 seconds)
    (279/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.621788584 seconds)
    (280/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.23611585 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.312656368 seconds)
    (282/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.235923007 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.299404829 seconds)
    (284/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.51671961 seconds)
    (285/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.265935394 seconds)
    (286/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.730460788 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.352435887 seconds)
    (288/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.743933198 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.375678958 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.614378226 seconds)
    (291/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.252560077 seconds)
    (292/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.518039059 seconds)
    (293/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.289335527 seconds)
    (294/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.421695305 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.281162339 seconds)
    (296/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.212899968 seconds)
    (297/309) benchmarking ("sort", BigInt, false)...
    done (took 6.226904517 seconds)
    (298/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.358433575 seconds)
    (299/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.250219613 seconds)
    (300/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.812951337 seconds)
    (301/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.215581086 seconds)
    (302/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.348659936 seconds)
    (303/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.005214295 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.250936067 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.246817206 seconds)
    (306/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.330182595 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.343704427 seconds)
    (308/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.225347261 seconds)
    (309/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.258763749 seconds)
  done (took 872.360790898 seconds)
done (took 873.515342994 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.259438097 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.252198143 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.235848093 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.257456759 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.347133441 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.2642081 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.246489935 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.238392735 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.284293493 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.285150237 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.234530651 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.263789381 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.238577254 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.238003064 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.236106399 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.251185147 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.131584456 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.238009173 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.255461677 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.245996272 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.254563111 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.236956185 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.286445803 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.263477573 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.239740089 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.240088751 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.241182068 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.257801877 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.348812417 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.24149826 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.239199643 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.249721325 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.132246404 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.235560724 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.233591195 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.258375045 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.250169916 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.247676329 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.241057455 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.270526952 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.501546778 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.241724693 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.241074301 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.238955121 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.239128438 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.242433975 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.240964366 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.243837901 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.252349466 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.253357053 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.510747364 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.255931224 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.242951416 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.239046575 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.249385141 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.240737177 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.241784683 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.255707117 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.259949946 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.255562926 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.126567094 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.244535967 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.240619617 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.256430063 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.24738013 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.555500255 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.236893452 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.244090084 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.508958978 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.244844729 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.553931363 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.250456616 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.240926296 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.255081655 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.272337012 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.137085824 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.234146928 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.238998577 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.24902885 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.239382012 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.248187584 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.255161595 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.244117822 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.239941333 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.255041679 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.268384335 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.250120629 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.242826847 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.249165485 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.260587939 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.249637384 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.253688681 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.242611844 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.235541519 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.250159724 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.244235982 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.245727787 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.245198876 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.245533602 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.251556946 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.507906577 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.25979756 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.238092602 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.239147451 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.240730325 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.256007928 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.511927076 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.245968764 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.263236776 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.289600362 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.242925156 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.132409993 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.246633056 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.258933507 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.251716779 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.245318217 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.237836756 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.134761815 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.520381752 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.260528048 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.243602328 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.241739533 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.259262357 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.243280074 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.238772713 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.143805159 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.243442919 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.25767276 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.365116543 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.25349879 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.27530731 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.242247174 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.245873938 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.270898312 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.260313754 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.275275421 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.244781697 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.259217504 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.260730689 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.239966878 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.255836945 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.253974509 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.244674237 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.249151615 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.237594226 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.271389542 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.256460294 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.257141276 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.26435603 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.365946262 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.241398424 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.135546569 seconds)
done (took 208.829113488 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.303215316 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.23836872 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.368693735 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.239449547 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.34710958 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.341118843 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.236851447 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.237122475 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.236501363 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.687374571 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.23725632 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.236152788 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.23899397 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.23644547 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.337131562 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.239142405 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.237352689 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.583085693 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.240103022 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.311919212 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.239861249 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.23745409 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.23942875 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.622976549 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.242342795 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.243181524 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.312068333 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.239443499 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.626289681 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.239368816 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.238822963 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.588683849 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.33233549 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.257134464 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.250360212 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.247660617 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.341119333 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.25520151 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.323812561 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.333576746 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.34690109 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.279333441 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.243551925 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.243397292 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.241972376 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.241650056 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.237906713 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.268369106 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.235748543 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.239303582 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.62214112 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.251320878 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.238902541 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.238935574 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.239403812 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.271440032 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.239220556 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.242350167 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.333584233 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.242086719 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.306515082 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.668507248 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.645577143 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.241725492 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.245774892 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.23919837 seconds)
  done (took 142.568118087 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.307571156 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.316157224 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.347471397 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.243383816 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.292916117 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.353827165 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.242738121 seconds)
  done (took 10.282951487 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.248808768 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.245635753 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.292981963 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.29353215 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.243904242 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.391442918 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.244321039 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.255188442 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.242542723 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.296633862 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.24437989 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.245205265 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.252281086 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.244721661 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.292371419 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.255298207 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.358900712 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.244234668 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.245092503 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.39789773 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.242603762 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.252829812 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.295552152 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.255151625 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.244789802 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.250507322 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.813530734 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.245375986 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.244147058 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.245425814 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.243651472 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.282576487 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.247133446 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.239778982 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.244245551 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.361610593 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.244915298 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.244569451 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.247461076 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.240374202 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.246566627 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.247680108 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.246956652 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.244539634 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.247023605 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.269306441 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.246954312 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.247173913 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.246918015 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.248522987 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.295504104 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.247646243 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.245755911 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.244296924 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.301976951 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.254850658 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.247327826 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.245242277 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.247956397 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.245547394 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.400025972 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.29360214 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.247888981 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.294402702 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.247872502 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.248044312 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.247905791 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.247451938 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.301085496 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.247966649 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.294728745 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.246173765 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.401963283 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.270164192 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.248642921 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.249868048 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.249372701 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.24754692 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.247808889 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.254234359 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.246042412 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.248258034 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.252215552 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.246608301 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.246853424 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.349714196 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.355761939 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.245901774 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.260311086 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.254322418 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.246779472 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.299965555 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.248846772 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.246877734 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.300031079 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.362483434 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.300897818 seconds)
  done (took 144.670210576 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.252659063 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.258464447 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.250419506 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.26527694 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.250415747 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.249420661 seconds)
  done (took 8.710864193 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.25005298 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.248173336 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.246813015 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.247619032 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.248477164 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.248608732 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.248848255 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.248931664 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.25153908 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.25026626 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.24834144 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.249807852 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.249450873 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.249403137 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.250298394 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.250194137 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.250047771 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.248137369 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.250649298 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.25014147 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.353364999 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.249687714 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.250083229 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.25156689 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.25343769 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.251894764 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.257434598 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.251973874 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.252299429 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.257163257 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.253689453 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.250703589 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.252370159 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.256524009 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.256233387 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.254090302 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.256362072 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.252502941 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.249173754 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.250894874 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.252117509 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.251167501 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.251719314 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.251972843 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.25224179 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.254271555 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.253995344 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.259072028 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.25150643 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.251523439 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.252159084 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.253292344 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.251916175 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.252634805 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.255317796 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.255700602 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.25528999 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.252976591 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.252727468 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.253328338 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.254344791 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.252355495 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.253117974 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.255616818 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.252372656 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.252281187 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.253664077 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.256913475 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.25335216 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.254049769 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.252167187 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.251985123 seconds)
  done (took 92.440866742 seconds)
done (took 399.849002221 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.422934167 seconds)
  done (took 7.610315251 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.45752256 seconds)
  done (took 7.650855539 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.982698938 seconds)
  done (took 19.174668812 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.254989909 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.330302903 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.25399275 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.247510532 seconds)
  done (took 26.276436987 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.368924286 seconds)
  done (took 7.557137104 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.256583669 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.252991721 seconds)
  done (took 13.69987784 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.485447443 seconds)
  done (took 7.674104438 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.276702271 seconds)
  done (took 7.467473374 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.249324392 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.245255644 seconds)
  done (took 13.937482106 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.233137889 seconds)
  done (took 7.424013641 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.132299204 seconds)
  done (took 8.319056163 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.251843777 seconds)
  done (took 7.44426536 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.284247182 seconds)
  done (took 7.47458263 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.407307184 seconds)
  done (took 8.598195561 seconds)
done (took 151.498382971 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.247449197 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.24868579 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.248528182 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.247541146 seconds)
  done (took 26.18334523 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.287841737 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.288510923 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.288748309 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.299428633 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.291276353 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.287959995 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.280983317 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.281926411 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.299485488 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.291106965 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.29037091 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.290354469 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.287251492 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.280828551 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.290622352 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.290436695 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.300352128 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.289441172 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.281201381 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.291429671 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.255939314 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.300542867 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.292134853 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.2564152 seconds)
  done (took 32.08661301 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.452204649 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.325305524 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.409465308 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.308012275 seconds)
  done (took 6.687191148 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.307587268 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.309451748 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.321279448 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.359762815 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.391246439 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.318620265 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.279351304 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.277626214 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.264125055 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.309438889 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.384552847 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.325532385 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.408314207 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.255994071 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.447369726 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.257086346 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.256103611 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.308494993 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.360105453 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.37809694 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.257565068 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.309295665 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.312300843 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.3264057 seconds)
  done (took 32.918365738 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.255944856 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.26450198 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.262750307 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.256451286 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.256201566 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.25714826 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.262668748 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.257656993 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.27800401 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.257372316 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.255261226 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.256270742 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.256543263 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.256990688 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.256086624 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.270294484 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.269523845 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.25724246 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.259308778 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.262670775 seconds)
  done (took 26.40367914 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.250780594 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.19160427 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.60170004 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.507052993 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.25066967 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.251357918 seconds)
  done (took 28.247947574 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.321570918 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.433342732 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.25692199 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.574223272 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.650851675 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.260135844 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.257725739 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.46585078 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.735729414 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.735969708 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.31010534 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.320029927 seconds)
  done (took 18.522046066 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.259037497 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.254700434 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.254266688 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.270145575 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.307469052 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.262755351 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.266481481 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.253594788 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.309764494 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.311689803 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.263604665 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.308408238 seconds)
  done (took 36.518669013 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.340706795 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.298180921 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.132298446 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.993807975 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.630697164 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.464698624 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.986862736 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.66631869 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.260487932 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.527950084 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.895016935 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.357062023 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.508307541 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.263181704 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.255727929 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.170404053 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.480584641 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.703399084 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.256796998 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.908558163 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.280533219 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.253495684 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.068368112 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.28192226 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.465748885 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.387398134 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.515822702 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.254839661 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507883747 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.268474166 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.266092521 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.255075823 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.528958663 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882974844 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.348191204 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.265517001 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.933980064 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.971071704 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.243203305 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.9973257 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.665145251 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.259467633 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.26655794 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.256260012 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.189531524 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.256075547 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.677285163 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.264251188 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.967629279 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.256128485 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.266112002 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.351353112 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.259593909 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.073059896 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.258356493 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.257695715 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.254196237 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.262593583 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.831284037 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.373433076 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.261445985 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.192265636 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.617796405 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.004611231 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.828272462 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.35906247 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.261163107 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.260570128 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.191016038 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.975243705 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.275094281 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404069641 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.277795872 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.906865857 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89966079 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.918224688 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.201312928 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.770411559 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.271137648 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.193577188 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.485460252 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.257557981 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.192458309 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.2121526 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.192154114 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911274171 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.26779875 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.590119811 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.267519706 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.670730506 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.271316161 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.277565725 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282225662 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.481760297 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.143037752 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.258220183 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.682441511 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416621401 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.281377619 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.673278065 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.195284472 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.262494832 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.513014894 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.470363684 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.264408287 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.172756354 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.447894868 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.261570352 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.276247393 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.264998273 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.270468349 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.787016175 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.271138113 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.384016939 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.277619062 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.260041847 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949450952 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.264197168 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.361784816 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.943236463 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.500635378 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.991347159 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.262955878 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.341686016 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.261731351 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.261736773 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.024022591 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.775654928 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.259585513 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.262980887 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.268301944 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.271978215 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.261286489 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.205253031 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.261967169 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.943252964 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.26366109 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.483621868 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.267610435 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.537125007 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.194492106 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407564226 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.350296736 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.484429376 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.359534859 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.259387592 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.517282644 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.2634329 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.271311123 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.272850339 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.280158035 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.359998536 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.283145454 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.262090785 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.516552981 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.264872222 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.264698963 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.034101905 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.677282126 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.262912005 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.266946685 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.082837998 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789748856 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241403462 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.260995208 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.152287916 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.276101835 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.325922261 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.267284715 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.272228805 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.908497095 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.064333333 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.2680025 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.263962134 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.484736613 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.271771343 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.021376457 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.341702249 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.444143783 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.791072628 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.277956745 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.196839615 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.973867847 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.956157463 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.263059532 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.197340601 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.264015491 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.271412262 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.273382308 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.766096147 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.79395893 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.266111488 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.934876005 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.269699919 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.273555709 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.268447911 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.263366698 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.880701721 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.39678267 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.268620004 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.275530114 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407575716 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.276686771 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.198239353 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.268273768 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.268150199 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.263694643 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.26326293 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295888577 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.943815908 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.763070941 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.523872238 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.972378831 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.277868262 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.105658409 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.295751624 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.26500967 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.706270583 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.283344253 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.283245373 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.274438973 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.275652516 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.002227 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.937048596 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.836674999 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927866218 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.74726807 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.155381457 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.272308571 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.267992143 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.684111761 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.201700012 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.830332232 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.434280848 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.708843749 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211402736 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.448881556 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.380531169 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.971453733 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.275362214 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.493446774 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.150023149 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.714055719 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.291749737 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.477616567 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301812648 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.267499344 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.195741591 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.7889329 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.484579149 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.722991224 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.346321337 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.682970032 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.724670845 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.282692764 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.265743985 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.54968895 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425148671 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.979329256 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.439430715 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.266756423 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.959717372 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.738572552 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.277829703 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.492667884 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.848998783 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.278310971 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.453190063 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.20556203 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.278327409 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.277549511 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.268996182 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.401461385 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.263603542 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.535338941 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.278264005 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.202446255 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.276175946 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.752177189 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.125532291 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.273766477 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.268388215 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965850443 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.271079207 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526926491 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.276139141 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.874792438 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.277147517 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.202312814 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.201933218 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.961493906 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.271830244 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.243183578 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.725252819 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.609796746 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.298021314 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.292536044 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116317334 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.522726834 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.282898676 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.799299044 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.496373566 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.038685663 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294308561 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.369918565 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.760977067 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.270467912 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.269627733 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.504688713 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.092008067 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.494593974 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.163919078 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.177459944 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.26922747 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.483435867 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.26989647 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.973864408 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507453549 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.983891662 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.282343975 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924904788 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.297314379 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.972969476 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.199554518 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.630084837 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.280202843 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349438109 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.281075371 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.281242601 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.281680976 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42860626 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.981743991 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.288322653 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.285435972 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.364762564 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.430898018 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.885412043 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.276545808 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.806346767 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.949388433 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.810644295 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.28463417 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.271594912 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270797813 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.2052048 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419956328 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.496389943 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.544965291 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399813609 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.692373934 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296116041 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.76261519 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.298760355 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.484907912 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.546268284 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.166874906 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.28037058 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.285027122 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.272560643 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.28295683 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.48243622 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.730428884 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.792832402 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392767595 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.272882864 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.69152637 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.550645307 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.27370723 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.273302628 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.864278377 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.293369933 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.568605109 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.281252371 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.00561246 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422044192 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.282049861 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910629533 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.285563409 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.429416865 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.047072199 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.060548784 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.53035114 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.696573887 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.287241706 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.808657369 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.916721927 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.540755767 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.341151237 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.283919323 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.384569498 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421312104 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.28036221 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.277443636 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.274784593 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119797485 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.984588816 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.284485263 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.812061776 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.541644489 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.271487352 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.283056865 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299145508 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.284659644 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.497655931 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945452006 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.499945757 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.284655255 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.278184029 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.090609833 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.814965672 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.2900636 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.20878805 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.278764823 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496732272 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.512895865 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.295449352 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.728558088 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.986046629 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.797096658 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.247571551 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.297524223 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.27701176 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.917721198 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.813542785 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.916124038 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.73375844 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.842402744 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.28264961 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.552353534 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.281016608 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.288813208 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.554330644 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.2803096 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.276861843 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.289730453 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.812524325 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.992928997 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.294030095 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.990556327 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.21539819 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.619072016 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.895814536 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.216281012 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.280609802 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.447967371 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.280365158 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405375863 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.289263743 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.277054722 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282467517 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.036117685 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.551916921 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.28198933 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.269276995 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.817304845 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.283907337 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285203896 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.499443654 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286516626 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.941787927 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.629582607 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.532174925 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.278402529 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.285225074 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.282288098 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.278651062 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.265052574 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.474375866 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.769230985 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.802052384 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.28640928 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.291023684 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.283597952 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.494026181 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.48999427 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.027591598 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.305786525 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282359772 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.297262468 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.192015324 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.781489039 seconds)
  done (took 1544.824098174 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.310928918 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.297710912 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.299648042 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.355519879 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.301582481 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.374965649 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.316237314 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.362223033 seconds)
  done (took 51.840488767 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.291479783 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.500454627 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.31515441 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.293781667 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.292501527 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.293203756 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.690155757 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.281553574 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.294624728 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.293136601 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.285754359 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.294397767 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.856079574 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.292666337 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.289546095 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.280968066 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.292184206 seconds)
  done (took 64.361578732 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.29084296 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.503765309 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.354984554 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.295686396 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.994068662 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.297009484 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.538299912 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.34046123 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.288513532 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.314515629 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.928326438 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.293297442 seconds)
  done (took 82.665560977 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.288493881 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.292527013 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.292873956 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.288604456 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.292323984 seconds)
  done (took 7.680910948 seconds)
done (took 1960.13314669 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.533775613 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.910519249 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.880984596 seconds)
  done (took 5.017360222 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.432554199 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.479842685 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.601666193 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.618373896 seconds)
  done (took 7.357118823 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.559102374 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.657828777 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.470444089 seconds)
  done (took 5.913893189 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.568932496 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.282121315 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.40159428 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.284225805 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.283229397 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.285576123 seconds)
  done (took 20.079269673 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.28903199 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.291954264 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.288617523 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.290579921 seconds)
  done (took 6.387963918 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.27061977 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.024264661 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.269839659 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.285960273 seconds)
  done (took 18.07776357 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.035471849 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.046492493 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.031159136 seconds)
  done (took 7.340693551 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.294135235 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.123610347 seconds)
  done (took 9.645268754 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.580174197 seconds)
  done (took 2.806848221 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.420956678 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.554147969 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.224712076 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.183632295 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.281813471 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.726343393 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.747060057 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.376468363 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.163896627 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.246938917 seconds)
  done (took 26.155498616 seconds)
done (took 121.796525798 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.810662225 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.662103929 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.493564683 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.786757979 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.506418816 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.494184521 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.494377676 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.751563674 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.328896766 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.298266755 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.820429576 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.504537673 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.442921275 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.66520349 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.444811755 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.531832988 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.505534316 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.842658591 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.463740102 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.666051145 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.491071531 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.419052621 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.656804465 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.479628816 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.509798836 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.439567317 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.997100323 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.521901539 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.634835995 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.059418174 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.440649817 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.833788009 seconds)
  done (took 186.226651009 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.295087982 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.285658164 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.290181174 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.304950403 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.286516818 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.289169489 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.290442985 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.285372328 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.287905268 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.295172894 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.28637781 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.287332165 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.306332576 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.284825293 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.299872976 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.283579752 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.311184703 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.29123988 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.287663464 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.286711951 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.287049251 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.30190267 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.302738196 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.287066074 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.292567408 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.286648515 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.295348185 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.286764043 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.286017005 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.290290519 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.288420219 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.308097423 seconds)
  done (took 202.575318316 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.28682869 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.287508674 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.29056084 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.284677908 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.287151108 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.292027854 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.285444155 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.294339196 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.297635866 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.294261184 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.286679395 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.284065339 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.287300356 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.287820732 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.301815613 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.287151832 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.289493821 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.288390163 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.297881127 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.288263388 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.302578073 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.288133571 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.286992203 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.301068793 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.297034972 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.290278141 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.300532795 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.288593476 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.297569916 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.293992524 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.288461353 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.30450336 seconds)
  done (took 202.56869038 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.484997567 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.295824787 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.296518443 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.234116647 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.295991392 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.296037794 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.291778788 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.484863992 seconds)
  done (took 13.90931893 seconds)
done (took 606.506520471 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.497701421 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.223028947 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.494647467 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.317704176 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.994564242 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.319953483 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.317742974 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.470298022 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.195198717 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.480323856 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.499935848 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.318672052 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.615616446 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.311028671 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.551793405 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.406425802 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.12920567 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.236873426 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.616353931 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.784042834 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.559881652 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.680731779 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.471264682 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.175704986 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.633934731 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.68779473 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.900301429 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.127930745 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.319212545 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.616874024 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.866906479 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.167165651 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.371652727 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.351268957 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.406122614 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.387863954 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.144698191 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.349714338 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.489259961 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.466603015 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.777374805 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.010731945 seconds)
  done (took 87.978269002 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.283745254 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.288313202 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.286634667 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.287168688 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.287535798 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.288685568 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.285313499 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.287131632 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.287607984 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.288223467 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.287930358 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.288096445 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.28629363 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.289110427 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.287175282 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.286742132 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.290038395 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.290029347 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.284034302 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.285920957 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.288679993 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.282465587 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.289917763 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.284618229 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.287401166 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.287410118 seconds)
  done (took 34.700250307 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.298235991 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.523402262 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.689170403 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.311914614 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.297072892 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.302220089 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.366817904 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.303059192 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.304816464 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.303390055 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.444904733 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.303460322 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.334399781 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.700477178 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.302996331 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.30094403 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.298157139 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.302217385 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.528665211 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.310887295 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.371839921 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.299850868 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.369669891 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.311032766 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.306261302 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.300680328 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.302760616 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.822915935 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.303984375 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.445444137 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.981367471 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.367056645 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.791545293 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.700990362 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.986216206 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.304836516 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.301535461 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.450900851 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.30539017 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.301243821 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.37091266 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.303319456 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.695578922 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.912815329 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.320597352 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.302198412 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.842333308 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.45203019 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.522758955 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.312274194 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.721356795 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.304274689 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.302922911 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.300790926 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.520335471 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.309656712 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.302840124 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.860428921 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.310587546 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.370203057 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.306737586 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.300736417 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.536953794 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.303960369 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.527252352 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.308038151 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.311728572 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.30619014 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.702203107 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.308161049 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.930219278 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.318274043 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.303124235 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.446910927 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.527852379 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.870914219 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.307286546 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.54417687 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.801824835 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.371201944 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.311005172 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.814908058 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.372917499 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.305550259 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.304310635 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.305534236 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.30344002 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.34902278 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.368817857 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.857892401 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.919066415 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.882763362 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.373694917 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.318915844 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.305962068 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.864818501 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.307609386 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.305859482 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.697795875 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.933188925 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.322381485 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.310608129 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.917645991 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.32066294 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.37033064 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.311245721 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.707867104 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.308516972 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.345516536 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.30667143 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.314332734 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.30809786 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.374493774 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.310603577 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.305529092 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.909476576 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.469065256 seconds)
  done (took 171.179903161 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.300414344 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.295191114 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.29932652 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.29899564 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.299817524 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.306209418 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.295681725 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.305234767 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.306854111 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.297007212 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.302263751 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.298347883 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.29944829 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.320955434 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.307892172 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.306369648 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.951284044 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.296824867 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.301683033 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.317746797 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.072274657 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.301452566 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.315406117 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.299578707 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.300052065 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.298971191 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.318659845 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.301648446 seconds)
  done (took 151.160238146 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.308886628 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.819068772 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.307873329 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.423897674 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.329034147 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.303819051 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.42255573 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.361650759 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.31129713 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.30543295 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.303920775 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.579344465 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.30771305 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.771430843 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.479116796 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.426461078 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.772734958 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.308965563 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.304443119 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.305100297 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.425302833 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.31762295 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.580080437 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.823659642 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.313960011 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.821765555 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.301893532 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.304875641 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.306720019 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.823031476 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.309895283 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.58594582 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.379163487 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.363582632 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.822414706 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.774673487 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.77584375 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.442144766 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.306058528 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.306935609 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.308539503 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.298372116 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.823192569 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.313634662 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.311303241 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.814438453 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.328574579 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.30976259 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.318316798 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.307783547 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.363567144 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.36035594 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.587843047 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.827891827 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.378092665 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.328397551 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.422177365 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.662193121 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.311366993 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.776672611 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.295937597 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.824064159 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.313616475 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.299748193 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.309861467 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.3100327 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.440509511 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.428318795 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.783011387 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.312780341 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.775639267 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.441261649 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.311303097 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.307373457 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.308302047 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.827103836 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.774933013 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.440184612 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.433607647 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.484896984 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.300318791 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.306567475 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.296509548 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.380220999 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.310463579 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.827496458 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.778970762 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.310362282 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.312922422 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.312909192 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.313574414 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.467188306 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.832243516 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.385083843 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.770941238 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.60162411 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.589698637 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.316656712 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.36082516 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.312365666 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.590951954 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.31551414 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.36275645 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.723236074 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.590305004 seconds)
  done (took 155.032214427 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.529610015 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.43076175 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.394286468 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.412722974 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.816113306 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.858287743 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.426795422 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.429742206 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.413554414 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.539395033 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.392968573 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.40715429 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.481117838 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.379740228 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.973901127 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.374553697 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.401130576 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.428241912 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.411160729 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.270213283 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.913592261 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.582993348 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.469933869 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.309170087 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.400310637 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.027480761 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.82523313 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.804665869 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.470098477 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.482339129 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.816011185 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.369399948 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.204265499 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.941743479 seconds)
  done (took 62.638943917 seconds)
done (took 663.92182463 seconds)
SAVING RESULT...
DONE!
