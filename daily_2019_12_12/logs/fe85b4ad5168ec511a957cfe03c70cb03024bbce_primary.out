cset: moving following pidspec: 31407
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.397099051 seconds)
loading group "string"... done (took 0.577494601 seconds)
loading group "linalg"... done (took 7.268699491 seconds)
loading group "parallel"... done (took 0.156816904 seconds)
loading group "find"... done (took 1.164746607 seconds)
loading group "tuple"... done (took 1.82346917 seconds)
loading group "dates"... done (took 1.328525984 seconds)
loading group "micro"... done (took 0.222774043 seconds)
loading group "io"... done (took 0.962597055 seconds)
loading group "scalar"... done (took 38.961394 seconds)
loading group "sparse"... done (took 12.463990433 seconds)
loading group "broadcast"... done (took 0.965864512 seconds)
loading group "union"... done (took 12.911751457 seconds)
loading group "simd"... done (took 4.632763493 seconds)
loading group "random"... done (took 9.332917966 seconds)
loading group "problem"... done (took 1.847393826 seconds)
loading group "array"... done (took 20.818828465 seconds)
loading group "misc"... done (took 1.68120579 seconds)
loading group "sort"... done (took 3.359729817 seconds)
loading group "collection"... done (took 17.29168724 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.508705364 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123853198 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.11759696 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118168759 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.148601223 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.1130099 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122344827 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08500628 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.799243535 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147536049 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115632789 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.426923408 seconds)
done (took 5.120802059 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.171268579 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081418717 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081694271 seconds)
  done (took 1.282511522 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065821928 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121256802 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065541156 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067312769 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067913133 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066876267 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066539933 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066957991 seconds)
  done (took 1.642635743 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072229892 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068908838 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.065463734 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067582534 seconds)
  done (took 1.393086746 seconds)
done (took 5.686005506 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.785984198 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.205084729 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.186106084 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.411924244 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133277636 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.15970934 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.650479607 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.313037979 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.186018645 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079460065 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107289472 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.324473015 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.112846684 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.643359716 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07636273 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.09042321 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.135424249 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.437172615 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066446356 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.080617614 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.087974144 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127080757 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086823342 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073124957 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.146982294 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.066483087 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.134960471 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.078599721 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065275071 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.209986621 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172535774 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.653705121 seconds)
  done (took 10.246604242 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09527369 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096358579 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06822802 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122004913 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094794781 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068693865 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070532014 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06633799 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085140319 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.125739823 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.086985023 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.099778053 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064506324 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067857967 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084478841 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202993012 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079024352 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080190434 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069809203 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074425607 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104177503 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.076659447 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.075467062 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.075558008 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128030917 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179228125 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099541046 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099426041 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067054046 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.077678518 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114693886 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.123381627 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064289635 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.064898846 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123090961 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.0931833 seconds)
  done (took 4.524046094 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.991710976 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.141666364 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090133473 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.133316478 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.063796651 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.10848933 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064827998 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.079779426 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.207171314 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.374075978 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.587320628 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110431778 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102267165 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066476901 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067210751 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065874563 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.476759188 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.096867556 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106484602 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080918962 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069618782 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068099753 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.355120407 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067565198 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063298819 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067652307 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.056371891 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124546077 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067603282 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.938371551 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125274451 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065378707 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099488306 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161334506 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.108876714 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086934512 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.27155843 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068718812 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064294405 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.151996382 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070484391 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065248436 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082550769 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102255451 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112743046 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065078585 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066363888 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.163869865 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06401112 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078138829 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.637275135 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152421488 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076002109 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064401614 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.253990917 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086895156 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068532873 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063840484 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.180384007 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.130915728 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.06732186 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.06549047 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066938017 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068442888 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.360594372 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065364575 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063754298 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.06640934 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07526518 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.880533477 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071494881 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069124453 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072540803 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071739145 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.086788828 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.06297264 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06559019 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074387966 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.06766629 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067352194 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067962604 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065776689 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084812236 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.374891813 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065950776 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067030819 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063644394 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089017712 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095939679 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065666628 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064323245 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099216611 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067259792 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065310756 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105369521 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065377481 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.082386295 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068545939 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111983343 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.06485666 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.192671326 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066538896 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096552213 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.068581388 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097381432 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079594333 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066988849 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.418999813 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064723228 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.063964058 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067851776 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064500084 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066652917 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065957217 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078498745 seconds)
  done (took 20.863039444 seconds)
done (took 37.744174081 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.235987315 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.07544107 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.072480311 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07698574 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075804444 seconds)
  done (took 1.746369921 seconds)
done (took 2.935207346 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.12227566 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099241605 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063336385 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096830376 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063648295 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101022951 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099620519 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081002969 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099442681 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063273253 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096942318 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063298958 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063171556 seconds)
  done (took 2.322306472 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082835735 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084428897 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071138058 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082220492 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06400172 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083183729 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083380528 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091167413 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082958823 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074137688 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064732399 seconds)
  done (took 2.047022999 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08210971 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084180023 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069743889 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081412677 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062448824 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081293521 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081798773 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085178804 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081676934 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075326724 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064818207 seconds)
  done (took 2.028557543 seconds)
done (took 7.576194542 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077199414 seconds)
  done (took 1.248338901 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.590442698 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.046152627 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080651174 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.109194354 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.189406237 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.116544146 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.267990039 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085118824 seconds)
  done (took 8.838736097 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.104284828 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06980901 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073216373 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070027647 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070484587 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072738352 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072472013 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067562873 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07126781 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068710412 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071283332 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070289225 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069987607 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067641401 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068853816 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068658879 seconds)
  done (took 2.402139477 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093242191 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09108975 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072871 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.0736311 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071056727 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071229548 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.072937353 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072349736 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.06975514 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071423604 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073369523 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072651153 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070286261 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.063259623 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073239553 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.073675094 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070178513 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072571374 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.072731429 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073722818 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07340178 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063109045 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.069989128 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073456441 seconds)
  done (took 3.036479282 seconds)
done (took 16.706505549 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11260318 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071272185 seconds)
  done (took 1.363881641 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080275186 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081103162 seconds)
  done (took 1.349052699 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08095513 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064755823 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089372741 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076608931 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06528239 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.064580622 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086279305 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.064782011 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06490957 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065131073 seconds)
  done (took 1.910487786 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067543547 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076620248 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069650691 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079730804 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07207434 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.062747792 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.070819537 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06619634 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.075439851 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061606553 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.06981377 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081043035 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070122125 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082939893 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.070815285 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067555606 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069365124 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06622875 seconds)
  done (took 2.471241732 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065179602 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066001459 seconds)
  done (took 1.325702951 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065852846 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062540211 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06606049 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065688873 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062418477 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061279881 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062526105 seconds)
  done (took 1.637703309 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.388758347 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113071323 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.318406818 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072747424 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083313684 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257534281 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064773084 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.06983435 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069183847 seconds)
  done (took 2.67548725 seconds)
done (took 13.928188624 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079349216 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085865162 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094692205 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.371799878 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090708098 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065643484 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11305695 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.185304194 seconds)
done (took 2.289754503 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.210871885 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.638267382 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.404173313 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.204100382 seconds)
  done (took 2.439702073 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.342453088 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089641644 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060227624 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068294453 seconds)
  done (took 1.765604816 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065053097 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068882817 seconds)
  done (took 1.335639052 seconds)
done (took 6.953012844 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066168133 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.085447844 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.072895801 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065406236 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065969112 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.063715276 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06581027 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.063644552 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063040052 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066019318 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068200762 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.065255785 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065486586 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065432539 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063251161 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062971284 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065781524 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065343804 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062535917 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062549013 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062897534 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065408692 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062676203 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062864436 seconds)
  done (took 2.815571765 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084214094 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065480171 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070299979 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070561392 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068709252 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07032945 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.069968981 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.064814621 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070398691 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067746771 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068929708 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068183529 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067531064 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.06867251 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067546272 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068810202 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07048052 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064966699 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067612458 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068273842 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07010791 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064984655 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068792369 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070539914 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068156248 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069758783 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068232037 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065383688 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070482323 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068477206 seconds)
  done (took 3.278084586 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069246901 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063248773 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063266789 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070001319 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063574385 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063584756 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062912719 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063633158 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063740364 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062869096 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064484151 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062844159 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063011984 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063921609 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063664705 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066875677 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078693978 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063628758 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063316028 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063696105 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06638897 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063222169 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062770734 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062911373 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062887141 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062375583 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063488017 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063103731 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063493577 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063518973 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066334227 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067296393 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062460352 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070059284 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066427316 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062997453 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066763909 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062539112 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063127102 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062701462 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062699493 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.0625759 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064533321 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072213985 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065124624 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066151062 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063926753 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065347724 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065268661 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067269431 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.064715209 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06446669 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.181122341 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066142626 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069887514 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063483085 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063593066 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06208712 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063365676 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062833231 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061858321 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062534918 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064984811 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063393968 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077328367 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069566776 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062122927 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06359832 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.062911288 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065003509 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.063860074 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076100369 seconds)
  done (took 6.008965734 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08878248 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085786889 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063967227 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064641117 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060539538 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063118743 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06891203 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063222894 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06449367 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081008246 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063146234 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064141141 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064215593 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06685496 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063003078 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064175418 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070997715 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060674871 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06285383 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066884318 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064063077 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068740151 seconds)
  done (took 2.70768715 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153154087 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069065438 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105080622 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073871803 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068862821 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073835725 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068490998 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069390625 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068672187 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066446574 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06645389 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069023942 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06881943 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066319638 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066518261 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066610707 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069402832 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066403876 seconds)
  done (took 2.572709117 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.074940557 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.064978311 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085886077 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065251924 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065410445 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067513696 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068859497 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073015861 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067393113 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.064831106 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073112008 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067407917 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067349304 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064737345 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067478314 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06490675 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067443555 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064483187 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072694018 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069012853 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068932292 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073274775 seconds)
  done (took 2.736014615 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07922449 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067092486 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081106264 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066860499 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061274953 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063733126 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069000856 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064733121 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069351279 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067024042 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064875033 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06323835 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.067478412 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064409786 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.067306335 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06496022 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066640938 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064609933 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066456132 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060797027 seconds)
  done (took 2.559892404 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085890169 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06706114 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067081481 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074434628 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066516131 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.065858769 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074083534 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065966186 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066575707 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08646015 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066616492 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065731324 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073905796 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070978649 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066452696 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073460753 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07312955 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074064279 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066426092 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066376121 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087045823 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066432594 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073412031 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065934601 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065717222 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065882038 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065993624 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070715571 seconds)
  done (took 3.197610947 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065720086 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064713132 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062320182 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062876308 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062358 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062895283 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062757722 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062595944 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06540617 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06239698 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065116499 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064910367 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065622699 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064626814 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06515711 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064855449 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064681753 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062857503 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062367596 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062640598 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065328199 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065453153 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06493638 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06262524 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062582275 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064864459 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06212873 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062727308 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065337656 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062488777 seconds)
  done (took 3.138624848 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074370945 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072170848 seconds)
  done (took 1.370709921 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.061841595 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079320949 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061943706 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06935953 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068447777 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065669696 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072155443 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068143469 seconds)
  done (took 1.767800317 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080743801 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076323515 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067152201 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078453449 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075604617 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082758443 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133524753 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.065943981 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.071856555 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.062929937 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.07874681 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064634386 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071360116 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06540594 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07061921 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072004066 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062946696 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071297493 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067195135 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063542928 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065967216 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074077364 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067799566 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06031089 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066536761 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.086665157 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075713283 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065061913 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068031343 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072035246 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070715735 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.058794128 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064748189 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065261601 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062768691 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.07412899 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079829928 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068202754 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073307264 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066128697 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074567096 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060017346 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069945546 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071583788 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075287555 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.064889626 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065440773 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060121257 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062725033 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067500525 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060553873 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068475314 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059985241 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071972959 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068835526 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075704395 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063641786 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067004995 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067988276 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068363392 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071779644 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067118498 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067798805 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06533357 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075252137 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070057382 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073515181 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060168516 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059700012 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063536337 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074374433 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088066099 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071023276 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065165334 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065716188 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062587374 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068076742 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066079345 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070091152 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071606348 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064712321 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069960008 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072025426 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065319752 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067630363 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.07244293 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063093889 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067156068 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063403921 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081111304 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064014235 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063178553 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.062988061 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075548707 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068430908 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064991094 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062775373 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072221046 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059290713 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065469106 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065873013 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065752064 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074665762 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068540193 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068070376 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072562857 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.070960763 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064036598 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067013924 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061518603 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064414082 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.062936008 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071295786 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058325516 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067277599 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064519491 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064314266 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.072107707 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062189711 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.063834809 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071423169 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.069025247 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.190077672 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063849216 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068908173 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065999256 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068677264 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073752695 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064356325 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060600204 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060516774 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069498304 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.064894038 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.068935004 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069902792 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.067995774 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060879823 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063274923 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070705586 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.0742818 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.065528905 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066657799 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071691689 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067075379 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064580269 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072010471 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068819638 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064763299 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07140609 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067005171 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060735071 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067892362 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.067595611 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064143152 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069623389 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069164821 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067680504 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06609624 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064843434 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073092476 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065589786 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065569928 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066503876 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063894506 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.075645381 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067075946 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060120991 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062679363 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.073609 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063761169 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064562814 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06564383 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067902572 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066095151 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.062656819 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064729808 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.066878592 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075513941 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069614117 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065952064 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07028503 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076512363 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064871211 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068892634 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.0652017 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067112372 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066863386 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073956799 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070292758 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06948885 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068400897 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061902338 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070636412 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072472112 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064680396 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06318614 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064419927 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.068152892 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07062008 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.068588032 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065739276 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063242521 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065598277 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067513892 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.067920303 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064544915 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064061492 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070374365 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.0631291 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.070895369 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065823354 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.074801786 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068021391 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060623531 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068314806 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063466776 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071340963 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060280649 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063027109 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064346374 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065949686 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064032711 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.06743986 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.05983747 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072395234 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073004084 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065961962 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064443193 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06491185 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071794133 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066501957 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06827052 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067237884 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.069345055 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074153893 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.062832663 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067276969 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.073594298 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063569018 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058191112 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.069356615 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062236151 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062725662 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.062562358 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06164611 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066652773 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070957441 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.070077436 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.18616902 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068795657 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064176011 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065522191 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061525831 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071726222 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068656827 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067179894 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072707265 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065909206 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066061889 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.068769666 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065446912 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066109909 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.066490108 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068217473 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.065810118 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067545365 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.064771307 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068678155 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065001884 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063483761 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067817729 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065749349 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.065951633 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070924531 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.064902865 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065486559 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068036097 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.065677024 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066380687 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06559729 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064548198 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067640515 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066309269 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065413988 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.067331953 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.060047743 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072377791 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06556977 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074142007 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.06786762 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063638718 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072700637 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.067917325 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070110402 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06551613 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065960684 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066703472 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064506129 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.067980655 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073703485 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063606794 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076421756 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07311225 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067154358 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.067627655 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066374369 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.066806653 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064412281 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066374196 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065818285 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066225414 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.064917057 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070235296 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068211286 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066724485 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068023852 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066337935 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066469966 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066418611 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059599744 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065248442 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06499732 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064711187 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075381528 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066194158 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065028685 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064278946 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065640574 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064679531 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061944372 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.072202873 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073303415 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065946142 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07197796 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064266205 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06657167 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076105962 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059306971 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063127401 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062920691 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063244456 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072104707 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.06529714 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074711433 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065990882 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064815427 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06209866 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065635747 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06354943 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059827167 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06295417 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069127958 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064643881 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0645172 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065538208 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067609646 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065701388 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074609424 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064064203 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066053214 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.0643403 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06130308 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063977145 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063003886 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.066751327 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064339414 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.061889063 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061637073 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063094031 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.064854777 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.065378728 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065855884 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.065135427 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069918715 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063624991 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.06678619 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066264462 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.058526836 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.19833854 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065694596 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.064828435 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064657951 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.06963335 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068700872 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066102395 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074412896 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.064799231 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066543264 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065817198 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064235719 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065008636 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.064135062 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065025101 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.064353437 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066621234 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073073822 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063979605 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068610753 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06607634 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066151278 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072426167 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066692013 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.06938414 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07175092 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06644341 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067483556 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073234125 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070177838 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068098356 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066685508 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.06743877 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071175683 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065184001 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072282168 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066029589 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065991861 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.066724494 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06412306 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064969201 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065657423 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064311204 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071663508 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066029797 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064845083 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064882952 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063390675 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.065953613 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068513219 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073317223 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067773558 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068903905 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060617246 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062499323 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066830142 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064115472 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.066977124 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068440463 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071262224 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067950616 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065857497 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063801223 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074933926 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070487271 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069047735 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063601626 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069022747 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065717387 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067821634 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06655065 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065918761 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066249496 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.068580559 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.066721749 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065020356 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071864972 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068399016 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066052367 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066435542 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066244664 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065349616 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060258434 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065238949 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067468265 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070001194 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.06726876 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065049538 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075261707 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063157743 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065597348 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067770552 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0643145 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069642188 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060055091 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066692154 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065596217 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065544328 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.059993125 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064704696 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063167328 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067653848 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064198082 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060466024 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075323064 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074374969 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06824038 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064124728 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063997781 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060243255 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060563884 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064306377 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065259036 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.066784062 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.074546518 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064159777 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.063678605 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.059685357 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06415697 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067012251 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.066790251 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061366785 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.059089253 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06312052 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.067013131 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.069470501 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062098127 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063007451 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067830525 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.06629886 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062037682 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066030795 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06062134 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.066966934 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07523741 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06368155 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.064918813 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.069247237 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070994568 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.064164837 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.05866855 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064015714 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.066603381 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.064261981 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064131892 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064699159 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077642519 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066924357 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.0628845 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.062210479 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.065892194 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.063069954 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.071497986 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064623125 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.064027654 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.068695072 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.065682572 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07101497 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066266555 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070626541 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.06710376 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.066607871 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06274864 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064069629 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.061949715 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.063184182 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06454834 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.064513075 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06763582 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.070264117 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.062851443 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.073036879 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07173448 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065189103 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060091419 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.062926471 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.062513056 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.058612856 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.063697268 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.060474818 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.061605056 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.061038278 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.062973068 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.064312393 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.067941567 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.064590699 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.064120917 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.063000712 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.058073517 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.065071021 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.065194739 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06360152 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.060092422 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.063416005 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.063716942 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.067122264 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06578746 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.061117322 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.065099222 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.06430491 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064157601 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.059098235 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.069528257 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062729234 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.065173469 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.062474399 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062910146 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.063685064 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.065609094 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066929611 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064344234 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.064939253 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.065946878 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064473822 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.060770806 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.060666198 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.067763544 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.061228435 seconds)
  done (took 41.466110465 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106551302 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064946509 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063705704 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063512468 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074319009 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064149113 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063131746 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063951397 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063865701 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066531379 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063025499 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062883702 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071110666 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078683283 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073701781 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067569308 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062344552 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063643789 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062532465 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063356314 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070514722 seconds)
  done (took 2.883462401 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074852476 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078012219 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076373701 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083329011 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071287933 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070856443 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075311089 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070901931 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078371678 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072388245 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078408739 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070338768 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072650208 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.07222176 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072308207 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070301758 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07823122 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070808801 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069843375 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074593444 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070305105 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074445458 seconds)
  done (took 2.954916885 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066514979 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065552774 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068064681 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061717821 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06528149 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060869507 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068528027 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063672527 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068912563 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065107335 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064449256 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064877871 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067049592 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060869131 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066074672 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063407435 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10720974 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068435515 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065769343 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066341218 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061546952 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068052343 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06076356 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061304681 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065299404 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068668091 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066082304 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063942887 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065400838 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065098122 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065590522 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063869878 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067563909 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066766168 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064589976 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064709157 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065429485 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065655436 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061376322 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063644796 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06615333 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061357124 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065597629 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.0671748 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063930707 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064173833 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067398602 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065050547 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060724298 seconds)
  done (took 4.557294607 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078528296 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109186537 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067949231 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090698746 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079298695 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.071837624 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069122081 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090023794 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06229559 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06383025 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080759126 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078007748 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06522745 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.06998889 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069421815 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065273466 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065930255 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065149823 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068297592 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064247324 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.0685065 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071772204 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079001114 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.076817792 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069169671 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063768041 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064669428 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069451645 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076830833 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069029739 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069285242 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070938123 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079523877 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069865523 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064239431 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067323979 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080348133 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065061388 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067979779 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062561425 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067676521 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069148038 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071877478 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080730475 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065395122 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.06992805 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064772778 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062375695 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077456426 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06714559 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07223622 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.07819329 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068927032 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065031189 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069546382 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079666739 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065352356 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06317948 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06785933 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076264353 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062585013 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06908331 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077726819 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067279909 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071735682 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078418864 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070145287 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068421938 seconds)
  done (took 6.321072115 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075347773 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094235031 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08221948 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08204154 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074879475 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074902227 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075158251 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074907817 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074627119 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079557542 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074705455 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115465236 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.07042524 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077359042 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074860279 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074891174 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074427903 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074777842 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074562429 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074614466 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074412655 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081451384 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07440981 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08184885 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078619984 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070064177 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074754613 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074433386 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082145372 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074246242 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078764539 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074906388 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083591163 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.08166351 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078836192 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07439348 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06471038 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074710143 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074941473 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074622401 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070088312 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081825822 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07443725 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.07063588 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074932513 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074184267 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08173277 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079376517 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076542824 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078530106 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074582344 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081377285 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074258014 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074255724 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081631679 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.083880664 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080682492 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.0810153 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073932334 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080623524 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081127001 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084349655 seconds)
  done (took 6.16805269 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082074144 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072657787 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081002012 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060880058 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063461007 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070923456 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063550908 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063167541 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073193452 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.07328238 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075461087 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070854891 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073998976 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075220352 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070935232 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073597365 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071059374 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070932443 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073009945 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070887361 seconds)
  done (took 2.783331295 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074095287 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082654074 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066341695 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070904828 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068469195 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070872137 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068269562 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068143989 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066551328 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068454669 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07580309 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074949448 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066001337 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070476941 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074900482 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070988554 seconds)
  done (took 2.486482259 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.082675126 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072201376 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079049623 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065516076 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066527943 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061490156 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065096608 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060408187 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061333779 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077317507 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064582192 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075232189 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065755509 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063613286 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061972675 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070145263 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061518899 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062739239 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064750405 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077289568 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.068732314 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063372631 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068406267 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065317251 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066896115 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.06933949 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.063993815 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065015116 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.061541661 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.064847019 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067789728 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.067905055 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061457311 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062399004 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063454825 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.061913638 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064519449 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.064933876 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069827616 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064968188 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062631632 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067070557 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064348227 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065803985 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061132304 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065627276 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061061667 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066604134 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062594735 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066920508 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064547219 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.066662449 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06513823 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071048591 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067598079 seconds)
  done (took 4.995257679 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078454076 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068905131 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06113032 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06319793 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068397297 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066400761 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068336234 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066156144 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066447993 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063069767 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065920925 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068684465 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066227174 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068643298 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066260907 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068316185 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06049757 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066480028 seconds)
  done (took 2.563132026 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070967692 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065660649 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072779043 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064944686 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065505327 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067626586 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061316759 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06378842 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063793594 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064838672 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064838718 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067509494 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063682496 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066931174 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064970701 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064571232 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06757354 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063677654 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065093503 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060663202 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.0674149 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063656997 seconds)
  done (took 2.7964451 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093356838 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082892438 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139292355 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078144827 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083476664 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070363849 seconds)
  done (took 1.904175036 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090120695 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100262143 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065769997 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067947293 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074004583 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068477728 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068406801 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069193842 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077198641 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074438363 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068777745 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076769785 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076498721 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076666807 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074537819 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074269544 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068422228 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068442933 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064994517 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081736637 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069082644 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076940369 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068734561 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068545339 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069350598 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076421046 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077091804 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074310165 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06908036 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077472409 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074505507 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06933038 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077829627 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07458259 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069207302 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076883728 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068877205 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082068397 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074370759 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075927102 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06783133 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074460178 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076991664 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073343285 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076422373 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069181946 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073211644 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069051937 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068443533 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083855951 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074558759 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075977353 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077584945 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076787003 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076996703 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084064271 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074313831 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075946163 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074568496 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074752424 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076327273 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073802457 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076204511 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074841586 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074640967 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076085774 seconds)
  done (took 6.264504315 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102736956 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066367329 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069101957 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074546661 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076441013 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068671907 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069251718 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069144616 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069312977 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066048414 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106682109 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068844383 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076471859 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076623566 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069685705 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069376246 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069223818 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077136603 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066145182 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084664312 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069029858 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076201482 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076042367 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076250316 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074988177 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074581497 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068943341 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069053032 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068625345 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069130055 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073373238 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069031783 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076070876 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065975114 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076051007 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069321009 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069536347 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073476695 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068912501 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074473325 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075978526 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081710402 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068935943 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068982418 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074892406 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069274997 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068783638 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065914517 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068826489 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065940842 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075413552 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074626896 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074732057 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076420518 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069966675 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069079031 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069158009 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069021212 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069552424 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074522744 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076214241 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069267536 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084819477 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068870177 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068800083 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076211202 seconds)
  done (took 6.18245192 seconds)
done (took 127.680470018 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.18340894 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.162857678 seconds)
  done (took 1.696909908 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068507689 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098304146 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076034347 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128045474 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065779485 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099172159 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098615505 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077302367 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.064816138 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065236096 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.064661469 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067667806 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130052465 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06540525 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065475851 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.067604756 seconds)
  done (took 2.664987974 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098709589 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.162598897 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101977203 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064147826 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098280449 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072219713 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.063870145 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074110448 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.069929833 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064808809 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072092839 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069215236 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.063885264 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069901296 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069652271 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071770937 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.063954591 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071564962 seconds)
  done (took 2.787908718 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.097583284 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090477339 seconds)
  done (took 1.554062771 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.161552089 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.107070216 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.14509015 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.347170778 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.162427903 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.149032659 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.146082997 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.146403889 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.126831654 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.138632275 seconds)
  done (took 2.993426537 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098609011 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152714622 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.264571227 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116092451 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072020473 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.092434333 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117075877 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077585568 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078841151 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.07901624 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079386605 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07493903 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099220485 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072243337 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072797234 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075154533 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102297465 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071826608 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073782374 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075229983 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.09948245 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.064640469 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072365735 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.0719376 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076034972 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076256922 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065637881 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064995392 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075554989 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074237117 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075692435 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.091994392 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075975769 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104708221 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070398808 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105409818 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075597504 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07264459 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073740527 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072427289 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077084884 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077821369 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072003366 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075196363 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064905002 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075347501 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064715663 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064789198 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077061961 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066177727 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076686126 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075797965 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104369096 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.065688302 seconds)
  done (took 5.930320939 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102690571 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104399461 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071567798 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.11151629 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102093626 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071719777 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.1015163 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095261813 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103033164 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069554107 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067465954 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069658313 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081049338 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082106952 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114109252 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.105943717 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072654781 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07057717 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105227937 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104076663 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067402649 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095956437 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090710057 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102746708 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066880577 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069764621 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066980153 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069625923 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07530775 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077697711 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068510436 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07960855 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083967722 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076611557 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066457217 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067264975 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.0675068 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.07848687 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077966325 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077534083 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.075805222 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067244868 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067181302 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068775701 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069245981 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066974885 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077812165 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079415455 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077460056 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068319183 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068941805 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.066859351 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068858245 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078441077 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076049983 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079375304 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078757893 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067655441 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067165019 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071585326 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079453817 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077829866 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078599372 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068414249 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078036804 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067291299 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079223044 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082820137 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067768341 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068976698 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06768214 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068603498 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068320408 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076700049 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077023608 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068325948 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068567664 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067573838 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079070892 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077540294 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067222198 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07571787 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066484771 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067212609 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068516176 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068930194 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076362519 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078868225 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069538059 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067564648 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068797011 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06756523 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066742478 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.07580095 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079396097 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078671575 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077306395 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068721642 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077523669 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076888327 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068569317 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077809383 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067040211 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068557336 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068266137 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076221624 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075043312 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076729322 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.19871989 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068122517 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.07844109 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080358398 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068552993 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078318752 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079848052 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079045627 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.06766981 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08060394 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068361545 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078921481 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069798353 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080973237 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068439016 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078631624 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069044001 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067349676 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.0681717 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078947516 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072727031 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067916313 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069830757 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069768676 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079252364 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08184044 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070339372 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077282395 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078119785 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070242632 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07792836 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068375599 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077990435 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069231366 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069573284 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066887282 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082253011 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068686302 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06757818 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069108008 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079886172 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067965436 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08013329 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077569364 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067821302 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079712822 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079088179 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076447687 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079545207 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070115074 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068422321 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06690503 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06852999 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077877877 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079405045 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069347163 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068355357 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076045134 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078638335 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066432021 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077573677 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077519709 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078621902 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068417647 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069522898 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080160242 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080637923 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077154083 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.076885488 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077811894 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068242371 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076076999 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077317034 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06761967 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082786193 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067412404 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081030758 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077173712 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075186838 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077473166 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079060624 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078389801 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079482369 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081495846 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067042561 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067214504 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077740962 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067100917 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068157045 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076822411 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068801309 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069231937 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081766446 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068091045 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078549555 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066733661 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077753035 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06608504 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068727644 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08224869 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066644088 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068058819 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077032766 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068134871 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075426659 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078551989 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07631411 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066182102 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068083221 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208081049 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.07814158 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068054725 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067547825 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070205031 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077152182 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076946242 seconds)
  done (took 18.474191887 seconds)
done (took 37.475538409 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.207990276 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154623437 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.180541254 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117308275 seconds)
  done (took 2.127914837 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.115751912 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100043361 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.091503851 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.063985925 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.097028164 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065185683 seconds)
  done (took 1.936619573 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.307146014 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.208481275 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.185761252 seconds)
  done (took 2.09902234 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.201298338 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189774413 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.418720813 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.262600394 seconds)
  done (took 2.58648366 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144119449 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088116921 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.065872131 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082943957 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.130918218 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.157875806 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.09853167 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.123240904 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07713259 seconds)
  done (took 2.423204591 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14679266 seconds)
done (took 12.720818468 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.243258259 seconds)
    (2/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.096389809 seconds)
    (3/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071670976 seconds)
    (4/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.200662093 seconds)
    (5/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.224523177 seconds)
    (6/309) benchmarking ("sort", Int8, false)...
    done (took 0.152972162 seconds)
    (7/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.172159918 seconds)
    (8/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.239385702 seconds)
    (9/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.201029844 seconds)
    (10/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.081005772 seconds)
    (11/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.163358339 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.072490591 seconds)
    (13/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074422283 seconds)
    (14/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.088866122 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077641831 seconds)
    (16/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.169203885 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073295107 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.121278578 seconds)
    (19/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077599217 seconds)
    (20/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.178901641 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.148184626 seconds)
    (22/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.073817531 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.093856242 seconds)
    (24/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.174237307 seconds)
    (25/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.07216335 seconds)
    (26/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070401383 seconds)
    (27/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07540822 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.089411502 seconds)
    (29/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.120440286 seconds)
    (30/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.076527187 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.115852484 seconds)
    (32/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073341774 seconds)
    (33/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.211706841 seconds)
    (34/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.050399601 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092684774 seconds)
    (36/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074300268 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.097669935 seconds)
    (38/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.159352651 seconds)
    (39/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.099323422 seconds)
    (40/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.17619583 seconds)
    (41/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.177881077 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070337364 seconds)
    (43/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.159208183 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.088914692 seconds)
    (45/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.180847023 seconds)
    (46/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.152523937 seconds)
    (47/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070897368 seconds)
    (48/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07521995 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.140570021 seconds)
    (50/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.214096538 seconds)
    (51/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068423609 seconds)
    (52/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.161204465 seconds)
    (53/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061384449 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073447419 seconds)
    (55/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.142463602 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089184596 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071569041 seconds)
    (58/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.182268677 seconds)
    (59/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.051093547 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06468846 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066478149 seconds)
    (62/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.051215097 seconds)
    (63/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.152443627 seconds)
    (64/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.076638376 seconds)
    (65/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075130424 seconds)
    (66/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.159313306 seconds)
    (67/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080398429 seconds)
    (68/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071487829 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.087651208 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.096475661 seconds)
    (71/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.181347114 seconds)
    (72/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.162529344 seconds)
    (73/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.158560938 seconds)
    (74/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071023114 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089249675 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127294819 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.063858131 seconds)
    (78/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.109042739 seconds)
    (79/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.06969951 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.063465822 seconds)
    (81/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.202341191 seconds)
    (82/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.192398389 seconds)
    (83/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.137728789 seconds)
    (84/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068828074 seconds)
    (85/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.229761532 seconds)
    (86/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.062995483 seconds)
    (87/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078367373 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 0.066132524 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.172166972 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093110634 seconds)
    (91/309) benchmarking ("sort", Float64, false)...
    done (took 0.130289119 seconds)
    (92/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068025632 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091038048 seconds)
    (94/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.110255774 seconds)
    (95/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.078060262 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065847275 seconds)
    (97/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.181144088 seconds)
    (98/309) benchmarking ("sort", Float32, false)...
    done (took 0.131673035 seconds)
    (99/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072176589 seconds)
    (100/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089922477 seconds)
    (101/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069756313 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090545709 seconds)
    (103/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074863253 seconds)
    (104/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.06309653 seconds)
    (105/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.06719921 seconds)
    (106/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.193864314 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.092051761 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088486696 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091377657 seconds)
    (110/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076254388 seconds)
    (111/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.06300671 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.091942791 seconds)
    (113/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066685116 seconds)
    (114/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064456558 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064559965 seconds)
    (116/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.049758074 seconds)
    (117/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.159001848 seconds)
    (118/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.049799541 seconds)
    (119/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.153508727 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.071953408 seconds)
    (121/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051560463 seconds)
    (122/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050685515 seconds)
    (123/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.182843896 seconds)
    (124/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.154960488 seconds)
    (125/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050300087 seconds)
    (126/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.075432388 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.139490601 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088849248 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.140461033 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090390822 seconds)
    (131/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067726982 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087102464 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.064874438 seconds)
    (134/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.051589969 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064924057 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 0.137046614 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072546427 seconds)
    (138/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071363548 seconds)
    (139/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.160537867 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.084579341 seconds)
    (141/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.106035554 seconds)
    (142/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.116255789 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070064663 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071348164 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064568191 seconds)
    (146/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.061866162 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071001214 seconds)
    (148/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.065504327 seconds)
    (149/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.064954349 seconds)
    (150/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.141597705 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.107729771 seconds)
    (152/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.05088735 seconds)
    (153/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.151805329 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064146301 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071375633 seconds)
    (156/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.051326867 seconds)
    (157/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.050867152 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095981814 seconds)
    (159/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050195094 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.075389103 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072640737 seconds)
    (162/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.203846089 seconds)
    (163/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066449262 seconds)
    (164/309) benchmarking ("sort", BigInt, false)...
    done (took 0.187610832 seconds)
    (165/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.290169405 seconds)
    (166/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050443184 seconds)
    (167/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.052721231 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064871426 seconds)
    (169/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.099346629 seconds)
    (170/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050144043 seconds)
    (171/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063474099 seconds)
    (172/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.051432453 seconds)
    (173/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.069596827 seconds)
    (174/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068837205 seconds)
    (175/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.050625789 seconds)
    (176/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062455772 seconds)
    (177/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.050960145 seconds)
    (178/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.178013095 seconds)
    (179/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.108450618 seconds)
    (180/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.107815159 seconds)
    (181/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.154420053 seconds)
    (182/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.074906609 seconds)
    (183/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073181662 seconds)
    (184/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081696873 seconds)
    (185/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071877207 seconds)
    (186/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085910643 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071018045 seconds)
    (188/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.108697946 seconds)
    (189/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073488892 seconds)
    (190/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074311198 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073414547 seconds)
    (192/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.059632426 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.106310098 seconds)
    (194/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.070751347 seconds)
    (195/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072271417 seconds)
    (196/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.049785821 seconds)
    (197/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.152532652 seconds)
    (198/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.052039653 seconds)
    (199/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.049033431 seconds)
    (200/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.050187995 seconds)
    (201/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.051488712 seconds)
    (202/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.21677519 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064129311 seconds)
    (204/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.04979373 seconds)
    (205/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.155271757 seconds)
    (206/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.182898954 seconds)
    (207/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.050581664 seconds)
    (208/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050292301 seconds)
    (209/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053365455 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.09132636 seconds)
    (211/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070924273 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065018285 seconds)
    (213/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071579484 seconds)
    (214/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.138869638 seconds)
    (215/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073141323 seconds)
    (216/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088862776 seconds)
    (217/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050285324 seconds)
    (218/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.050751109 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073471245 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072942864 seconds)
    (221/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078982635 seconds)
    (222/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08248818 seconds)
    (223/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.049831688 seconds)
    (224/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06490401 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071298806 seconds)
    (226/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064874875 seconds)
    (227/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.050654021 seconds)
    (228/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079238262 seconds)
    (229/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.050989969 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063707612 seconds)
    (231/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065693887 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.108223646 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.124866973 seconds)
    (234/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078284133 seconds)
    (235/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050032613 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088053235 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.135580856 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.108999242 seconds)
    (239/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068208222 seconds)
    (240/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050744454 seconds)
    (241/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.050788541 seconds)
    (242/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064932138 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086624828 seconds)
    (244/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.050809677 seconds)
    (245/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.049967747 seconds)
    (246/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050521993 seconds)
    (247/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065322006 seconds)
    (248/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.075081164 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.170696295 seconds)
    (250/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087580906 seconds)
    (251/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.064765959 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064272081 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.173232202 seconds)
    (254/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.052398982 seconds)
    (255/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07357182 seconds)
    (256/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.052037965 seconds)
    (257/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071785088 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066400293 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071310587 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.098674995 seconds)
    (261/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.064582529 seconds)
    (262/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.05129538 seconds)
    (263/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073698996 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072798875 seconds)
    (265/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.063723969 seconds)
    (266/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.192869515 seconds)
    (267/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117750919 seconds)
    (268/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073187939 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064682575 seconds)
    (270/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.109277667 seconds)
    (271/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.04999987 seconds)
    (272/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.050846134 seconds)
    (273/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.04960462 seconds)
    (274/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.06549925 seconds)
    (275/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066623777 seconds)
    (276/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070565464 seconds)
    (277/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.065357127 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.131884492 seconds)
    (279/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.050934852 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064202399 seconds)
    (281/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.049894253 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072108519 seconds)
    (283/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.140838047 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063139476 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063499491 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071844482 seconds)
    (287/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.095235068 seconds)
    (288/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.059807462 seconds)
    (289/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065521827 seconds)
    (290/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070338047 seconds)
    (291/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.049916232 seconds)
    (292/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.050615746 seconds)
    (293/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.063834747 seconds)
    (294/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.063776216 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.12327968 seconds)
    (296/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.064405546 seconds)
    (297/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.049807175 seconds)
    (298/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065624283 seconds)
    (299/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.06976414 seconds)
    (300/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073484463 seconds)
    (301/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071334606 seconds)
    (302/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051031014 seconds)
    (303/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.051190892 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069924496 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.08945833 seconds)
    (306/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051770597 seconds)
    (307/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063641202 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090024092 seconds)
    (309/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072066223 seconds)
  done (took 30.636286352 seconds)
done (took 32.05031707 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084717453 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092148802 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074990465 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092534964 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080381849 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075259902 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071743006 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077468459 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079410854 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080820605 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077149064 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053660736 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073024166 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073289924 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074176367 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090792715 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077605827 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072240697 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072005969 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063489132 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072404708 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064504826 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066316869 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.053584433 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077455285 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070958818 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071390074 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072697593 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064849336 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.064692992 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068191294 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072846184 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064415666 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076865221 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071149175 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071752653 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073154518 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075997782 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066726374 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064437452 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073088563 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064362939 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071513477 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073033447 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071373492 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070783246 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072543723 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.07656475 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089962721 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06663324 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074200683 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07486251 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075108139 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071631504 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068819402 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071647049 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.06988818 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090630717 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072087523 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066830523 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073459093 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073471328 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070358638 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072277127 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072143681 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074839781 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074919572 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.0702454 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074449304 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070318775 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064414906 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071589067 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068395189 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064604648 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075310213 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075836543 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063082052 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070604731 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071778333 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.069869412 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063932128 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065990675 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065695957 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.0711303 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066096646 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.052795746 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068350314 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070678688 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063629193 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07236109 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070644388 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071644973 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066228102 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074511476 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063995097 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070176528 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064195344 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064646997 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065952649 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068755216 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06400902 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066643037 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073961856 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06583934 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070856616 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.07815029 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.063971335 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07105297 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063693672 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063993682 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078259591 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074146998 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064100981 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06667873 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063481817 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072238572 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064005462 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.06402818 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064109099 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064336985 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071221872 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064384777 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065862881 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071553484 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077218823 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064244874 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067587301 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065982581 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064664759 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.0709705 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06399572 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063811535 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065690126 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.060756782 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065683416 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063700671 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071520557 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065135627 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.205296874 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066911999 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073417617 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069727737 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070935086 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070680876 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063645644 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058376931 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067218042 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066580228 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066738372 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06448222 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067117957 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064168354 seconds)
done (took 12.320660784 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065601622 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.139308908 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096286299 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095172307 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.084869705 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065466916 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075362039 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100090639 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066684361 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100109678 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087025905 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085343026 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112833324 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064059473 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065205184 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068614206 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066159274 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081037808 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100087094 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085497945 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.114242926 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065132455 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09182089 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.08804973 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087204368 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.102264076 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068577391 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069157811 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.0688281 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091616172 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086840645 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.06953351 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065206367 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098162318 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093448879 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082908117 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065275374 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082360546 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06563015 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064817813 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066645129 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097692098 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079578116 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079664788 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069474775 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.06807839 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066185278 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08288817 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089107343 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078376767 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085412905 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.100461154 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067890147 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064678202 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06396442 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085565313 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064909664 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068009678 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065293526 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067714918 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065330671 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068534799 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.079714798 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.0797527 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069113173 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.078797881 seconds)
  done (took 6.751858842 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083578881 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091314133 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082074361 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082407876 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064842316 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065788233 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.064887288 seconds)
  done (took 2.040439753 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066254833 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087961632 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088384608 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088582965 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083225069 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086642009 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074746405 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065838358 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.086963758 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066477812 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086578264 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.09970142 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069225559 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072625941 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08961703 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065394134 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089551783 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065762277 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068260718 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089736977 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067757046 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094723023 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068905992 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066150423 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079892723 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065529024 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112723941 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069664198 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067184889 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069282295 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063135127 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105580432 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079105637 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.073357022 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065166501 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079472132 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08001885 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063831257 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081828352 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073824464 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079278735 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066105727 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066254023 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063360211 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069512697 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.075320634 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06643784 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066456193 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067656471 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085331196 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.065968102 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.07907608 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.06852641 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070850597 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06745399 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072025494 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075400956 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066266108 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08586839 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06673256 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082435628 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081495407 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079322005 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081544346 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067816915 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079346776 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079817865 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068027492 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067650261 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069193028 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082035898 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.063807798 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067589428 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076376594 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06710179 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088211791 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088974363 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067205406 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.079536185 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066276549 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065470616 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065539154 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088478682 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070657778 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065357614 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069413559 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069263253 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.063961097 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064426206 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069663472 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063602765 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067194614 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068643347 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068372422 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068371184 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081896779 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068364082 seconds)
  done (took 8.719873487 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068379428 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.066326502 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068567112 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066486702 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067335588 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067186206 seconds)
  done (took 1.929583217 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091315929 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.067221321 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079409758 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071260958 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103578255 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085632891 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086597377 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076869346 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082371515 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077311456 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085688841 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086971142 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091032318 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071164462 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084865635 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.070435564 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086075475 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.073985251 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.07737404 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071944877 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085488655 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.0710882 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072156109 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080783747 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074871782 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.070913955 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.06616988 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077304995 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.07738648 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077223796 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071047227 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074658162 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069993167 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077256949 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085568431 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069032014 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07050102 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.075649018 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071027418 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074727702 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086772878 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071672207 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.072785118 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076367667 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.076767425 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069104879 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076331395 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.073998277 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086007148 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.0760143 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.075728124 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070528417 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074088234 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076135953 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069811522 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076668027 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075971466 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085445353 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070998183 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069139415 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067927992 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074256181 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076078426 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074122161 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077725887 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.075670849 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069060303 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070813523 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071377859 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070239617 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07565805 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068322388 seconds)
  done (took 6.999611515 seconds)
done (took 27.933108794 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.53321431 seconds)
  done (took 2.027712247 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.606477305 seconds)
  done (took 2.123595096 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.685238065 seconds)
  done (took 8.199732865 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.39532718 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.491721565 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.715452294 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130353864 seconds)
  done (took 3.285888634 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.696937026 seconds)
  done (took 2.221245736 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.211741166 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.199300516 seconds)
  done (took 1.944424934 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.374646989 seconds)
  done (took 1.891173066 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.138521097 seconds)
  done (took 2.652803043 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.255101763 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.173105154 seconds)
  done (took 1.947730855 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.487548004 seconds)
  done (took 2.009891903 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.862416024 seconds)
  done (took 6.386579115 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.208359847 seconds)
  done (took 1.772432193 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238465523 seconds)
  done (took 1.759043233 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.713633401 seconds)
  done (took 3.235875284 seconds)
done (took 42.98071345 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.077927079 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.079996465 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.079894814 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077183846 seconds)
  done (took 1.827164459 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075655994 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07225092 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.07586404 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071188016 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075825837 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071276778 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072667706 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075643043 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071410549 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072224537 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071538148 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072197372 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073743715 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073600708 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070125045 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074001126 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076050296 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071466558 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074401886 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071269377 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069416666 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073457024 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073685341 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070561355 seconds)
  done (took 3.27689178 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076544644 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071504072 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073289056 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070124224 seconds)
  done (took 1.824710124 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077235572 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.093885041 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088283135 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076577125 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091989546 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08555463 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067577467 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067885434 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.069786178 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076644995 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066956743 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094656692 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086665626 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076108205 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078102002 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06460359 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067098032 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086020782 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076943805 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078275774 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070543417 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077347634 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067950961 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088898213 seconds)
  done (took 3.405586271 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.084999169 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104175461 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081011641 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087242371 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089849163 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064633508 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.089747309 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.0915929 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.126913553 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064010241 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069689612 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064159795 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071418692 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064501108 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079459142 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.105399692 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.109684819 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067852851 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095143879 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064524546 seconds)
  done (took 3.214652536 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.071546884 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068049609 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065187884 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06759226 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075955232 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071319328 seconds)
  done (took 1.958207838 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.066545492 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066499562 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066572284 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066119921 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070201715 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066228254 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064255907 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066487595 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066329233 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066171231 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06547552 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064632649 seconds)
  done (took 2.329033913 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.198928288 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067627704 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.066888723 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065249553 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069813852 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065592319 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079210668 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066345902 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089970373 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065332657 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065527861 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067743367 seconds)
  done (took 2.504188311 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204818212 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074965157 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236407751 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147158253 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109009968 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11346997 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110731094 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112334927 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.139174693 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098600467 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165592603 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164401928 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105538617 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134183 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087409343 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.09884759 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151101396 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160316861 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103692482 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164447309 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143030068 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124702808 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146034975 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105442604 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104025252 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120066358 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069578869 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078289619 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167083854 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13096485 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14178394 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108690579 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090952929 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17437919 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169518794 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138078111 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143928702 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083535585 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102583216 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132599622 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197450251 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08682524 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156938996 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106683742 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216792534 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131886608 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118586976 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118394725 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.103671896 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089092319 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142174794 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182678303 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.136094608 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085940899 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122200268 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111701571 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113097248 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11149154 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180604372 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160355927 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126569128 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069745972 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106146891 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151351142 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1323058 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.106730204 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.123468655 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090903395 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132550312 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15318335 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119058008 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14393481 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.114825431 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087566874 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117248051 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138386958 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125520907 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158717803 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122779754 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071830244 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121254838 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099431948 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079339056 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144982982 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073724163 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174069032 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097221254 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106571845 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122210816 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107984032 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107268483 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156860773 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141336616 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101013317 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.063703047 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24401584 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121203129 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144181615 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08603599 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108662186 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115759747 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076524667 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134758166 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074286146 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121209781 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076624124 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127253743 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127810733 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076183506 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120961724 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102493036 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098673012 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131237795 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15757551 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085190519 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079880463 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166294535 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120130349 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101647456 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142337815 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154867529 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099775083 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09994181 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146853692 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177351049 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087856668 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160443598 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104089063 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08238537 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086355253 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121296745 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10985382 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121338544 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080566277 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116081767 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166484097 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073879348 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094264264 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13193894 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07734379 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079363502 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103642709 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103689711 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094255486 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098076489 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101493668 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133506734 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120992179 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102962142 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121593799 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096140323 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313674353 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086937583 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100648592 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103371643 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068846646 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.133453645 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155729786 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07850857 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162256845 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122055051 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115394746 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117962529 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082790294 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139180677 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078079124 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069613928 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142573935 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109134102 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108331285 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.147901176 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114874146 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.123565527 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.116727579 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13206148 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12846411 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129243275 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103230053 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087928143 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110604612 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12387937 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072107166 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.088733605 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079238379 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102617715 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094355304 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081511746 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139258003 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121842225 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108014912 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110935679 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094580722 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145613126 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075099974 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126200317 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117398766 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094378325 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150569661 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150461807 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129033264 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097062223 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134283809 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068843921 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072528118 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086441447 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12058742 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080736641 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081270326 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.256526467 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147311507 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128569032 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135410832 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122072854 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119456742 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154773238 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069330671 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116308671 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145790761 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119995737 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103112352 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088948458 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097751988 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141460754 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105151955 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17923592 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114531182 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121620563 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151264654 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099725004 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07754087 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101574046 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13347973 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101947748 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141294539 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097573947 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087149988 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108034026 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073113846 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096900391 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125152129 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117062002 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132297483 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113817418 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130048339 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076669978 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113624132 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119875312 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119817092 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.062534717 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118537004 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159332454 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092924898 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116731242 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150427297 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07728551 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.131491743 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171762894 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142727133 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083262798 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249014246 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118252472 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127254043 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118702679 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139893807 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104636938 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135949793 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108819186 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08470572 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086420846 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096155712 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103657123 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093983143 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.104735602 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.111598323 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093944286 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129172025 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10118136 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10863917 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116591716 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096482271 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.08889956 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095297226 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174524774 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116513984 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168836866 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097747827 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144016282 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160983112 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07341427 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077819651 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076609789 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139356876 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08369106 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128531609 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.105315744 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115398886 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121689557 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140614962 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093886447 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067839426 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107365823 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130830948 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121849543 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096701077 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102127376 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161507645 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100091866 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07815809 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112039082 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114164946 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100990957 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16798116 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060169222 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103803218 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074557896 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.0790657 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124802252 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292112556 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081036432 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103338222 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118306702 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110613015 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126567992 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098805011 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109322996 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125061696 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146682119 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127403517 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088271243 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1106291 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127791135 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154579354 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103035465 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094870161 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170370759 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150967301 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.157305654 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086370279 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113237941 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11274585 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107581893 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135412572 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081665745 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16077012 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080567115 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134095064 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101222812 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088465795 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127190472 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.106483695 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08631362 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145798283 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115858722 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081160314 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076308428 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115578141 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117683341 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104524278 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074516727 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137053791 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072595827 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130053388 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157551648 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079202863 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105555761 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093932389 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077477166 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104216288 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099824736 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084800902 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097362579 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.313959882 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.086677457 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150009253 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132933532 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112563454 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134467765 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101806185 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.638831969 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076922429 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151523089 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115282332 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172059179 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09902594 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117476444 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110008537 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121876545 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143582238 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103102563 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178778828 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130294278 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114069464 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078542589 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100276136 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102075657 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086666792 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106504848 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112813974 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113973763 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092098793 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114795566 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12320392 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080476445 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094739905 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154207589 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11470219 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141411367 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138533451 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084634657 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116259056 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13560433 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079188148 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.118820261 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149984851 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103526484 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097469812 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.07911344 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.098241903 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155126188 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072012988 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155875496 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116817875 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.251406558 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112683292 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.111800076 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130131394 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105806958 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119414746 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091734798 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.107603135 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111785035 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08045843 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076427832 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103510373 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109493175 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096144781 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096178669 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.09762377 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150921116 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071388588 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09670648 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112595926 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142623162 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171519446 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087245161 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081024458 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11650011 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112513985 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.110399377 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11888531 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077322461 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080496008 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079598632 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076341813 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107340025 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111082991 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113069924 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109316762 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160840347 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082003331 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.229729844 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094150888 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103529829 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068356292 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076973587 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094195204 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096328956 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106182748 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107423353 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157364427 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093920982 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088811344 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090064267 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073380378 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082022136 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127176301 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108121523 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116796369 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096802695 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.060865469 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105733338 seconds)
  done (took 58.094426154 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.107273052 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081370683 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095185857 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143220359 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121609725 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200645699 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.152199491 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.186543751 seconds)
  done (took 2.7422304 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06696545 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093776532 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103329137 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081431688 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06551634 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067136282 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.229493355 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079437715 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065095477 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09743177 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.076607209 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067380037 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.426182747 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066551935 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066582122 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.059571486 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066316565 seconds)
  done (took 3.408914363 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.380513327 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.607397032 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.378993874 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071739237 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.453725614 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089597938 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.144472273 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.12893952 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071184479 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.535774998 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.703872273 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.124923915 seconds)
  done (took 18.330765911 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074107472 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.067968393 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083075347 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082770573 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071743532 seconds)
  done (took 2.020374979 seconds)
done (took 106.495531252 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079723032 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.604983296 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052107066 seconds)
  done (took 2.325787653 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082641883 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083896934 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084263681 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.081957649 seconds)
  done (took 1.982706436 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.073183263 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075568283 seconds)
  done (took 1.79211599 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.228671302 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166454597 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.094048438 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081633634 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078048195 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078781784 seconds)
  done (took 1.882064477 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07107837 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07452878 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071201217 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074567688 seconds)
  done (took 1.930595574 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076514154 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051507289 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05363975 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056542858 seconds)
  done (took 1.879169844 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085592631 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078418722 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077424441 seconds)
  done (took 1.882646702 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100448284 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084348152 seconds)
  done (took 1.825182515 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08088287 seconds)
  done (took 1.721987141 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098869593 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.100768806 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.130588602 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110135142 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138028454 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107378236 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.083494911 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.084272714 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.074684743 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085108867 seconds)
  done (took 2.654035834 seconds)
done (took 22.084532587 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077552151 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.36707629 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.358609161 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088463565 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.688760556 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355244447 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.992121992 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091108489 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113481699 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067134268 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083433207 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.64783848 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.980586103 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.32254279 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.967032785 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.32153025 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649107127 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067095309 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066434449 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067096942 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.977331016 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066180464 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066940814 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067467311 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.646676393 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370586962 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067321888 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.317684676 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06639126 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067990362 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.353859653 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067087535 seconds)
  done (took 16.138675107 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069956264 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118677024 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071674389 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082859532 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069516747 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068295141 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070041255 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.06816101 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120029339 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067085937 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084225601 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066672484 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070871346 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06723596 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087014374 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.083520464 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067646796 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067760791 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067108096 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067729894 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085906504 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066570348 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067158522 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067123166 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066595676 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079095573 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066874269 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067114564 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.0670694 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06897837 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069186566 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067591684 seconds)
  done (took 4.030675511 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.1178744 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125544115 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072818455 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103863523 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112560419 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06891386 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.146251236 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091641595 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128479981 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066886299 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083632849 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067268539 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100973199 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067818757 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086866965 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06678853 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067900386 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066791866 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067266783 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066940804 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086289148 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066950218 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067345442 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067181269 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067683965 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080277655 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067292478 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067262195 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067156934 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068846604 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069763139 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067546075 seconds)
  done (took 4.277222433 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07111177 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075273737 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08177297 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083851697 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068373965 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072825803 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072742649 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068666693 seconds)
  done (took 2.255861633 seconds)
done (took 28.353113391 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078563075 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068083964 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.07217499 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080783305 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072214931 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077440991 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066135701 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074362155 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071377566 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072164647 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073787308 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066051036 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070450137 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066327142 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073080731 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066815528 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.077880991 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070302761 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078310437 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.077894728 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069019912 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072153833 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074181718 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.077900112 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078098416 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.077587313 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.07681808 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071427272 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06785297 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069353753 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075672191 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082703807 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067660632 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.077945496 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.06625562 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066009683 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07057042 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.066872868 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078054078 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075833519 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.06801057 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074875579 seconds)
  done (took 4.700857529 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086068871 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093095756 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085351006 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062257295 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.065674714 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064385471 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08770401 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059324235 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058313961 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086741092 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.054796225 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058541449 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.064622226 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.052502993 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058969664 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.055932854 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060477753 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.054720251 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059364133 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058673133 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087601341 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.052186491 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.076136338 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062295773 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055047556 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.060083398 seconds)
  done (took 3.391592372 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073605861 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08611733 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088597041 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128844024 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105738245 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078618337 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079938844 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.094046886 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.087417346 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.065769167 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.069652276 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.091218367 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090459629 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.072520203 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.065908373 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085518111 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082356011 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068071663 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072088296 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094650709 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085602233 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085138478 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098314934 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082505776 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065934627 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069453844 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070806748 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080540705 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071435264 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076279381 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070451909 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070040731 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068754747 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078088008 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070894759 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068170655 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091188632 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077130661 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.07824681 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067094576 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070561722 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067570077 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.091995316 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.133383505 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067156304 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073960034 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07525337 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076861886 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066665668 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087224332 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078401102 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067187873 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069820802 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065820384 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066369694 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080530618 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068913362 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069299435 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076536531 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069761707 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.091979159 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071533706 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082613115 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067198901 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074776128 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066611723 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06751517 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065638255 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095136026 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069307431 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111839833 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069742437 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068144658 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076280205 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075173743 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072754208 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06772609 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08254274 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077793196 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070459489 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07595555 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070692744 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069547359 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.090413745 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069224872 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068831693 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068185926 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07343741 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.0692142 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068391731 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080265315 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066518551 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071426343 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083664432 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067378713 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067986754 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072264845 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071362159 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.0658002 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077898268 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071426766 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067487508 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075955281 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.0669302 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069612907 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079855625 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072830012 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065552363 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070767339 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072200234 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067117926 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.06793561 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069389809 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068867524 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075172678 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072838809 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071579013 seconds)
  done (took 10.582794967 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.162522011 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15799076 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069148248 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.146879991 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075719428 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.07778542 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.149189421 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093829569 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.066552065 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067465365 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067721891 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.108974041 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104513672 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.114789124 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.077979647 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066698691 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084076198 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113047456 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.15128404 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.144894465 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.08361649 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075957179 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.068948386 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.06784463 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069421618 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.076835792 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084344954 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075501045 seconds)
  done (took 4.40041143 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079246165 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.099682748 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07332074 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090191965 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090064812 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066944228 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069446128 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068761657 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080314173 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077178525 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066613711 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072532441 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074128301 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070366127 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067524746 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073351169 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074296053 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068001527 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070843572 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072098619 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077168618 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.090746025 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070637982 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066930936 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07187652 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.06608351 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.062831146 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083176963 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067491101 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.094113491 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06497296 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074745785 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081152592 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067946834 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066787042 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066505707 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066148732 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066585245 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068629781 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065255473 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.064843603 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056190977 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.065600742 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077854505 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073835582 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055163191 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071619789 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071725745 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072153812 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06432622 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069317345 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069410078 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069791877 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074256746 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071703312 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071943919 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068196516 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.07312765 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075761707 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066790954 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06437239 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06637482 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071799627 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.064325225 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075520383 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071426954 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.064922669 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066474759 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.06827151 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073587107 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066669962 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069933373 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064774414 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068700872 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07115706 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069185311 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.06807856 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065779467 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066663147 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067237154 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054258463 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066572115 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05213626 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070066254 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065118526 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065399393 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066471472 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071379286 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078437521 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068612178 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072977362 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067775274 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066420327 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069668894 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059348653 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069421424 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082643846 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081070885 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067170519 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064828285 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081490264 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071497334 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066183936 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055124311 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073920917 seconds)
  done (took 9.091846774 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.08884257 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069399984 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085234287 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091559265 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086590485 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073891293 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076101684 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068468741 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082406564 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072824388 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075998435 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.066841815 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077462344 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076470067 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069089573 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076889403 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071317572 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084383142 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081549278 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067151317 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075602861 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079365489 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088796197 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.081137346 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080141955 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.081695692 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088881032 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071228739 seconds)
  done (took 3.899279574 seconds)
done (took 37.724973224 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.739947436 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.914182332 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.73981787 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.121140402 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.914419395 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.930235222 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.762179142 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.735015609 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.867558486 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.7734036 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.943115968 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.835500158 seconds)
done (took 64.955542376 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.765169433 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.877105888 seconds)
    (2/2) benchmarking "String"...
    done (took 1.965881106 seconds)
  done (took 5.521850675 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.962872386 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.295760475 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.989928164 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.735596957 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.743404143 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.065256056 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.537283599 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.256137154 seconds)
  done (took 30.301768146 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.846289463 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.969019472 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.437549951 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.454794711 seconds)
  done (took 15.434846699 seconds)
done (took 62.748928411 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.743567612 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.770063571 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.744874512 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.722155511 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.796811092 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.757443484 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.187962664 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.807594293 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.736643881 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.728473672 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.739383785 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.176040769 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.745725745 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.021156998 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.737907306 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.746446711 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.753886456 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.24778287 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.895838163 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.74663349 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.751586571 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.772810776 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.739280763 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.879145088 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.761987042 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.742869243 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.191766634 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.744826601 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.362044283 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.742109706 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.767409568 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.229258526 seconds)
  done (took 203.170272774 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.737768804 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.929076443 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.990494461 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.785721669 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.429017244 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.92055578 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.857068461 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.531475371 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.740586579 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.753888947 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.02654878 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.742899675 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.044457533 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.727584915 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.766375696 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.842685035 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.012775288 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.07142693 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.774088415 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.919635277 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.743346947 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.917470189 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.881467082 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.008679696 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.753513594 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.848113267 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.746253969 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.748658683 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.929694123 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.987229415 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.775773158 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.756272668 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.945279789 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.612282076 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.753241617 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.758090531 seconds)
  done (took 170.45011511 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.104439413 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.740972673 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.739374123 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.739585291 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.746044491 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.740287707 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.860954838 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.867879554 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.345198242 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.331625472 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.794512186 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.568225665 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.739797968 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.807599749 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.754262326 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.744203353 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.755155713 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.767225854 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.745107643 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.740768318 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.864594877 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.753640601 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.281600189 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.748539182 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.741261226 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.746744855 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.112294098 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.741517288 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.74633179 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.985078469 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.74169929 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.741666399 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.623784139 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.345678272 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.746607777 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.824395427 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.744361235 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.747603868 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.742149284 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.961736461 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.742493132 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.742175315 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.745016727 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.911591645 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.741261879 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.867605899 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.742367762 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.238752905 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.741686427 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.742429993 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.942754506 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.409524301 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.744116443 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.743150062 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.747444434 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.743618336 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.743540739 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.750644567 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.583590101 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.818600171 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.745343997 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.747304276 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.751532973 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.745379101 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.810119185 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.743656287 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.743564641 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.799348206 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.875283688 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.43850749 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.869811706 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.746936435 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.813276342 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.841032113 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.74657651 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.744210574 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.744992932 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.743788926 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.7447207 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.826435471 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.744396292 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.745041627 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.868000398 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.753920819 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.746696655 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.797751132 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.81516175 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.745762186 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.640604421 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.749155164 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.745295438 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.048434677 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.813021134 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.746296359 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.745454609 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.746786761 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.868591832 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.870650784 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.540047705 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.746650231 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.758019905 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.939343419 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.945682882 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.74748522 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.015524782 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.747631662 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.838865326 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.751729542 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.747728806 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.746431427 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.779656452 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.749113319 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.804877752 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.749491754 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.122376586 seconds)
  done (took 398.75067178 seconds)
done (took 776.211234043 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.399154927 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.360075829 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.482328332 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.383555772 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.359748582 seconds)
  done (took 13.672610113 seconds)
done (took 15.359625056 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.840100104 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.840060709 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.772795007 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.836704314 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.768675011 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.837374765 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.819933998 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.774884494 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.805496091 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.774433357 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.807554588 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.773196019 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.760413384 seconds)
  done (took 25.09934626 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.981256618 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.986255921 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.820405575 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.977464328 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.795737956 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.982481273 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.912667173 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.898231797 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.90294154 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.764998632 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.761873129 seconds)
  done (took 22.474177075 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.98128073 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.989044996 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.829011718 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.98534083 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.80045264 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.986014028 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.912280792 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.902185035 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.900534637 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.765043874 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.762533799 seconds)
  done (took 22.503944181 seconds)
done (took 71.764614288 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.756147555 seconds)
  done (took 3.44638875 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.781184998 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.937426073 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.763046087 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.761169094 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.756103615 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.757444201 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.75902909 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.756015337 seconds)
  done (took 15.96228697 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.757262809 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.753885354 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.757735393 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.754311616 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.75453955 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.75807 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.758341298 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.755158087 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.757941114 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.755134932 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.758328472 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.757701435 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.757381892 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.754325765 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.755525272 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.754665584 seconds)
  done (took 29.791396699 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.758225797 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.754841244 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.755740354 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.756860115 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.756195886 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.755817518 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.756741488 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.754620043 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.75641543 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.756468877 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.757058337 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.755506612 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.756100247 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.75635258 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.757328575 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.757617727 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.755737751 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.756175189 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.761173197 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.756141345 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.756757456 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.756081806 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.757128197 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.757363131 seconds)
  done (took 43.852929799 seconds)
done (took 94.74108899 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.633254313 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.118131298 seconds)
  done (took 8.443694467 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.759822217 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.759356214 seconds)
  done (took 5.250368943 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.759737899 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.760331899 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.759596817 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.759412621 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.760114976 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.759114676 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.759953055 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.760919844 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.760137136 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.759119368 seconds)
  done (took 19.292048241 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.760040129 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.759560934 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.757556594 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.761930498 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.761065595 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.758158967 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.759545298 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.760764264 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.760691577 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.756080234 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.760105273 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.758315056 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.759378802 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.758761179 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.760822681 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.757369612 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.759560512 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.757614617 seconds)
  done (took 33.361874077 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.760761768 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.760626709 seconds)
  done (took 5.214645101 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.759086323 seconds)
    (2/7) benchmarking "second"...
    done (took 1.758517592 seconds)
    (3/7) benchmarking "month"...
    done (took 1.759051979 seconds)
    (4/7) benchmarking "year"...
    done (took 1.761351428 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.761464682 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.76196616 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.761708059 seconds)
  done (took 14.0178514 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.765645338 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.920683588 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.986275731 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.399018927 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.762977714 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.763567943 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.715094806 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.764125807 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.765766715 seconds)
  done (took 19.540498238 seconds)
done (took 106.81200645 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.609134691 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.757850426 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.120824446 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.808993569 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.80514255 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.101798544 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.799411557 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.062966755 seconds)
done (took 42.760379293 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.856113338 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.304615096 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.341976284 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.148258962 seconds)
  done (took 12.490382871 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.742397333 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.27486131 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.791894997 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.356265881 seconds)
  done (took 19.883275443 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.125174024 seconds)
    (2/2) benchmarking "read"...
    done (took 2.10688756 seconds)
  done (took 5.932154169 seconds)
done (took 46.856474536 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.764152954 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.76099637 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.764059601 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.763028728 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.765019586 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.761568606 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.763173194 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.761319101 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.761860591 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.763690137 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.762694971 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.762596318 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.76330176 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.763617448 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.761858906 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.760700029 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.764445126 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.763688635 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.761046568 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.760644051 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.761078058 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.763528259 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.761446368 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.761211232 seconds)
  done (took 43.996748334 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.765066395 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.764203194 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.764500827 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.763807766 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.762031478 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.763569061 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.764761347 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.761940467 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.763949112 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.763780429 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.76149888 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.762000366 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.764659251 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.762473101 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.763509997 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.762039342 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.764163247 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.761653673 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.764963914 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.762033673 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.764322744 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.761838276 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.763040089 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.764322878 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.763317659 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.763386718 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.764718349 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.763005104 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.765230084 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.761661433 seconds)
  done (took 54.600599411 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.770655068 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.772999162 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.76515523 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.764032766 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.765179523 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.766185204 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.764968711 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.765806289 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.765840561 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.765305371 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.76670546 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.766612975 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.765364337 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.766812797 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.766089272 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.765447801 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.766533958 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.76662457 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.76623844 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.767846608 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.765004684 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.766874552 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.766948309 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.766756788 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.767254811 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.767417503 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.767869913 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.766491743 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.76707437 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.76761531 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.767818568 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.767747011 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.767308577 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.767228578 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.76743862 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.767369716 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.772399415 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.775804024 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.768706043 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.767686061 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.76798299 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.766988996 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.76810508 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.767988084 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.76742726 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.768047833 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.767328029 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.76820787 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.768019039 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.767467335 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.768995471 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.768372473 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.767793907 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.767833145 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.768211279 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.768252252 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.767832094 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.768481648 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.768979849 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.769443622 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.768371711 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.7694028 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.768321985 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.768355823 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.769009388 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.767556123 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.768576374 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.769510592 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.768984838 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.769509255 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.769332472 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.769186944 seconds)
  done (took 128.977198378 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.769775502 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.767176443 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.767137183 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.76749342 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.768155546 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.770059619 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.769140468 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.770434432 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768898525 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.772091597 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.769670757 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.768204191 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.768504593 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.772628538 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.771493646 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.768610265 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.771105231 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.768011018 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.771147192 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.771852814 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.771877462 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.770075872 seconds)
  done (took 40.636768774 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.771257784 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.771768676 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.768464959 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.771564981 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.768050377 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.77156494 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.771484693 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.772323276 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.772117464 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.767823918 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769135658 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.772877581 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.768657277 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.770636255 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.76945225 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.769804029 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.772177399 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.770873595 seconds)
  done (took 33.574138723 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.769880087 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.769762033 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.772180545 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.77001022 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.771023051 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.772280881 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.76968554 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.773148581 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.773841848 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.769666938 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.773605535 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.772420199 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.773149787 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.770169363 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.774693054 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.770448836 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.77256154 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.769473253 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.774302459 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.771829343 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.770591564 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.773153295 seconds)
  done (took 40.683212067 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.774109145 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.773983855 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.772987478 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.771926603 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.771322137 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.774083751 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.773609771 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.772911204 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.77405694 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.774071956 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.772720952 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.775642731 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.771856182 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.772013207 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.771861117 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.772198961 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.774713286 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.773628993 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.774141864 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.772908772 seconds)
  done (took 37.17084377 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.774457192 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.775593725 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.77513645 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.774909064 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.775077796 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.77412401 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.774627272 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.774249511 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.774281108 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.776713024 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.774582514 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.774908439 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.77445736 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.775271808 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.775144673 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.776065547 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.775969011 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.775157856 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.775747476 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.7750551 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.775700482 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.776144995 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.77600459 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.776536142 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.775701022 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.775520606 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.776302193 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.776484192 seconds)
  done (took 51.417559531 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.776030364 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.776017461 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.773230795 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.774419883 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.77276424 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.773500973 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.774166588 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.77469579 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.775556268 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.774047268 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.777258213 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.777909812 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.777009726 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.776821282 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.777102207 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.777573815 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.777516118 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.773922754 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.774019686 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.774280976 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.778623904 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.777438599 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.77693061 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.775285684 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.77485806 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.778221072 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.774927804 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.774874075 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.778318579 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.7748172 seconds)
  done (took 54.979841037 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.795336065 seconds)
    (2/2) benchmarking "in"...
    done (took 1.79559996 seconds)
  done (took 5.29855568 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.775289284 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.776646547 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.77770895 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.775284119 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.774409832 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.778396167 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.778529608 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.77454722 seconds)
  done (took 15.920561467 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.777460309 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.777856752 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.777748586 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.778368039 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.777697755 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.779010229 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.78260513 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.777858327 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.779244915 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.779273968 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.785317793 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.788005212 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.780006773 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.778207047 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.779061378 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.779203101 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.7791321 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.779947352 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.778312875 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.779721466 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.778896821 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.779760656 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.779838024 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.776724119 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.780340224 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.788435285 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.782293072 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.778899572 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.780683386 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.782138271 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.779828765 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.777011342 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.779971859 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.778397504 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.780465135 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.779387383 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.787779788 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.779836323 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.785124075 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.77972 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.779712842 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.777049068 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.779758248 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.781246287 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.781556887 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.781095875 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.780303457 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.778739312 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.779491235 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.783004668 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.787142455 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.780465574 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.77779252 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.784079984 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.781061999 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.785541455 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.780225842 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.782646594 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.789705953 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.790229376 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.794022247 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.789158651 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.782678782 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.780822804 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.789904522 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.805107427 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.787042643 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.77887057 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.778179966 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.781339133 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.787101407 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.794132656 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.790618804 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.781293954 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.781097661 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.783609568 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.782445707 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.782248468 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.788805137 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.783890508 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.782513922 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.783006479 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.79205532 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.805025669 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.783023869 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.782485816 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.783515385 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.783399644 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.783451147 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.792131924 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.783295519 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.782833591 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.78281345 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.782841633 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.78420801 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.784497961 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.7819759 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.782204829 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.77951702 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.783540409 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.783025921 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.786603838 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.791411237 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.782382779 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.782194272 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.788795837 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.783580079 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.782193714 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.78878989 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.784950426 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.783606666 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.784019123 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.790422097 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.781536323 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.786702825 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.792093297 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.783580707 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.784865181 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.783703714 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.783616774 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.793291597 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.809097443 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.784063339 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.784949079 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.789750891 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.794844231 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.7848399 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.787204724 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.785236242 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.782694252 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.782512638 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.785867368 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.785019936 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.785874865 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.785724556 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.786596145 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.782059577 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.785582441 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.784706252 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.786219619 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.786475959 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.785231341 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.786233216 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.788041291 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.785716847 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.786542951 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.790710466 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.785361362 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.786343292 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.786941667 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.784270487 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.786914446 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.786509187 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.785670139 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.786078908 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.78593514 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.785927014 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.786928185 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.786794037 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.787131521 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.786104613 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.787634504 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.791069362 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.787678726 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.788888895 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.786874233 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.78429982 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.78622131 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.787028239 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.787378928 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.786885971 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.785031247 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.791026562 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.79508823 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.786632213 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.787159534 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.790102789 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.787091101 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.787564475 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.787114965 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.791383806 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.795531372 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.787551625 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.793210975 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.788216832 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.787149511 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.787727033 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.78890919 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.787289167 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.786489646 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.791061448 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.796308968 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.801307237 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.796775625 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.788854975 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.792613542 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.790558234 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.793135971 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.791599048 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.789194617 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.789097235 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.789246116 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.787763785 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.787824065 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.788723112 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.788356123 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.788095775 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.788165383 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.788635962 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.789286526 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.789518572 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.790345001 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.789265375 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.787234178 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.789858715 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.78925498 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.788175841 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.785929417 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.787165048 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.788350545 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.788836727 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.789627903 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.79425967 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.786470943 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.789538917 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.790139973 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.789767664 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.789556449 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.789479426 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.791761361 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.791361635 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.79667975 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.790328064 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.790840618 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.795280921 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.790854922 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.789841642 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.792257534 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.789607572 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.78764674 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.793038455 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.797953909 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.79113319 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.790341721 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.79077156 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.791240501 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.790830793 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.798262482 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.788081813 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.790131707 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.79124735 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.792365591 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.788715291 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.792466449 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.7912005 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.791496872 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.793931391 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.791194956 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.791647098 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.792857764 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.791142169 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.791198792 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.79117834 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.795198618 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.800666514 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.795864127 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.791891148 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.793771422 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.79291184 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.796562591 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.791489982 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.792509439 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.790597603 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.80454987 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.800673708 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.798117271 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.79349087 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.792245081 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.797206378 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.793676511 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.796928165 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.79282543 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.793831918 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.793181041 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.79237368 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.790199562 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.793852908 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.792623325 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.793983255 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.793947607 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.797620691 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.793983237 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.792639834 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.793271242 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.793798371 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.794288352 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.79348276 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.794325904 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.795798168 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.796267823 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.792887254 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.792813715 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.799744384 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.79456035 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.795265084 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.794228785 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.793133762 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.793513682 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.7953056 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.794649674 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.798566772 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.802381718 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.797536421 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.803857976 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.795124146 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.804138295 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.795218877 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.798821727 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.802394514 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.792260814 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.793001217 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.794584801 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.795089294 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.80129472 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.794493342 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.796023476 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.79962108 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.794902101 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.793937618 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.795111353 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.794834206 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.796133151 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.795327034 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.80295849 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.796102059 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.798796009 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.797332515 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.792821335 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.796040944 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.795736567 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.795300928 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.798830977 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.795256163 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.79619221 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.795248685 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.795910968 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.795559654 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.795146051 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.797375474 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.793197973 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.796196566 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.802404076 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.797198387 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.800970203 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.797819285 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.804475495 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.796605697 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.802312697 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.798145909 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.796320709 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.797607388 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.79691441 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.798263447 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.797965361 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.798532474 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.797613388 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.798807639 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.803766013 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.7974064 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.799934828 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.798447941 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.798366607 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.798377529 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.805829405 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.821920386 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.798698469 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.803306308 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.795040708 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.799627247 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.802236877 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.7964883 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.796524758 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.80224966 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.808136227 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.807291453 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.799199299 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.796833864 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.799270144 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.798653256 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.797888355 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.798916477 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.798015596 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.798027214 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.799780915 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.798906455 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.801823683 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.79850591 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.798892855 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.798930474 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.799813957 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.808664286 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.79815214 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.799416049 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.799005125 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.799235997 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.800066423 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.798955344 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.798779224 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.799302724 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.799742882 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.800482284 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.805817036 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.806448813 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.801856069 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.798550306 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.799498992 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.799010279 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.80073918 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.800188029 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.800277042 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.799596184 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.800081043 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.799367963 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.800976905 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.800110935 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.80035786 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.800680282 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.800423248 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.803344528 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.807915444 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.800628971 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.797379894 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.800352678 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.800843306 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.800418957 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.801816155 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.807349116 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.802842177 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.811455371 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.809560399 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.805151527 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.802084413 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.804692632 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.809309004 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.799642437 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.80289126 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.801302109 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.802093295 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.801516465 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.805287144 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.802172354 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.807434598 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.800359341 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.800506969 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.809649886 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.803296817 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.8011549 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.802310729 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.806472685 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.801510288 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.79875139 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.801686951 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.800998328 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.808843533 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.803588685 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.803640338 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.803512838 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.800503211 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.803958092 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.806275946 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.803090403 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.804018917 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.800599681 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.802972795 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.802864131 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.804638083 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.801109453 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.805796502 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.805024109 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.808829891 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.81327469 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.806346623 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.811384186 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.806367913 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.804630038 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.802670531 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.803130811 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.799958166 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.799396985 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.802352259 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.80353117 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.803537155 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.805790071 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.802994746 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.804456347 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.804342098 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.803150601 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.807430217 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.814798069 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.811543804 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.800775674 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.803013024 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.804057134 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.80605967 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.803690664 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.804253822 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.804203156 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.805267136 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.804921769 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.804891485 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.80369727 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.807414742 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.820001645 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.805107674 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.804613353 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.804635331 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.808003594 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.80467179 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.802538465 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.805191608 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.806230385 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.809139649 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.81301105 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.805804831 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.811367632 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.804155165 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.806715336 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.810044735 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.809209989 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.813986665 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.807844194 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.806006633 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.805113931 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.811141698 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.821610246 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.808284523 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.818203214 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.838083142 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.809779063 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.809802524 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.809642349 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.805557199 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.80515277 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.808564256 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.804198922 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.805102421 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.805083342 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.805276694 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.810183965 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.812024523 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.807040451 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.806744319 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.806315046 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.806826449 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.807475952 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.804666513 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.805794322 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.806720012 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.806428242 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.80648489 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.807212211 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.807393249 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.819494948 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.818240589 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.808416068 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.807841395 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.805643167 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.810077656 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.809669756 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.819091948 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.816189259 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.807144055 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.808105238 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.808388125 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.807647919 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.80579373 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.809046492 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.808172715 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.807659757 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.806040146 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.821845445 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.816353328 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.814853159 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.80933669 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.808829277 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.808605531 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.808921078 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.808079041 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.808889587 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.811846603 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.809625546 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.812916839 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.808896438 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.808955192 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.811863784 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.817724672 seconds)
  done (took 1071.742268618 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.806252488 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.807323988 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.805829719 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.806620405 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.807179994 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.806567066 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.807122642 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.806432874 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.806370129 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.807266154 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.805864244 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.807119088 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.807282355 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.807725896 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.806019912 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.80719938 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.806857155 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.805944882 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.806985522 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.807284847 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.807933459 seconds)
  done (took 39.683620977 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.81006734 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.806920846 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.808440774 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.810105089 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.807604422 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.810361662 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.8075344 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.810567323 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.809820384 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.807958871 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.810636717 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.810865228 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.808204842 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.808378717 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.807504561 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.810459596 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.811962318 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.807922273 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.81021364 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.808116554 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.811624695 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.808858129 seconds)
  done (took 41.546068896 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.810829324 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.811316057 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.810438729 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.808288556 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.811666074 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.809444745 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.811072889 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.812200039 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.813107464 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.811644495 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.811081612 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.812735616 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.819008606 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.817514257 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.812240534 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.811821539 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.955056436 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.810137608 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.810693635 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.809729964 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.809021471 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.814686923 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.806201856 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.807291903 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.809868898 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.810083374 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.808567458 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.809533827 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.809056321 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.810983237 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.81271539 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.810221574 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.809709433 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.811098272 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.810036609 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.811609068 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.814564723 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.811268306 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.80682146 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.810967869 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.819634866 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.830613317 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.81103482 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.816438968 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.809447585 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.81065101 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.814169669 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.818533086 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.807864335 seconds)
  done (took 90.666770582 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.809689879 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.811395261 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.807807747 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.812606004 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.81075458 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.810452776 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.811830652 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.81063795 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.807197698 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.807788637 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.809116861 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.805595873 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.806608315 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.808196156 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.808593228 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.800731666 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.80024821 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.800286253 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.801494633 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.801062156 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.80105683 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.803345005 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.803257352 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.801216045 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.802611863 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.801602916 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.799501461 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.802500083 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.799757812 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.800310717 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.801584896 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.803376472 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.802609078 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.799644592 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.799920331 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.802094059 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.802497205 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.799597247 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.803268294 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.800028861 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.802826101 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.802333635 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.802064498 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.803320171 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.79978898 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.800286471 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.799492544 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.800479869 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.800917927 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.80273974 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.803168597 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.800070132 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.803782712 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.800593611 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.804584045 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.802637937 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.801757984 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.80145839 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.805071159 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.801310837 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.801761328 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.803442128 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.802718698 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.804175499 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.802949638 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.800741472 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.800570177 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.804235304 seconds)
  done (took 124.376525558 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.804133843 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.804319197 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.804863257 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.804668478 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.805207367 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.804448957 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.805252628 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.804101863 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.804700673 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.805580243 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.804044033 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.806672135 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.805425907 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.805288916 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.804770316 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.8045719 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.804686471 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.805583008 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.805138076 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.804844832 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.805505853 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.805994304 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.805068839 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.806801342 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.805021609 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.804519007 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.805109547 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.80537979 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.807383893 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.804518931 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.805364701 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.806415187 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.804624395 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.804613026 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.807775755 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.806103577 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.805939134 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.807825824 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.806741346 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.808188093 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.805583886 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.805927581 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.806766125 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.805602579 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.806608268 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.806640219 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.806297364 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.807432474 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.807415034 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.806350709 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.806255867 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.806299721 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.80463207 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.804441399 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.805346751 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.805340187 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.805666624 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.801755132 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.802631025 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.803422338 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.80291578 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.802448883 seconds)
  done (took 113.672213827 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.797916962 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.798053822 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.795969259 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.795514099 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.799198247 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.796447328 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.79845363 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.798846939 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.799055022 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.798377366 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.798608674 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.795375172 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.796909155 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.797956 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.795196317 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.797726605 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.79578372 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.794955217 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.798206151 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.795261635 seconds)
  done (took 37.677492463 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.796095504 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.798329118 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.795842013 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.796834763 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.797861053 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.795443135 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.798317816 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.798441777 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.795655249 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.798179933 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.798428848 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.798650358 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79626809 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.795407941 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.798467458 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.796315474 seconds)
  done (took 30.485374831 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.796939286 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.79881042 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.799128136 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.799376058 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.796300571 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.796212287 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.799632547 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.796268068 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.796383356 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.799672541 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.798611809 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.799213601 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.799798983 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.800128504 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.79501802 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.799496457 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.798079512 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.796268577 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.799699251 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.799058826 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.797615749 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.797001139 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.799914368 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.79886524 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.79500258 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.798088859 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.796872397 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.799458667 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.795272676 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.798689778 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.794435197 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.796372479 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.795854399 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.796510535 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.797554937 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.795145758 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.79789292 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.799149897 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.797448744 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.797452491 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.797970909 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.794355102 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.797293285 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.797659914 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.795225641 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.796877348 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.794500643 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.794395407 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.793726977 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.794946914 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.796717192 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.795829896 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.796278176 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.798008124 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.796624008 seconds)
  done (took 100.582710753 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.796699066 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.796910789 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.793468222 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.79682366 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.79607026 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.79357733 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.793372835 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.7919849 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.791230677 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.793412004 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.792498462 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.793421532 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.789543858 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.79183794 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.790526379 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.792265365 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.789543661 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.789606499 seconds)
  done (took 34.003343609 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.789659138 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.788996974 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.792791246 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.789699133 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.788047044 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.792258655 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.789806577 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.791035896 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.793601917 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.788273585 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.787401856 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.792483445 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.791116114 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.791811977 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.790054571 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.788455457 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.79134935 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.791991945 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.788105785 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.788846459 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.79096211 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.791089609 seconds)
  done (took 41.112559548 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.789822445 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.790592508 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.806376946 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.809041029 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.812304164 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.822451274 seconds)
  done (took 12.556044262 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788189888 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791502534 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.788036598 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790992163 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.790051484 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787758214 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790738541 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787220309 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789948813 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788677724 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.786918251 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789068325 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791105365 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785963977 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789270217 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.790466944 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786728336 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787649199 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787029258 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789248795 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.786153438 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788501703 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.786825465 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789694515 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.785840977 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.787085654 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789624855 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.785924406 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787114148 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789979444 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789404858 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.786741044 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.788185466 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.786335952 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.78990879 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789505481 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784740817 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787971059 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788508251 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.785888848 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.78956579 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787480211 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.78778853 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786006932 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.78821578 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786419783 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.785643856 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784748752 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.784738787 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787826456 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788346467 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787751041 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788415214 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.787599275 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788360492 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788535247 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.786365967 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.786446507 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787289441 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786405054 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786080734 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788008665 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786661042 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785535893 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788631251 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.785934176 seconds)
  done (took 119.721899029 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785690616 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.786591043 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785298046 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.785901508 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786455298 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785881636 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.786649511 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786498383 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.78610539 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.785534845 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788380195 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.786540787 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786678214 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.786494427 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.785643713 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78623529 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786547552 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786372129 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787215352 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789620221 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.78661716 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786369858 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786528035 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.787265611 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.78644812 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788550353 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786888953 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785452416 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785939145 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.787726773 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78649403 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786443999 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786220503 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.7866066 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788597003 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.786725644 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787146473 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.78600802 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.786484023 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789609287 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.790089853 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789204893 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786096825 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.787420192 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787039457 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787719729 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787814335 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78661422 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.78700248 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.787185375 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788840364 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788031461 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787440598 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787068125 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.786937384 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787484329 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786993219 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788627331 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.786235176 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.790196739 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786936682 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788194053 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79105062 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786223411 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.78583575 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786339013 seconds)
  done (took 119.670966507 seconds)
done (took 2486.449352629 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.814202301 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.829770517 seconds)
  done (took 15.366559898 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.947601464 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.899605883 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.78461124 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.779426114 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.784844017 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.804131502 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.801633201 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.784765757 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.783538673 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.784864688 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.784759171 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.970580974 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.787048154 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.784213808 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.785447452 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.877711133 seconds)
  done (took 50.870415762 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.787638916 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.788092043 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.800688931 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.789521324 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.787437023 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.800064137 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.820248533 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.791315682 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.824614287 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.799499023 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.859430346 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.797608232 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.788161814 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.839707508 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.801616873 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.801460151 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.8793394 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.863540319 seconds)
  done (took 34.339497488 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.865217735 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.791413499 seconds)
  done (took 10.382024579 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.783221378 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.781795107 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.811445148 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.806281795 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.814351432 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.793009629 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.785034951 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.786113723 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.817999082 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.786461672 seconds)
  done (took 69.687153234 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.795267288 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.789366454 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.788826612 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.7871567 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.780843671 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.784790495 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.787616142 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.782483652 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.469661605 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.825509142 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.793696586 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.794079902 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.787644183 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.790515255 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.785772423 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.81074986 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.976471955 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.786014496 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.784729154 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.794362709 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.788638958 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.84675213 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.79947972 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.78783978 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.819389511 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.471573653 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.798819616 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.794827169 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.915138864 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.787428396 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.788604118 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.788901 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.790609416 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.158806754 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.062362802 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.789155343 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.798194524 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.797931245 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.787644221 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.931797573 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.790317072 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.795189998 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.660799561 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.039434495 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.902144522 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.830734886 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.165883953 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.793833213 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.790500984 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.818826949 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.793996762 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.790717816 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.803116737 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.293404193 seconds)
  done (took 128.19339383 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.783557732 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.047949664 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.940562667 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.787317049 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.074042515 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.995578316 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.785561355 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.833881501 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.788971148 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.014865579 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.005764615 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.899568985 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.7865029 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.789610475 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.785820677 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.785157908 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.948139882 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.859993801 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.78824741 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.787662244 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.81852481 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.030385705 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.917688948 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.787518033 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.80981114 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.996077638 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.920243588 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.893019524 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.262570654 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.784430955 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.850804889 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.78859164 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.788443742 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.783766328 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.944296896 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.882070326 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.87488586 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.786993894 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.785033619 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.787236717 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.460084384 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.988691203 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.884024287 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.930110753 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.033666473 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.99078213 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.576546656 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.785409769 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.52223688 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.949406736 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.021071983 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.016920372 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.91252158 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.788334709 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.30323103 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.785344292 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.785245366 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.022472699 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.016688036 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.89217492 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.788795815 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.786859505 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.785766358 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.032665385 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.78998727 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.884917568 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.788096291 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.788153437 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.883068901 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.891734346 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.021036729 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.000875868 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.822441701 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.119526758 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.274243993 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.037291594 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.856618258 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.023617189 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.790448609 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.788153216 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.874108137 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.7455687 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.988616777 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.038734989 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.044134714 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.826277882 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.513027207 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.787068465 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.017624398 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.013054911 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.091310604 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.028414579 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.941540486 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.103830147 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.78683452 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.78693203 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.037065019 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.928506183 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.791663191 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.151092482 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.027994925 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.36156923 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.818845916 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.132367416 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.924399513 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.790329844 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.433008782 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.787131632 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.015695591 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.835177315 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.79008407 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.788288053 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.010224009 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.864286963 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.791810812 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.42861451 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.853486043 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.79073033 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.024211009 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.790972058 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.057954685 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.790928382 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.02930356 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.812369507 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.825302716 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.020734398 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.031915952 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.791958346 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.039476457 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.036912481 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.908071867 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.010862621 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.420733055 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.790958023 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.082285927 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.791731972 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.792322246 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.962836834 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.789923187 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.938878549 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.792383008 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.125735498 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.815613057 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.947043148 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.795001954 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.047809744 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.828037158 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.846103821 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.793432611 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.925015565 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.796052234 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.784274493 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.947224502 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.791465975 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.794023856 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.513660039 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.79073024 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.949749025 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.02690382 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.818019558 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.866886824 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.463330292 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.791331375 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.880116205 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.818767411 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.138064848 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.792791482 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.006474702 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.797248855 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.32709745 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.791456286 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.036392658 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.976776669 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.794407245 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.792199415 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.700123103 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.792600636 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.791776545 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.954204489 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.227434268 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.790546759 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.994931529 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.796310759 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.933998715 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.797373155 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.873950447 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.148525591 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.791152629 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.793729665 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.791055511 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.793524108 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.79495368 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.056242056 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.825518436 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.324717525 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.933193084 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.063804529 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.115630712 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.043504961 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.839603254 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.79517469 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.043473027 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.794541232 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.859012001 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.793254312 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.816821691 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.026906276 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.794058531 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.005148752 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.074756436 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.708565055 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.843823068 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.7948076 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.793300307 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.753040512 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.952935849 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.884763296 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.79510357 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.793109032 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.919375831 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.925270089 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.009928352 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.7954226 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.128448994 seconds)
  done (took 886.685497784 seconds)
done (took 1197.245350158 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.794632554 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.795984332 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.780393398 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.791024044 seconds)
  done (took 28.895335152 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.798549432 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.796540329 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.797294198 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.795643737 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.797912679 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.795876731 seconds)
  done (took 12.510342962 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.811069671 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.793025931 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.794171305 seconds)
  done (took 21.127649733 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.86910236 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.205453053 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.906162687 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.235842464 seconds)
  done (took 9.945475279 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.799258865 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.798630088 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.797221226 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.798720277 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.799637601 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.800384985 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.798972736 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.798376852 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.800679883 seconds)
  done (took 17.922533189 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.192354666 seconds)
done (took 96.325706863 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.109869699 seconds)
    (2/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.823116574 seconds)
    (3/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.855810868 seconds)
    (4/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.070660252 seconds)
    (5/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.247323164 seconds)
    (6/309) benchmarking ("sort", Int8, false)...
    done (took 4.767878109 seconds)
    (7/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.795046595 seconds)
    (8/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.772621659 seconds)
    (9/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.97631811 seconds)
    (10/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.93513035 seconds)
    (11/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.776863215 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 3.500704706 seconds)
    (13/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.577608807 seconds)
    (14/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.890272501 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.833514936 seconds)
    (16/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.840844067 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.821233976 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.664490762 seconds)
    (19/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.817554027 seconds)
    (20/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.842134633 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.968840406 seconds)
    (22/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.270694284 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.086823188 seconds)
    (24/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.089935047 seconds)
    (25/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.120824532 seconds)
    (26/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.898375712 seconds)
    (27/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.803023972 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.118475141 seconds)
    (29/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.920968754 seconds)
    (30/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.900305077 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.867911719 seconds)
    (32/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.891292758 seconds)
    (33/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.038733514 seconds)
    (34/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.934327578 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.43124945 seconds)
    (36/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.031346312 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.975658413 seconds)
    (38/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.966485861 seconds)
    (39/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.465047887 seconds)
    (40/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.80110771 seconds)
    (41/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.711711734 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.924747545 seconds)
    (43/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.270556769 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.184478952 seconds)
    (45/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.781339841 seconds)
    (46/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.974455932 seconds)
    (47/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.939962427 seconds)
    (48/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.882884086 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.892001597 seconds)
    (50/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.779940613 seconds)
    (51/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 3.268291803 seconds)
    (52/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.348633268 seconds)
    (53/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.044777761 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.910917815 seconds)
    (55/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.136827995 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.849126571 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.05542215 seconds)
    (58/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.796547491 seconds)
    (59/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.263057277 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.173799345 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.857291361 seconds)
    (62/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.266210363 seconds)
    (63/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.000437063 seconds)
    (64/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.90498997 seconds)
    (65/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.872091784 seconds)
    (66/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.989654036 seconds)
    (67/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.359985327 seconds)
    (68/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.144000122 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.095455407 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.797357941 seconds)
    (71/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.885074401 seconds)
    (72/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.943524887 seconds)
    (73/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.056969993 seconds)
    (74/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.88257323 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.68943594 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.923817424 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.116236544 seconds)
    (78/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.881023078 seconds)
    (79/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.938482144 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.131673908 seconds)
    (81/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.785370384 seconds)
    (82/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.177780533 seconds)
    (83/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.800416587 seconds)
    (84/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.818743613 seconds)
    (85/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.812287707 seconds)
    (86/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.40159182 seconds)
    (87/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.3073772 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 5.471218012 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.801248463 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.862565041 seconds)
    (91/309) benchmarking ("sort", Float64, false)...
    done (took 5.581413011 seconds)
    (92/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.865543169 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.474971038 seconds)
    (94/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.302572906 seconds)
    (95/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.798659554 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.148875858 seconds)
    (97/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.177945418 seconds)
    (98/309) benchmarking ("sort", Float32, false)...
    done (took 5.561634853 seconds)
    (99/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.885122426 seconds)
    (100/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.827340951 seconds)
    (101/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.279360999 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.682720844 seconds)
    (103/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.913003505 seconds)
    (104/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.783073892 seconds)
    (105/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.932114144 seconds)
    (106/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.783446745 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.939705402 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.996734004 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.576211836 seconds)
    (110/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.891198813 seconds)
    (111/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.180788635 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.801923263 seconds)
    (113/309) benchmarking ("perf_sum", Float64, false)...
    done (took 3.304046881 seconds)
    (114/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.047604395 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.101049549 seconds)
    (116/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.106649944 seconds)
    (117/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.902314088 seconds)
    (118/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.732192697 seconds)
    (119/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.982645672 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.01932666 seconds)
    (121/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.12709063 seconds)
    (122/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.883056281 seconds)
    (123/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.157964435 seconds)
    (124/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.036007589 seconds)
    (125/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.985343515 seconds)
    (126/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.803556507 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.827449903 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.006970577 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.823011364 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.89819365 seconds)
    (131/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.8699132 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.708208736 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.497489698 seconds)
    (134/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.126255214 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.490697294 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 2.233421776 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.822214384 seconds)
    (138/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.016153526 seconds)
    (139/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.351465592 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.057328444 seconds)
    (141/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.96760561 seconds)
    (142/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.342158979 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.01728706 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.064974146 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.037682502 seconds)
    (146/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.931680673 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.913692647 seconds)
    (148/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.915305068 seconds)
    (149/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.802181759 seconds)
    (150/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.874271867 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.843835267 seconds)
    (152/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.749200927 seconds)
    (153/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.98042229 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.041366457 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.829713846 seconds)
    (156/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.294023774 seconds)
    (157/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.791307235 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.799533481 seconds)
    (159/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.175073249 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.191297143 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.823256255 seconds)
    (162/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.787156582 seconds)
    (163/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.855010641 seconds)
    (164/309) benchmarking ("sort", BigInt, false)...
    done (took 6.800158898 seconds)
    (165/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.975029511 seconds)
    (166/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.991294798 seconds)
    (167/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.168955045 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.132803475 seconds)
    (169/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.146887278 seconds)
    (170/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.113535783 seconds)
    (171/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.920602 seconds)
    (172/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.787753801 seconds)
    (173/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.903260891 seconds)
    (174/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.920008286 seconds)
    (175/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.103218126 seconds)
    (176/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.98883383 seconds)
    (177/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.225767568 seconds)
    (178/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.106917239 seconds)
    (179/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.091205935 seconds)
    (180/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.004648035 seconds)
    (181/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.11337247 seconds)
    (182/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.806182223 seconds)
    (183/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.850701703 seconds)
    (184/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.614647933 seconds)
    (185/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.837526008 seconds)
    (186/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.818784212 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.828613708 seconds)
    (188/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.079250688 seconds)
    (189/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.827312742 seconds)
    (190/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.706424543 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.928687752 seconds)
    (192/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.310350812 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.790318898 seconds)
    (194/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.869454007 seconds)
    (195/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.325959955 seconds)
    (196/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.012078173 seconds)
    (197/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.805849166 seconds)
    (198/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.838858837 seconds)
    (199/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.885344524 seconds)
    (200/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.948919357 seconds)
    (201/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.794269709 seconds)
    (202/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 8.293749024 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 3.175223907 seconds)
    (204/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.105849973 seconds)
    (205/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.018796277 seconds)
    (206/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.809147357 seconds)
    (207/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.999613761 seconds)
    (208/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.090715839 seconds)
    (209/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.789998941 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 3.788767558 seconds)
    (211/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.89751051 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.101957678 seconds)
    (213/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.207730174 seconds)
    (214/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.806027414 seconds)
    (215/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.8328528 seconds)
    (216/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.904426235 seconds)
    (217/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.059537696 seconds)
    (218/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.981511162 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.603528404 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.008005873 seconds)
    (221/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.315784749 seconds)
    (222/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.62610432 seconds)
    (223/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.910988633 seconds)
    (224/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.809108058 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.878929561 seconds)
    (226/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.026525305 seconds)
    (227/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.792938841 seconds)
    (228/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.725648436 seconds)
    (229/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.966281025 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.84948521 seconds)
    (231/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.927191881 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.42862967 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.987194726 seconds)
    (234/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.480254255 seconds)
    (235/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.984481224 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.808111989 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.70125579 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.797061122 seconds)
    (239/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.527433296 seconds)
    (240/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.519581751 seconds)
    (241/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.971551964 seconds)
    (242/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.28767989 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.846535834 seconds)
    (244/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.432767957 seconds)
    (245/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.090814121 seconds)
    (246/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.45102182 seconds)
    (247/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.470449775 seconds)
    (248/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.931998968 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.079791879 seconds)
    (250/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.82183291 seconds)
    (251/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.87435538 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.947756521 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.821218905 seconds)
    (254/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.804236963 seconds)
    (255/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.921039302 seconds)
    (256/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.748567323 seconds)
    (257/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.942232824 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.818235609 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 3.588512114 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.894424676 seconds)
    (261/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.476518629 seconds)
    (262/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.935377537 seconds)
    (263/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.940570202 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.180492573 seconds)
    (265/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.950182767 seconds)
    (266/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.174804347 seconds)
    (267/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.820581905 seconds)
    (268/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.83821183 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.203593407 seconds)
    (270/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.051790194 seconds)
    (271/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.436379742 seconds)
    (272/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.388978421 seconds)
    (273/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.927625075 seconds)
    (274/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.820920943 seconds)
    (275/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.064721128 seconds)
    (276/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.903175675 seconds)
    (277/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.890076669 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.031705961 seconds)
    (279/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.966823925 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.068047296 seconds)
    (281/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.213185652 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.905254382 seconds)
    (283/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.818674206 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.90956909 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.961363509 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.562461472 seconds)
    (287/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.815844441 seconds)
    (288/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.003719184 seconds)
    (289/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.826480235 seconds)
    (290/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.938517266 seconds)
    (291/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.013192945 seconds)
    (292/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.96187472 seconds)
    (293/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.105990109 seconds)
    (294/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.771670182 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.850740407 seconds)
    (296/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.820214931 seconds)
    (297/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.938315196 seconds)
    (298/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.91732513 seconds)
    (299/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.842662667 seconds)
    (300/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.828886345 seconds)
    (301/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.84553748 seconds)
    (302/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.037206392 seconds)
    (303/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.391279366 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.842190878 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.626493232 seconds)
    (306/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.193462983 seconds)
    (307/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.910124111 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.243740479 seconds)
    (309/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.848082803 seconds)
  done (took 996.426271272 seconds)
done (took 998.230070157 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.852959542 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.84824398 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.832553832 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.853874203 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.944402475 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.859368567 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.84290271 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.834341228 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.880815349 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.881484562 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.831085849 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.861470395 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.834440694 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.831845118 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.832769356 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.84801336 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.155526824 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.869603215 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.849607006 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.841976618 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.849209607 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.831499169 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.883244675 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.859585929 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.837559541 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.835636265 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.835679058 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.853765188 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.944533252 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.83619413 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.835823127 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.845874565 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.148506328 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.863739638 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.827478848 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.85332975 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.844661948 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.842774193 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.838576005 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.865870059 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.304303307 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.839964561 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.836489221 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.83598289 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.83490568 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.837746608 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.835951407 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.843098863 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.848750841 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.848255861 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.29719834 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.857511071 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.838235765 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.837297312 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.845371142 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.835935816 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.842750056 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.850720043 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.85497909 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.851923921 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.141521909 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.871006252 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.840423219 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.861168464 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.845285907 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.335429306 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.84033247 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.840214793 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.297668469 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.848860497 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.33260461 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.851893844 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.838287034 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.849564274 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.868334651 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.15100677 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.862354091 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.834790831 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.843831149 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.835133102 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.845312507 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.849054179 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.841523543 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.837204206 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.849534271 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.86440771 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.845816696 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.8376187 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.845202641 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.855395326 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.845112828 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.846776685 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.840824998 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.831979834 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.846381723 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.84470598 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.839790434 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.840489829 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.842271188 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.847438525 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.297704683 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.863003711 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.834074615 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.834631085 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.836440979 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.851182038 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.300219958 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.845704755 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.859425024 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.885960031 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.840947323 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.144733214 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.872015816 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.854004189 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.84644667 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.841667387 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.83390703 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.142970935 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.329473055 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.85963422 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.84066396 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.836725331 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.853912649 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.841252972 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.835668792 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.152766073 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.874469589 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.851978952 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.958459223 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.849180692 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.869513683 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.836603017 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.842048295 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.866361939 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.854154741 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.870647234 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.842348426 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.854664936 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.854482326 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.836484983 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.850293411 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.849626671 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.842107314 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.845705029 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.833727229 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.868204915 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.852559821 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.85217834 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.862104494 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.960217679 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.837173251 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.145454576 seconds)
done (took 289.143667348 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.910212354 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.827951273 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.937546507 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.835717323 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.917437564 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.926524932 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.83616268 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.834330316 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.833300704 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.209314726 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.832411505 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.84405484 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.83710042 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.834059237 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.919232075 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.836713661 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.834401734 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.172075782 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.837016738 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.90874402 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.836691766 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.833826601 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.835991059 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.210189099 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.8338963 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.829647862 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.90886097 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.836975931 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.176064359 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.831346367 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.829779179 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.175410484 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.929284815 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.855729641 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.848948439 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.844520579 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.919296033 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.842113377 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.919016291 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.920086855 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.935644162 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.878312966 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.836415673 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.831959992 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.842491077 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.838627673 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.83496198 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.866192155 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.835619602 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.835383939 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.174619423 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.847415606 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.83676133 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.836405642 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.836120618 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.86808841 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.835433543 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.838635291 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.930763126 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.838239224 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.901492329 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.213850624 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.21113426 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.839353702 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.831693588 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.836616212 seconds)
  done (took 182.121082108 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.906198167 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.911980643 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.905834072 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.844616305 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.891323882 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.908655224 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.844217739 seconds)
  done (took 14.981661016 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.845646969 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.840309779 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.895185909 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.894272357 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.840689267 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.004186653 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.841365704 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.853375508 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.838201876 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.892527874 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.84023155 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.843011804 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.849168614 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.837080596 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.893589952 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.852848309 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.956770496 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.842764338 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.840706414 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.991794452 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.838109733 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.847516088 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.894092466 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.852000247 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.840644088 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.84773783 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.45970436 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.840558497 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.838289122 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.84107245 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.840534088 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.882938274 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.841036814 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.836974926 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.839020476 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.976849426 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.839631024 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.839671324 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.843328594 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.838947367 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.84090197 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.841876505 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.841051026 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.838703234 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.843536524 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.867219076 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.841824937 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.843342918 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.842331589 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.842944822 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.890838449 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.84195413 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.840039822 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.839399883 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.897086056 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.850113826 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.842958296 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.840157272 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.843213997 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.840172093 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.995926255 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.897410805 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.842234113 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.900018728 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.844373361 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.843044895 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.842640095 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.842285196 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.940933242 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.843139083 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.896515365 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.840034625 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.000837979 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.86890827 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.844388344 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.845483246 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.846236074 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.843307965 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.841483172 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.849192804 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.840801915 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.845065535 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.849477773 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.840660862 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.83998497 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.975119992 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.975836277 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.855149805 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.856644058 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.851575652 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.841755377 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.896623735 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.845805605 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.841858222 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.911498468 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.960417185 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.90291432 seconds)
  done (took 203.314007823 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.848333496 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.852100023 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.846119522 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.861036509 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.844037198 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.845937152 seconds)
  done (took 12.871848303 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.846187259 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.845627748 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.845568823 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.846516289 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.84435115 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.84691992 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.84550768 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.846815143 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.849096556 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.846346365 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.84570617 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.846516103 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.846099631 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.844578978 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.846667115 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.844879291 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.845282101 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.84295553 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.846421545 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.845365064 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.993912867 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.845043769 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.845118831 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.847043789 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.84970606 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.845915431 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.853891781 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.845925803 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.84584466 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.854875611 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.849127203 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.847159835 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.84858853 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.85366697 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.849731798 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.846966991 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.850470861 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.846904588 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.843885236 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.846079791 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.848740723 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.847000996 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.846056815 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.847702332 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.848277596 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.850964258 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.851156953 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.855746936 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.847359389 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.848349212 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.848141225 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.847478092 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.846987071 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.849004589 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.849829115 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.85326394 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.85317879 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.848379732 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.847289514 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.850357882 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.848077207 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.847719255 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.849536998 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.853202154 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.855499643 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.850003946 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.849091666 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.85316631 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.847904009 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.847798116 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.849103548 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.845755875 seconds)
  done (took 135.9852148 seconds)
done (took 551.054459831 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.943096703 seconds)
  done (took 8.720328714 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.955413155 seconds)
  done (took 8.831631304 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.697378237 seconds)
  done (took 10.47513435 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.866470651 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.846033757 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.855535127 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.851151079 seconds)
  done (took 29.207619463 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.887705517 seconds)
  done (took 8.665050843 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.857062903 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.840529992 seconds)
  done (took 15.510147943 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.985585479 seconds)
  done (took 8.763853282 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.958602011 seconds)
  done (took 8.740050406 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.864998677 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.88209256 seconds)
  done (took 15.537192432 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.828329681 seconds)
  done (took 8.606271599 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.574015806 seconds)
  done (took 11.360140418 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.845011484 seconds)
  done (took 8.63806184 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.901033542 seconds)
  done (took 8.679180247 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.861933817 seconds)
  done (took 8.645952532 seconds)
done (took 162.156504651 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.849243944 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.844720806 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.843947879 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.845919047 seconds)
  done (took 29.162929454 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.882618234 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.883663386 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.884107438 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.894001522 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.885451449 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.882933746 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.875178478 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.875143008 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.893526526 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.886136652 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.886375751 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.885309409 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.882773382 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.876315065 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.887441614 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.884635845 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.8947443 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.885203938 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.874677589 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.887128989 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.851653899 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.894104065 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.887115838 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.851284133 seconds)
  done (took 46.9506997 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.047456848 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.922172762 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.004229409 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.902826092 seconds)
  done (took 9.655400263 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.905013166 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.904309307 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.914573565 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.95507304 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.97809238 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.915192242 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.878857937 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.872584759 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.859288406 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.905003974 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.980131323 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.902022187 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.989890296 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.851465773 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.056840383 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.85175068 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.851834417 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.90377168 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.955027451 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.968058878 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.851341297 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.904661002 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.906452351 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.90106419 seconds)
  done (took 47.742152143 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.849743433 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.859493483 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.858096919 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.850937763 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.850988364 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.850688359 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.858228691 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.853396393 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.873274241 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.852835597 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.849471752 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.852954797 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.850941429 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.852499655 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.85143968 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.863622329 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.864290132 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.85117685 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.855466664 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.858302008 seconds)
  done (took 38.889436874 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.846192734 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.57086585 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.198654456 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.101654169 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.8452472 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.848793959 seconds)
  done (took 32.193455949 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.86646977 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.859776171 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.852495697 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.911922353 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.993829225 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.861770424 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.85314301 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.864899883 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.900919666 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.920418264 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.875074769 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.88172639 seconds)
  done (took 24.424313614 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.848297022 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.849467678 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.848944744 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.865572929 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.866068876 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.862449623 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.860073609 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.846654455 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.867036187 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.873938895 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.862157348 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.866278772 seconds)
  done (took 44.104107274 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938480724 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.739002397 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.877043392 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.568581365 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.32134289 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.060359439 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.380457376 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.18924328 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.8533195 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.122852032 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.934670807 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957386972 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.102927511 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.849967493 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.863569101 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.324762659 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.144214724 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.071002085 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878506535 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.630732101 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89774548 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.463222548 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.703125134 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.906128259 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.061555305 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.981548228 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.111348993 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.800584742 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980780597 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.88679155 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860942234 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.849642848 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.125316977 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221052785 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957006749 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860662209 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.511066717 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.567311991 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.840417441 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.633202282 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.653632682 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.98109727 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023230411 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.996248173 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.785394456 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420691587 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235782054 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.856733696 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.561805987 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.851754186 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.864925208 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939837293 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.85415589 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.667008977 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.806055795 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.130776512 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.847787593 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859283292 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.418234539 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.943555562 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.466667458 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.83516313 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.044585825 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.608478443 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236604081 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.998301565 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.85702904 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.858350886 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.789741002 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.611961819 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904929716 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.00724322 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.871809109 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.501819743 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.146294839 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.947266854 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.798535562 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133927709 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.171553447 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.836358162 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.081843861 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.810460466 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.787641925 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.711154521 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.788392017 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.114017331 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888444824 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.481389571 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891557741 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.190755395 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.866101424 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87146367 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860738762 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.078390527 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.420129523 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85361121 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.66554284 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.02330706 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875653253 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.19204235 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.789970924 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.85772218 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.109420947 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.066158795 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.165213079 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.374439097 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01363486 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.855214549 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.935067773 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.846978977 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.911327221 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.121605872 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.911276584 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.947188568 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911626106 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.811885596 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146889705 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.881188748 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.021991672 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.907846461 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.98402624 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.180927555 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.1453476 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920216833 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.863467327 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.85431658 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.698049264 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.406120176 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.121565519 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.857181007 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.434042491 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.91198235 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.856674706 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.791131914 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.455702536 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.908473717 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.827048258 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.080417419 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.857377153 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.171304497 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.790067332 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.001646038 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.973234695 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.08097317 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.496921017 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.928776364 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.114104757 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420881879 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.223218598 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913963953 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875569044 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976633108 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879949742 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.365889573 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.157128108 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.861703662 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.8613782 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.678254642 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.857469 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860966765 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.866495355 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.66522237 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131771141 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.892473503 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.86761692 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.103273006 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.871743267 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924839503 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.863213413 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.868324873 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.404556166 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.61068926 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.869981052 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.487370693 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084515718 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.868143729 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.618300044 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.970417774 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.94738378 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.127701591 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916619839 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.793407344 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.570218792 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.551815015 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859833813 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.794676737 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.859445223 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869023533 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.869262113 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.242596905 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.131443328 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901473573 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.617980123 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.899325096 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.870469869 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.868465816 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859763673 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.401072778 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.97918784 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.473454948 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.913635584 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997414039 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.874344115 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.794694338 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.865765201 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.864210875 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.85948162 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.815617484 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913479488 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.64659924 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233129016 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.120499729 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.517737461 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.879617966 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.660076298 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.918080712 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.880582971 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.718844023 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.875414364 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.903612437 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8744843 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.872269326 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.629992015 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.568825791 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.425554871 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.185951362 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.165619667 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.297244794 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.416292003 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.171798286 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.198620958 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098252459 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.391426369 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.922893599 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.205078696 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.808009701 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950720224 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.506026478 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.212451271 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878600267 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090343979 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.246864418 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.779758618 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.887304946 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.074142185 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89714503 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.858854693 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.829889447 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.070078078 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003643437 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.615329147 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.064629942 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201144779 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.594329508 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.979469054 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.866474263 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.552632848 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948843783 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.582121892 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.224290904 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.485789506 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.869325868 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360216503 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.875818441 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.308941744 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.219336191 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.277648363 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.998445018 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802067956 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.875174935 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.874005845 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.865622183 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.859693954 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.741249272 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.116612629 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87654067 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100190252 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.211320131 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.163919852 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.769855297 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.873590112 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864861707 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163955626 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.725648714 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040260225 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.393785064 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.397680488 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.871648393 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.799760481 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.800674736 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.557207721 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.866186281 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.840080239 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0889823 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.056185537 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.821476559 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.467560744 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119174125 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.123969073 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.882816279 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.142522132 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.147409053 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.604784853 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895202887 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.964348471 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.598734381 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.976133952 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.134446046 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.100959624 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.673468806 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.098719348 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.900805555 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.681175398 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.864798807 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.082373327 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.136394191 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.846760578 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107858925 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.58895978 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.926355304 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.186536233 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926025353 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.852561966 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.022368162 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.062006134 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877821939 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951826854 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876524742 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.878014547 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.879325473 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918546728 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.861992128 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.994658377 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.88125713 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956314261 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.012297446 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.397833455 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.87342204 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.14370053 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.23060585 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.195814244 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.928559484 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.867548732 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.874806358 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802825317 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004947106 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.314741032 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.140835221 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.998355545 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.169468311 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893810919 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.612756338 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.342580658 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11794429 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.143426375 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.763548766 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87085777 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.891512166 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.135810268 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.880100268 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.0789201 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154067867 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185582474 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340807693 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.19589233 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.244882232 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.145525513 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.237582801 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.871457712 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.461141787 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.941776023 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.552109596 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.912125289 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.855931018 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.139917502 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.881150831 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.255109286 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.893487788 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.070118387 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.386928513 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.694589865 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.159201625 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.865801439 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.933742272 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.145742103 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.258055275 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.183989392 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941784476 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.880992071 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.576000745 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007923582 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.76424583 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.140198667 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.872520807 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08297793 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.581535006 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.881471006 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.148489815 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181701648 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.869397587 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.794598639 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880238451 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.882685562 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.095032771 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13990634 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.125575115 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881441489 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.872332027 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.687659447 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.146445073 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.931316262 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.806904815 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.876449991 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973996536 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.120151725 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89627279 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.390686506 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.582694088 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165866123 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.792608862 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895090048 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.494218006 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.244092932 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.198437109 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.415021096 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.09879156 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.432508489 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.873745116 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.175555486 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.878097564 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.453304066 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.188893187 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.876784982 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.572774892 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917732688 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.143188575 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.19300677 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.932078442 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.658857839 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.844909768 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.097443378 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.478638684 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817103868 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.884555318 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.93429633 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.875955459 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.005065759 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.885679454 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.80473493 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.875126733 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.647956339 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.367203025 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.880110122 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.865142913 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.662520872 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.573976311 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916183434 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.018469709 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884172851 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.585080985 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.168556713 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.128107861 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.58211346 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.888560607 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.878592964 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.875521085 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.804519589 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.074105705 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.256022842 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169437164 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.398291121 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.918390173 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.879789517 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.091505085 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086411447 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.841969081 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.014134737 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.446686992 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.92068918 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.629175261 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.555010324 seconds)
  done (took 1686.400647122 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.882638879 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.918616988 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.92735459 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.966745534 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.937382025 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.944537875 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.913697874 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.945183414 seconds)
  done (took 57.246869046 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.879417704 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.080670794 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.886542589 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.876418168 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.885496688 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.876999644 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.051120854 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.88879281 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.886101231 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.885452195 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.895201449 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.875656705 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.214581161 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.903721309 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.877088644 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.88518347 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.885523962 seconds)
  done (took 74.585217964 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.87799251 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.091734845 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.911092219 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.893657357 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.818841664 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.885469658 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.87499258 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.885569821 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.885589578 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.110809238 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.513850674 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.904975032 seconds)
  done (took 90.467785289 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.889075726 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.884860334 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.884343893 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.884554402 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.884853407 seconds)
  done (took 11.244843009 seconds)
done (took 2194.908827029 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.12845342 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.10305597 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.123734682 seconds)
  done (took 6.039413016 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.034400526 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.080679596 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.201607218 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.206138219 seconds)
  done (took 10.345227597 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.176502791 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.258658072 seconds)
  done (took 6.253882986 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.294197827 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.902989735 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.283831761 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.885815634 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.885009225 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.886779634 seconds)
  done (took 22.482138533 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.888552863 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.891870061 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.888680693 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.891145013 seconds)
  done (took 9.379386844 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.869304928 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.56538944 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.871507365 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.884511863 seconds)
  done (took 21.011267977 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.636072383 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.287152039 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.632196442 seconds)
  done (took 9.376539092 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.395678568 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.779797003 seconds)
  done (took 8.996692804 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.146167629 seconds)
  done (took 3.967115166 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.918132353 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.159289792 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.410358945 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.405927647 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.492756428 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.757074561 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.217074242 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.142243821 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.307210016 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.331347671 seconds)
  done (took 24.963416521 seconds)
done (took 138.235964626 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.267768137 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.136225037 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.081730672 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.236746729 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.110684753 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.082687782 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.095905678 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.22292225 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.733250312 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.731090202 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.235824588 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.110978064 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.036632703 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.125367035 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.043753178 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.122897499 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.108809841 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.282817457 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.931246805 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.130143064 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.107539065 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.863544248 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.080222712 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.878440869 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.110712938 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.038563334 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.454761546 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.126849723 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.084503784 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.462565157 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.04003827 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.282178377 seconds)
  done (took 173.181131637 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.797295335 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.88951525 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.889865211 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.890446359 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.118908438 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.889160091 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.890634393 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.888899801 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.034682451 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.027988537 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.916003339 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.180652268 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.908591826 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.889685001 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.895538359 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.890748613 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.153435796 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.864404863 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.900159062 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.901749975 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.904278254 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.024897131 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.906788341 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.064428993 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.173826881 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.909410656 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.891964184 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.910494222 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.89554367 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.899520436 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.904950308 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.890824654 seconds)
  done (took 208.020492431 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.889531052 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.891379846 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.892461199 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.890999472 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.908930883 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.8891022 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.894379556 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.890568975 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.58908537 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.582736157 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.899748194 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.899619686 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.905322555 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.892278571 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.906325559 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.892586054 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.904605525 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.905020163 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.902399961 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.906485445 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.908713828 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.645616072 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.906446817 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.657214682 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.906648539 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.907506611 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.89386544 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.913302094 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.917921768 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.918690731 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.915558384 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.89512 seconds)
  done (took 221.55980034 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.089001038 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.900891442 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.900748295 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.845949929 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.900381463 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.900441364 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.851615602 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.090706703 seconds)
  done (took 19.334365135 seconds)
done (took 623.92860221 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.387380862 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.23101768 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.081829734 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.925464889 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.20292988 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.964693474 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.919913815 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.986242345 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.643117531 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.993529264 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.56536443 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.940499532 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.658689831 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.947570881 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.04369456 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.982254279 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.514457519 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.611544923 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.103046962 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.027468909 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.101610489 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.86048897 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.000320437 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.670284815 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.682803681 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.908009563 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.091182198 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.519190144 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.93399335 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.084797073 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.691694808 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.317960646 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.93486014 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.919917858 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.974934103 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.953934367 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.260212098 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.933433599 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.039046478 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.656652135 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.008182555 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.539799166 seconds)
  done (took 104.645613103 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.890811057 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.888952061 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.886871532 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.889018585 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.889441199 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.889581034 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.88737492 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.888382852 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.889252769 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.888731119 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.888049803 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.889913631 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.8882905 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.890499231 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.889653613 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.889011414 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.890068961 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.89148155 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.889262164 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.888653171 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.889588971 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.888800778 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.903013925 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.888649754 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.890695389 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.890701197 seconds)
  done (took 50.981010603 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.903723004 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.067566567 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.15237726 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.923766938 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.901576979 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.906238246 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.920509268 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.908813562 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.906042866 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.905700658 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.010056134 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.910299917 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.923630485 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.153181542 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.920380259 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.903766578 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.904348218 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.904922137 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.075221528 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.921792038 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.924736498 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.909811149 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.923243939 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.918582926 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.907346241 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.905157014 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.907533381 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.361079399 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.914454363 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.010792121 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.948465827 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.926620533 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.329422021 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.166489203 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.961598332 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.91398982 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.906080092 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.014588742 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.912384393 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.905935594 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.924680087 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.911103411 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.155294275 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.395343366 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.920819011 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.905683951 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.372225932 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.023873251 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.946000675 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.917861933 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.157413971 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.922783755 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.907225309 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.906261881 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.942538876 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.91664034 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.905374095 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.248088021 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.917580793 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.925241643 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.912237805 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.907606405 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.084796457 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.915048173 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.071833695 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.915683602 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.91360764 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.907014657 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.155980722 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.92341643 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.396958676 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.921626072 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.906856389 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.012392734 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.075683943 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.399652066 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.920995418 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.086549293 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.345856241 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.933114656 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.91442464 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.350668059 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.9361616 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.915483425 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.90935659 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.909309597 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.908153777 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.952855765 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.923414225 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.330172675 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.401692694 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.263686025 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.935212285 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.92424796 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.907894251 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.248944733 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.917160112 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.908533384 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.151503735 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.409245512 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.922650316 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.916764798 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.383416134 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.925208746 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.927751374 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.917898012 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.163324567 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.924845803 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.954957258 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.909470913 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.914827609 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.911459448 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.928753147 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.916484245 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.910475791 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.373816914 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.036123155 seconds)
  done (took 236.612692913 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.904328796 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.904315537 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.90306551 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.903631813 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.901501527 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.908996791 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.902432752 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.902861481 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.909341802 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.901643974 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.903376654 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.90202247 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.904534158 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.906831635 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.955984711 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.910728043 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.561736422 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.904198028 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.90435891 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.903904698 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.552215827 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.90987161 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.903244694 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.905238344 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.906022952 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.905153133 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.907895006 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.946514136 seconds)
  done (took 168.579495725 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.910669561 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.025629446 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.929126143 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.93910331 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.919793977 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.908793231 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.934895189 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.927605211 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.91569156 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.90872206 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.909671074 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.972498336 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.923265998 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.011465017 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.940860869 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.941945861 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.016112212 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.918113543 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.909095813 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.908782757 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.939567499 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.907323148 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.972727274 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.039902238 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.927939391 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.029999903 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.916593623 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.91320923 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.91208813 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.030794071 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.925002945 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.971507835 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.941153717 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.930288388 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.032170503 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.030698376 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.018522823 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.939911934 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.91529914 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.911259564 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.910438091 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.900589084 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.028502757 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.93229995 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.912316814 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.020653374 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.93159981 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.913774811 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.921602607 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.910743525 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.926774125 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.930351819 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.978841043 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.045726212 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.945168189 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.937106469 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.936244755 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.199376928 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.924723919 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.014173365 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.905416068 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.033468183 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.933811381 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.901918987 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.913707134 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.918288716 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.941801235 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.945151311 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.020848027 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.919760509 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.015935796 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.947151345 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.919367431 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.912252063 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.91541854 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.029122823 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.031246705 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.947157255 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.952974549 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.9451266 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.909677472 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.913334344 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.902968023 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.932143263 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.917098555 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.030671006 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.033431146 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.919652447 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.915573708 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.916127153 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.915812385 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.940948105 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.038325316 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.948437027 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.013761395 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.981835735 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.989942888 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.927805086 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.92683672 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.917260603 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.978347236 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.928195733 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.926179511 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.247619193 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.990209289 seconds)
  done (took 207.155909077 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.382916927 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.967921923 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.97276764 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.237926281 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.344537779 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.839981991 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.963300382 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.964181233 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.986772015 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.156202516 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.03600436 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.986331054 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.951688968 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.94015879 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.96531839 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.984169626 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.974707311 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.295026627 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.081892232 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.091306842 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.943419425 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.276747856 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.285130045 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.412733985 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.000467712 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.314678506 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.644611922 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.219379759 seconds)
  done (took 63.072146849 seconds)
done (took 832.872853365 seconds)
SAVING RESULT...
DONE!
