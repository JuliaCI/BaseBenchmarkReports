cset: moving following pidspec: 28563
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.227472587 seconds)
loading group "string"... done (took 0.464942328 seconds)
loading group "linalg"... done (took 7.522586984 seconds)
loading group "parallel"... done (took 0.169426458 seconds)
loading group "find"... done (took 1.174827633 seconds)
loading group "tuple"... done (took 2.06920217 seconds)
loading group "dates"... done (took 1.30873083 seconds)
loading group "micro"... done (took 0.242488016 seconds)
loading group "io"... done (took 0.734552412 seconds)
loading group "scalar"... done (took 40.441235209 seconds)
loading group "sparse"... done (took 12.523684636 seconds)
loading group "broadcast"... done (took 1.11387282 seconds)
loading group "union"... done (took 14.197174544 seconds)
loading group "simd"... done (took 4.859783072 seconds)
loading group "random"... done (took 9.555353111 seconds)
loading group "problem"... done (took 1.990177135 seconds)
loading group "array"... done (took 22.482852902 seconds)
loading group "misc"... done (took 1.411289154 seconds)
loading group "sort"... done (took 3.569428688 seconds)
loading group "collection"... done (took 19.331758464 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/8) benchmarking "broadcast"...
  (1/4) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.473910802 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.203378316 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.246031768 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.148074844 seconds)
  done (took 1.947594992 seconds)
  (2/4) benchmarking "typeargs"...
    (1/3) benchmarking ("array", 5)...
    done (took 0.165007953 seconds)
    (2/3) benchmarking ("array", 3)...
    done (took 0.07527295 seconds)
    (3/3) benchmarking ("array", 10)...
    done (took 0.094492396 seconds)
  done (took 1.030872559 seconds)
  (3/4) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.332439478 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.244259247 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.224392547 seconds)
  done (took 1.466563509 seconds)
  (4/4) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.331660713 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.283836096 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.335573904 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.402278209 seconds)
  done (took 2.11777787 seconds)
done (took 7.23118744 seconds)
(2/8) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.736837728 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.276182939 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.2025064 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.461170467 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.1933253 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.212353181 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.671758207 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.348678363 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.259384222 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099146653 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.141872216 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391757331 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133302884 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.675538608 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.088308974 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.122781551 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.178416064 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.450976521 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08106119 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.108063753 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.11484996 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140172661 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.127541821 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090994922 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.181433134 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.080179658 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.190086434 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108916366 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.078991954 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.282734089 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.198249571 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.680370455 seconds)
  done (took 10.804258994 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.118118093 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.122843526 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.099061781 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138770735 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135458187 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100334737 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084671063 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096982046 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121800733 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176232194 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114298771 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136837284 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095558019 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.110499175 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.098745052 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244209378 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120269387 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103394705 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.103365347 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.104542155 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121277996 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114141104 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109155755 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091960248 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166685605 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220902928 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108486059 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124545311 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.094735554 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.110324687 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143012696 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143285642 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095245067 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080657376 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172494852 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125680307 seconds)
  done (took 5.129759576 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.184948828 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.12263779 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168842699 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.163981555 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146579382 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.16120645 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114933528 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.25913629 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.117787543 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162413185 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142387663 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115855651 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079241677 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.099187012 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096023219 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.717238073 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.160155635 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.153050976 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.095167422 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103584085 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099403719 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.379369977 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087067751 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.09795488 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082274931 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.083230198 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162260063 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082510759 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.17442501 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.099366932 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100507858 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130888591 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19184649 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123717702 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.11567721 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095644714 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.07802944 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.190201599 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089138694 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096846709 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103045914 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13690869 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134792566 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09758256 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082111252 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.22025654 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081770776 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11561403 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.943751729 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180644696 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.111436968 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096064239 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.323062523 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09630383 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096261505 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.092623948 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.248748807 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.180338183 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097064965 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079324565 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095630893 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.124945612 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080687333 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.387243692 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.096431642 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.719649141 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083447463 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107332252 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083239872 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09688433 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104872808 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088016163 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11625186 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080236574 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.100502311 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079321436 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097103287 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08208026 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109541618 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10077207 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.078746804 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.162236895 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.078814392 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.115305451 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115979564 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111342482 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.100227475 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096296066 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11606191 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098725007 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.09906534 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.117492107 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100230483 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109290476 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084445669 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143063329 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097820871 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.07661551 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.178755063 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079895805 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127536162 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.09900817 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113679123 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.091791362 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.110122631 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080690757 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102234767 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077021831 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.093753711 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146539577 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.092306357 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081618554 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.098420342 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.106462302 seconds)
  done (took 22.666553664 seconds)
done (took 39.267232837 seconds)
(3/8) benchmarking "problem"...
  (1/1) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.433506055 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.998532046 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.038943505 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.160715749 seconds)
  done (took 5.330769607 seconds)
done (took 6.042464602 seconds)
(4/8) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.088240536 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.106415413 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.091764216 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.106037155 seconds)
  done (took 1.09090611 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.143118526 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.084878934 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.113710783 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.08361851 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.114964949 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.101316119 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.086902205 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.10637699 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.082973798 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.103126647 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.084352779 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.102156478 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.103218774 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.086466293 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.099318065 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.08937143 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.112115368 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.100734994 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.087981273 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.101645922 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.082973402 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.103873896 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.08825339 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.101388289 seconds)
  done (took 3.104694027 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.098931691 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.099041943 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.085477764 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.098833469 seconds)
  done (took 1.093071658 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.089760409 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.111689802 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094395399 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.106506697 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.111259058 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.094916842 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.09804311 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.081421121 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.099881701 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.089184548 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.097444594 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.119687499 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.096581763 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.104890019 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.090299709 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.095017879 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.080299083 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.111554795 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.105161165 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.089224334 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.098933217 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.087921821 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.096256518 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.098133326 seconds)
  done (took 3.058088475 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.157116864 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.107519812 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.118810865 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.08484423 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.140043027 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.130974607 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.101288047 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.121014456 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.1216465 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.091887258 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.09733936 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.135695863 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.090428903 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.092764251 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.074785455 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.092233423 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.106418734 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.09140659 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.094716048 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.088805998 seconds)
  done (took 2.850670856 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.095343996 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.108491484 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.079732923 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.097682091 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.088207958 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.103093813 seconds)
  done (took 1.291514692 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.079391335 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.094887484 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.080097775 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.095235098 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.083350537 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.095583368 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.077326351 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.094864376 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.078929976 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.09522687 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.078527258 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.093940015 seconds)
  done (took 1.761524657 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.507042552 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.080557814 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.101695043 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.094329543 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.084118684 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.094264248 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.090458967 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.096851325 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.100341939 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.099910424 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.093790069 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.079216371 seconds)
  done (took 2.273414215 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.331191905 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097748128 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246428013 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.333471303 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159274106 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147206037 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.261543289 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143871642 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.199693945 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138692334 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202551034 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172883736 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138862133 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210370223 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10765675 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.134906906 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172729688 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241387117 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13014007 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211769843 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17029455 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144634307 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156203558 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134395465 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117538357 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184268163 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.099954332 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106691065 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186330363 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186295315 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170816308 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138375249 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137843244 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205774073 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224083552 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17409509 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264665709 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09616861 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.13420193 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.145704338 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23364714 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105184712 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207409225 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137332872 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108980133 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188037832 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141506235 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.18306691 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.121193545 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105680845 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188194163 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203797803 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.200847195 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115078374 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274377463 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129635334 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142116089 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168829306 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236090929 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199044921 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169212395 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.099454437 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164362863 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189445846 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166832538 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.137282764 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.165698142 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125222268 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173800931 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19156993 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167656503 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166234176 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.180105246 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128748513 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14567251 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14662382 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147146049 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221314951 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161040499 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.099595312 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150200088 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125890568 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093540524 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.180247081 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103917223 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191019299 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121489746 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.140036281 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188533757 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133097605 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135424516 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204399551 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172991935 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125813772 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.088535193 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113100911 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.131151219 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150897475 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118961519 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134653952 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135038806 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.109693636 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148138938 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.102410194 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163178058 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.07881582 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165260588 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158903066 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.087515744 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143233769 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127960122 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.128597004 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156929884 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192089825 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120114597 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093908062 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201237645 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154246688 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.118665891 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151628503 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17703437 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.124029477 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127380334 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173221891 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207535242 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123083659 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175965548 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133395648 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112391097 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.107964429 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158037942 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130935087 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.145708544 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094538051 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.177164961 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177924075 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.104649605 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115173224 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175184672 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111984461 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109566315 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132072394 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108119003 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.114567218 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.118200334 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.120368494 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15126087 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156351588 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131844316 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140452096 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128774782 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21826854 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120257765 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.127136248 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107494109 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.098883838 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.183307874 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191939607 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090737272 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198070885 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.145708247 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1959797 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147791235 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095466062 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152583823 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108432075 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.098301366 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16913785 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143734928 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137486458 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.189698324 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175065058 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.16302441 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.17948835 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142415512 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149587059 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.250720464 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134030513 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.115068229 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13653325 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134656328 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.084343865 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.116812875 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.111980926 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124685043 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103040888 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11266164 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194403788 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148283438 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165482397 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136642415 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127689636 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157898092 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.108174241 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155918145 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.154268966 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126293343 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.173706597 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18746783 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16329541 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122361171 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194314243 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.081233341 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10287842 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.101702022 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161617788 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093953293 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113447572 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140199323 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156890525 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153805464 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163538007 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185055064 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15584366 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183351712 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.083240077 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.145402626 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159759053 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153523221 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.146953648 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120784989 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.126689365 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153020776 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135312007 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232822036 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144765994 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151706365 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200997692 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.110037426 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110723349 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128345714 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166284232 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13242354 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1519829 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12515693 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119238224 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136928106 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.090037266 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153779941 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159457782 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140945341 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162241564 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.126798352 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178725228 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088457317 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141005067 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135791927 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141835796 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.087106553 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14913583 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177008218 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12552903 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141640008 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181111417 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.0916922 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.273905235 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199558175 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184728363 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097494624 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132899167 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13756616 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140792449 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146291406 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154524529 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13537832 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180527743 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121213506 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.113393149 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118953544 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126240461 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127512977 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.090799718 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.124935068 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.151555086 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.115723476 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158764994 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131906395 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135354506 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166851132 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.10900239 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.121144294 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127726128 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189483917 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177017186 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190796906 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.127991661 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.154416917 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199837097 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085386721 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110751785 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.112278075 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156044919 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112818701 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172943041 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.164808691 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198305476 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159997574 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166485874 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118035343 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.098135773 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134509985 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144602145 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183148711 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131253664 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.124983577 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192376051 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.09744653 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109749995 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142101234 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260387726 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124889472 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170811022 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.08598228 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.2471814 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087134516 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110979573 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140335555 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209507115 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.096209654 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.146946407 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147563128 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138351235 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140238645 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128548994 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168073633 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20955338 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17516162 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175155397 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.094031521 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133049873 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169022682 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168004604 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136100171 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.11522881 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180398277 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170617691 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.187006958 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.100324696 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162742073 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144404822 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134564144 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164875189 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112010305 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180412014 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113391139 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169627721 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129646806 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115547981 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151258873 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.181512724 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101051388 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181752764 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159537633 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11418997 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092340073 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163297027 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155322038 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136047351 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.088803461 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173307624 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.08505839 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18839947 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223751984 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095065756 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132947942 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125006546 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112632975 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13102377 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135206001 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100231187 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.135391341 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175741954 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.11326161 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18466798 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178244947 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145694401 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166934746 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104747649 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.726065679 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.090813068 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169922962 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125760368 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200637513 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126952556 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151334641 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136893094 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152804416 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171667121 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145117169 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.206798152 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189992398 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.155091669 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109939233 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135208157 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132276442 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.102722978 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128200853 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14523496 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1365706 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.122802039 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.153420027 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159595351 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.094167976 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118270693 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175167496 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12534346 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156737292 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155387139 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116513975 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148986657 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183374774 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093347423 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.182258042 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190112719 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120429287 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129891863 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.113159554 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.126191585 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229924998 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.085326713 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181813473 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181158655 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137288507 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14705846 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.125007602 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171132893 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135511397 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179448359 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101108329 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.1348808 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13328649 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116433148 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.107426679 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131997501 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145269154 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.110874119 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154241229 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.117621063 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170258321 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.102924061 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122117533 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256588886 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153026359 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209208786 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.092189831 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113919533 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139046165 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12814906 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.153221656 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15563482 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.11411 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114185663 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.1142993 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.106127463 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.11448022 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115752922 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191088819 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14095463 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182992394 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.114687375 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.253618308 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100250832 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135471347 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.095363953 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.0927768 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128890963 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123073354 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13681408 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186870492 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209179794 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.126048152 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.112210727 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12845055 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.085509814 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115158012 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142277238 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148322897 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155291792 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123457195 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.068187919 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134260002 seconds)
  done (took 71.818655092 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.142525905 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.111609841 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.12617612 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.28660075 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.156730416 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246707046 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.188647738 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.231684976 seconds)
  done (took 2.294782945 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.172351764 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.116078816 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.137204955 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.113382897 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.078990336 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.149944859 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.333025105 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.110215149 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.079598077 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.126895602 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.12462896 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.097149859 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.501822599 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.098101698 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.098741973 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.07072624 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.097202709 seconds)
  done (took 3.307175391 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 41.366558046 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 4.895545604 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.144900971 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.157519014 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.707508683 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.085394936 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.57409347 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.140878583 seconds)
  done (took 52.876501249 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.106199821 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.121041692 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.115460527 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.134118896 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.123117761 seconds)
  done (took 1.408731223 seconds)
done (took 148.944160639 seconds)
(5/8) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 0.084030468 seconds)
  done (took 0.88319437 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.378862031 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.060047069 seconds)
  done (took 1.279287382 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.093442158 seconds)
  done (took 0.90886353 seconds)
done (took 3.883041938 seconds)
(6/8) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.221573263 seconds)
    (2/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.22072303 seconds)
    (3/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.244705231 seconds)
    (4/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.200941678 seconds)
    (5/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.212556668 seconds)
    (6/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.195173854 seconds)
    (7/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.119035891 seconds)
    (8/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.210401573 seconds)
    (9/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.208332927 seconds)
    (10/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.225721082 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.10515203 seconds)
    (12/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.094585887 seconds)
    (13/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.201809436 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.09181903 seconds)
    (15/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.109210689 seconds)
    (16/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.161578664 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.087764944 seconds)
    (18/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.105302624 seconds)
    (19/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.096422243 seconds)
    (20/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.123415514 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.125024594 seconds)
    (22/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.167903445 seconds)
    (23/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.206093092 seconds)
    (24/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.161773404 seconds)
    (25/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.160244476 seconds)
    (26/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.114544338 seconds)
    (27/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.17444392 seconds)
    (28/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.06087389 seconds)
    (29/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.085253372 seconds)
    (30/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.110743424 seconds)
    (31/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.108920846 seconds)
    (32/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.151223831 seconds)
    (33/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.07013779 seconds)
    (34/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.130118937 seconds)
    (35/286) benchmarking ("sort", Int64, true)...
    done (took 0.209108506 seconds)
    (36/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.087646406 seconds)
    (37/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.160971696 seconds)
    (38/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.242554127 seconds)
    (39/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.075261438 seconds)
    (40/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.164317562 seconds)
    (41/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.144550695 seconds)
    (42/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.085611374 seconds)
    (43/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.137078602 seconds)
    (44/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.171845986 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.079225599 seconds)
    (46/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.196282743 seconds)
    (47/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.107086295 seconds)
    (48/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.085666285 seconds)
    (49/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.108456351 seconds)
    (50/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.173430348 seconds)
    (51/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.087513517 seconds)
    (52/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.116213233 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.102320308 seconds)
    (54/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.164206796 seconds)
    (55/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.113196168 seconds)
    (56/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.122680019 seconds)
    (57/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.102440756 seconds)
    (58/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.110795031 seconds)
    (59/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.169414647 seconds)
    (60/286) benchmarking ("sort", Float64, false)...
    done (took 0.161446954 seconds)
    (61/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.05999121 seconds)
    (62/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.113906988 seconds)
    (63/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.060337866 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.110066741 seconds)
    (65/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.18586669 seconds)
    (66/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.107526954 seconds)
    (67/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.16265381 seconds)
    (68/286) benchmarking ("sort", Int8, true)...
    done (took 0.208228865 seconds)
    (69/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.214990351 seconds)
    (70/286) benchmarking ("sort", Int64, false)...
    done (took 0.080414279 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.127136312 seconds)
    (72/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.108267817 seconds)
    (73/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.079954827 seconds)
    (74/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.100110993 seconds)
    (75/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.089556051 seconds)
    (76/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.174371309 seconds)
    (77/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.110542339 seconds)
    (78/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.165656776 seconds)
    (79/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.170170684 seconds)
    (80/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.132723744 seconds)
    (81/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.111336018 seconds)
    (82/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.120661672 seconds)
    (83/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.176746662 seconds)
    (84/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.090171882 seconds)
    (85/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.141863395 seconds)
    (86/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.137034668 seconds)
    (87/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.087340891 seconds)
    (88/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.107198513 seconds)
    (89/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.061289509 seconds)
    (90/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.107772376 seconds)
    (91/286) benchmarking ("sort", Float64, true)...
    done (took 0.216436869 seconds)
    (92/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.06127231 seconds)
    (93/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.060537437 seconds)
    (94/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.081437295 seconds)
    (95/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.080362231 seconds)
    (96/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.099647462 seconds)
    (97/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.121691256 seconds)
    (98/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.110915331 seconds)
    (99/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.107927226 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.080510695 seconds)
    (101/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.136913237 seconds)
    (102/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.079014319 seconds)
    (103/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.154642043 seconds)
    (104/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.174291216 seconds)
    (105/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.061204651 seconds)
    (106/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.111933137 seconds)
    (107/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.194731055 seconds)
    (108/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.090715811 seconds)
    (109/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.162125792 seconds)
    (110/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.161196582 seconds)
    (111/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.088501208 seconds)
    (112/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.068949724 seconds)
    (113/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.177383106 seconds)
    (114/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.164312652 seconds)
    (115/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.061744771 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 0.169643795 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.109146751 seconds)
    (118/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.081002691 seconds)
    (119/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.122523809 seconds)
    (120/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.109586398 seconds)
    (121/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.081211669 seconds)
    (122/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.082925378 seconds)
    (123/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.086947274 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.106442856 seconds)
    (125/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.102104022 seconds)
    (126/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.103434401 seconds)
    (127/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.123315377 seconds)
    (128/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.079600656 seconds)
    (129/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.081588267 seconds)
    (130/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.087700063 seconds)
    (131/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.070563381 seconds)
    (132/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.111810626 seconds)
    (133/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.061183944 seconds)
    (134/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.092641423 seconds)
    (135/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.061432648 seconds)
    (136/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.126553856 seconds)
    (137/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.079536291 seconds)
    (138/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.108491871 seconds)
    (139/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.089516219 seconds)
    (140/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.164417409 seconds)
    (141/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.110456313 seconds)
    (142/286) benchmarking ("sort", Int8, false)...
    done (took 0.178429905 seconds)
    (143/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.061532116 seconds)
    (144/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.116283795 seconds)
    (145/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.083362825 seconds)
    (146/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.109237562 seconds)
    (147/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.08307024 seconds)
    (148/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.109484571 seconds)
    (149/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.158156486 seconds)
    (150/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.060853381 seconds)
    (151/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.061356059 seconds)
    (152/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.100714144 seconds)
    (153/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.062215106 seconds)
    (154/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.081732407 seconds)
    (155/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.081145529 seconds)
    (156/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.075247288 seconds)
    (157/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.102931893 seconds)
    (158/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.128994726 seconds)
    (159/286) benchmarking ("sort", BigInt, false)...
    done (took 0.209257648 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.127911702 seconds)
    (161/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.087328666 seconds)
    (162/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.160438865 seconds)
    (163/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.087905415 seconds)
    (164/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.111494997 seconds)
    (165/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.175478378 seconds)
    (166/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.079929227 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.100385097 seconds)
    (168/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.086874204 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.100008097 seconds)
    (170/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.081331077 seconds)
    (171/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.081632958 seconds)
    (172/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.089564583 seconds)
    (173/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.089246053 seconds)
    (174/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.080607432 seconds)
    (175/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.110964531 seconds)
    (176/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.128664539 seconds)
    (177/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.09058817 seconds)
    (178/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.061480839 seconds)
    (179/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.106866004 seconds)
    (180/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.088845986 seconds)
    (181/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.114941728 seconds)
    (182/286) benchmarking ("sort", Bool, true)...
    done (took 0.209393811 seconds)
    (183/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.090484795 seconds)
    (184/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.102620511 seconds)
    (185/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.081257214 seconds)
    (186/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.106643976 seconds)
    (187/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.162597303 seconds)
    (188/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.080997428 seconds)
    (189/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.105807932 seconds)
    (190/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.088044778 seconds)
    (191/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.110379668 seconds)
    (192/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.088434081 seconds)
    (193/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.081541616 seconds)
    (194/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.090325869 seconds)
    (195/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.060089104 seconds)
    (196/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.080472119 seconds)
    (197/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.084944451 seconds)
    (198/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.113070227 seconds)
    (199/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.061584894 seconds)
    (200/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.082889892 seconds)
    (201/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.088250673 seconds)
    (202/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.101921428 seconds)
    (203/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.085260399 seconds)
    (204/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.132603361 seconds)
    (205/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.0881553 seconds)
    (206/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.101520278 seconds)
    (207/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.078916642 seconds)
    (208/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.090887479 seconds)
    (209/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.061130364 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.100202303 seconds)
    (211/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.072108602 seconds)
    (212/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.125014694 seconds)
    (213/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.104473519 seconds)
    (214/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.102061914 seconds)
    (215/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.06161214 seconds)
    (216/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.090651085 seconds)
    (217/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.086924613 seconds)
    (218/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.127115465 seconds)
    (219/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.113628242 seconds)
    (220/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.101807423 seconds)
    (221/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.071307784 seconds)
    (222/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.080639102 seconds)
    (223/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.079977539 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.100775324 seconds)
    (225/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.061369993 seconds)
    (226/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.07183689 seconds)
    (227/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.129437734 seconds)
    (228/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.133123722 seconds)
    (229/286) benchmarking ("sort", BigInt, true)...
    done (took 0.21741981 seconds)
    (230/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.08221357 seconds)
    (231/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.070036395 seconds)
    (232/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.100841568 seconds)
    (233/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.086373473 seconds)
    (234/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.115994015 seconds)
    (235/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.062681868 seconds)
    (236/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.155047222 seconds)
    (237/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.091198171 seconds)
    (238/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.061397782 seconds)
    (239/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.060918036 seconds)
    (240/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.091629046 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.080112378 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.107938708 seconds)
    (243/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.080385142 seconds)
    (244/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.100142386 seconds)
    (245/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.087241993 seconds)
    (246/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.109324671 seconds)
    (247/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.104315689 seconds)
    (248/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.124127048 seconds)
    (249/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.153273122 seconds)
    (250/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.060735197 seconds)
    (251/286) benchmarking ("sort", Float32, true)...
    done (took 0.218144586 seconds)
    (252/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.101750621 seconds)
    (253/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.062469477 seconds)
    (254/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.105312102 seconds)
    (255/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.062582134 seconds)
    (256/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.061677805 seconds)
    (257/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.110111492 seconds)
    (258/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.063120486 seconds)
    (259/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.101709998 seconds)
    (260/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.061943207 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.099064343 seconds)
    (262/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.061136443 seconds)
    (263/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.060760712 seconds)
    (264/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.080782617 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.0793957 seconds)
    (266/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.097309534 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.101212043 seconds)
    (268/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.114947729 seconds)
    (269/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.083659796 seconds)
    (270/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.216971911 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.107764974 seconds)
    (272/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.105281055 seconds)
    (273/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.171467855 seconds)
    (274/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.103127011 seconds)
    (275/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.061496525 seconds)
    (276/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.06147286 seconds)
    (277/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.081718716 seconds)
    (278/286) benchmarking ("sort", Float32, false)...
    done (took 0.1631833 seconds)
    (279/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.060843932 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.085888696 seconds)
    (281/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.092212144 seconds)
    (282/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.08421296 seconds)
    (283/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.085248936 seconds)
    (284/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.086707566 seconds)
    (285/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.100342967 seconds)
    (286/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.080537176 seconds)
  done (took 33.271647064 seconds)
done (took 34.083939336 seconds)
(7/8) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.115228799 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.13277169 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.114403392 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.143272962 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.103628411 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.115297528 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.13417175 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.114673311 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.082621525 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.102593043 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.081907973 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.10414071 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.146611985 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.103088169 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.083296639 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.103791833 seconds)
  done (took 2.665160135 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.195045443 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.217306398 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098279242 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.101880001 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.085451405 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.106422604 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.080810351 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.107938029 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.105581719 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.081079556 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.105339707 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.083015776 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.102513882 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.082085769 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.106582927 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.085022029 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.102153903 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.084036408 seconds)
  done (took 2.780699897 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.108910985 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141966571 seconds)
  done (took 1.105786447 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.114059011 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.174462201 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.328280764 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.150853666 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.101904771 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.122902554 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.152170371 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.126792451 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.199544189 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.118976165 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.11901621 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.094373253 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.134945053 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.111645553 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.090473939 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.114232553 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.13752045 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.109591885 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.09138015 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.112074923 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.133107691 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.081318446 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.111033774 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.089725778 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.183313005 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.115492745 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.102210799 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.081080686 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.11213018 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.090936038 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.109813782 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.121116712 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.113452799 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.161125679 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.118920553 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.15039466 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.114464887 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.087398393 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.110358768 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.086482497 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.114171631 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.114702604 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.099580998 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.11394363 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.101453132 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.094337188 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.103194086 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.080838894 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.111248442 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.114819141 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.089926632 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.109311115 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.150641252 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.114493896 seconds)
  done (took 7.342061995 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.788052017 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.152214406 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.108742504 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.858995298 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132856901 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099527176 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.777975731 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.130935229 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.228732411 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.732572885 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128042285 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117714307 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.221549895 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.232721674 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.919889861 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.30190896 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.657148413 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.096909133 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.147702155 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.148514779 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11445068 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132111741 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.125690982 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.424966498 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.090498282 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107141764 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.113062901 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.094676865 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173622531 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099230714 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.110580133 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171550635 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.260480332 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.177892027 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111236798 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084759829 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107166807 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.163053059 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258115225 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.209772356 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.175970278 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.082763985 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.107288017 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.117138411 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.105907492 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.105058986 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.15866561 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.188354255 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.166221445 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109516455 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096076757 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.115361898 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.116298686 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.159231232 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.115503057 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.30217387 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.293677948 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106794162 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11645117 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101031295 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.256175668 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.11933389 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.218536351 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133897055 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.185233509 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.106985269 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.771136518 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.163488208 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.085886454 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.113640906 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.115276252 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.090190045 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.116561812 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163534419 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.403160883 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120436278 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.089156558 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106861185 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219816835 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.099583681 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107067706 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.157256916 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111720451 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.097479445 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120181179 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118258381 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.166025358 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.219201955 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.11871358 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115471669 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.110766172 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.099776701 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.112190223 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.20425097 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.213176569 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.157015758 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.227267823 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097493717 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.180771398 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.161487016 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116365108 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.166555395 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.11502246 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100641561 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117969471 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.208637448 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.140344736 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.11832864 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09124624 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.114033275 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.144557621 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.122086682 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.093635203 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.184569758 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.452664026 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.162388385 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.104885054 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.122998643 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094555895 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.17668463 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09230308 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.25461178 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118216767 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.164089022 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115650406 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.084289342 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.11636842 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.158689037 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118843712 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116593702 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.097049794 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114155334 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.225860861 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.210101184 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118614587 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.216106521 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.178985215 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.114283835 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.166966764 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116954133 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.162517436 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115236338 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116749747 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09010895 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.767024725 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120383615 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.115266583 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090584755 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184137247 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.108240101 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.098356404 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.1207921 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104703611 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.745445276 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124465077 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.116561601 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.118957858 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093863503 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117114836 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.113224021 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.090656925 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.17681573 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.201318212 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116372987 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115958738 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.119527197 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.156514068 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.091880475 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.121422284 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.121085223 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.119660101 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.097034009 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.111423571 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.120592664 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165273167 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.157505175 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.213572515 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.589749344 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.086304197 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.119816107 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22196033 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085715801 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.282368848 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115054355 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.219661362 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.157896054 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.116576577 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.312278172 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.162452222 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.183903502 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.122870541 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.168694484 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.105095426 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.093248967 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.180341636 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.087658423 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.112624328 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.157719637 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123077922 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.118891656 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.929469825 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108538698 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.221060711 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.104808096 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.165649326 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.112785648 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095813703 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.282854215 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.107920479 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102664022 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.180563238 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.088913238 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.120772219 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.862386408 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10042044 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117459559 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114502136 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.215894613 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.158759477 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114129604 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.093387199 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.1174422 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.158596827 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.223053992 seconds)
  done (took 42.981004713 seconds)
done (took 57.727110466 seconds)
(8/8) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.096810232 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.133122929 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.091419746 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.117875875 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.115762466 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.08571009 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.110900451 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.093507314 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.11640379 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.117528129 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.093026741 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.086321676 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.091331836 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.112451822 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.091691876 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.129909652 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.116531546 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.088359582 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.111994829 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.081200917 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.111838893 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.08310002 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.104654862 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.06478737 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.113674403 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.089284443 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.109422193 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.091468863 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.102789914 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.081677213 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.106419206 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.110362835 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.082374011 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.116589288 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.088161381 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.111236023 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.091367523 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.113043785 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.083535154 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.103047365 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.08952758 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.102979766 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.088610057 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.110207462 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.109861986 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.087447268 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.111474614 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.094436252 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.131038008 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087312195 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.113003088 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.113991517 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.092082701 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.110366863 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.085688666 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.111856377 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.087646802 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.131116057 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.112131868 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087109052 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.111130465 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.090260977 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.108907814 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.090022486 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.111299505 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.093566449 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.114581852 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.109158333 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.092053709 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.109541669 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.084597759 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.112273648 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.085104716 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.103630417 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.091394092 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.113561038 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.081567337 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.109061414 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.088309438 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.108302758 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.081172927 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.105649698 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.105553699 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.089007675 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105556148 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.065787739 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.086223839 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.109747234 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.081346664 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.111808285 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.109769882 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.089207259 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.105745436 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.093287766 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.102600183 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.087518004 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.103516152 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.082380667 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.105752804 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.08563989 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.103405014 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08488731 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.113063952 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.08391467 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.10958856 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.094124394 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.103340815 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.089066751 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.102746056 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.103178687 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.096106313 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.114431094 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.082478012 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.109519867 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.081396896 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.110796405 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.081382369 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.103277506 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.081787275 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.103539395 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.088166734 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.103647159 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.084174651 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.1110468 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.095881506 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.103513256 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.107121789 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084601287 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.103338015 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.087632904 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.103325149 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.082377252 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.105520436 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.073470474 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.106384342 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.082328753 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.111244182 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.085435139 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.111532759 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.084501805 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.112237386 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.0893294 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.110103468 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.087639268 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.103359246 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.069680481 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108079522 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085200762 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.105086227 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.082604267 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.105722425 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.082652161 seconds)
done (took 15.911392814 seconds)
RUNNING BENCHMARKS...
(1/8) benchmarking "broadcast"...
  (1/4) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.948193595 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.943166064 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 5.92788293 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 5.948293592 seconds)
  done (took 24.647993306 seconds)
  (2/4) benchmarking "typeargs"...
    (1/3) benchmarking ("array", 5)...
    done (took 0.950516996 seconds)
    (2/3) benchmarking ("array", 3)...
    done (took 0.950488324 seconds)
    (3/3) benchmarking ("array", 10)...
    done (took 0.952191353 seconds)
  done (took 3.734247076 seconds)
  (3/4) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.139302835 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.946565919 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 5.949673869 seconds)
  done (took 17.917226125 seconds)
  (4/4) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.113475633 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 1.953269176 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.2074406 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.527918623 seconds)
  done (took 7.683888856 seconds)
done (took 54.866620665 seconds)
(2/8) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 5.927344631 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.006395059 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 5.976278634 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 5.930088492 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.047007954 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 5.97596376 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.336376262 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.013243883 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 5.971337919 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 5.935705069 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 5.950861603 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.947939962 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 5.973439024 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.304117315 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 5.951865147 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 5.962848066 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.027859734 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.478917212 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.288134418 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 5.956150486 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 5.963076921 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 5.982342667 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 5.967426515 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 5.951576445 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.000178372 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 5.955704213 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 5.95191914 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 5.951564373 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 3.648401498 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 5.954640646 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.026809027 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.506573316 seconds)
  done (took 181.70643695 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 5.949371596 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.017307727 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.114980478 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 5.97450439 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.444982741 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.150168386 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.094245929 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.516794292 seconds)
    (9/36) benchmarking "syr!"...
    done (took 5.96501388 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 5.973718711 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.286054458 seconds)
    (12/36) benchmarking "her!"...
    done (took 5.949372388 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.324983352 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.91557732 seconds)
    (15/36) benchmarking "dotu"...
    done (took 1.978199818 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.019580138 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.154800891 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.297626288 seconds)
    (19/36) benchmarking "dotc"...
    done (took 1.982107972 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.109658191 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 5.965835435 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.178895239 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.090711819 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.22095286 seconds)
    (25/36) benchmarking "symm"...
    done (took 5.97318586 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.007819285 seconds)
    (27/36) benchmarking "syrk"...
    done (took 5.993072872 seconds)
    (28/36) benchmarking "trsm"...
    done (took 5.99272724 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.143693015 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.119751334 seconds)
    (31/36) benchmarking "gemm"...
    done (took 5.987317743 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.000211408 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.435470892 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.805962066 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 5.965378921 seconds)
    (36/36) benchmarking "trmm"...
    done (took 5.989456085 seconds)
  done (took 140.974886597 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.950572612 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.950013902 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.951718056 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.975953283 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.953643518 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.398154888 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.402195562 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.443394999 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.32416939 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 6.978491013 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.12297956 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.954291511 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.038515869 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.964905239 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.952382228 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.967084554 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.989504095 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.955733532 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.951278029 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.399636863 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.966724167 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 20.965814508 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.120289231 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.964878856 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.976872144 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.334851418 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.951785561 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.975991556 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.262673548 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.989533936 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.951306531 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.225203725 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.114322278 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.061549206 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.95503628 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.978291607 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.954252302 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.217730228 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.953247887 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.952478251 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.954673548 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.512398929 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.956216698 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.401402475 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.956471187 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.816701707 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.956844101 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.952212991 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.419782839 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.46273692 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.970564142 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.954524526 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.956807585 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.955486398 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.955243796 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.979087906 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.369965866 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.046871952 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.972229134 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.96016144 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.981049805 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.959605235 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.956034748 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 20.957707837 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.972833236 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.176750491 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.026850125 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.069962882 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.405662231 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.960463935 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.047427286 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.070876792 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.95752468 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.957821716 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.957028999 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.956983226 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.061301899 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.956690894 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.297405492 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.112562335 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.970546401 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 6.984462181 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.052495072 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.958516839 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.95762005 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.242502741 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.961870752 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.957434197 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.600317234 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.04809507 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.958174847 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.958119683 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.956672594 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.300017935 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.408034144 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.113494409 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.961493943 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.957551185 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.460107 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.96136387 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.314360343 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.404827035 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.525197954 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.961226294 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.957878746 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.062406795 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.112417948 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.970180181 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.957631069 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 6.977792597 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.961651901 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.018628856 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.958360307 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.349580314 seconds)
  done (took 334.044365596 seconds)
done (took 657.609732898 seconds)
(3/8) benchmarking "problem"...
  (1/1) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 5.961206179 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.606641627 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 5.988350009 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 5.960940307 seconds)
  done (took 25.411605342 seconds)
done (took 26.306379242 seconds)
(4/8) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 5.958158005 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 5.966004839 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 5.963774393 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 5.963423862 seconds)
  done (took 24.745914487 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.999409596 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.999416148 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.001802024 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.011622327 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.001455657 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.99931464 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.992357375 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.992695146 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.010194835 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.002612532 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.001645191 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.001947741 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.998763006 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.992017292 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.001906732 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.002702618 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.011065693 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.001973549 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.991867042 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.003749844 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.967471291 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.011657482 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.004160497 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.968074998 seconds)
  done (took 24.866370369 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.49268504 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.041410364 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.122927699 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.019555042 seconds)
  done (took 5.572633754 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.01868189 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.020781688 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.043154441 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.073945501 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.099111592 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.030107241 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.991867493 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.988828084 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.975870344 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.021918222 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.097093573 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.037903995 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.106469847 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.968254024 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.154180232 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.968364644 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.968355146 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.020867063 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.072536126 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.087341447 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.970062129 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.020917207 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.025028989 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.038423401 seconds)
  done (took 25.697001817 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.968537568 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.987407297 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.967502987 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.9690939 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.976820056 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.968638611 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.968209471 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.969530345 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.969017708 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.974904283 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.968121282 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.981788043 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.967634044 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.969335459 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.975018076 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.969857734 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.974585991 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.968023067 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.969333046 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.976034276 seconds)
  done (took 20.3374782 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 5.963580089 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 3.818394593 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.316729205 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.220202118 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 5.965947105 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 5.963852551 seconds)
  done (took 25.148174351 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.023435943 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.1539657 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.97525321 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.238354356 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.333118391 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.990650021 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.972693476 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.16418729 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.396984921 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.368382477 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.021481496 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.030358836 seconds)
  done (took 14.568838438 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 5.969365031 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 5.969566504 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 5.97167163 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.985577129 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.014185526 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.994758423 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.978570861 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 5.964451862 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.0165536 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.033891482 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.995889286 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.013581584 seconds)
  done (took 32.810173034 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.054864561 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.015978987 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.733931334 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.051814525 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.693940439 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.179994554 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.009589056 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.372439904 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.974741638 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.240623457 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.155837619 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.074782885 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.222803651 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.968022258 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.973635343 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 1.787085841 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.212813831 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393022379 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.973486065 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.428624707 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.997339529 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.975623362 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.423292063 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.997681148 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.179015952 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.114756038 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.228322792 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.743676464 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.200295661 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.984614691 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.978415765 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.968603859 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.242607934 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563788702 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.084195637 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.979140693 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.979516065 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.60418474 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 5.953699252 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.352623351 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.915657411 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.974353157 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.979388512 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.970084105 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.903859263 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.976166058 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.374080323 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.980334146 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.68252429 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.969861063 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.980391363 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.063968093 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.971978454 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.962621129 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.972464585 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.998004785 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.973643602 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.059962349 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564138207 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857970127 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.980080232 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.908517366 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.977995527 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.422632419 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551596842 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.994799214 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.973269784 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.973197122 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.904816877 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.401385776 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.990851839 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107128444 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.992890301 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.631545801 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.66418393 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.194742789 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.920687359 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464662025 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.980609365 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.909170514 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.200579453 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.750182725 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.910221002 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.913749288 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.905714257 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.577565959 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.983244994 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.237544561 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.995727892 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.38771803 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.986995229 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.990563564 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.994821189 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.195764655 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 3.851723507 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.971366022 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.952172821 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107307849 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.992737009 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.377060812 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.912662012 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.97530445 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.230136226 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.183544781 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.972845882 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 1.801039227 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.158340955 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.975859253 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.008750222 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.981023369 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.98874058 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.488731321 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.00272496 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.871604574 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.994120032 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.74942223 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.62762292 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.979403376 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.981967072 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.189952699 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.199300081 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.644943608 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.138045495 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.041233296 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.976173151 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.973789188 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.43575487 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.563185173 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.124556149 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.970096608 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.972225518 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.989699193 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 5.974464009 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.933470429 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 5.975538451 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.240250829 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.756941532 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.198954812 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.98200519 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.254603669 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.908914558 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113022814 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.993501501 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.198379226 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 1.992287961 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.999052243 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.234956292 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.975488706 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.980116437 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.00453128 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.993721419 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.076361014 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.998404993 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.979703063 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.236176187 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.979322162 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.979359881 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.455993051 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.761559495 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.981051323 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.981414574 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.988617037 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.491899023 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971494577 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.982832723 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.871441144 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.991026756 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.043529262 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.982624885 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.987276543 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.406198859 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.998520065 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.982465057 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 5.974089697 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.20534817 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.988417045 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.449770742 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.062976697 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.140334683 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.497177177 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.008995911 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.912122166 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.68962677 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.672323618 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.977295124 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.166599111 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.977609212 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.98827546 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.988367642 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.98997893 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.492732263 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.998457189 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.379450573 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.988973047 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.988555105 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.984333829 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.978627672 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.3948594 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.909676845 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.994196921 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.993504345 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.122347575 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.99247316 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.912148027 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.496538188 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.984070393 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.978928834 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.757405414 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.012783427 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.381207047 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.433787343 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.239101344 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.980207458 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.991755781 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.53747263 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.014055526 seconds)
    (217/481) benchmarking "4d"...
    done (took 1.983194586 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.011907628 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.000891712 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.013301252 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.993161162 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.990550994 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.495110052 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.356132065 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548969949 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.669052587 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469139351 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.781292053 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.986865109 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.875679935 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.387046184 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.920579423 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.641467979 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.130055544 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.407556926 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.942549356 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.147503334 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.00961608 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.621045593 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.997561062 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.2097542 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.772015435 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.017429003 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.012524053 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.193520247 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.015410754 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.990024103 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.914127489 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.279093987 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.187172255 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.998384379 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.066337267 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.387675303 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.03336695 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.780891015 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.043802724 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.177305774 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.14310965 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.532848319 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.377645829 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.990315211 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.261811197 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.454272229 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.990253101 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.50971605 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553240607 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.004073345 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.15369078 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.927575017 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.993515827 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.994671743 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.979446995 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.906846015 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 5.177551986 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.258867673 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.99525959 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.919683901 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.991008131 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.467441294 seconds)
    (280/481) benchmarking "3d"...
    done (took 1.860393232 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.989970469 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.984506915 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.638716575 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.991709973 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.226695443 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.001657483 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.385017159 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.010049307 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.921613985 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.920940434 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.678278295 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.990604182 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95735749 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40545023 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 5.994380269 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.993548841 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.997835972 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.838787035 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.241760618 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.00046112 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.500807935 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.232206891 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.991083911 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.008724151 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.989927259 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.085594163 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 5.98502737 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.870453979 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.221516904 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.03545675 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.228690267 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.759140707 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 3.890158206 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.996220331 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.202276518 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.888296597 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.296109143 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.222866676 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.721204547 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 5.986633186 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641559414 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.028498158 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.288186012 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.024889431 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.218056951 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.007349293 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.074344852 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.997247127 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.997971485 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.997491288 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.124287526 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.303678358 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.009072589 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.001908492 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.080369885 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.923836397 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.391945968 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.765063917 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.507741979 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.678143985 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.529390632 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.020766817 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.988762211 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.9975365 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.924715887 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.139777457 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.513848326 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.262778908 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.108983295 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 5.986546945 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.01699758 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.112364491 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.011021958 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.204935791 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.263067312 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.960121891 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.997510448 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.784200752 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.148704969 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.000368429 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.199987229 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413313788 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48745183 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102666606 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.989790336 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.395069662 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.268259231 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.081352654 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.98963045 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.583770529 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 5.996627339 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.192122265 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.015843015 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.347644779 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.142614838 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.999993149 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.585812214 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.022689488 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.15022883 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.764455188 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.502043748 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.251516463 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344384155 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.003570302 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.511647655 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.638068419 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.259385794 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.061959637 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.00203839 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.099170876 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.141470408 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 5.20766282 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.89209581 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.992114132 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.842461316 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.702592274 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.001425448 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.514286995 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.276377318 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.995663971 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 5.230725245 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.033357574 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.002579445 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.217091762 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.608557998 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.222965006 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.003803507 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.996927107 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.567155215 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.514709777 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.025792927 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.926319443 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.99659371 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.202909394 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.251601785 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.016511842 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.445199969 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.704287522 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48838963 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.968753703 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.015406616 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.998938591 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.624406054 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.525351904 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.425022093 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437883533 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.656735379 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.99466894 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.274033196 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.999761523 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.001704356 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.274627686 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.998138581 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.001125148 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.010928973 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.513800558 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642130998 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.005095059 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.527856649 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.939141793 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.224121215 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.031386049 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.953463833 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.002770896 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.137247113 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.001181695 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.115377363 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.006692811 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 5.269890353 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.021750733 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.731832016 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328224007 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.000868121 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 5.981317532 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.166188277 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.004147663 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.105770879 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.209375564 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.003667814 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.682691255 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.349973983 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.252347443 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.995990448 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 5.979805585 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.999445131 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.998157943 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.722677964 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.016492705 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.004378013 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493021434 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.000505677 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.011434548 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.000782117 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.213411939 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.208995323 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.349207857 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.029576459 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.997933728 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.029279653 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 3.89873038 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.770593569 seconds)
  done (took 1420.694247758 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.018191277 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.044355765 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.046860051 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.072518017 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.031410088 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.021403202 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.036267433 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.089179776 seconds)
  done (took 49.289465269 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 5.998605065 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.148375318 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.027605726 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.002336104 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.010982337 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.002609771 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.379264177 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.026115893 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.006139506 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.008051579 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 5.997709774 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.007702784 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.572229825 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.011286066 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.004814755 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 5.984816232 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.006152115 seconds)
  done (took 59.133462407 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 43.533319599 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.031470698 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.148667304 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.060681319 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.042697926 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.005278444 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.107319634 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.043400052 seconds)
  done (took 89.905003119 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.009113351 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.009104598 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.009341756 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.009824362 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.009960629 seconds)
  done (took 5.980376802 seconds)
done (took 1799.64503625 seconds)
(5/8) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 5.980433218 seconds)
  done (took 6.912028937 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.541233819 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.533172079 seconds)
  done (took 4.007658173 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.290955755 seconds)
  done (took 2.222372963 seconds)
done (took 14.073916514 seconds)
(6/8) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.47826899 seconds)
    (2/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.168139207 seconds)
    (3/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.223282941 seconds)
    (4/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.151833181 seconds)
    (5/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.891739813 seconds)
    (6/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 5.984593294 seconds)
    (7/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.380013204 seconds)
    (8/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 5.983487983 seconds)
    (9/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 5.984070812 seconds)
    (10/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 5.98217365 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.222602471 seconds)
    (12/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.125434681 seconds)
    (13/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.023540042 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.04118705 seconds)
    (15/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.11680598 seconds)
    (16/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.239880458 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.045796614 seconds)
    (18/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.710107584 seconds)
    (19/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.153117381 seconds)
    (20/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.047610787 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.563197196 seconds)
    (22/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.70886841 seconds)
    (23/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.507448782 seconds)
    (24/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.937323556 seconds)
    (25/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.736763838 seconds)
    (26/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 5.992124835 seconds)
    (27/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.007596863 seconds)
    (28/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.50694751 seconds)
    (29/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.136395043 seconds)
    (30/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.10731026 seconds)
    (31/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.127762093 seconds)
    (32/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.253302565 seconds)
    (33/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.088799605 seconds)
    (34/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 4.384852295 seconds)
    (35/286) benchmarking ("sort", Int64, true)...
    done (took 5.999770936 seconds)
    (36/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.132499591 seconds)
    (37/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.115873493 seconds)
    (38/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.295478557 seconds)
    (39/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.454814662 seconds)
    (40/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.007975568 seconds)
    (41/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.000456516 seconds)
    (42/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.1912295 seconds)
    (43/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.327364691 seconds)
    (44/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.108488966 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.568918546 seconds)
    (46/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 5.981175497 seconds)
    (47/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.709269551 seconds)
    (48/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.020614423 seconds)
    (49/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.028850203 seconds)
    (50/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 5.980902885 seconds)
    (51/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.133325079 seconds)
    (52/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.174623371 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.270831565 seconds)
    (54/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 5.981204996 seconds)
    (55/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.00630001 seconds)
    (56/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.067233399 seconds)
    (57/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.059211198 seconds)
    (58/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.191808978 seconds)
    (59/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.132990147 seconds)
    (60/286) benchmarking ("sort", Float64, false)...
    done (took 5.195222207 seconds)
    (61/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.827577199 seconds)
    (62/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.876237013 seconds)
    (63/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.823122225 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.406501711 seconds)
    (65/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 5.998729084 seconds)
    (66/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.017542782 seconds)
    (67/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.290244385 seconds)
    (68/286) benchmarking ("sort", Int8, true)...
    done (took 6.001496795 seconds)
    (69/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.340979593 seconds)
    (70/286) benchmarking ("sort", Int64, false)...
    done (took 5.067578996 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.786340978 seconds)
    (72/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.02920957 seconds)
    (73/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.670595342 seconds)
    (74/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.02351514 seconds)
    (75/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.007099738 seconds)
    (76/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.330427254 seconds)
    (77/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.002746762 seconds)
    (78/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 5.98667701 seconds)
    (79/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.02615588 seconds)
    (80/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.170233443 seconds)
    (81/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.496862652 seconds)
    (82/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.048175452 seconds)
    (83/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 5.986600829 seconds)
    (84/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.012063285 seconds)
    (85/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.310003759 seconds)
    (86/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.016965207 seconds)
    (87/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.036442994 seconds)
    (88/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.629413011 seconds)
    (89/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.306021932 seconds)
    (90/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.009459445 seconds)
    (91/286) benchmarking ("sort", Float64, true)...
    done (took 6.029429374 seconds)
    (92/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 5.983603241 seconds)
    (93/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 5.983314702 seconds)
    (94/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 5.983479915 seconds)
    (95/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.630074352 seconds)
    (96/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.085895366 seconds)
    (97/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.105772159 seconds)
    (98/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.017734653 seconds)
    (99/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.218885565 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.79520998 seconds)
    (101/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.922146462 seconds)
    (102/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.670807705 seconds)
    (103/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 5.989472861 seconds)
    (104/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 5.991663997 seconds)
    (105/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.002321608 seconds)
    (106/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.050498258 seconds)
    (107/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 5.998489134 seconds)
    (108/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.012421243 seconds)
    (109/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.008560058 seconds)
    (110/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.784193765 seconds)
    (111/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.053711216 seconds)
    (112/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.20658205 seconds)
    (113/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.011422087 seconds)
    (114/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.130037134 seconds)
    (115/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 5.996800764 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 1.510718548 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.049822279 seconds)
    (118/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.091328536 seconds)
    (119/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.264251602 seconds)
    (120/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.005402966 seconds)
    (121/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.093309736 seconds)
    (122/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.73378901 seconds)
    (123/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.032485984 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.637042036 seconds)
    (125/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.26515901 seconds)
    (126/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.070454219 seconds)
    (127/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.115402957 seconds)
    (128/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.390149745 seconds)
    (129/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.004004793 seconds)
    (130/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.188121631 seconds)
    (131/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.573636205 seconds)
    (132/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.052875103 seconds)
    (133/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.349462822 seconds)
    (134/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.329000575 seconds)
    (135/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.446498165 seconds)
    (136/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.095232438 seconds)
    (137/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.659099875 seconds)
    (138/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.038167473 seconds)
    (139/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.335475059 seconds)
    (140/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.730587312 seconds)
    (141/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.80786626 seconds)
    (142/286) benchmarking ("sort", Int8, false)...
    done (took 4.005624864 seconds)
    (143/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.005567544 seconds)
    (144/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.056757219 seconds)
    (145/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.075961548 seconds)
    (146/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.030444183 seconds)
    (147/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.095101105 seconds)
    (148/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.010466772 seconds)
    (149/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.773667975 seconds)
    (150/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 5.993889212 seconds)
    (151/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 5.992656663 seconds)
    (152/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.537554554 seconds)
    (153/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 5.988944888 seconds)
    (154/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.012417595 seconds)
    (155/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.033851408 seconds)
    (156/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.495339373 seconds)
    (157/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.096173749 seconds)
    (158/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.311702987 seconds)
    (159/286) benchmarking ("sort", BigInt, false)...
    done (took 6.014697221 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.430420071 seconds)
    (161/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.024651201 seconds)
    (162/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.085733222 seconds)
    (163/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.018636431 seconds)
    (164/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.120546957 seconds)
    (165/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.104646794 seconds)
    (166/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.361723967 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.748766038 seconds)
    (168/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.036876723 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.394013715 seconds)
    (170/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.029028745 seconds)
    (171/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.527772965 seconds)
    (172/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.055265318 seconds)
    (173/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.338946188 seconds)
    (174/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.015679342 seconds)
    (175/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.154740993 seconds)
    (176/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 5.991205788 seconds)
    (177/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.319231263 seconds)
    (178/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 5.994142996 seconds)
    (179/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.041164063 seconds)
    (180/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.019737476 seconds)
    (181/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.13837647 seconds)
    (182/286) benchmarking ("sort", Bool, true)...
    done (took 5.078281029 seconds)
    (183/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.16106508 seconds)
    (184/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.067692013 seconds)
    (185/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.015132864 seconds)
    (186/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.042812538 seconds)
    (187/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.264210204 seconds)
    (188/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.010188565 seconds)
    (189/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.129018613 seconds)
    (190/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.035171654 seconds)
    (191/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.649882732 seconds)
    (192/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.222661976 seconds)
    (193/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.899316708 seconds)
    (194/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.138298777 seconds)
    (195/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.09243784 seconds)
    (196/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.896282171 seconds)
    (197/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.09005333 seconds)
    (198/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.890074047 seconds)
    (199/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 5.996029672 seconds)
    (200/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 5.992320744 seconds)
    (201/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.158555409 seconds)
    (202/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.121465197 seconds)
    (203/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.034110291 seconds)
    (204/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.516843484 seconds)
    (205/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.04334069 seconds)
    (206/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.042591972 seconds)
    (207/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.060671973 seconds)
    (208/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.215320103 seconds)
    (209/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.007352881 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.453141697 seconds)
    (211/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 5.991669852 seconds)
    (212/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.021194788 seconds)
    (213/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.034804614 seconds)
    (214/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.01176386 seconds)
    (215/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 5.997788543 seconds)
    (216/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.129109941 seconds)
    (217/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.105627629 seconds)
    (218/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.814863759 seconds)
    (219/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.05697036 seconds)
    (220/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.107731922 seconds)
    (221/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.074128679 seconds)
    (222/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.719644826 seconds)
    (223/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.418796088 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.809095865 seconds)
    (225/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 5.992974249 seconds)
    (226/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.034255607 seconds)
    (227/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.823072158 seconds)
    (228/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.344088341 seconds)
    (229/286) benchmarking ("sort", BigInt, true)...
    done (took 6.033498945 seconds)
    (230/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.078710192 seconds)
    (231/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.089157939 seconds)
    (232/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.205728948 seconds)
    (233/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.058557081 seconds)
    (234/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.678394836 seconds)
    (235/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.011799394 seconds)
    (236/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.010692522 seconds)
    (237/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.085738755 seconds)
    (238/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 5.998989768 seconds)
    (239/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 5.999285189 seconds)
    (240/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.684616008 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.400879294 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.058660814 seconds)
    (243/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.236182432 seconds)
    (244/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.363236468 seconds)
    (245/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.059542567 seconds)
    (246/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.404270057 seconds)
    (247/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.030716837 seconds)
    (248/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.143208442 seconds)
    (249/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.038447932 seconds)
    (250/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 5.994154171 seconds)
    (251/286) benchmarking ("sort", Float32, true)...
    done (took 6.020310735 seconds)
    (252/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.014633645 seconds)
    (253/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.003009246 seconds)
    (254/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.169825804 seconds)
    (255/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 5.99480123 seconds)
    (256/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.464126584 seconds)
    (257/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.104688925 seconds)
    (258/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 5.995753443 seconds)
    (259/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.032993104 seconds)
    (260/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.245654906 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.116895771 seconds)
    (262/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 5.996587197 seconds)
    (263/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.02272883 seconds)
    (264/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.368921078 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.132416135 seconds)
    (266/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.356564497 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.824254403 seconds)
    (268/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.700353949 seconds)
    (269/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.101519446 seconds)
    (270/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.016208403 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.058024018 seconds)
    (272/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.043062983 seconds)
    (273/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.118301795 seconds)
    (274/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.102051791 seconds)
    (275/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 5.999517494 seconds)
    (276/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.351505923 seconds)
    (277/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.837651906 seconds)
    (278/286) benchmarking ("sort", Float32, false)...
    done (took 4.991810787 seconds)
    (279/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.18465764 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.0587654 seconds)
    (281/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.649457187 seconds)
    (282/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.043801568 seconds)
    (283/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.002052941 seconds)
    (284/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.11130632 seconds)
    (285/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.229305964 seconds)
    (286/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.778107325 seconds)
  done (took 828.369549805 seconds)
done (took 829.30260533 seconds)
(7/8) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.185935183 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.139329007 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.023252797 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.050066025 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.023417152 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.039818811 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.044485447 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.02313254 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.022724664 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.024417134 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.022854979 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.212419587 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.019735539 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.02452432 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.023549109 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.11754327 seconds)
  done (took 37.946159161 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.047767817 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.030164753 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.121556116 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.050800023 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.048524156 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.183230204 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.079732928 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.034220352 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.171086004 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.071275613 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.350129071 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.049583911 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.028180165 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.996770598 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.049384782 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.186859268 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.247913766 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.355161029 seconds)
  done (took 24.053505064 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.394676523 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.023851305 seconds)
  done (took 8.368367194 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.046538089 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.034993762 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.029410937 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.027680116 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.019602317 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.01921259 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.026988891 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.023797083 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 3.971363419 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.139877024 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.034721048 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.036348363 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.047242709 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.027735521 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.02715091 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.062281066 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.181301445 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.026317682 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.025792925 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.03480947 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.028956518 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.121682276 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.065601363 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.03357671 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.133150367 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 3.980131994 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.036347016 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.036810339 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.160451144 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.02658853 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.027473357 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.03000497 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.030436548 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.631543777 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.542037604 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.040809064 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.050377586 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.041027858 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.025927646 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.197849786 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.034406127 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.036115108 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.031194502 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.524823143 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.168359331 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.137614794 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.114014616 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.052604344 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.031541699 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.08572142 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.032196993 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.031563017 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.057084954 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.735979375 seconds)
  done (took 93.120463673 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.044340708 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.433655985 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.189185834 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.043833775 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.605881806 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.619830577 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.040807767 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.263524475 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.102022347 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.022858997 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.289196523 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.48313168 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.048528029 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.082195244 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.655516113 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.041233406 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.026380191 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.676732233 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.044198695 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.028811173 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.490848682 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.032111345 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.024144117 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.206981547 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.060026543 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.440651225 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.182674833 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.413162785 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.042464963 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.025455717 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.441943688 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.047468605 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.034948161 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.024766571 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.266842421 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.34285774 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.343224213 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.0523176 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.074241426 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.029444326 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.057344826 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.433130932 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.34889011 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.049117127 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.047338287 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.445765678 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.046449707 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.031773001 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.030120504 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.225266219 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.667369068 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.031348057 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.173626323 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.032688867 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.453108708 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.064941414 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.026733142 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.469821294 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.047851525 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.061660128 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.066660108 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.027915264 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.03252197 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.031091633 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.035168624 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.332185788 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.173176479 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.033974795 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.331050363 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.458295498 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.046552396 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.504256855 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.867994689 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.035364098 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.127412109 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.027849952 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.505609059 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.482787324 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.057438987 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.028284288 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.319607731 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.054653751 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.287289231 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.041412539 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.050125025 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.523266289 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.040523295 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.061897237 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.029061717 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.036419452 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.657662964 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.030804593 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.28191617 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.066712551 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.029834545 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.029896966 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.028971418 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.029916937 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.035591715 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.030916468 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.503074286 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.047955312 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.125453068 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.051884814 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.891402156 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.035493201 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.032306153 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.029713421 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.242964703 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.558797515 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.052110304 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.033525623 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.030383872 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.058031829 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.206077551 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.036317698 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.29531204 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.054795278 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.036554283 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.037596831 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.68726292 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.050800651 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.030407558 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.038126687 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.886132661 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.241180404 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.048929384 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.03713129 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.031394803 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.051621088 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.073553088 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.045687768 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.127612 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.034199278 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.685795189 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.083208135 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.053372282 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.3208358 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.03861008 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.768216663 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.048286373 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.034133833 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.329861814 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.284213869 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.099593345 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.03277808 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.051857358 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.690359445 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.091894004 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.167498507 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.047842129 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.098508694 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.22758568 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.227793924 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.033361029 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.689109362 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.033997108 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.242329799 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.032824779 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.338115264 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.480231366 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.05271849 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.042124014 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.687576429 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.739037917 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.670967119 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.035001511 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.292395111 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.049608329 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.509644011 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.034185746 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.03488263 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.461019323 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.038989787 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.046565862 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.033832933 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.034136553 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.179800636 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.204488301 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.239179758 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.039131444 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.447704741 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.056406561 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 5.894049688 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.041858988 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.036071054 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.382560183 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.081981455 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.037172366 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.072263293 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.035706997 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.034951089 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.467549634 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.894342445 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.042116182 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.182842034 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.618170565 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.054909043 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.036378592 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.604249086 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.216962396 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.513204978 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.124612045 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.302320953 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.062651586 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.070576498 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.560625877 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.099805336 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.469576859 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.061505254 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.042710427 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.57830653 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.05631928 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.393066524 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.037147894 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.037599907 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.525325585 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.055599253 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.040172651 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.116743672 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.058524775 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.286824952 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.03862708 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.046819197 seconds)
  done (took 1039.114942787 seconds)
done (took 1203.55263241 seconds)
(8/8) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.071856253 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.067336248 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.049245234 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.070399072 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.161598027 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.071513398 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.06124281 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.052407738 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.098107409 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.100002201 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.047521212 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.070786379 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.051522036 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.050971373 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.050192657 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.064495895 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.958199176 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.057232596 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.067312745 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.060344055 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.066233485 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.048452092 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.0998612 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.072814486 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.055946888 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.054374186 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.053755947 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.069588466 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.16217432 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.054334869 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.054433697 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.063132936 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.957743856 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.05835322 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.046972462 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.069677508 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.063420117 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.06169189 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.056361342 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.08324285 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.281193107 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.064735218 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.052323195 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.053508632 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.053356906 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.058455108 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.051800621 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.059689601 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.065182191 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.066507012 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.3086333 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.088114876 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.055005511 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.053944155 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.061109854 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.052399856 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.057560887 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.071148896 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.071922916 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.070558035 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.927471624 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.059302344 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.05712474 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.069830483 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.060724168 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.308164969 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.064323931 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.06007853 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.28228746 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.075581678 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.307817391 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.077335348 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.057738662 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.068203894 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.086556224 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.944190078 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.050301655 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.055206085 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.061320732 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.053149563 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.065711394 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.069257106 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.060841537 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.056377797 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.068442442 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.077779016 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.066891235 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.053411162 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.065067594 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.073889 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.062000842 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.065911951 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.059389245 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.051583518 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.065985201 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.059747015 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.05755394 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.057903846 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.061554825 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.066911791 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.282445474 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.087849126 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.053070108 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.052931166 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.055854657 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.068097664 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.282647693 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.070301563 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.078194342 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.104583814 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.05917679 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.953937482 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.065274486 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.073724522 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.066000694 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.060957644 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.052503533 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.952438817 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.2847063 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.084684012 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.05925409 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.055031448 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.07431078 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.060632193 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.053446239 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.963889075 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.065507371 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.072574577 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.17763919 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.067901986 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.086445879 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.056288644 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.060678221 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.079053914 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.075258436 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.087594278 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.061682537 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.073978695 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.071461535 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.056639028 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.068227797 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.069308657 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.059290284 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.0645824 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.050578426 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.079863099 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.072178636 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.071889811 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.08142434 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.179680772 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.056864296 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.957460196 seconds)
done (took 180.158175596 seconds)
SAVING RESULT...
DONE!
