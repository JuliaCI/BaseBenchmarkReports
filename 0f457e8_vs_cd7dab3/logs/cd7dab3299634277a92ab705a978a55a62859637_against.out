cset: moving following pidspec: 8328
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.321003312 seconds)
loading group "string"... done (took 0.539767145 seconds)
loading group "linalg"... done (took 7.310265636 seconds)
loading group "parallel"... done (took 0.170600547 seconds)
loading group "find"... done (took 1.137322594 seconds)
loading group "tuple"... done (took 2.050442068 seconds)
loading group "dates"... done (took 1.305673244 seconds)
loading group "micro"... done (took 0.241238054 seconds)
loading group "io"... done (took 0.964849129 seconds)
loading group "scalar"... done (took 40.376823459 seconds)
loading group "sparse"... done (took 12.836814767 seconds)
loading group "broadcast"... done (took 1.004979427 seconds)
loading group "union"... done (took 14.470868165 seconds)
loading group "simd"... done (took 4.709139088 seconds)
loading group "random"... done (took 9.535203716 seconds)
loading group "problem"... done (took 1.99959453 seconds)
loading group "array"... done (took 22.275113502 seconds)
loading group "misc"... done (took 2.009909369 seconds)
loading group "sort"... done (took 3.400956199 seconds)
loading group "collection"... done (took 19.553226068 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.576113128 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.156894315 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.148779086 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.148039232 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.199589064 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.142986351 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158872964 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.097562644 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.952330712 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.172540058 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153433682 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.524028497 seconds)
done (took 5.161676298 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.21623316 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095450584 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104262147 seconds)
  done (took 0.86818385 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078085046 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145791519 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094515591 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078341244 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095282566 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078102105 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094792837 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077915222 seconds)
  done (took 1.341257294 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086132719 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097341228 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081579643 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096515939 seconds)
  done (took 1.039024133 seconds)
done (took 4.228240047 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.727559294 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.27649603 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.208720737 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.467754623 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.193961722 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.216200447 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.676944542 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.355111018 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.254229558 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100017043 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.134987317 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.394781051 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13707011 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.679842977 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092667991 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123991139 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.178137712 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.460720656 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.085081455 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110564642 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116734184 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141721813 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129260244 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090924307 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.18450947 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.08323935 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.19381841 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107526209 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080685924 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.275755578 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201710403 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.690187879 seconds)
  done (took 10.886450215 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111494252 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134035613 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097332606 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138055481 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134674671 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099935324 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084405455 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097114965 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122168741 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176907074 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.130136478 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121620552 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096198579 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.08225176 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116396799 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24696414 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122172918 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.09968334 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.1011374 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103322311 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122241582 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112796608 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108730921 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093891621 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166136859 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.225309057 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113954368 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126833538 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097194648 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112082523 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143470012 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14525625 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094403061 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080308943 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.17374953 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124003954 seconds)
  done (took 5.14725571 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.101302752 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.190670751 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121607422 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169760088 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.081439272 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143014791 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.095369937 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112946273 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257045564 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.17961924 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.494646975 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141781267 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099630998 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098766439 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.0829161 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098004906 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.465715672 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.158470565 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.135193958 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.096093222 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105893984 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099251831 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364857256 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081014562 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095307939 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082277634 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.086702123 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162025712 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081763501 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.20918522 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120335094 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081768979 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134705778 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.211269788 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110289487 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.13463073 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095449473 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079400118 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.175066374 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103913783 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.0786487 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120652666 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134690858 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134213195 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097580796 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080648546 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.196710936 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096551145 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.095640446 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.934998935 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180660412 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.154996086 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.07966678 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.308622035 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.115591299 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.079741005 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.093395981 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.255561135 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.211582261 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097874077 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079589311 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101253763 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080764567 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.39782245 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080215633 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.74763465 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083866172 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107330445 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081753621 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096145902 seconds)
    (70/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.123446061 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086445252 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104445699 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.076575851 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116220209 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.077927333 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.100216191 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.095785458 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079612528 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.098120564 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.090649292 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.231777317 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081457334 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.097100045 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.078286895 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116579317 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126569049 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.084423173 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095103339 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129715686 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08238276 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096897825 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.116167493 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098934852 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.076489668 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108579266 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.093756318 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097906368 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.126892632 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096496623 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.129416116 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.094621346 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12231763 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098930389 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113447063 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111169485 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098949641 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.168401936 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077826877 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.096040777 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079598839 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.095981071 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079927516 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099381364 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109778062 seconds)
  done (took 22.739723508 seconds)
done (took 40.551513202 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.324512518 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103268782 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102333843 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102165692 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100972249 seconds)
  done (took 1.484856788 seconds)
done (took 2.210632749 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.283214738 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172490737 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094379778 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.164706716 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092800616 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.162809506 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.157716847 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094178039 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.216917485 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093328733 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.159165973 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076662283 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094401867 seconds)
  done (took 2.617878855 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094547187 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114299737 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082731543 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111477041 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076140632 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109827183 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093089262 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114930687 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109146839 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08533857 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092577095 seconds)
  done (took 1.810696639 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094115603 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111792981 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082329764 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109109182 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076840502 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109746871 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093306784 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116458869 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109865976 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086754918 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092398492 seconds)
  done (took 1.808479315 seconds)
done (took 6.955932635 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091262699 seconds)
  done (took 0.81218568 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.92480884 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.519998227 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113334837 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149746961 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.316185654 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.171252778 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.467903661 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125168784 seconds)
  done (took 10.716397073 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.114561263 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.10120892 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.114065507 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085938508 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099436741 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.0815501 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100802894 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.097658688 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085894346 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.100179647 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.081757155 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.100887368 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.100182113 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084153402 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.097162239 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083045072 seconds)
  done (took 2.320044428 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118783944 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116411551 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105529304 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.106582057 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085919862 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104035254 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104490688 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087658192 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.10025417 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102599855 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089705926 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105945998 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.101844313 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078447379 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104322602 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106919732 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08586011 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104500905 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105384161 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089081128 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105078358 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.093860003 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.08613936 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105471457 seconds)
  done (took 3.231067154 seconds)
done (took 17.806269678 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.156964783 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107724288 seconds)
  done (took 0.996105569 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094964686 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110825932 seconds)
  done (took 0.941070599 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.09607017 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095621306 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.12031828 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.107723304 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080381776 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095095403 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118331369 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.078781202 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.09553261 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.095786077 seconds)
  done (took 1.722684027 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082203622 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10768266 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.099778017 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.093515147 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104332939 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093792732 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087277682 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097752925 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108795795 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076122985 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102173194 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114656479 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085891321 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116361577 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104780117 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.098244479 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.084622072 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097098947 seconds)
  done (took 2.488289257 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079459338 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096791735 seconds)
  done (took 0.913605907 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080029542 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092320719 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080597183 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096491201 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093007992 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077246187 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093253123 seconds)
  done (took 1.349281302 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.433355123 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134398543 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.257598499 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.099241339 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102662306 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.295929074 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.096438286 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083929622 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102574357 seconds)
  done (took 2.399339067 seconds)
done (took 11.547267736 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093192972 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.114255639 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111812848 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.452010495 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106256096 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096259904 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.145481683 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.247226367 seconds)
done (took 2.11150117 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.144825674 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.561819596 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.420011626 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.228656573 seconds)
  done (took 1.955428876 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.399146997 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.097672595 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083361185 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082635978 seconds)
  done (took 1.412400189 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078891901 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099528211 seconds)
  done (took 0.927644942 seconds)
done (took 5.187261776 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079638608 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.098255654 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.111514811 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.095546219 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079508754 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.09486582 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077804422 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.098425991 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.093190046 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.079961239 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095827567 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.079887599 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.095322902 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.079852844 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095215548 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077586406 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092947913 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080066024 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.09306573 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077811451 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093682336 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079650829 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093163814 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.07724497 seconds)
  done (took 2.900809134 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098802092 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097332255 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.101746861 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085557309 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100642097 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085182991 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103090774 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096570134 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085905018 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098759347 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100671059 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083595302 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098450499 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083637393 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098274891 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100699604 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085052954 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097892742 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082377866 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100298967 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.10237729 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080472548 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101632589 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102635371 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084008111 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099959102 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08243432 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097138627 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102369954 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084784613 seconds)
  done (took 3.573101651 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084728957 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093106593 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078506618 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101160307 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077074181 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096000688 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077303141 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094668273 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078081972 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.09513818 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079848266 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095099064 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.07813507 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.096488802 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078115068 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098434236 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.111952846 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078027617 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094831253 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.0784318 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098852123 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077435947 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095102275 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077440489 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094211718 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077564037 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094753789 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077384788 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094619508 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077418869 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097541068 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.08073672 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095103775 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083791914 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.097776338 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.093627009 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.081219309 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.093830543 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.07834043 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094730638 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079008082 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096211044 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079388681 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.1033969 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.07958837 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099159814 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079951303 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098450606 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079753606 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100299427 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078647279 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096961415 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.098059436 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.079658885 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100928816 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077976065 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097215232 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077964382 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098247197 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078945346 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.09713855 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079371073 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099858127 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080111138 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.113415069 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086844926 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097054322 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081066873 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096226704 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.097210963 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.079576721 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108421983 seconds)
  done (took 7.179797217 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.13056049 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.125288205 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080020679 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09735876 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077117683 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097871933 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.084748637 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098325112 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099143269 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086091909 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09791041 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082704012 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099756418 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095175314 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09857348 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099075662 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086264749 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095994523 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080699393 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10212309 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080870152 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100800224 seconds)
  done (took 2.85209477 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.205704969 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10405757 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140811109 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106168971 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083214136 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106380344 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100992316 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085694273 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102138863 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082593934 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099766117 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101480346 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082935147 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100424391 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100198903 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085556851 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101871393 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083885743 seconds)
  done (took 2.629501965 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.091554545 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097994915 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.097864445 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097991814 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098239256 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083528679 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103176846 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.215646358 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083200406 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097620558 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090240102 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101521553 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099829184 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080648171 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100451944 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080568803 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100592959 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080698773 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106176566 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102881338 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087614896 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107158485 seconds)
  done (took 2.968064338 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096074296 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100246192 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118033657 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083489769 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09497643 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078800279 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105179146 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080675926 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106343629 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.09901222 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080742529 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09729656 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087574012 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098068063 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103861939 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080839241 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100397351 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081462766 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099701245 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077072485 seconds)
  done (took 2.633972636 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101537112 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099538792 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099496882 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092099472 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10059231 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081824917 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108681475 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099687476 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08271446 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123206619 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099863236 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08263281 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10773468 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.10512318 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099935096 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092089042 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108031621 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108539234 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082230362 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099752362 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123778419 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082277401 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10809887 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099341132 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082701109 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100656433 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099590225 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088369431 seconds)
  done (took 3.52646656 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08134208 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098727635 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078120528 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095563094 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078830826 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095595396 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078314861 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095638037 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080587262 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095099194 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080728421 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097858845 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08062519 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098404836 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08006892 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098211881 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081576562 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095787478 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078498931 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095818005 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080725375 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097616977 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080561104 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095899408 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078263928 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09770727 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078704743 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095628324 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080410672 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095341525 seconds)
  done (took 3.414233817 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089697794 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105444575 seconds)
  done (took 0.96425112 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078454319 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113828982 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078696492 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102264309 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104055544 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.081223176 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106802418 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086928852 seconds)
  done (took 1.521301155 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095264925 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109647943 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082557208 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112009355 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.108967824 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.098277859 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.168793267 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100343398 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.104188784 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.079916711 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.111820264 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080182061 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105346453 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081440895 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104379665 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087541289 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096339833 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104989257 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.08432856 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097416745 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082547205 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107960004 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100369014 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.080972957 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.100131329 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091014278 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.11211435 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.100452175 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084338999 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106639398 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086847939 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092257876 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081882391 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.09996986 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079016082 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108315628 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115621017 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084013168 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108459234 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100683497 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093161963 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094762718 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086448826 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105428528 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108763538 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.082574643 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100624469 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077366181 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098878393 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083680471 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09448143 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081968339 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.0935552 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105429951 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.084916875 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109726785 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080695189 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100748555 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084430957 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103448411 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.105939564 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.083270813 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101115323 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081750235 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109992062 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086245211 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110047444 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094496367 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.075462341 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.098424443 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091996448 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123119496 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.106198233 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.082759802 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100989729 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080221725 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103661859 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100831827 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088858268 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.10587391 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083054929 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106424342 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10642365 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081919935 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.10218323 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.090180156 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097733257 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.101612093 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.07954149 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116851834 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081389253 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.0979498 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.078842363 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110703457 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.102427764 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.080760511 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.097922318 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088764773 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093334339 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082310016 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10074331 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082648159 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.110177331 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105661407 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105703581 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090597141 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.106705204 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082086791 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102882278 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.078743145 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100652717 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084024788 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106150949 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093810474 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083924098 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.099948735 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.082988855 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108382001 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080424023 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.100043295 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107106967 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.088024387 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.098220439 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.078158044 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102157277 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.081482871 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103387035 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.107933164 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.080764013 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094779129 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.076885664 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.10307698 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082025439 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.102904771 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104194699 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08528709 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.094059326 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.079908235 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104891212 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.109656299 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.08174928 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.100912855 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.087357077 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.10067788 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081432785 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.105716692 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102093061 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081011765 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.105679508 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.082392973 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094952644 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085599399 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.10231138 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098495258 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.084942991 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10370587 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.08420766 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.101032636 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080501903 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105523343 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10070282 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080665622 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099269178 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080499306 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110930374 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.083747109 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.09488904 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097181065 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089589033 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097428732 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.082595573 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098896883 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.084294118 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100831002 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080995507 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099654371 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101274561 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.094564785 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10463912 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100947503 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087109842 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.111776193 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082658948 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102901285 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.081874291 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101042213 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101350111 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09167167 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105578199 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088024033 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102570346 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.079121128 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106195602 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10819753 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081802303 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098548462 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081290409 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104404893 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106243491 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085978392 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101162151 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079936495 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10123239 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086267504 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103472537 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100299723 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081363227 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.104664502 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.080897392 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107536464 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101630788 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.0927378 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104247221 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077169401 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104141819 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080405305 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.105814958 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095045075 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079935171 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099286667 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.082892367 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098622666 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085348956 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.093676717 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089585485 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107567476 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100374534 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081559401 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.099506226 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088928363 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101558351 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086574975 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.104638991 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106759547 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092682361 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099534321 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085513671 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.110861991 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100244607 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076291419 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105978021 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.08127384 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099054264 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081324428 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098947394 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084969051 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108810157 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.108425126 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076418273 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103349873 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081295304 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099274889 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.07782417 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.105074175 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.102823627 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.082690178 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108837714 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08464326 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101358272 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086425164 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100819593 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101537795 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084587651 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10336648 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.08364256 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103477749 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082141233 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.103711267 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.081306762 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.098328185 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102084094 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.08219128 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.10090802 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088217071 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099832089 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082238467 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103132404 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.10071723 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082474262 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101073576 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082097789 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103556821 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083192546 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100922826 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085654056 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095824841 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107188087 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082270106 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108971386 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082594452 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097068188 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088124371 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103108631 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105825619 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083251644 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101106205 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083698631 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101164233 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085086946 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107260158 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.09787474 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093925353 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110041476 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082895604 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.104051549 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.100572859 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084689124 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100040633 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083914985 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102141792 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083214251 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101201913 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087505461 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103678077 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.101200173 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085098136 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102464276 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.083375507 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102143025 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077835278 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.100096899 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08263365 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101366703 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111604524 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.084052871 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103555597 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.08165178 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102577632 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082072304 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.098061368 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.109157691 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09323353 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102007811 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109120337 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.08269386 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.103237551 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093759502 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.0947734 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081837825 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099397697 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080275396 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109334666 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102257792 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.09318142 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.102222264 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082615544 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098168358 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083886278 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099760561 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.086039014 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098977467 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10532753 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084826763 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10079576 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.082696485 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.104510701 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085155398 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11217385 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101127117 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084101939 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102287516 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.08084613 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.100176567 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.082491959 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.104333509 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.084216982 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099800863 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080632499 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101019702 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.10262898 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085037417 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102109963 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084995839 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110722658 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082441566 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.104997713 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105379616 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077681496 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.104684322 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083733725 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101191346 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.082871742 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105727785 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085820865 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103047126 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.110870061 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083369978 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101803818 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08317091 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100466111 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.082327256 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102450316 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102286591 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082784857 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103547269 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091393973 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.098947019 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.08654077 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101200592 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.10162302 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090281076 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103099614 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.08688699 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109726853 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086470562 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103586937 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.11009846 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087414843 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106007793 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084401601 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.103477862 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107917346 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082963144 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.108886721 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083495659 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102761662 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.084608269 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.099703531 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083096224 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.10281999 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101145747 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089585346 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102675653 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082435041 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.101023189 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082178092 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103445119 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105611729 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091470177 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104719655 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086158947 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098346952 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.081057424 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104370612 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.081771805 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.103288688 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105218629 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088884474 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.104365797 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083516403 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101346648 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.092618619 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108601833 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105803327 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081324383 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.105882092 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.085158162 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.104513477 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.084871024 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.102104765 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103458992 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087417383 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103497037 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082633015 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109738239 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087572245 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103013501 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104267596 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085516319 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102712421 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.07903371 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103149018 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086093629 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10739017 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085957917 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103695217 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113361986 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083741439 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102345569 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087675148 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101677556 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.106455584 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078471411 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103088577 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08579907 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103806884 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.07900368 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101088932 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081975214 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104508434 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082916427 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097368604 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113913538 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09326309 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105386156 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082297946 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101013728 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079133154 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098056472 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101948476 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084692981 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104189739 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.09465411 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.101747938 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083508168 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099093905 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083278715 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106001509 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.10579537 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081464414 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098013006 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083281157 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105466482 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089819082 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101438664 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.083772798 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105979702 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104797407 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081870338 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105929314 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080840721 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106058101 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116405791 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085075942 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103881869 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.090191954 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111168481 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.104434284 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079322858 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.104240685 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.08709043 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102814025 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085465871 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103674777 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118549513 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087273716 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101419278 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083340793 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105271347 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083037604 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111669262 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103652651 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084606014 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107845328 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085544246 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112128338 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105216538 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091814358 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105993582 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087243582 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.10152297 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083942823 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.10142627 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.101004897 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.085458848 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102983146 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089981648 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111445515 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.101957042 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094812996 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111769554 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.089036901 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099298448 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082386858 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.103134084 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.097271625 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.085143066 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100198517 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.082381532 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100513282 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083190644 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.104216338 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090348069 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.10366197 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084927167 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10269808 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097119723 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.088881197 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.108908668 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087462954 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.101029753 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086420765 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.106056848 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087391098 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107566263 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103531465 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.086123939 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104682889 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085116299 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098333363 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091403522 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102011843 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086786773 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102429464 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102942635 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.085583138 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105702338 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089103233 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10393796 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086481282 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116026702 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105700337 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.082073259 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100206255 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.0895109 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101015374 seconds)
  done (took 57.654828784 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145472115 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080608553 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098768051 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079892254 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112162614 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09984241 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080084264 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09947069 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080928127 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102123566 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079333483 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098287423 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108443339 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123517302 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093299038 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104439984 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099176919 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081583416 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099041738 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080830321 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108743916 seconds)
  done (took 2.874310469 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105387017 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119838969 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114471234 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119247409 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090215139 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116155632 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113835744 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114636509 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098596815 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111356459 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118019865 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114762048 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.09138758 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111252746 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110694285 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093187056 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118874129 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108599886 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115477663 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095861381 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112791466 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114763957 seconds)
  done (took 3.228069346 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.08533663 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103041752 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086440001 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098745704 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083887365 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097449674 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088299133 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101151309 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087271239 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102497928 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082073432 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102456412 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104069596 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079200681 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102057447 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081386786 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151186683 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.10718139 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083553885 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104522997 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098137947 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.08573145 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098328911 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079962156 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101500542 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088201844 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103653951 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081845465 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103065515 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082821172 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102655587 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.09998028 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.085257359 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103352269 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083099337 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101458069 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08373615 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103356536 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080408048 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101657329 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084577204 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099345904 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085437726 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104846566 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081402571 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.100817585 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.104315629 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083586093 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098261046 seconds)
  done (took 5.463685551 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104580221 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160838734 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086890853 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144436723 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120718274 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113665407 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088483587 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141903801 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101750837 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085981478 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123540207 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.118940591 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104147226 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089613901 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110795933 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103168649 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086574252 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102634232 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.109078847 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083557813 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107464067 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.110243842 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100459243 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118445596 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10708664 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083662454 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103734315 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108085261 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097834826 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109557493 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108210906 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089867151 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121257388 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.109413298 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103622849 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.087738756 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121089268 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103085653 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087887139 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.10329173 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086312146 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109283869 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109262129 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.121505459 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085272063 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108937133 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084146731 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101079482 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116902451 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087716206 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112865816 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120206447 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107500439 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08538633 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108992993 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120152971 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085324638 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.10225942 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106780951 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098712223 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101869655 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.110119203 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.10092981 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.109663256 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.110609488 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.119715394 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.089973277 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108861992 seconds)
  done (took 8.135323689 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093448634 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110962107 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119654815 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120119998 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091737129 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.1108907 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109691391 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091085866 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11055174 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116257284 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111288427 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133455616 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085785908 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113819074 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111115676 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091160147 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111436704 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110524093 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091146505 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1111842 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110824247 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119768167 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091190916 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119147983 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141850938 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105474825 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090770855 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111587075 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119607261 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110377541 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123627035 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092029644 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111522322 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121122086 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123719676 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091078621 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103218484 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110075212 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090949617 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110172306 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105940948 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119784774 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090662912 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.10632216 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.111803395 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.092021469 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121110133 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123230346 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114321896 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116414552 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.091676254 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120382198 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110130997 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091581864 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121296887 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146666932 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119670548 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119193253 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111396983 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.12023177 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099996671 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128017708 seconds)
  done (took 7.653655615 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107794828 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114224481 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.11706472 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100417975 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082514149 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108433798 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082573912 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102142277 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113258131 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094498373 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116622121 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107692088 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092568915 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116131671 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108782111 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111814043 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088342505 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109108182 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113506525 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108247272 seconds)
  done (took 2.926016087 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093861289 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123636304 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085601497 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112249738 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108306603 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091371766 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107528119 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107783655 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085578498 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106826791 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095406274 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117788054 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106726494 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090882665 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115712692 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111437924 seconds)
  done (took 2.49163267 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097387476 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117558304 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120019809 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084906017 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104174413 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080545676 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105372344 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100625565 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080908959 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120085092 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084753873 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108554497 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105036983 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082665085 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101006895 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.089148246 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100983047 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083540823 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105395852 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119436982 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095949356 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103541547 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.10578926 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086447335 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104632167 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090923774 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106065192 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102103276 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.082776693 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104957872 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084821412 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113339958 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102220635 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083118259 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103281913 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084200127 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.108446676 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085057902 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108848313 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104805537 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084277683 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105049962 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.08524781 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106522394 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080990731 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105350328 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100778872 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092785109 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103818339 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08558245 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.10499494 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107137881 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086570116 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115507448 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088355514 seconds)
  done (took 6.241133103 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099578 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10848437 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081598481 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10280063 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087971912 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.106817909 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108914603 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088108791 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106451145 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082911176 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106654028 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089900742 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107378321 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108545495 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086865414 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108595821 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081205625 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107145563 seconds)
  done (took 2.613694293 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090886633 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105679637 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092844556 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.10562521 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085051013 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107480716 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08068667 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104142181 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102930483 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085687827 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105336677 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088236203 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103655049 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087200192 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105994106 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08420909 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108184614 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104347923 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085808355 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10078053 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087574969 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103313751 seconds)
  done (took 2.968245573 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118214792 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.12435985 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092788117 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.230278774 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103632229 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132274193 seconds)
  done (took 1.644305364 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109467819 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120642134 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106650913 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106880969 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115187192 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106703091 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08800081 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107423797 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117442917 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100932707 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107931329 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11775723 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1171155 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096455745 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115362029 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112816017 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106811245 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087232136 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10552258 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127766106 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087902543 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1163667 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10753175 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087369345 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108693924 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11695654 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117478201 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122415877 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08790436 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117678696 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114335522 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087425565 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118220102 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120914307 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109437903 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097677679 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108168396 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127575113 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113805801 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095627415 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10892506 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114331958 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117929012 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092802526 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117356968 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10725091 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093252798 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107504831 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107884515 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134847988 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114295848 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097776562 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113889857 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116897598 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117711992 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134527335 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1004391 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117138126 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114324404 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122445751 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11686456 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094238544 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11690266 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121535855 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114753697 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120052289 seconds)
  done (took 8.120143774 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101616896 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12567775 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107636211 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121585687 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096240447 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1068155 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108348268 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088022643 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107514745 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107057939 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152340742 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088002743 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116355471 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116928154 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108627951 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087780963 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107693815 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116522005 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087467364 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134973193 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107899694 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116558839 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117402801 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097078779 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12217194 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114362269 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107797312 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087964167 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10874299 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10807865 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093134514 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107546638 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117061934 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086854844 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116984011 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107419051 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107359019 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093782528 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108530288 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114116628 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097033267 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127262093 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107670659 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108421815 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122619251 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087628879 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107362729 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087390878 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10912376 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106683331 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121602142 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101361996 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12219344 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117114457 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107823242 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087702368 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107766125 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108333244 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088129057 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115263423 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11704398 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108574784 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13545224 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088126815 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10816159 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117616431 seconds)
  done (took 7.991447093 seconds)
done (took 154.915475362 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.212670678 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.198302514 seconds)
  done (took 1.258576794 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.087075772 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136072133 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096788823 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.16857469 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085060737 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.139638099 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.13887078 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096933707 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106391973 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085754287 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106718983 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087403165 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171067914 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085982206 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106227143 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107352788 seconds)
  done (took 2.660280313 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.113654592 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254553477 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.121564108 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105238645 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089903399 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109416665 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.083845417 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.111286637 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089354111 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.104528404 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.089283533 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.106327139 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084184098 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.106262865 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109983072 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087877876 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.104667034 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087600009 seconds)
  done (took 2.814542528 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113579664 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146588695 seconds)
  done (took 1.117544283 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.240628175 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.161977491 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.227397653 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.47456973 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.278666881 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.35720209 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.198194436 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.209164933 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.16408038 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.209287674 seconds)
  done (took 3.377048032 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118689801 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181927688 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.315298604 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156327606 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107655768 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.12638364 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155820551 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130618947 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.123218449 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122136127 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.101326915 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.119011521 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.137680562 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094788247 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114320747 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117140405 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120638643 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113728847 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114093918 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.094755056 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138137887 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105830485 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.095870051 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.113324069 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.119158511 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.097416084 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.106253438 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085026264 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.11538049 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.11440479 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.092908605 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125709647 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.119058393 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.15461577 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123058979 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.156240358 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.118930353 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.090686289 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114625979 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.111221964 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.09744864 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117207076 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.124696695 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096244083 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105970282 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.117583201 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.085637354 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.106382502 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.093705608 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.118591312 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114245566 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.092433437 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.153006777 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118547628 seconds)
  done (took 7.367541135 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.782977504 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156295447 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090132936 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.877674625 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135752692 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102886148 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.77338512 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11207269 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.254628343 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.747617236 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132636007 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121038371 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.206762499 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.259657921 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.954669369 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.291171104 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.637077837 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.124568403 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149890418 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154074703 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118319871 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136777052 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109444865 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.429167928 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117172707 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111739076 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095844723 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119166416 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160186043 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125663971 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114197634 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176463153 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.249014858 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204604538 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093477986 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.11226156 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111118992 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170180335 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266189035 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193044586 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180884931 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108452778 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088858295 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122362647 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132182439 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108313176 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163054784 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175282318 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170269341 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114919102 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11921731 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099213519 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12099338 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.16354301 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.122148936 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.315669686 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.310324559 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089895813 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122646283 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126216299 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258403101 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101517773 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225936612 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141263402 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214057963 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090045425 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.769318211 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.16918839 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111368558 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.094998251 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120954805 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116443437 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120777769 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167572002 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.368047491 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125081786 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.11456684 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09058193 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.243801028 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.124528382 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090128708 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162398769 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11712907 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121400395 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123894219 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10036456 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.191815317 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.231057144 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123976906 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.0978624 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116256156 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125682168 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.095156356 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.209929813 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220020477 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.183026436 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.208301271 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121668235 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.164303821 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169457014 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120137835 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.172824407 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120583311 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124685047 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099736622 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217553309 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145622407 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123724233 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114336353 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.096634417 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148341278 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127980834 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119355336 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.171976538 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.454444318 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.190932117 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.087898097 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128488052 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119223601 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.162789761 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117156613 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.236669618 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122323081 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169370421 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120211788 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.085944107 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.1220447 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.161710736 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122522343 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121474918 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122009508 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097439295 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.257262965 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.194957197 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121954279 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242650699 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183942892 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096085261 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.193265826 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099991969 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189901896 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098755268 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122550364 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116809806 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.756758692 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123887488 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119940432 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093460852 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187332026 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112072369 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124385957 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102440453 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10948314 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778448025 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10534515 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.122057593 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.124436932 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095108507 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120553444 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118574306 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093600487 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.18292631 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229583807 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097964656 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120631683 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.124577159 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.161481157 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.115906379 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103870754 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125469435 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124677647 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.099988516 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115492182 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.1249804 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169506638 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162879879 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.221840753 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.589715739 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090269648 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.12478731 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228718666 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111824548 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.266967915 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119655221 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.224056052 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162971135 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121170876 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.306329024 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.167347738 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.188453443 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126066031 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.174147814 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108779461 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.096346558 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.18538474 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090428907 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117077429 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.163054574 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124843816 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.100053738 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.962181084 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111896524 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.225112756 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.10828451 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172226998 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.1169845 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099140934 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.294068408 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111721213 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.106393836 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.186937986 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093082993 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124939976 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.722376316 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103813741 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121623622 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117694263 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.220766435 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162325906 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119856407 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097711826 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119162901 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.16205199 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.206304907 seconds)
  done (took 43.841962112 seconds)
done (took 63.292995307 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.278952858 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216690301 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.268958243 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169961042 seconds)
  done (took 1.897067359 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171135616 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148936994 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121426581 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.10735998 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150377231 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085214059 seconds)
  done (took 1.668271689 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.362462654 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.274761345 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242557374 seconds)
  done (took 1.77148883 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.290823646 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.246277051 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.473826379 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.325714265 seconds)
  done (took 2.343242675 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.209358798 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132100306 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110295979 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103858862 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.195839743 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.244188496 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142749014 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.199916388 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.099652699 seconds)
  done (took 2.371504145 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.196468389 seconds)
done (took 11.139549262 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.268415644 seconds)
    (2/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.130511212 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.215889312 seconds)
    (4/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.245230848 seconds)
    (5/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067576899 seconds)
    (6/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.252848373 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.114220401 seconds)
    (8/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.097921698 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.202805454 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.17166598 seconds)
    (11/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.266950707 seconds)
    (12/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.24766669 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.098548101 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.119056734 seconds)
    (15/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.146777689 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.112975096 seconds)
    (17/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.117406553 seconds)
    (18/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.227194035 seconds)
    (19/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.215297847 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.14575913 seconds)
    (21/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.109540035 seconds)
    (22/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.19272107 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.151276038 seconds)
    (24/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.158263054 seconds)
    (25/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.087745101 seconds)
    (26/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.121198433 seconds)
    (27/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.119810009 seconds)
    (28/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.180683993 seconds)
    (29/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.201081733 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.136215263 seconds)
    (31/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.121124264 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.112035034 seconds)
    (33/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.121741733 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.136615857 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.092796825 seconds)
    (36/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.19437838 seconds)
    (37/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.217191488 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.174643467 seconds)
    (39/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.076101034 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.133785926 seconds)
    (41/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116352739 seconds)
    (42/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.176731832 seconds)
    (43/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.123410916 seconds)
    (44/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136120324 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.232715644 seconds)
    (46/309) benchmarking ("sort", Float32, false)...
    done (took 0.173268809 seconds)
    (47/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.074726423 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.15428306 seconds)
    (49/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.06533512 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.159781169 seconds)
    (51/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.179658686 seconds)
    (52/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.139271608 seconds)
    (53/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.169449755 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.10992361 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.084983875 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.116740125 seconds)
    (57/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.153204449 seconds)
    (58/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.185248903 seconds)
    (59/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.114026316 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.133296447 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.115704896 seconds)
    (62/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.100238152 seconds)
    (63/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.077155601 seconds)
    (64/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.188419875 seconds)
    (65/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.095155778 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.11196392 seconds)
    (67/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.213266371 seconds)
    (68/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.187656306 seconds)
    (69/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066146836 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.14207843 seconds)
    (71/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.087780113 seconds)
    (72/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.110647536 seconds)
    (73/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.198395315 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.092389118 seconds)
    (75/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.181512811 seconds)
    (76/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.187637108 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.087407719 seconds)
    (78/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.179538921 seconds)
    (79/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.123945379 seconds)
    (80/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.098153136 seconds)
    (81/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.121914795 seconds)
    (82/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.115194536 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.108588345 seconds)
    (84/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136968826 seconds)
    (85/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.15554869 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.11071558 seconds)
    (87/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.214421472 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 0.10971086 seconds)
    (89/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.121919955 seconds)
    (90/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.090139758 seconds)
    (91/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.173095012 seconds)
    (92/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.088987897 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.113380679 seconds)
    (94/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.113980806 seconds)
    (95/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.127090596 seconds)
    (96/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.107571377 seconds)
    (97/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.176504663 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.132642194 seconds)
    (99/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.19193254 seconds)
    (100/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.091495663 seconds)
    (101/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.116750544 seconds)
    (102/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.091482968 seconds)
    (103/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067157719 seconds)
    (104/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.115611224 seconds)
    (105/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.090004302 seconds)
    (106/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.197976273 seconds)
    (107/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.138509707 seconds)
    (108/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.097207681 seconds)
    (109/309) benchmarking ("sort", Int8, false)...
    done (took 0.189324178 seconds)
    (110/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.180471629 seconds)
    (111/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.076924628 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.118117867 seconds)
    (113/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.091779964 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.175008131 seconds)
    (115/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.192694697 seconds)
    (116/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.164805651 seconds)
    (117/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.094149454 seconds)
    (118/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.203173456 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.194279525 seconds)
    (120/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.120886717 seconds)
    (121/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066763506 seconds)
    (122/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089212365 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.136130912 seconds)
    (124/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066781874 seconds)
    (125/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.108705087 seconds)
    (126/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.148959081 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.096420004 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.181330322 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.117823845 seconds)
    (130/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.317965721 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.141067113 seconds)
    (132/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.126194195 seconds)
    (133/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.066237435 seconds)
    (134/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.12398882 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.093309939 seconds)
    (136/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067816763 seconds)
    (137/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.089857108 seconds)
    (138/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.174679328 seconds)
    (139/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.123908601 seconds)
    (140/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.108019767 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.090936313 seconds)
    (142/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.139330866 seconds)
    (143/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.221976669 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.093810167 seconds)
    (145/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.115930347 seconds)
    (146/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.094929283 seconds)
    (147/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.192138731 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.108748457 seconds)
    (149/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.086204476 seconds)
    (150/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.179890054 seconds)
    (151/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.065877453 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.117196989 seconds)
    (153/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.17716214 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.085049007 seconds)
    (155/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.090269467 seconds)
    (156/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.07632883 seconds)
    (157/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.06834873 seconds)
    (158/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.117590065 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.085228572 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.116290007 seconds)
    (161/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.113837994 seconds)
    (162/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.08515015 seconds)
    (163/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068424911 seconds)
    (164/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.133650251 seconds)
    (165/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066426124 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.109614354 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.086468841 seconds)
    (168/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.17559308 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.142263069 seconds)
    (170/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.128898353 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.094961304 seconds)
    (172/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.120395662 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.131250871 seconds)
    (174/309) benchmarking ("sort", BigInt, false)...
    done (took 0.248264659 seconds)
    (175/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.094977892 seconds)
    (176/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.076736942 seconds)
    (177/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.100868545 seconds)
    (178/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.21359763 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.165878557 seconds)
    (180/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.116068102 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.109771835 seconds)
    (182/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.087207607 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.195871541 seconds)
    (184/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.120285617 seconds)
    (185/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.076994701 seconds)
    (186/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.090531545 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.182077594 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.136470401 seconds)
    (189/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.180397625 seconds)
    (190/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.093978192 seconds)
    (191/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068232929 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.110084585 seconds)
    (193/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.086010339 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.116084197 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.138286268 seconds)
    (196/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.069515396 seconds)
    (197/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.11605627 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.095464247 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.134595068 seconds)
    (200/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.116267561 seconds)
    (201/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.119534698 seconds)
    (202/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.204552607 seconds)
    (203/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094036457 seconds)
    (204/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.091556243 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.110763668 seconds)
    (206/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.177623196 seconds)
    (207/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.066368748 seconds)
    (208/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.138066086 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.084500103 seconds)
    (210/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.089926068 seconds)
    (211/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.087406129 seconds)
    (212/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.090526396 seconds)
    (213/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.087995064 seconds)
    (214/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.111094745 seconds)
    (215/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.087296022 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.108277164 seconds)
    (217/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.176424118 seconds)
    (218/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.19966775 seconds)
    (219/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.091501404 seconds)
    (220/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136185111 seconds)
    (221/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066338534 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.085220215 seconds)
    (223/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.217409964 seconds)
    (224/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.099970194 seconds)
    (225/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.084223048 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.132934379 seconds)
    (227/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093073691 seconds)
    (228/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.11891968 seconds)
    (229/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.093732961 seconds)
    (230/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.115602494 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.107250536 seconds)
    (232/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136003051 seconds)
    (233/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.091438752 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.091964454 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.179436029 seconds)
    (236/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.098380539 seconds)
    (237/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.091359971 seconds)
    (238/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.088475531 seconds)
    (239/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.179284563 seconds)
    (240/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.082041837 seconds)
    (241/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109806937 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.086558055 seconds)
    (243/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.118378818 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.111597091 seconds)
    (245/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.124160528 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.19051295 seconds)
    (247/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.077688716 seconds)
    (248/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.090314679 seconds)
    (249/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067896154 seconds)
    (250/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.094957124 seconds)
    (251/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.090551464 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.087777838 seconds)
    (253/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.111369967 seconds)
    (254/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.087077825 seconds)
    (255/309) benchmarking ("sort", Float64, false)...
    done (took 0.172420806 seconds)
    (256/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.109714528 seconds)
    (257/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.067139288 seconds)
    (258/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.124536763 seconds)
    (259/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.086214845 seconds)
    (260/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.06695444 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.110358004 seconds)
    (262/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.093169116 seconds)
    (263/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.117833517 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086732095 seconds)
    (265/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.090612282 seconds)
    (266/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068573227 seconds)
    (267/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.107781004 seconds)
    (268/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068346297 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.092474782 seconds)
    (270/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.09348875 seconds)
    (271/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.067000364 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.120710356 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.13192608 seconds)
    (274/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.101024069 seconds)
    (275/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.091395753 seconds)
    (276/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.091379006 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.110469607 seconds)
    (278/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.110229706 seconds)
    (279/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.096806873 seconds)
    (280/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.091561252 seconds)
    (281/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.086135768 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.163458719 seconds)
    (283/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068635568 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.11866498 seconds)
    (285/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.09317292 seconds)
    (286/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.090504137 seconds)
    (287/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.100807397 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108992597 seconds)
    (289/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088275863 seconds)
    (290/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.110925657 seconds)
    (291/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066506798 seconds)
    (292/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.111553643 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085790374 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.172935476 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.118367032 seconds)
    (296/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.088780925 seconds)
    (297/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.068234881 seconds)
    (298/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.170919795 seconds)
    (299/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.11066359 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.163135108 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.115882818 seconds)
    (302/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.088870172 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.13678375 seconds)
    (304/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.13343791 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.092662727 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.110169014 seconds)
    (307/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067722586 seconds)
    (308/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067887023 seconds)
    (309/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.101452763 seconds)
  done (took 39.838569731 seconds)
done (took 40.733369838 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099698936 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146394529 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096103661 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136156508 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123874134 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09118577 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118699347 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097829057 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123214302 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124556511 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098582754 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093085981 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096979827 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120667669 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096799884 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139070727 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123626738 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093895823 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119344922 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086499212 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118702185 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085859675 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111925385 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070051341 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121418891 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093912393 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116743765 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.12056838 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086412583 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110435359 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089970585 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117574091 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086011672 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123490429 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093011295 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119191309 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.119801289 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.096907542 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.111622915 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087300923 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118229326 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086185607 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116911837 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.093914837 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.11669288 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092592504 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.120709731 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.125222457 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115625923 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116747158 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094824941 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121201913 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096753825 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117736291 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090487615 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119353731 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.115524783 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115001739 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.120154933 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091905578 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.11924217 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095066731 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116225752 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.118405907 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.095108844 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121942779 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098329343 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115897047 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097404023 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116050384 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086062562 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119754142 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.113963621 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.086858344 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.120655642 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.09778675 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109263952 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092840277 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117640865 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093174999 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110862937 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.0898517 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112905232 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.09369773 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112868024 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070215316 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.11477799 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093096656 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109924098 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096237905 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117473847 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093466438 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112326347 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.122733039 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.086339367 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.115939439 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.087885855 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.114430768 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.089332265 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.113985294 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.086667835 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113371709 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.096576833 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.111877146 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.093460559 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123961575 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086720404 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117364784 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086478621 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110779072 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.124764315 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.096845884 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.111533536 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091521163 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.110748285 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.094584668 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110665264 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.086273284 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.110908373 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087644844 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.117507394 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087415409 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113553922 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094397931 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126115568 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086416145 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115361847 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089001187 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111334285 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093384848 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111830932 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087272785 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112647046 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078099064 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114122036 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.08743469 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118396412 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090467718 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119290296 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.1131558 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096078953 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.116082453 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.093214962 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117283399 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.086463593 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.098287701 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092408067 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113592936 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.088469918 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.111014112 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.088504624 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.111355354 seconds)
done (took 16.968996006 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086860381 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185370841 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153683055 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142189667 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108668043 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111861938 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121962273 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119420126 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113917533 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144224813 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110180136 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132903938 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148091373 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086958269 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11267615 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091485599 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112977057 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103204702 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145715659 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133634836 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165290782 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086073887 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148011873 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135962285 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121682898 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114671196 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113084676 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.09190558 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115582779 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.104013522 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133170278 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115435376 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088805477 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134929001 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105221874 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.12126771 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087340216 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119925744 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.111672812 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.088326661 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.143302587 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134094266 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092493021 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118407395 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091569627 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114832095 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.08992777 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122023067 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.123015021 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.092328503 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.128021561 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158464135 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091073208 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123656432 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087243951 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122850348 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122291708 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089970318 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.116184163 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090344488 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111883648 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.09225761 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.12860553 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.144000999 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091479079 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122174764 seconds)
  done (took 8.657700321 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.10345588 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140002988 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.130468255 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.10651397 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112023579 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088152042 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113147749 seconds)
  done (took 1.753299507 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088782924 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134460221 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110579086 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.153545059 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133078837 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.107975508 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124865507 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088231728 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13210234 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089217266 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134945936 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.153041086 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.08953142 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121435886 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137497151 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088203691 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138083454 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088429742 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117965317 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.137517407 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091526485 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134083941 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090349136 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114169715 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103240127 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114029913 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162854467 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094392831 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115360934 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092456525 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11326482 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.166259774 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102708989 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124924851 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114656128 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103241205 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128656507 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086442105 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130960264 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094580157 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128143387 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.115668395 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.090416762 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.112543056 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.093373479 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124801086 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090278775 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.11580551 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.090962288 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13544714 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089594616 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128547324 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.114059588 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.092798563 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.115977835 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094613818 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124611399 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.08979059 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133603627 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089947115 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131995505 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132981064 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.102600753 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131796921 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091498301 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128596797 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.128853205 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.091592567 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115892842 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.091796052 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130444444 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.08671657 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116123616 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099896895 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116059853 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.137994417 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.112221766 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116474646 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.10042921 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.115174017 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.09026809 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115485954 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.137421566 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093328304 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114797704 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092413286 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11818589 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.087413955 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.113227512 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.092730249 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.112756861 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.090808474 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.118626006 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.089656255 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118026114 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105553971 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115317795 seconds)
  done (took 11.865846578 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089384843 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.11513676 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092357192 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114218628 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089649288 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115639949 seconds)
  done (took 1.588679601 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113414934 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118966167 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.105269816 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.12013955 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157467472 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.129694426 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.104221421 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124562002 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108589591 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127783117 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129564517 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105692109 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136269687 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121864312 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104559741 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121727128 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.130560384 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099815648 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128946214 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096504493 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138002848 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122053242 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096642013 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133158856 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119170418 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095452662 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126991207 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102394063 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128057832 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123320869 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095345314 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119383497 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.121558302 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.098264737 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.131595201 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096179586 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121979049 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.11986524 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100322204 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120166326 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.130459527 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095783305 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127415648 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094334292 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.12353832 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121672207 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.09436146 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127012842 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.129183901 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.093965512 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120033344 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095418527 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118840134 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.11909597 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.095686299 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124392139 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094081155 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.131129287 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122211694 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096530573 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118543077 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092900795 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123552357 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118813946 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10520019 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120110805 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.12147064 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096015495 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123214329 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095401991 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119922587 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118860365 seconds)
  done (took 9.277945404 seconds)
done (took 34.09549665 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.692206543 seconds)
  done (took 1.658940219 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.721383928 seconds)
  done (took 1.690186329 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.53535113 seconds)
  done (took 18.505214318 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.504988488 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.585916767 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.817115174 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.181754054 seconds)
  done (took 3.057971803 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.948327929 seconds)
  done (took 1.936060991 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.296935792 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.259814392 seconds)
  done (took 1.529524418 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.769266789 seconds)
  done (took 1.747261317 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.354091002 seconds)
  done (took 2.327505294 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.331774525 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.186444892 seconds)
  done (took 1.500920771 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.553303304 seconds)
  done (took 1.5370855 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.82590902 seconds)
  done (took 7.815227895 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.258725712 seconds)
  done (took 1.255371769 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.302370081 seconds)
  done (took 1.28881692 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.58137734 seconds)
  done (took 4.569564367 seconds)
done (took 51.394164307 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098334004 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127734492 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102116227 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125247867 seconds)
  done (took 1.434121958 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100845366 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12131878 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101092934 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121400033 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126728704 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096508568 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124015208 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101009511 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120808085 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096414824 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121493093 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.121010575 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.09911886 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124019732 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093090554 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125154679 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.125068748 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.096162535 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124825164 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096195602 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119437102 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097611834 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124628948 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119694427 seconds)
  done (took 3.689004547 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100271973 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.11954019 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.095505779 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118961704 seconds)
  done (took 1.423487324 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099795434 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.14212013 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139427421 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.099830578 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143730169 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.136360579 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.091420884 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117617828 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094953925 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.12642571 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090087449 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149315062 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.138099666 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.100154404 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127348819 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114071437 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091801511 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137036275 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099536428 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125884878 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.092994823 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126286484 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090950747 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139525238 seconds)
  done (took 3.806605318 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.159344476 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.15089499 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138628071 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094754158 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.155833155 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141910755 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.090052349 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141458106 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088020833 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130708133 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119012053 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132701069 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128003917 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088507728 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113498888 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087793645 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.127733861 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.12903518 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091298316 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.145158452 seconds)
  done (took 3.453056348 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097552784 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118907623 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088096902 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117096158 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099316521 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121782371 seconds)
  done (took 1.640165984 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091074058 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115112333 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090803552 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115208544 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094991473 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115518741 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088055588 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.11580579 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.08928233 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115741757 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089230947 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114308644 seconds)
  done (took 2.232941232 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.457032534 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092360114 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121304476 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111558552 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096719067 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115071078 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103410372 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.118944048 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141151836 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088590289 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115950189 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091528608 seconds)
  done (took 2.651562904 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239939342 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125861151 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292112977 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19257209 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160298418 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171268425 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153293938 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167820536 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.22668925 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159106602 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209423378 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222665903 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126068271 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219327713 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112239938 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144391931 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228788477 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219006857 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155738478 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233205685 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2023103 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165081602 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179432447 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151681894 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139005709 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170315635 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.12197495 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104496042 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236488987 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180605156 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218074413 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165130283 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148508305 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243162891 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250270222 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198448727 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187740984 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135620652 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.17056642 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.14225873 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270943596 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139390116 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238336477 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159293017 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105281277 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223684896 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169372037 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175291769 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.151546984 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139700134 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19966731 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242527223 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.194544794 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138561371 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163792118 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161966956 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.168976741 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152806819 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253779103 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200169975 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206456825 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094342327 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147547708 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193244247 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18387889 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.194756124 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.184334749 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14650102 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195652181 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188612323 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167401913 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219850729 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182228714 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139907281 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171380811 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175671653 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171081416 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255956826 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203989804 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.09606141 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169134344 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149979969 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132852206 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.194404627 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099348231 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242408216 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150851619 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108345572 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163461481 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161700069 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162858127 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199035119 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219668682 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149387057 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084192497 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156916476 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156265896 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19027252 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140330025 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161173403 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161285015 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130962932 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178743444 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124262937 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177283829 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.09132691 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204572888 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18483766 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100426178 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159325555 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154435582 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.152464447 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179047934 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226306564 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114059876 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134972871 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207144975 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202695711 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150026201 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179364436 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201120429 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.143162859 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149697894 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200609778 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246560536 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14148039 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20469002 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155648362 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134882517 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.107805961 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206939747 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155522661 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.134252416 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134134513 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.182294166 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23994274 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126274121 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111783826 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216186531 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107416536 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134007822 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161748257 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148493131 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139113181 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.121172135 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.152786846 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209106153 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179375256 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154114318 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16808314 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152318297 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252955265 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141698089 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.123138348 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14825445 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121536234 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.196240249 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198035989 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130557698 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232331397 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.174880397 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157072991 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171629292 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108249065 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1769182 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130529919 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120842823 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194178174 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1668711 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163025143 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.195293358 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154978835 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.20938052 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.182005626 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174330448 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177132249 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164938762 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159879555 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.13872422 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158842547 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167071469 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096403292 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.143000674 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134518157 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15815943 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143495093 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106614869 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228864828 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172629091 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150197692 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158512754 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150689515 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180586963 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.10230487 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206040185 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177126898 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148472297 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.198075125 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192151021 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213436663 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116000652 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233565912 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119999732 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098912205 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142469021 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172566649 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134418642 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135584821 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165240985 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180845734 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18683839 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177214788 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164021347 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177075008 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190250482 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.123044606 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168316949 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187777599 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175803046 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.187066683 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140174708 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152622562 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176999377 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156308252 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229926376 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194198516 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1773166 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210242712 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.149446402 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132138451 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151106022 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186861756 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1553456 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178855472 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148384681 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143435154 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161842946 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.106218743 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189336496 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186485336 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163284795 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190554984 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.151203922 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214841512 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10136148 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165193949 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157963376 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165619873 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.109271631 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178269207 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230575547 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120560208 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171334795 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221878262 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104282086 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.178820772 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242569332 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196427711 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137741316 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160737185 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160798905 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164273295 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174035659 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178122325 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160135263 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215614804 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129980585 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136671527 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141572205 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151497574 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153738799 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.106568512 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149282135 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.175469597 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139551767 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189370417 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160528011 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158847911 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198085638 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.122626521 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145534576 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150706083 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21744668 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174838046 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243553007 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.14970173 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179687588 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233081086 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098782838 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132426 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133992138 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17831178 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108782335 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218647906 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.120769395 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158004136 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207775941 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193268821 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140015135 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.092483815 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158001778 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175406641 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164800631 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152060878 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.160162032 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236534758 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.115325509 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131837435 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173766483 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158480456 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119305209 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225210386 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080326247 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150220648 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127517485 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10678017 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1658009 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23735419 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137398259 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.158650893 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167711339 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197232088 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136992626 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150419489 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149548421 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165679158 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22803597 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186635381 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.104903299 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157348985 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204421949 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195851 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162253374 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.140201091 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204517063 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192624596 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.225163448 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143048559 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167622876 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167435885 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157053523 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186845114 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135962254 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206995548 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135050698 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225026561 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153313043 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114821425 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203654247 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.120691361 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143769675 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187389949 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202310086 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108155376 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13268179 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169038865 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17687621 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155634472 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127925578 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183124718 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126126891 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192979262 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260390494 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134474772 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127519469 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147648466 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13566986 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158471582 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159010039 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139598006 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.140259997 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228595522 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135153154 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19207779 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22993874 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172529961 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17642619 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14428641 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.69462227 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.102849093 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222554728 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155106221 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207148944 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15232155 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173291895 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161717131 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169005889 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22219796 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159736746 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.203596366 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221990564 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.177423368 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133128434 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159664924 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161868037 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144545068 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153414574 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167254253 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161109761 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.15255607 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.17726753 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171609447 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.133883221 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112472379 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224049822 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155824319 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188131234 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180236152 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138740439 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172384695 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18749767 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13430188 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.181456879 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238843357 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142667597 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122637651 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133789211 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155691568 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261535884 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096765787 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2285764 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17706788 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157968412 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167446857 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147569812 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189202689 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158593284 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204545628 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146711515 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158531008 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127347753 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138463639 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130390331 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1541044 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168402499 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.148290662 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158856582 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.139731937 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188312484 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124200228 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144775387 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15644567 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192255604 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243312847 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.11063709 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135331629 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163418802 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152037487 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.174958778 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17698341 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136005132 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135928252 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.109356419 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.157821675 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112968346 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155569996 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155809538 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165907708 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23301232 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.109215579 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279230776 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140360527 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151781856 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089085753 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.131590449 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149663138 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145569744 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155377119 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123121724 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258860901 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.145270458 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.105267424 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147602302 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125413355 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134491536 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165713627 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165360755 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174862704 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146099356 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081404131 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157913475 seconds)
  done (took 81.209895365 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162528984 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131346146 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146853935 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.200999083 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17729834 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268909242 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209128193 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253991502 seconds)
  done (took 2.630350338 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.092425073 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.14558994 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.154152672 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133504734 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090122763 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.117723677 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.331020073 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.131745866 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.090656109 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.140055572 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.146539098 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.117353712 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.508928296 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.118563444 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.117719693 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.083100091 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.115550578 seconds)
  done (took 3.70944949 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.461910346 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.715798555 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.477573504 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.125293553 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.168976673 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.133932649 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.768708885 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.210397814 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094969148 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.487398997 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.776597173 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.187799439 seconds)
  done (took 18.692980048 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.098639783 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.120560284 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107206699 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.134148663 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096019069 seconds)
  done (took 1.639561468 seconds)
done (took 129.196087597 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.103985309 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.407971879 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071902722 seconds)
  done (took 1.599150481 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.106981567 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136209449 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108778338 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135966311 seconds)
  done (took 1.586141686 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098280752 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126824778 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109065326 seconds)
  done (took 1.427821077 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.321542877 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.188633761 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.142185007 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.10621985 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130052557 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102560881 seconds)
  done (took 1.42908526 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097320949 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127775893 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097478122 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.12960141 seconds)
  done (took 1.546226437 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094519378 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.07086498 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100725045 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.07488644 seconds)
  done (took 1.430373471 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113169637 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131328609 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104911615 seconds)
  done (took 1.443891543 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.129630872 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139373211 seconds)
  done (took 1.364993732 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105619542 seconds)
  done (took 1.195840326 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.117465017 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169120731 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.18981789 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.163840979 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.226345049 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.16508273 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.140993426 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115087574 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.13096143 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.144243111 seconds)
  done (took 2.658393281 seconds)
done (took 17.528917104 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103580704 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.422480506 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412911015 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117037154 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722232876 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381248384 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.070604743 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146314302 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165848916 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093306058 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138732863 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671486139 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.022009458 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.376864731 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.979634081 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.373513688 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.70520924 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091991149 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119814805 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093574013 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.052758912 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091234223 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121535713 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092484303 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702936729 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425693276 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094674673 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.372993532 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092316968 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126616955 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383513382 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122632368 seconds)
  done (took 16.972577421 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095088048 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173708544 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099096342 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137739567 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123660956 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094575852 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125026263 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094384388 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178977749 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123425246 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111413922 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121986191 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.12612607 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094215878 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141965267 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092818073 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125383656 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093517049 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121041663 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12226577 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112359691 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120722057 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094401811 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121525149 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094968104 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13608521 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12372176 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093229225 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120845523 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098169727 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128205001 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094581199 seconds)
  done (took 4.836024409 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140397696 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183217541 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128186733 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127509387 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168592722 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124290095 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199573366 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145655604 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.1540771 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123162616 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140363302 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093161578 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157492543 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.12383022 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114755651 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121937643 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097598921 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121493556 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093778721 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123322705 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140813507 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093577344 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122637397 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09354858 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123933229 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136183753 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095405534 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121924103 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092835598 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127323298 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100129667 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123790296 seconds)
  done (took 5.157995909 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096754491 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126824589 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109249563 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139263743 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094791569 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125856863 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097378651 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125008299 seconds)
  done (took 2.017257829 seconds)
done (took 30.076794571 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111671222 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128220446 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.105850562 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134602721 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102245094 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132075257 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091699864 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.13351774 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134216095 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101606188 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137899424 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091928383 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123158635 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091987733 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136189355 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097518802 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133073703 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101904436 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133825598 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132766265 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.09474632 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134529703 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103183812 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133409683 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105398817 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133805991 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138550466 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099964751 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123496693 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095191713 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125640831 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.10370057 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125015364 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106123303 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127812264 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097936969 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124545079 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094115528 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132946274 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.134086741 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100056394 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133831389 seconds)
  done (took 6.019226117 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107994727 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.141191193 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104376193 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081497926 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117449987 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.08102816 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138386274 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080096694 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111438803 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108231722 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.076948426 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106922931 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078187322 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102967446 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077985612 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075335325 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.110275069 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07567275 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07654874 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106666625 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080191887 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.0731116 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.10881399 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079145041 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.104750353 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081699788 seconds)
  done (took 3.59437337 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100397076 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135991475 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112612682 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184514055 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161423358 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099875729 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132782046 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.14147698 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108672387 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121214161 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095205894 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150782315 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110839816 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128276621 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092262764 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137107189 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136287791 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.09405673 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127934974 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113469403 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138905212 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102148951 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142424219 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.13362894 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091395538 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123897315 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096146328 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135314659 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.09768663 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130936942 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.126308751 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.095728842 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123948375 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.1035428 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127413601 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095334451 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142711154 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131761944 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.10120473 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.1221251 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.095699306 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.123022368 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114060725 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.166910311 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091730614 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129473724 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129498783 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.102882528 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121903308 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110183886 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13229444 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091603472 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125507849 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091385012 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.12151925 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106529844 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.132169526 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.123989289 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.102568666 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125423836 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105270457 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.126697113 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107678771 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121737517 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.12884921 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.091869493 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.122386289 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.09119273 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144343771 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.093762455 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163550555 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.126046294 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.093679973 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.131097849 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101333933 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129010958 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093210677 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138308411 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102653855 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125502892 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.131414318 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.096749626 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.126506797 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.111062656 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124629857 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094530607 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.12366607 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099034372 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.125760103 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093525847 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135821525 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.122315333 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.096761092 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.140156449 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.092124606 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.124321908 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.098801399 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127133662 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092139205 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135360925 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.127620639 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.092993703 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.132168181 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.092396577 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125253223 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.102356527 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127328841 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.09128451 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.128557233 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.128355235 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.094066643 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.123338082 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.096713638 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.12548813 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103749577 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128871074 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.099055166 seconds)
  done (took 14.85396639 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.227800068 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.2159174 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.248957283 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.26724932 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.13597201 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.145317893 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.211962536 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.124531056 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123780346 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160825481 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.162980908 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.188689119 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.170863535 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180679373 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.110698381 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.121858669 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.141623078 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.134797717 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215107582 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.289095948 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.142972103 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.101061818 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.16204455 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.161703104 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137569347 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.10264458 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.140275711 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.133087352 seconds)
  done (took 5.790888154 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.106627476 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156851086 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098385871 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144411675 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148637609 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093107827 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128249583 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094716323 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.13492914 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136724468 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093065103 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129493769 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100613445 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132126072 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124750809 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102694974 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133201106 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095157917 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126337244 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.09835098 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.130310727 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.131948858 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.09778694 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.123211229 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.100152064 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122086029 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086438515 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144657684 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124199402 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115336299 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122310348 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099877441 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.13469556 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093485439 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124118167 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094725786 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125957445 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094816964 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124074857 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091689729 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121568346 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07800111 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122130408 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135862508 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.098605759 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.109750246 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.098891555 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128735436 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.098653864 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.12103636 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095842925 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126225204 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096634107 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130624889 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098307623 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.129156699 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096837104 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116443285 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099727077 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125876186 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084710111 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122088727 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098064962 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118633284 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101343429 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128482318 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09193845 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125481248 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097353234 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129139311 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096523187 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.125797968 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.120878336 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.094760331 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.128839311 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.097308942 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.126696518 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.092478407 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123263749 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094260829 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.106280637 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.0934524 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074604593 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126331806 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091908751 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122474196 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.125785495 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.099824856 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138915428 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094781151 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.130778228 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094514521 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122335325 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.126631742 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.082920427 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.09638878 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.137653272 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.14257487 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093398608 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122470373 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106761363 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.128436526 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122198732 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.076910633 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.100491315 seconds)
  done (took 12.980476394 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.127109355 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154135791 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095166648 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.141906641 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155958045 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157385788 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100256091 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131596113 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.094248388 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142401297 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.09452113 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131916872 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097229221 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137098743 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156878373 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103325169 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125538715 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106939805 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132235738 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170089749 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112595029 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142341777 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.139455546 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.094244275 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129329132 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110162251 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161568485 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.13895957 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.107233743 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.1426258 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107668602 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.162255011 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143559137 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.097796877 seconds)
  done (took 5.484868393 seconds)
done (took 49.828382422 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.210498281 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.424551193 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.198233347 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.10052776 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.200441802 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.203733366 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.210530458 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.201771104 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.745614135 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.200112001 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.466185861 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.887516906 seconds)
done (took 60.183519519 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.271193367 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.330630014 seconds)
    (2/2) benchmarking "String"...
    done (took 1.466604322 seconds)
  done (took 3.929689307 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.566647946 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.162169795 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.459350768 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.199409809 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.201022168 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.488496282 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.887068712 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.561107419 seconds)
  done (took 28.089538438 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.200907133 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.621535755 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.068708942 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.062175987 seconds)
  done (took 19.086464546 seconds)
done (took 61.074162913 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.207274727 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.250656781 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.223478865 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.184228506 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.314907637 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.222580314 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.524642563 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.207167395 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.232571521 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.182199408 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.221531447 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.220779535 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.218882098 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.52095317 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.206887173 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.206612027 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.272978995 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.697328146 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.612383711 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.212692895 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.208389036 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.222452805 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.217493382 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.21818789 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.225167538 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.207342342 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.2259534 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.201071348 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.864861869 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.210527541 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.211456095 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.694723467 seconds)
  done (took 190.781954719 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.20265803 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.26387263 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.333882878 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.234833922 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.797561427 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.399270258 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.336716 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.850272022 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.221468617 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.208089228 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.47039883 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.208602583 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.543725106 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.19345169 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.211804961 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.308919126 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.493999197 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.561303821 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.223423001 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.474750639 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.227282279 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.629103829 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.557006747 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.459156671 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.211967701 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.269893231 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.213256665 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.224811026 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.416948914 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.428127807 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.221331153 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.237629965 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.849318744 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.062407792 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.217645066 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.227382844 seconds)
  done (took 151.124077654 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.51615253 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.204056789 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.203988045 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.203714193 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.237615607 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.205132623 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.790779999 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.80635981 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.705872289 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.613509954 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.268621781 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.509280597 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.207580666 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299994036 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.217639219 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.204514858 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.219781213 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.248500892 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.205849807 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.206808486 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.800782885 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.223259195 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.264440182 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.216270025 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.205425594 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.238234566 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.597967117 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.206608564 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.239200179 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.531068486 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.255836017 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.206432767 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.584166165 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.942525264 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.321199683 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.209099922 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.239437575 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.206248849 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.479901063 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.207568597 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.206120572 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.209061631 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.869561053 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.21215833 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.790136221 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.212239093 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.153364752 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.206815155 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.207678184 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.680287722 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.842968726 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.231119705 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.207258202 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.209361772 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.207491375 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.208314917 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.241351161 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.643901834 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.31162488 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.223040878 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.21139463 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.240098957 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.207311345 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.229685511 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.211797685 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.715859392 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.285146732 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.427365453 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.804649137 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.211684185 seconds)
    (70/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.208598984 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.305267997 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.330591218 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.209105423 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.209938508 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.209591039 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.209857748 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.209341433 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.318498208 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.210492241 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.636731074 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.215588555 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.210700661 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.270031815 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.30601459 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.21132158 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.579525271 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.213380288 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.209767107 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.937760309 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.304588036 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.209921994 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.209823678 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.210465585 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.21161825 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.640504303 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.209350603 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.808447046 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.450266827 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.21501271 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.689034392 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.215743562 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.659025051 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.776860758 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.874990843 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.215222521 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.320684547 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.215510734 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.211659305 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.210931632 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.239936284 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.22818836 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.269227194 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.211677355 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.609703883 seconds)
  done (took 348.128085292 seconds)
done (took 692.683405236 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.898885254 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.846856488 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.989635748 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.866368706 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.84837627 seconds)
  done (took 10.592774391 seconds)
done (took 11.732909572 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.401796162 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.401547215 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.273308512 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.40395376 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.241429704 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.419965248 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.381782909 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.231708463 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.316214383 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.295687385 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.314580937 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.265872808 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.241359284 seconds)
  done (took 18.331914989 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.528741328 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.515144089 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.277329371 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.542733303 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.253170527 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.529343051 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.415133667 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.422873066 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.425660567 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.244627818 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.22679149 seconds)
  done (took 16.526044047 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.557057261 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.524459978 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.278424169 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.528391941 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.254670367 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.524639458 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.409105634 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.433381396 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.425691596 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246642869 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.225623524 seconds)
  done (took 16.552404482 seconds)
done (took 52.551603588 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.222091645 seconds)
  done (took 2.366815928 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.25872917 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.421289617 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.242869384 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.227920648 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.22279822 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.223680296 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.22663122 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.222205634 seconds)
  done (took 11.191461352 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.220331992 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.220269683 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.222562697 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.223340153 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.219657103 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.220671859 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.223390221 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.219005686 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.223667425 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.222022098 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.220831002 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.223337725 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.223083534 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.223051254 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.220944115 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.221047189 seconds)
  done (took 20.693586006 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.222553675 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.219874531 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.220810141 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.220682387 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.220318468 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.220282905 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.222115856 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.220587724 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.221482988 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.221049626 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.221230861 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.22119258 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.22128297 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.220869003 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.22180866 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.221899396 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.220675847 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.221312882 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.226154329 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.21990636 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.222407519 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.221728727 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.222182625 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.221150585 seconds)
  done (took 30.461486648 seconds)
done (took 65.855632809 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.365177765 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.911780731 seconds)
  done (took 9.4250979 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.22393664 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.223812879 seconds)
  done (took 3.596871725 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.225822913 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.224679235 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.224076406 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.224806181 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.225576305 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.224063761 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.22432201 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.224706868 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.22593335 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.225058359 seconds)
  done (took 13.397267214 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.224904516 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.225228535 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.223342107 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.225813421 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.224537125 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.222463179 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.224916029 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.224523627 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.225105061 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.222410333 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.226233656 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.224252791 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.224908891 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.223774652 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.224845693 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.223581455 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.223035731 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.223689451 seconds)
  done (took 23.187144578 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.225247103 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.225788882 seconds)
  done (took 3.601183252 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.223571659 seconds)
    (2/7) benchmarking "second"...
    done (took 1.22202442 seconds)
    (3/7) benchmarking "month"...
    done (took 1.224225895 seconds)
    (4/7) benchmarking "year"...
    done (took 1.224297874 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.223975968 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.223761019 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.223605954 seconds)
  done (took 9.714491202 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.227927747 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.417762171 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.486645708 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.860793989 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.228182926 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.229709111 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.085638261 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.231112248 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.233025529 seconds)
  done (took 14.150603872 seconds)
done (took 78.218150762 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.265115725 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.238110181 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.422718066 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.231071078 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.240530951 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.563833394 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.229093858 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.350529953 seconds)
done (took 37.689759992 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.238922897 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.98529766 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.977329136 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.221296012 seconds)
  done (took 11.335007686 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.210838007 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.193125854 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.208588083 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.289104513 seconds)
  done (took 18.053536107 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.285118112 seconds)
    (2/2) benchmarking "read"...
    done (took 1.557819494 seconds)
  done (took 4.993164207 seconds)
done (took 41.76837305 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229691624 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.229352221 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.22651248 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.225349211 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.228613793 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.225122333 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.227157869 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.229428751 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.225208465 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.228953367 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.228901433 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.229022044 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.229714829 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.228498933 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22960446 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.227262322 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22641097 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230962532 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.225962331 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226705658 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227008439 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229570725 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.226674901 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.227833205 seconds)
  done (took 30.622068296 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.232115199 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.228089626 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.229873601 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.230378078 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.226796584 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.230739275 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.229214857 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.226094091 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.230035747 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.229691392 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229959658 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.22842165 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.229980919 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.228429744 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230214328 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.22833527 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.230790574 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228889803 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231013981 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.227215506 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.230884084 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228722534 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.228096694 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230199046 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.227783798 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.228132474 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.231053786 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.229704617 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.230875778 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.231437614 seconds)
  done (took 38.037198626 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.237122645 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.240499535 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.232050095 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.231262121 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.231460857 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.231785683 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.232045848 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.231081512 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.232589456 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.233062868 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.230473635 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.23102494 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.231584236 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.231305629 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.231491053 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.231303667 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.231064633 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.23356655 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.23112282 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.230480503 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.230593423 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.231759271 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.231472869 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.231492474 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.231284796 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.234920605 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.227858789 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.228013837 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.227482066 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.227722821 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.22814539 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.229089494 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.228944004 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.228063997 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.229570556 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.227469978 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.232101883 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.23569327 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.228043841 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.22800764 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.2283458 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.228126 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.230478996 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.227983166 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.227614017 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.228884832 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.229191776 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.229025357 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.229759508 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.228653034 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.231704118 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.22891995 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.230039796 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.22891343 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.228666322 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.229122096 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.228468066 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.228344713 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.228408089 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.228709699 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.227931734 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.228137397 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.228185767 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.228467698 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.229166731 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.229478097 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.229975913 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.22821943 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.228577377 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.228716419 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.228126284 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.227929216 seconds)
  done (took 89.723738986 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.230006366 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.22790782 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.225719767 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.225467923 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.225235787 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.228215924 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.225189979 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228033569 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226161783 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.227905823 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22952561 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.231479581 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225876351 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.230180901 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228913128 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.226136907 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.228401993 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226956167 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.228169226 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.228965257 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228674108 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.226652892 seconds)
  done (took 28.162012363 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227389415 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.230833377 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.22687385 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.229794959 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.226285693 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.22861101 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.228434414 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.23010845 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229952891 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226837333 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226411617 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229975598 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.228231895 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226821236 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226497733 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.228446587 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230384619 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.22905623 seconds)
  done (took 23.263312781 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.227759465 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.227733881 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.228836906 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.227388326 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.229068251 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.230353094 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229320515 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.231452909 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.231381972 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.228091712 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.229606406 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231028098 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.231195542 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228087248 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230774766 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.229737496 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.231216301 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227742849 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231570266 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.229942691 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.230342138 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.231209512 seconds)
  done (took 28.206875424 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232062765 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.231697864 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.229999578 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.229900374 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.229537034 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.231575609 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.231765512 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.230234059 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.232623032 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.231987108 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230696871 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.231104429 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.231688663 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.230072651 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.229507485 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229731241 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.233320163 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.231164497 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232537407 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.229650561 seconds)
  done (took 25.775097485 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.233188726 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.234557413 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.233209617 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.233810428 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.233858467 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.233562543 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.233810826 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.233704839 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.234033434 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.233932466 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.232341647 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.234606375 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.234651687 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.234786261 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.234668747 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.235020497 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.234501479 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.235195887 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.234957709 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.234570466 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.234942415 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.234048698 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.234139873 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.234828567 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.234034367 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.235542216 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.233971085 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.235041069 seconds)
  done (took 35.715716686 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.235026615 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.235256998 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.231489896 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.232899583 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.232655954 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.232130166 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.232689965 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.233102446 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.236972822 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.233206794 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.234970552 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.235214964 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.235821099 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.235166784 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.235652999 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.234915799 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237377336 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.233700407 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.233290109 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23372072 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.23700709 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2367244 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.235985111 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.233528798 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233864109 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.23645903 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.234325618 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.234549345 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.236512192 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.235537585 seconds)
  done (took 38.197471244 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.255617789 seconds)
    (2/2) benchmarking "in"...
    done (took 1.255498342 seconds)
  done (took 3.670480056 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.234834694 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237678508 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.236285045 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.235848147 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.234528538 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.23819101 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.236762197 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.234988722 seconds)
  done (took 11.048922286 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.236877022 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.239061117 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.237527174 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.238010176 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.237268838 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.237099397 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.245027071 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.256667732 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.23748656 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.239679663 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.244382714 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.245865103 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.24138137 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.237096849 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.238741827 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.240085726 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.238090473 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.237813974 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.238993453 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.2383763 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.23842317 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.241385535 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.240308275 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.235678384 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.240369452 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.250202305 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.262424661 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.239994522 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.239156666 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.24334851 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.239037652 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.238664797 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.2393473 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.239564464 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.240146099 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.239755533 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.249823736 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.259682338 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.245317423 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.25932007 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.24043667 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.238135778 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.241928985 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.242238164 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.241618076 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.239717027 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.240516744 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.238291516 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.239846347 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.244490205 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.244963647 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240663514 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.238936691 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245329381 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.242830009 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.249384316 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.259944568 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.244318093 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.249948517 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.250632375 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.272848611 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.264877346 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.242847259 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.241517121 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25122207 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.265381269 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.24918941 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.258284717 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.240461023 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.241883341 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.249916455 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.274799712 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.267314808 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.242292341 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.241719924 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.24294096 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.244389652 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.243114884 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250542471 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.264358178 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.242294037 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243444899 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.252966635 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.265016597 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.243242945 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.243027923 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.24293524 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.242358168 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.243894446 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.254111454 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.262391683 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.244187391 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.243096885 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.243634607 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.244566324 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.243277515 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.242761451 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.244435903 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.241630278 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.243489391 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244697948 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.247459684 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.252472084 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.244439524 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.243260269 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.250933793 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.264396782 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.245075949 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.251663466 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.246020706 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.244274822 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.247345744 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.249421682 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.242637586 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.247960878 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.252589087 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.245459556 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.246410273 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.244607725 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.245654277 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.254941199 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.270697897 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.245619554 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.245992062 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.25049458 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.256442488 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.246367438 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.249180911 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.246780017 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.243804671 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.244290743 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.246516643 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.246772368 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.247396624 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245529011 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.246596026 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.243674106 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.247001837 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.246986083 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.247509755 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.24895315 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.247695466 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.248467795 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.249501516 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.24557634 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.24913588 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.251545129 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.266311319 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.249111663 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.249035544 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.244257476 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.248530732 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.248973437 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.248525626 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.247340634 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.248743648 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.247306152 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.248023049 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.248648527 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.248503067 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.248698888 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.247814238 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.251793149 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.249961444 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.251251525 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.247639281 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.246207952 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.248769402 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.24871814 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.247719281 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.249067227 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.24829116 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.252300497 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.255256594 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.250750916 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.248688367 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.250861706 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.248984841 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.249426752 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248445136 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.253793484 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.256941267 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.249736314 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.256058376 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.268344444 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249453383 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.25056033 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.250028025 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.25043662 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249828385 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.253403659 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.257885608 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.261825916 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.27562809 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.251544131 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.25438375 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.251945841 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.253304851 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.254251804 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.250778975 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.250798991 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.250533476 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250280207 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.251060194 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.252501782 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.251031465 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.248926336 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.251961236 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.25179261 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.251566042 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.251397173 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.251250512 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.25151976 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.249497536 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.251674285 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251961824 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.251234619 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.249474918 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.250687783 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.252278923 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.252542686 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.252067191 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.25739257 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.250019966 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.253816723 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.253194295 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.251980171 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.253161473 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.252982358 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254936183 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.251895169 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.259489205 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.270804215 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.253839144 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259703126 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.270569503 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.251832765 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.255479011 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.253202988 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.248406808 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.257351164 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.259989278 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.252944479 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.253304282 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.253486933 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.253516879 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253448452 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.260310604 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.271496032 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.254177923 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.253733101 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.25459373 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.251271547 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.253885911 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.254896898 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.254487177 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.256261701 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254247456 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.254455546 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.255459166 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.255994438 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.25466721 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.254032691 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.256581997 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.263158863 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.257872932 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.254139151 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.256222206 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.255072867 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.257990292 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.254171015 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.255324679 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.254812802 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.268263466 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.278790368 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.261524495 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.274195472 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.254971808 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.260477452 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.275286553 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.258892796 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.254460549 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.257034213 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.254495393 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.256258615 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.252577363 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.255557781 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.256447577 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.257304868 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.256401555 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.259980581 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.255860857 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.255031142 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.257059186 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.255967993 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.257164556 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.255748599 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.256699795 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.258710491 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258967408 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.256171549 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.258099014 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.264211964 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.277868496 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.259454713 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.256426593 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.257701768 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.256849069 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.259086382 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.25688432 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.261938182 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.265893733 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.260910813 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.265515837 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.25995798 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.268393536 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.25904449 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.261635301 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.266213621 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.255467085 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.256379701 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.258705965 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.258457054 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.264700296 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.276868186 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.260450126 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.262670117 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259400832 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.259506639 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.259307285 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.258762304 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.259653055 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.258070856 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.26756149 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.279602554 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.263259421 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261387083 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.256687698 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.25904218 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.260493056 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.258461089 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.26363105 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.260372188 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.260641108 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.260325794 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.260954634 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.260067043 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.260193563 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.261005785 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.258243987 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.260207351 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.268638324 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.28162639 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.264460842 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.260908666 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.267427903 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.279973286 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.267388224 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.278916055 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.261251866 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.260824538 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.261389504 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.263495927 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.261129451 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.261323847 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.261279939 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.262029831 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.265809931 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.260945865 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.263333924 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.263156815 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.261765124 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.261484569 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272552832 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.28567473 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.263369745 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.265905334 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.259518584 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.263738769 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.265258762 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.262607365 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.260815801 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.265945336 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.272612405 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.269807023 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.262795872 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.263112872 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.26287154 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.263568407 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.262443291 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.263192901 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.262653511 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.262658609 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.26332782 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.262821395 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.267078213 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.263546996 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.263924027 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.264075728 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.266219528 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.27336802 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.28277008 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.264953667 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.263482311 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.265278093 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.264080413 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.26474724 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.264404994 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.263980515 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.264618362 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.265512047 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270125712 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.270461887 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.268075333 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.263212944 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.264693636 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.265061985 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.264141559 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.264117572 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.264644721 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.264723196 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.266170554 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.26485445 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.265419968 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.263726656 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.264415401 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.265363631 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265316986 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.267511897 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.272587738 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.265988759 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.263208643 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.265492391 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.26582527 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.265018116 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.266093703 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.275514818 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.289377523 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.275409712 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.273629184 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.270245846 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.266284504 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.268752896 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.273100384 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.26551335 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.266781663 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.265161027 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.266874668 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.266702446 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.269099214 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.26487427 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.273104873 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.285355039 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.267012368 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.275639687 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.286502428 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.266969226 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.268084327 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.270252034 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.267391211 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.264224785 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.267811706 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.267924908 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274842703 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.287902656 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.268987726 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.270665692 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.267877126 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.270212641 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.271413491 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.269296683 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.268763888 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.266158359 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.270008033 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.268138456 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.26968333 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.267254537 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.269619842 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.26783954 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.271180204 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.275619388 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.26769786 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.271013443 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.270410441 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.270429773 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.269515113 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.268839137 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.266970014 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.267283296 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.269034252 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.269152132 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.269721037 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.270883993 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.268853806 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.270004875 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.270974617 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268850708 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.272775745 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.279378687 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.277621025 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.267669014 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.270722539 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.269963368 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.272330154 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268190638 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.269178114 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.270556872 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.271153017 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.270288008 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.270323266 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.271028536 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.273685626 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.286899648 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.290890624 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.271409834 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.269917858 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.273475563 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.270270858 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.268665203 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.271167636 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.273563163 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.273841567 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.279103433 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.270825975 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.277227598 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.2901385 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.272984487 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.275171387 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.275428132 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.279320673 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.273947496 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.271836289 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.271384702 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.277146405 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.288563836 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.273468729 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.282052985 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.300806243 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.292244441 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.274272222 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.273103516 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.272629562 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.27494874 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.27404791 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.273163847 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.273745079 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.273405942 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.273647005 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.273869759 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.279333392 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.273407826 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.274052467 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.274216867 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.273298236 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.274516697 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.270748699 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.274144438 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.274660646 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.274066449 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.274263007 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.273803229 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.275363786 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.28697477 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.300442849 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.273945129 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.27262433 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.273393309 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.277394095 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.277386335 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.285021845 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.281280029 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.27534277 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.27388214 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.275388801 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274542701 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.27467019 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.275990584 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.274220414 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.273812572 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.271576184 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.287043711 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.300725915 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.280094005 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.275178004 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.275390856 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.276210725 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276564692 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.276196467 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.276261045 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.275960511 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.277253995 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.279099777 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.275588439 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.275949308 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.279034837 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.284039593 seconds)
  done (took 752.070964198 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.274047507 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273136192 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.274817985 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.274073304 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273712078 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273916636 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274205417 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.27477327 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.273611086 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.275249765 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.275400916 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27520861 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.275443759 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.275604164 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27432783 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.274761838 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.274522275 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.274205609 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.274053298 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275569038 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.2753216 seconds)
  done (took 27.962747435 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.277844969 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.27478184 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.275361194 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.278294131 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.276684203 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.278853317 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.275987044 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278666339 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.27823583 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276892666 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.278411092 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27906672 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.276023949 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.275760958 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276248962 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.278256393 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.278113139 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.276375482 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.279603709 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.276466767 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.279031312 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.277072802 seconds)
  done (took 29.298706038 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.277413768 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.279385252 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.278475483 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.276488898 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.278559079 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.276707321 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.278938442 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.279417842 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.279142337 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.279778821 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.278335731 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.279861104 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.285754648 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.283944822 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.280894949 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.278482225 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.424221844 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.280352235 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.277959502 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.279516739 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.276294737 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.285219048 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.297450036 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.277628557 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.278703162 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.280130473 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.281125209 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.27969344 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.280414962 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.281899393 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.284882325 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.279840165 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.279995441 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.282601488 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.279824711 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.281373529 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.284647478 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.281881599 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.278941837 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.281495992 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.290848617 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.301042433 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.282045393 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.288067505 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.302335459 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.282460971 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.28524351 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.288818785 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.279486881 seconds)
  done (took 64.168225093 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.281971279 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.283811904 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.279965909 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.282063788 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.283438527 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.282532288 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.282283558 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.283029447 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.279753559 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.279079256 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.283327404 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.281068655 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.280685204 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.281502682 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.283252803 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.281204287 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.280271881 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.279977978 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.28025454 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.281648335 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.281200997 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.283477236 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.28356299 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.280506302 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.283212121 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.280589208 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.281853607 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.281938271 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.281132161 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.280953835 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.282302492 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.283124544 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.284419847 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.281116671 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.280937927 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.283906938 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.284801575 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.279905793 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.283739572 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.281523047 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.283908326 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.282823682 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.284082379 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.284564356 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.281476894 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.281343685 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.28274018 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.282180086 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.282338733 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.285364019 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.28524711 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.285065346 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.285940654 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.282548487 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.285062272 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.285540883 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.282282807 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.282425654 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.28511892 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.282945086 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.283347551 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.286107612 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.283546378 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.286701203 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.286406237 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.284443777 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.284551118 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.286450178 seconds)
  done (took 88.433312872 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284873513 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.286427614 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.285185581 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.285659853 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.285097247 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.285297351 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.286080485 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.286908016 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.286370444 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.286308727 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.285092419 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.286067595 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.28621117 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.287126977 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.28700845 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.285783949 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.286784992 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.286635185 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.28708091 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.28543274 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.286030902 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.286681389 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.287847207 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.286402497 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.28911136 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.28705035 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.287336183 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.286818138 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288366362 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.286986855 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.287844831 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.286583868 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.287482549 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.288212374 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.28920202 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.287145262 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.288014497 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287669348 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.288586693 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.288969957 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.287627879 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.287667848 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.288089775 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.288087263 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.287254116 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.287808827 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.287858439 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.288940197 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.288376599 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.288575178 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.289350622 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.288927855 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289152955 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.289897661 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.289501344 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.289156573 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.289915078 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.288471981 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.287356027 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.289862163 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.289956081 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.289402129 seconds)
  done (took 81.032231266 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.288877537 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.290035243 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.287115555 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.28666096 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.290728779 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.286715485 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.289000482 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.290654118 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.289731203 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.289133433 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289980566 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.287251534 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288031782 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290563828 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.287916473 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28907495 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.287392247 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.288323158 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.28997353 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.289056271 seconds)
  done (took 26.984210732 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.287885296 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.292100923 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.288224987 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.288610901 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.290702385 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.288028607 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.292473136 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291590205 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288783757 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291882942 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.292276027 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.290761581 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288830033 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.289887301 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.2926375 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.288921681 seconds)
  done (took 21.852929228 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.290295679 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.29230097 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.291892268 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.291440986 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.290792059 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.290062087 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.292781096 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.289137557 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.290542161 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.291851124 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.293641247 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.293066341 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.292001723 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.29212781 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.290196698 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.293700774 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.291155828 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.289407969 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.29259827 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.292943881 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.291864655 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.289705666 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.293615097 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.293313307 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.290354603 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.291647578 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.291197054 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.2913899 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.291058767 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.294300479 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.290814083 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.292069036 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.291030934 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.292055795 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.293041105 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.291953978 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.29378982 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.294278985 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.293977406 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.294497834 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.293647579 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.291562123 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.294092353 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.294993248 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.291058874 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.295129108 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.292464737 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.292865342 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.292428816 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.292408278 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.294988725 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.294885306 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.295267196 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.29426848 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.294799555 seconds)
  done (took 72.295400045 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.295455194 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.295717421 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.293752889 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.295407506 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.295000756 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.291849388 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.296797956 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.295210347 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.292870848 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.296960203 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.294896085 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.298165969 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293207051 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.296571134 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.294413267 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.296744948 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.293952092 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.293722543 seconds)
  done (took 24.524406285 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.294557279 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.29614115 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.295874653 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.294392601 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.294274154 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.296558473 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.295668042 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.297000428 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296752975 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.294654318 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294538686 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.297091063 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29773757 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.298336694 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.294987905 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295734698 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.298012352 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.298069163 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.294648218 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.295530319 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.298314039 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.297750275 seconds)
  done (took 29.730057842 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.296684828 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.296708266 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.296063865 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.314278055 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.315028095 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.321011759 seconds)
  done (took 9.055137794 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304680881 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297914952 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.29566515 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29978795 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299509466 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295078333 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296094737 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296703157 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297746943 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297155913 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296588593 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298321796 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298750759 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296916476 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298646425 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297886028 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296622567 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297116374 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297476473 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299453879 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29709017 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300707896 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29647294 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297061705 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296791407 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297692487 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299969962 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296906157 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296781231 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300457079 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29970437 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297970658 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301790684 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297731957 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301513638 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300466835 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298118713 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300445976 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299229636 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297269381 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.300340219 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300679039 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300320151 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299131767 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30043064 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298960866 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300324697 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297826975 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297679423 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302252711 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301530944 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299149477 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300832101 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301241117 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301436745 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302405813 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299447413 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299337317 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301199811 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300393245 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2995694 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302520689 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300410879 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300246241 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302645097 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300148976 seconds)
  done (took 86.984101689 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299033861 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.299357498 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300295778 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300466081 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300222976 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301300684 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300347941 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299817412 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300058206 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29979827 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30343197 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300996887 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300255575 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300622495 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299971325 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300870042 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300055418 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30117594 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300438232 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303842316 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300655663 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300350892 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301715383 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301598148 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300708568 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303287188 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300345938 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301754736 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301653658 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302568594 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301508607 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302346068 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301680893 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.3012618 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30134425 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302346846 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300375116 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302454955 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302970689 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304829498 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302168579 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304866873 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303009359 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302054339 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303173335 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302410736 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302654533 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302851156 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303031278 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304787341 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302903952 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303355527 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303794006 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302975456 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303601316 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303132266 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30396795 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30335118 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302561187 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306453663 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303687969 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304011718 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307202764 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304134625 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304352455 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303897346 seconds)
  done (took 87.163781387 seconds)
done (took 1755.128403129 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.389989309 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.322069458 seconds)
  done (took 13.934703873 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.469103544 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.420575998 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.304520572 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.334005807 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.305767043 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.307593948 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.308547285 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.304173566 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.304587363 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.304823562 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.304180723 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.492405072 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.299769846 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.306036922 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.305286585 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.398476397 seconds)
  done (took 42.705296944 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.33480584 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.31297912 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.432258217 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.336395051 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.334348405 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.508147388 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.371728764 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.311568936 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.495113154 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.360582114 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.046601636 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.340398123 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.310038325 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.482827242 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.329847719 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.50651149 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.571683077 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.962114708 seconds)
  done (took 30.574033548 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.788260869 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.332472017 seconds)
  done (took 9.34487281 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.334679406 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.33364623 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.346492455 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.331342656 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.360990943 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.333087126 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.352186699 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.359053751 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.356342428 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.320374137 seconds)
  done (took 64.668360154 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.331260915 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.310574175 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.311668887 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.309078653 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.301231032 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.302800156 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.311188487 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.316468278 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.237683391 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.451636354 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.332084542 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.319247021 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.331091779 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.312824581 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.309242555 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.348507235 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.464300406 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.33061776 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.308597259 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.317676941 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.31123137 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.408508082 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.356170636 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.310065559 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.44585851 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.258726812 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.322770103 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.31921417 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.437049395 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.331090337 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.311666548 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.311964286 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.314665792 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.889482586 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.827938371 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.337015407 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.33810349 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.320868664 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.311488553 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.430226852 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.334188335 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.319705762 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.305317525 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.82052127 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.469294171 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.432296879 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.604331789 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.313651424 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.314761828 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.377575676 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.319838419 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.314851132 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.343300549 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.088714074 seconds)
  done (took 111.038997824 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.33431026 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.79585554 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.477691167 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.326187068 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.153105877 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.138604896 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.324095393 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.612560422 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.346743045 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.307577804 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.657654155 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.836363001 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.328676083 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.345021712 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.638328887 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.383593003 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.307217354 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.239030918 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.325914465 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.306394344 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.730195034 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.331580022 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.327651206 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.45731968 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.349848399 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.790886264 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.952109975 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.844264284 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.328679375 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.308246108 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.809082694 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.336399441 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.321333728 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.310498273 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.58920693 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.705743089 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.701677828 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.335598013 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.337818948 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.313018546 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.333124076 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.789379534 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.691344483 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.328012321 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.334665193 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.810877955 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.327624155 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.319451578 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.309302921 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.519202596 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.09753222 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.314532811 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.939446243 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.317726949 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.574796519 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.369150528 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.392224289 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.819457427 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.329187967 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.442829524 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.353415915 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.311919238 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.309450453 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.313158652 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.312790224 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.67751316 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.590501903 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.314126226 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.679077664 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.82069488 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.335591765 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.889191663 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.1778783 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.329417554 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.359942261 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.311903941 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.082545269 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.867651639 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.363223851 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.310843029 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.683013691 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.339443638 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.641533849 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.328119357 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.320102759 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.748209871 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.334499835 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.31688416 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.320327875 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.310978383 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.107335369 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.317476685 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.615052221 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.378163439 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.312663476 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.313882496 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.355742631 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.31286033 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.318146659 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.312165033 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.866090457 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.344473696 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.625332072 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.337133691 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.318126031 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.318573233 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.3135138 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.314539883 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.540639098 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.82970447 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.322588816 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.312458356 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.314425619 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.315763781 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.438491133 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.319094957 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.657890782 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.338776248 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.313421383 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.336479311 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.185319888 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.368061124 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.3139076 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.316180888 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.173870257 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.548708368 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.335222986 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.340742924 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.316025982 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.342424301 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.759873143 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.315068424 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.408854653 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.315866165 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.047590956 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.359826902 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.352167866 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.751770674 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.3255965 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.316478934 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.324838556 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.315130164 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.632040724 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.609503463 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.480038342 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.319429634 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.333744647 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.05819843 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.386076608 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.458350089 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.337680247 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.324171022 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.516084389 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.504371126 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.316658578 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.862505457 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.317192821 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.537354819 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.321383974 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.638202217 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.839099746 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.34134294 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.32086435 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.052754484 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.025303196 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.123660187 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.318551376 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.65837194 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.334772535 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.772981002 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.317332799 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.316676955 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.920653369 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.322664544 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.332425645 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.317413351 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.318087644 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.387366286 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.494609997 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.074940762 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.32499482 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.816984512 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.378826871 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.321520292 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.331356196 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.319164136 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.673767319 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.343844882 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.322308058 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.334997579 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.320063984 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.317953473 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.827820353 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.29295519 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.326611615 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.473557294 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.980133263 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.34276016 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.320650646 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.046434267 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.537530206 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.908810561 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.374974018 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.666420852 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.352813725 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.36186557 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.137863724 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.410330747 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.872402696 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.347557702 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.320868943 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.960759496 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.345170593 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.377662564 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.320285486 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.32199708 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.893226117 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.344586599 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.323086755 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.777402712 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.320208843 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.584513693 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.329545776 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.324580868 seconds)
  done (took 1111.148887227 seconds)
done (took 1384.635204857 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.322389658 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.321585111 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.312511525 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.330241916 seconds)
  done (took 26.530075755 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.331915611 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.328830019 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.328576636 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.328700577 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.330448258 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.32818718 seconds)
  done (took 9.222057225 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.523100591 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.319741174 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.329648134 seconds)
  done (took 19.418239573 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.562152489 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.686262473 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.728590035 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.683575015 seconds)
  done (took 10.90590415 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.328952182 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.330094693 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.329376555 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.330491398 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.333567991 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.333642916 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.331383786 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.332404273 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.33306913 seconds)
  done (took 13.22631327 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.558624627 seconds)
done (took 86.102945464 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.314781887 seconds)
    (2/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.352968398 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.686058206 seconds)
    (4/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.800473376 seconds)
    (5/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.845423048 seconds)
    (6/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.765921647 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.601811101 seconds)
    (8/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.342069771 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.394536586 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.427297119 seconds)
    (11/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.31152459 seconds)
    (12/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.243388296 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.366479178 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.351774606 seconds)
    (15/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.344998122 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.986933887 seconds)
    (17/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.351946702 seconds)
    (18/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.985572521 seconds)
    (19/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.035671217 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.317518144 seconds)
    (21/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.433801864 seconds)
    (22/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.743579959 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.30662447 seconds)
    (24/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.784900278 seconds)
    (25/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.902321444 seconds)
    (26/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.467274241 seconds)
    (27/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.326733529 seconds)
    (28/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.794170065 seconds)
    (29/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.538008238 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.309021274 seconds)
    (31/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.335667442 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.365900895 seconds)
    (33/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.435955483 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.243835192 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.428190048 seconds)
    (36/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.514306771 seconds)
    (37/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.321527632 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.939995165 seconds)
    (39/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.781233908 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.950256635 seconds)
    (41/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.35338893 seconds)
    (42/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.322341492 seconds)
    (43/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.43312619 seconds)
    (44/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.35449078 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.326381446 seconds)
    (46/309) benchmarking ("sort", Float32, false)...
    done (took 5.346053851 seconds)
    (47/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.706461501 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.402467813 seconds)
    (49/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.956936707 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.313302427 seconds)
    (51/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.132038798 seconds)
    (52/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.360856522 seconds)
    (53/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.325739683 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.746058512 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.272788243 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.439156821 seconds)
    (57/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.985607479 seconds)
    (58/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.351235948 seconds)
    (59/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.425896083 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.606707618 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.838775607 seconds)
    (62/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.760698563 seconds)
    (63/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.317634985 seconds)
    (64/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.959708607 seconds)
    (65/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.3340712 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.453757138 seconds)
    (67/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.432271184 seconds)
    (68/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.679434653 seconds)
    (69/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.799519089 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.327884671 seconds)
    (71/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.611451146 seconds)
    (72/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.359986551 seconds)
    (73/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.065311144 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.835494156 seconds)
    (75/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.271093534 seconds)
    (76/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.671696095 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.33839652 seconds)
    (78/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.309800557 seconds)
    (79/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.330723376 seconds)
    (80/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.338622302 seconds)
    (81/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.41389705 seconds)
    (82/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.414214642 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.791493463 seconds)
    (84/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.355527817 seconds)
    (85/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.224845297 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.539493503 seconds)
    (87/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.34748756 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 5.589666944 seconds)
    (89/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.69764668 seconds)
    (90/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.041013675 seconds)
    (91/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.336815891 seconds)
    (92/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.522822363 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.392201008 seconds)
    (94/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.392376335 seconds)
    (95/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.814283895 seconds)
    (96/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.788595688 seconds)
    (97/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.736507332 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.781978262 seconds)
    (99/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.349105594 seconds)
    (100/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.344713417 seconds)
    (101/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.733479248 seconds)
    (102/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.033022827 seconds)
    (103/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.458708177 seconds)
    (104/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.171785307 seconds)
    (105/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.395427329 seconds)
    (106/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.473679509 seconds)
    (107/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.221608745 seconds)
    (108/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.331687941 seconds)
    (109/309) benchmarking ("sort", Int8, false)...
    done (took 4.35475557 seconds)
    (110/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.972840277 seconds)
    (111/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.160830382 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.551774704 seconds)
    (113/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.140972934 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.421051815 seconds)
    (115/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.311313683 seconds)
    (116/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.364941419 seconds)
    (117/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.891439667 seconds)
    (118/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.884885542 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.341639495 seconds)
    (120/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.457984248 seconds)
    (121/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.660303364 seconds)
    (122/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.422775554 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.947347098 seconds)
    (124/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.616574302 seconds)
    (125/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.909307808 seconds)
    (126/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.203921806 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.696946075 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 1.87472844 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.382062505 seconds)
    (130/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.414089091 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.185012005 seconds)
    (132/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.070705104 seconds)
    (133/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.731732292 seconds)
    (134/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.070171613 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.633061237 seconds)
    (136/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.655482715 seconds)
    (137/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.972762357 seconds)
    (138/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.275902955 seconds)
    (139/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.647924741 seconds)
    (140/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.456691961 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.14277818 seconds)
    (142/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.019514241 seconds)
    (143/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.344637656 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.600241165 seconds)
    (145/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.35936918 seconds)
    (146/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.416213933 seconds)
    (147/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.721508181 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.04256375 seconds)
    (149/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.346864141 seconds)
    (150/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.737932935 seconds)
    (151/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.795660209 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.463791125 seconds)
    (153/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.313954923 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.788792259 seconds)
    (155/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.272102799 seconds)
    (156/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.935029451 seconds)
    (157/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.351914657 seconds)
    (158/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.440937459 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.167371073 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.36268688 seconds)
    (161/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.35104416 seconds)
    (162/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.150682716 seconds)
    (163/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.328716227 seconds)
    (164/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.373562621 seconds)
    (165/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.980995244 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.767828692 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.384883375 seconds)
    (168/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.271402259 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.952044289 seconds)
    (170/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.975664265 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.365353477 seconds)
    (172/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.441949319 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.410997136 seconds)
    (174/309) benchmarking ("sort", BigInt, false)...
    done (took 6.335063791 seconds)
    (175/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.370177418 seconds)
    (176/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.740387193 seconds)
    (177/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.31088768 seconds)
    (178/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.344040977 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.436844216 seconds)
    (180/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.25574044 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.136812792 seconds)
    (182/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.443433951 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.342646075 seconds)
    (184/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.335714061 seconds)
    (185/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.153147544 seconds)
    (186/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.33720988 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.374948416 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.232650438 seconds)
    (189/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.68303073 seconds)
    (190/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.373139783 seconds)
    (191/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.315325538 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.236893563 seconds)
    (193/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.949701687 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.370442653 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.21662088 seconds)
    (196/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.357038553 seconds)
    (197/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.56019907 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.396133084 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.618324539 seconds)
    (200/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.011593577 seconds)
    (201/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.393114538 seconds)
    (202/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.839504817 seconds)
    (203/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.363980193 seconds)
    (204/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.333357877 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.077455435 seconds)
    (206/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.511404151 seconds)
    (207/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.82008759 seconds)
    (208/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.537807236 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.421187025 seconds)
    (210/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.529614275 seconds)
    (211/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.358848098 seconds)
    (212/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.507184761 seconds)
    (213/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.448266967 seconds)
    (214/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.423380912 seconds)
    (215/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.397552188 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.36447405 seconds)
    (217/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.662531869 seconds)
    (218/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.362161153 seconds)
    (219/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.314878944 seconds)
    (220/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.427305301 seconds)
    (221/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.84362879 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.97747894 seconds)
    (223/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.344335869 seconds)
    (224/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.747388778 seconds)
    (225/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.028391527 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.619512696 seconds)
    (227/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.371255953 seconds)
    (228/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.972470596 seconds)
    (229/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.548112125 seconds)
    (230/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.423626781 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.068857595 seconds)
    (232/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.34570115 seconds)
    (233/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.806526552 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.363022804 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.339366487 seconds)
    (236/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.38894508 seconds)
    (237/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.532898111 seconds)
    (238/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.490192571 seconds)
    (239/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.617723277 seconds)
    (240/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.994405302 seconds)
    (241/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.380811683 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.754556619 seconds)
    (243/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.382921316 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.38435163 seconds)
    (245/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.833911351 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.34766566 seconds)
    (247/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.799214087 seconds)
    (248/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.991277756 seconds)
    (249/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.961273501 seconds)
    (250/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.373882182 seconds)
    (251/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.197453829 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.348898727 seconds)
    (253/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.354894994 seconds)
    (254/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.348024334 seconds)
    (255/309) benchmarking ("sort", Float64, false)...
    done (took 5.752487992 seconds)
    (256/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.444326419 seconds)
    (257/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.858731173 seconds)
    (258/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.513220126 seconds)
    (259/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.173494614 seconds)
    (260/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.738326413 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.327827648 seconds)
    (262/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.366261476 seconds)
    (263/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.351036599 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.563220311 seconds)
    (265/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.007778337 seconds)
    (266/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.049712665 seconds)
    (267/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.337355049 seconds)
    (268/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.323216867 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.373028896 seconds)
    (270/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.321513273 seconds)
    (271/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.12003324 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.745661749 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.415441666 seconds)
    (274/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.883793825 seconds)
    (275/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.445945361 seconds)
    (276/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.007871452 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.353358429 seconds)
    (278/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.612588223 seconds)
    (279/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.361587494 seconds)
    (280/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.63180745 seconds)
    (281/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.348465994 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.363724793 seconds)
    (283/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.357687663 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.437707912 seconds)
    (285/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.36843061 seconds)
    (286/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.58861216 seconds)
    (287/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.934858383 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.425144349 seconds)
    (289/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.448479927 seconds)
    (290/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.342255534 seconds)
    (291/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.398659481 seconds)
    (292/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.372777592 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.459060759 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.434139835 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.173967436 seconds)
    (296/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.467123797 seconds)
    (297/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.486365159 seconds)
    (298/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.350273122 seconds)
    (299/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.27493215 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.36294074 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.384009039 seconds)
    (302/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.405975886 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.89274568 seconds)
    (304/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.359956364 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.365674492 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.332126396 seconds)
    (307/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.325733355 seconds)
    (308/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.961925477 seconds)
    (309/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.722264328 seconds)
  done (took 937.816243252 seconds)
done (took 939.060347977 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.377752469 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.374430147 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.355816379 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.377580032 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.467053693 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.380698802 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.365948394 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.357617981 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.40345354 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.40498453 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.355209204 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.379707867 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.357678721 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.356026551 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.355632385 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.371485532 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.526783 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.364316544 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.371971634 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.366264756 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.373141629 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.355238916 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.405557538 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.38163745 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.35967141 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.360358614 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.359964292 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.376274428 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.467063867 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.360451524 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.360006347 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.367926742 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.528093341 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.362419871 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.350876485 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.376226112 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.367753546 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.366982581 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.36149636 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.390663493 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.987149868 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.382039249 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.359207079 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.358297203 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.358172677 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.362483828 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.360252347 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.364871258 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.370295884 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.37352821 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.995914754 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.400043381 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.360589969 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.358518535 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.369852534 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.358587208 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.36267934 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377865404 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.379029877 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.376940778 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.519277692 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.373718587 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.361481567 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.375151084 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.367642238 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.037311368 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.380992682 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.363816561 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.987002266 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.391448585 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.041156143 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.394210801 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.360590802 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.374020979 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.391209828 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.529198177 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.362461826 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.359773433 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.367266875 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.358041103 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.371836934 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.374020166 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.364058728 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.361149882 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377112145 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.384522649 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.371419129 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.362610966 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.369801292 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.380712121 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.367434123 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.371283292 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.364965828 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.355272313 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.370963171 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.364173066 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.364311364 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.363493178 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.366558122 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.372664376 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.980914048 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.406544378 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.358724875 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.358842264 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.360453948 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.376099737 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.98071441 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.387946341 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.383700333 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.409874133 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.364253618 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.519419716 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.372733726 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.381184486 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.371583724 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.366662804 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.357524882 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.523978828 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.007723336 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.402683196 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.365218452 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.361103139 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380825571 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.365554279 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.35914972 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.53697735 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.371953438 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.379516105 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.485828732 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.374651817 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.395956673 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.362812443 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.366460718 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.38901889 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381392794 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.394610449 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.367344887 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381579519 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.380956383 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.360551368 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.376667747 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.375092211 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.365081458 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.370435531 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.358918114 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.389298277 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.376478927 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.379212771 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.384995473 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.485554669 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.361408475 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.516174201 seconds)
done (took 232.43658528 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.422181508 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.357869537 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.44466732 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.360888635 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.462658418 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.46354357 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.358416853 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.36039747 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.357725428 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.735380619 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.358147594 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.358770801 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.360918708 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.358453862 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.443073403 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.360595979 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.358419024 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.747510273 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.36104292 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.430708666 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.356410892 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.358047777 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.360999403 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.740708371 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.357937565 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.358407095 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.4310206 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.36207111 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.707376635 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.360665901 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.360812114 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.707805902 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.451399618 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.379939663 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.372812431 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.369295559 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.464260807 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.382985253 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.444108341 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.444849807 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.446870601 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.399300823 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.357764743 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.354994768 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.363604008 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.36313201 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.359658816 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.390011541 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.358837182 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.360649147 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.724349264 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.372413572 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.37041696 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.361091215 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.361702367 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.382801536 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.36071703 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.362737334 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.452880027 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.364882755 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.425486207 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.743160137 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.73788666 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.362844123 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.362273522 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.361601831 seconds)
  done (took 150.370737537 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.429721273 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.436908293 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.481899934 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.383287407 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.412933474 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.484934107 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.384019315 seconds)
  done (took 11.290820924 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.37103768 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.364781055 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.414444661 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.414344087 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.364642504 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.511495635 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.364392835 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.375915173 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.362310609 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.41809592 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.366128233 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.364778508 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.372130472 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.358637197 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.41347597 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.376426983 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.481136531 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.366334518 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.365161616 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.516729085 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.362710356 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.373151015 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.417744314 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.377542631 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.367021899 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.372644596 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.935215967 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.366348245 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.3636881 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.366603312 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.364728336 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.403505489 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.367563593 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.365564474 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.363369057 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.482405203 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.367156618 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.36514702 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.367593941 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.367348439 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.366202824 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.36574193 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.367351825 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.365613635 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.366749538 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.390117488 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.366926795 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.368245407 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.368325872 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.368730382 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.417908034 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.368456794 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.364836037 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.364165169 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.424399211 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.375277698 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.3683275 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.365365685 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.370329795 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.366408438 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.51949555 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.416306921 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.368920645 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.416325937 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.369792152 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.370634259 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.36888221 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.369806696 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.424454055 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.370628338 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.417317072 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.367095273 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.525312136 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.393379868 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.371038791 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.372868783 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.371933023 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.369956782 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.369850254 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.37522564 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.367175038 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.370296179 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.376203151 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.36691354 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.368210485 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.472219139 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.478962134 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.367448924 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.383255337 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.376393486 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.367868014 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.42303674 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.370090014 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.366645638 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.423548441 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.48596763 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.424361214 seconds)
  done (took 156.537165901 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.375509963 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.379884516 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.370727038 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.387601257 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.371324257 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.371336789 seconds)
  done (took 9.540856392 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.37362655 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.373043686 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.371199494 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.370978923 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.370986009 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.371923688 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.372055941 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.372494193 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.376495123 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.372365286 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.37331852 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.373352635 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.373976958 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.372876914 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.372166654 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.373474548 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.371341008 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.371093388 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.371861653 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.372899057 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.477738647 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.372971164 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.373491821 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.374311048 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.378704161 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.373599253 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.379935412 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.374663533 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.373901233 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.38184503 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.39520214 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.374387208 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.375619977 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.380446122 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.379055781 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.375269531 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.378279797 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.375823528 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.370181724 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.376055377 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.375929869 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.373884827 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.374318576 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.376400899 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.378083203 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.379269779 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.380493669 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.380856338 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.374283845 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.376962361 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.3773139 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.374976941 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.374441067 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.3765606 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.377041452 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.397427281 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.380359889 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.375716804 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.376052399 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.376000082 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.378606224 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.377358933 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.378135309 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.379817633 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.373291226 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.376435459 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.377623108 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.380233041 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.376571905 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.376308991 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.378569967 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.372898862 seconds)
  done (took 101.460995753 seconds)
done (took 430.470050062 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.377735525 seconds)
  done (took 7.666513276 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.632999661 seconds)
  done (took 7.923250925 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.737349337 seconds)
  done (took 24.03318434 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.391783995 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.436572877 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.401567767 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.381095374 seconds)
  done (took 26.901369362 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.65386844 seconds)
  done (took 7.943231498 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.38132862 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.368608645 seconds)
  done (took 14.042942903 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.507293713 seconds)
  done (took 7.796991694 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.070169998 seconds)
  done (took 8.368287589 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.371090984 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.401056774 seconds)
  done (took 14.332283505 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.362062096 seconds)
  done (took 7.652012717 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.539882659 seconds)
  done (took 8.830726216 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.372928572 seconds)
  done (took 7.665204238 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.369736297 seconds)
  done (took 7.6612766 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.208199014 seconds)
  done (took 10.498495639 seconds)
done (took 162.601706641 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.370581111 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.377812901 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.379421218 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.369022408 seconds)
  done (took 26.788079733 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.411840797 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.410861839 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.412911619 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.421531507 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.415033747 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.411324284 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.403799069 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.40507728 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.423508476 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.41396079 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.87999721 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.414076208 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.41266605 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.405179973 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.414480692 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.414445346 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.423831444 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.412510467 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.404829283 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.415036953 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.379440659 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.423712482 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.414895313 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.380378577 seconds)
  done (took 35.618756166 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.89891868 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.448905266 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.530932559 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.429308516 seconds)
  done (took 7.59944002 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.430106904 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.433294413 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.443630934 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.484462281 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.512233306 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.442017277 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.407071264 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.399794166 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.386827559 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.433921528 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.508152804 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.447946391 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.521436574 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.379194082 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.562979753 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.379383022 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.379759782 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.435296774 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.482816097 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.497583536 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.379611823 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.432442482 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.435521837 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.450424469 seconds)
  done (took 35.959830946 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.391845818 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.386772183 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.380151257 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.379448107 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.400452393 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.37985176 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.380479047 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.38212132 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.379776554 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.386274666 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.379282667 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.392404104 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.379910287 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.380278593 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.38688896 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.380823923 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.385510858 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.379882985 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.380315571 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.385076745 seconds)
  done (took 28.970195136 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.373625383 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.228221907 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.724399286 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.629451766 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.374276029 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.382196494 seconds)
  done (took 28.006267967 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.459969548 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.635035299 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.388243771 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.773896165 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.867704093 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.400262996 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.382498175 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.652760457 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.018537114 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.005057865 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.452294933 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.456410911 seconds)
  done (took 20.787588455 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.385220264 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.381998026 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.39079363 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.398892146 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.441183586 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.405073612 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.388218206 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.375613794 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.448514793 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.46398788 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.404577213 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.442682305 seconds)
  done (took 38.222650293 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465416171 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.426791427 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.456221822 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278316356 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.1043241 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.59022849 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.28448605 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.818229783 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.381852894 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651775896 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378916916 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474674237 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.636199502 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377865257 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.387010241 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.445986185 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.625573517 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915112942 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380965041 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.655161896 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413172085 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.376904683 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.799391513 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.417960916 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.591245459 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.36190463 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.639297596 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.154864411 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.690960677 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.390590267 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389116918 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.379442086 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654564748 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07559316 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496544159 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390131111 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.264366937 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.928154759 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.360504316 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.666932471 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393505117 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.389982097 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391870377 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3810992 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.313740003 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385348158 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.837856106 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.387431136 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.092064266 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.379822061 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.392751277 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47625172 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.384751726 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.953563057 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.498404106 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.38754108 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.378527751 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387187811 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955131457 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.22654397 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398286037 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.322459683 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.876790566 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.664833478 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062279238 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.502464111 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.385037745 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.38356865 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316468407 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.779854842 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404956192 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518748513 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.406643396 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.043918351 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.178198204 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.410722328 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.340190475 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984142606 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396299741 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.324925488 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.612025946 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.158751091 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320700109 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.33051707 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.316951249 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.164427852 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391695931 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.839094542 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391890673 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.823554975 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.394888895 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401583014 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406220432 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.608082393 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.261831331 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38346654 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.384392706 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525765322 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404497697 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.823599761 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320258865 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.38749749 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.64131212 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.595776732 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388976352 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.455660653 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622930529 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387939767 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.414591392 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.383278757 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.421320108 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.018165666 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.421967485 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.23323233 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410473387 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.159548475 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.198962217 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389483525 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.49380355 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.390682459 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655081707 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.209735684 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.269483606 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452980064 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387481498 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.384573477 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.771490632 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.250444539 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.322709092 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.381801144 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396688261 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.403861039 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.386814941 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.345400089 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.385257007 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397942512 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.171881765 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.610319858 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397731011 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66841127 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321851007 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523332027 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.40234993 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.609451337 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.665135846 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.403846342 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.647719676 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386934418 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.413491576 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.407789229 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405570707 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484195181 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409526848 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.391933075 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.652052606 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.390754091 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.390720005 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.790970792 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.176487453 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390363133 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.392374161 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.267712508 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026759192 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386213545 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.393344196 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.279612241 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.401563467 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455034892 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.39298996 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.397603483 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.405179235 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.421291591 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.392609999 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.399393234 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621721223 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.398584598 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.701702883 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.476572988 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.59609523 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.029303886 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430484754 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.323327668 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.09860869 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.082581614 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390396731 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.588921631 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.390483893 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398073204 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.400598832 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.058146353 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.029408577 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418923074 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.701642152 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.404600038 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.401579422 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.395417424 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390982536 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.403593242 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.286845286 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408830064 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.409667974 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535138012 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.404486355 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.323958999 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.908522689 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.397145162 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.391627071 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.166735285 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425940599 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.704784263 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.894028412 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.654200328 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.238887841 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.402821936 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.898926037 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.437387898 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.391819674 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398079095 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411136024 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.419806381 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411041521 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.402182257 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.717363788 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.851196835 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961069308 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.214281251 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017194933 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413486113 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.407430018 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.295812285 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.842025284 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327923841 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.051282371 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.596011584 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.857966374 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350448044 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601058607 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.668888402 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.264337955 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.409860617 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623267776 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381428323 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.409892003 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412449335 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.604977612 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428060379 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.404667226 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.329584242 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.674143195 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641063188 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394839706 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.499761733 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.84233011 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397921015 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.179468942 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.393658892 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.831816184 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.598255041 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.943510732 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.789678671 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.394928708 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.405091866 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.892797328 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.401528151 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.925426136 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087537975 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.42312597 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.63517599 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335569074 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.407004423 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.406068583 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.391505332 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.922592897 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.431081586 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.659916193 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.406764602 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330043298 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.395103962 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013416021 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.282509509 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.40228775 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396195802 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.225475456 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402628575 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.722127536 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.421412535 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.405358956 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425098201 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.331389951 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331619476 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.090504349 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.399106221 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367081361 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955951707 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.853324469 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.502395458 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418471631 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272978668 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.655255595 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.411549935 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.039374167 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.650488771 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.359866048 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419727499 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.498310809 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399716106 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.387446355 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.279999231 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.634817661 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.276362991 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.62453115 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.503606719 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.298881771 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.396373012 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611208111 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.279608243 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.400414013 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.676670878 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.138224726 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.397428666 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.209171549 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450401909 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.411980231 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.441205302 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.897244194 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406930712 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469192377 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.409190647 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.40966537 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.410456548 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.581715722 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415118085 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410060869 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.413521474 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492530664 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.299378274 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.416683139 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.198309889 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.05156249 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250420366 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.074341035 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440025712 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.400678862 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399142586 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335264503 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548835065 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.927449199 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674552951 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519677035 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.984132359 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423819867 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400130595 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.428381034 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62117674 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675953157 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.27588685 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400649974 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.072304761 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.561854492 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.411881125 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.612819816 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972423933 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039967146 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.529253347 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.401226242 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.856607621 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676619779 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.492592064 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40195776 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.994368131 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.425427767 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.870614359 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.429105027 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402987442 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.580603919 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.411521833 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099358461 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.434597105 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.560061148 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.175024638 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.83736729 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.67045753 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.967017335 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.423973094 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.052987065 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.21123554 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.677653763 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47241536 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.41350498 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.513844796 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547864769 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.400697058 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.308109872 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402061453 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254725433 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.114022289 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.413043489 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.054673613 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.696466662 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.400412342 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.403156005 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434211423 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.41447349 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.627741215 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.189047056 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.630719598 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.415355299 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.408059117 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.397078214 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.056138642 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.44578303 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339214719 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.409140526 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.674087741 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.668740745 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.429713708 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.85776119 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.116818931 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023456631 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.470871746 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427537183 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404996056 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.213355648 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062457578 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.447101906 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99153741 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.075860228 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406331177 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.705293945 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.410792337 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.406465205 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691139165 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.409778046 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.419668104 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.425932487 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.058869404 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.272015346 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.428842077 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.798287763 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.352339633 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.635940668 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.127474644 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344889531 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416079285 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.595622556 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.40854867 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.525827056 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41858474 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.415755909 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424316134 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.147793895 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.69710339 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.414635035 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.408615794 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.398511416 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.429814132 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422592553 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659717886 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413210737 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.081868902 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.757457252 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.665979487 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.422716982 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.395487934 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.411415334 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408546193 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.133220389 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.387358257 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.076383609 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031633563 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.421209047 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.425681781 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.413551083 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.626254082 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620453434 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.420947484 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.429511176 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407468128 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.433681692 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.315718658 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.182181996 seconds)
  done (took 1629.303715508 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.445119247 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.46154446 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.427124491 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.512055342 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.424669169 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.461639178 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.446013645 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.526884966 seconds)
  done (took 53.030844379 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.413358002 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.57109409 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.440817131 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.418228624 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.418478802 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.422884657 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.92492448 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.43087218 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.437298548 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.41864921 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.425793973 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.424789692 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.141266734 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.425812496 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.413546377 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.400199348 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.418795673 seconds)
  done (took 66.879208451 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.421538266 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.86609096 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.454648674 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.42048182 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.992622875 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.428644856 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.859823225 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.454886534 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.411192908 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.804228643 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.095001027 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.425075448 seconds)
  done (took 81.961606683 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.41816336 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.419775063 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.418159474 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.418758104 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.418140164 seconds)
  done (took 8.420374556 seconds)
done (took 2062.836837325 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.657526674 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.199803501 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.132983154 seconds)
  done (took 5.660236758 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.561489133 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.609191222 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.758792729 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.752917047 seconds)
  done (took 8.011079346 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.694627858 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.786264921 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.601694939 seconds)
  done (took 6.410923639 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.983282466 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.425815601 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.566689532 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.414619441 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.421311697 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.419649729 seconds)
  done (took 20.585741988 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.418004853 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.420824418 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.418785977 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.420353084 seconds)
  done (took 7.008521216 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.394784994 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.111462527 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.397716933 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.413879153 seconds)
  done (took 18.647166784 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.163587339 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.177833043 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.162179294 seconds)
  done (took 7.833289873 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.422318135 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.289310442 seconds)
  done (took 10.041858502 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.721724201 seconds)
  done (took 3.050556968 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.550857201 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.745220618 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.572499216 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.531365499 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.616912175 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.803831189 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.296115041 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.821921566 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.499219551 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.912000782 seconds)
  done (took 30.680288043 seconds)
done (took 131.887951767 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.571844148 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.433887018 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.616754279 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.539916992 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.648287118 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.618296471 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.924018234 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.510961248 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.053841695 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.041160162 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.546562156 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.649055537 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.641971152 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.434592535 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.641929164 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.436929853 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.649622166 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.629701183 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.272080584 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.430515947 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.927982611 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.184194866 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.375989662 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.204393909 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.648507862 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.564494492 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.76116779 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.437743668 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.417374053 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.78476625 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.565637287 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.425073226 seconds)
  done (took 197.921368942 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.425884867 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.426242178 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.417675827 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.435631957 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.443784547 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.432571551 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.41920108 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.445330296 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.416921589 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.422436093 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.415981604 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.41744368 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.417299392 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.438692315 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.420895626 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.436794675 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.419342576 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.416994149 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.418418495 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.43739237 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.418389461 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.442056735 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.418465319 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.432754558 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.418310386 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.418416213 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.437053874 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.434925241 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.418540217 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.425205319 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.419416724 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.45382007 seconds)
  done (took 206.9977408 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.429576368 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.420144733 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.420870614 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.419237865 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.422487361 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.420459299 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.421346859 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.43881345 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.440494061 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.435354331 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.420207462 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.420251755 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.421472049 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.444712358 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.42069836 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.419811448 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.428841629 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.421201962 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.421895833 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.421771492 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.420809032 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.419392599 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.425869386 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.422261066 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.424676582 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.42154772 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.421525047 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.439758244 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.438971181 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.421121231 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.421772497 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.421885552 seconds)
  done (took 206.945172171 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.619293699 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.429009301 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.430608849 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.365882721 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.429804937 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.430200026 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.427308685 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.628067269 seconds)
  done (took 15.096851746 seconds)
done (took 628.290261286 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.946162277 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.608708266 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.649617317 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.45691139 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.356756191 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.479033194 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.450263806 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.641783776 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.404660082 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.658628894 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.833362036 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.473254101 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.981710467 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.455970121 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.72492479 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.565486042 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.386882022 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.507118838 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.791283 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.09518169 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.738820697 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.064785613 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.669750066 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.403177296 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.997125809 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.058410219 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.280814913 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.367539424 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.468388279 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.798725856 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.227825557 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.527729885 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.528356947 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.526433152 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.58498766 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.56560613 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.516970974 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.525253126 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.669648884 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.76901219 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.067691547 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.210720021 seconds)
  done (took 98.374857176 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.415156383 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.414649267 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.413333377 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.414683807 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.41495544 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.413807547 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.412793414 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.413917205 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.414366518 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.412883351 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.413437768 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.415300876 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.413748914 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.415434232 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.413686269 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.414308601 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.415036158 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.415831863 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.41460946 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.414083353 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.415447291 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.414597369 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.415284738 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.414493526 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.414617754 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.41507536 seconds)
  done (took 38.116883598 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.434550418 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.699482919 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.866793576 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.438785855 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.432760703 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.438180901 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.521952195 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.438991061 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.436579865 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.436836992 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.611919203 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.436394126 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.471323684 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.912281399 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.444052816 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.434969967 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.434845624 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.435115036 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.715307226 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.452143731 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.545460004 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.43651849 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.522246603 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.453435044 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.460931373 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.436596129 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.440266875 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.968998375 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.464670027 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.613022938 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.322774026 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.527105096 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.919616625 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.913116014 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.325578662 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.446638186 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.437786865 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.620407807 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.445519245 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.436220887 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.522489775 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.439347569 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.891501693 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.087442291 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.466120119 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.436112498 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.988450331 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.649314248 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.718958338 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.452785188 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.915747089 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.448546061 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.438381838 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.438287424 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.713616312 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.446327268 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.444569395 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.007695762 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.471963235 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.522624442 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.43947775 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.438175227 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.723590254 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.445994428 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.711709151 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.447088878 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.446093973 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.45898904 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.893578083 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.449135572 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.10386196 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.467922567 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.438771944 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.616522823 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.721052184 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.034893168 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.471458319 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.729732869 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.944458457 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.55306461 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.450386493 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.956715539 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.555655044 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.451264007 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.441072635 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.440722444 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.440564467 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.484780884 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.523590822 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.037048908 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.124537098 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.037434891 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.560023476 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.46308464 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.439675034 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.007360904 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.470179539 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.441551693 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.892523548 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.114645833 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.469469336 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.449329731 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.107970506 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.471959982 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.530250823 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.454445533 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.902910051 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.449685723 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.488000689 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.440557505 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.447492725 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.465953656 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.528084072 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.453669064 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.442629814 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.077663547 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.655706277 seconds)
  done (took 189.781783415 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.433889731 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.434344062 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.433670584 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.453006986 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.434826472 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.443973943 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.434993831 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.435063516 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.439914757 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.434694213 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.435793484 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.435885188 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.436463526 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.440307796 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.44712463 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.44198119 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.044123587 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.437181434 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.434501007 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.454378141 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.253830861 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.44624626 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.436300623 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.455681078 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.436229096 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.437053342 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.439414825 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.439866188 seconds)
  done (took 155.08141816 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.444624234 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.097593643 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.472460931 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.59188374 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.47451092 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.441604981 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.589487381 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.515978853 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.464274328 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.442734736 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.442478089 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.775041581 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.446454474 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.042152402 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.670173426 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.615722531 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.042277215 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.473068053 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.442977235 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.443231679 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.593606149 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.459169734 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.791886745 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.110270104 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.474092344 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.098025723 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.437596803 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.445779168 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.445090309 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.069195674 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.462493818 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.778582316 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.532932962 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.517644078 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.087122108 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.056696391 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.066487644 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.620832871 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.454741138 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.443103538 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.443197947 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.428820604 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.069495253 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.46677643 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.445572876 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.058864905 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.46719445 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.446947729 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.453660844 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.444838142 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.512190634 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.53197782 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.802336787 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.085964687 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.556409415 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.476112146 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.591266826 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.846746756 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.450086491 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.045351352 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.437806864 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.112200369 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.477754231 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.431148129 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.447669511 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.452715548 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.618003399 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.601834545 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.04622656 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.476103198 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.048531439 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.645878838 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.455156998 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.446955258 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.450398866 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.110296991 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.073813739 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.645944748 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.609357597 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.676547653 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.441188024 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.447891791 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.432465876 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.534918735 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.457145625 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.111370489 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.074025535 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.477717152 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.450916638 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.449414037 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.450654784 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.648036829 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.141307875 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.565982466 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.039164292 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.831695095 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.812742947 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.45958312 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.514678622 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.466579785 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.805555533 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.459900474 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.512456584 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.915315972 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.807639099 seconds)
  done (took 174.427831863 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.717400063 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.779341677 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.545345531 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.59651658 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.115877302 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.048341768 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.798297036 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.612540357 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.56816547 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.739682256 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.691097595 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.541386204 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.644854126 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.549639946 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.225017171 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.553842502 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.571961406 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.607596518 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.575033306 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.547137399 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.145638224 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.769048853 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.640773169 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.50288003 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.550463233 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.265091994 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.037926165 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.033436794 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.64718608 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.901831576 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.014207942 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.649595998 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.512035365 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.200187262 seconds)
  done (took 70.258658713 seconds)
done (took 727.375434345 seconds)
SAVING RESULT...
DONE!
